<?xml version="1.0" encoding="UTF-8" ?>
<tmx version="1.4">
<header creationdate="Sun Mar  4 02:02:42 2018"
          srclang="en"
          adminlang="en"
          o-tmf="unknown"
          segtype="sentence"
          creationtool="Uplug"
          creationtoolversion="unknown"
          datatype="PlainText" />
  <body>
    <tu>
      <tuv xml:lang="en"><seg>Using XML as a source format gives us the ability to generate many output formats from the source files, while only maintaining one source document for all formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Usando XML como código fuente, podemos generar diferentes formatos, manteniendo solamente un solo código fuente para todos los formatos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The tools used for formatting HTML and TeX versions are Jade, written by James Clark and The Modular DocBook Stylesheets written by Norman Walsh.</seg></tuv>
      <tuv xml:lang="es"><seg>Las herramientas utilizadas para crear las versiones HTML y TeX son Jade, escrito por James Clark y The Modular DocBook Stylesheets, escrito por Norman Walsh.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We use Microsoft HTML Help Workshop to generate the Windows HTML Help format of the manual, and of course PHP itself to do some additional conversions and formatting.</seg></tuv>
      <tuv xml:lang="es"><seg>Usamos Microsoft HTML Help Workshop para generar el formato de ayuda Windows HTML y por supuesto PHP para algunas conversiones y preprocesado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can download the manual in various languages and formats, including plain text, plain HTML, PDF, PalmPilot DOC, PalmPilot iSilo and Windows HTML Help, from http: / /www.php.net / docs.php.</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes bajarte el manual en diferentes idiomas y formatos, incluyendo texto plano, HTML, PDF, PalmPilot DOC, PalmPilot iSilo y Windows HTML Help, de http: / /www.php.net / docs.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The manuals are updated automatically as the text is updated.</seg></tuv>
      <tuv xml:lang="es"><seg>Los manuales son generados automaticamente a medida que el código fuente se va actualizando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find more information about downloading the XML source code of this documentation at http: / /cvs.php.net /.</seg></tuv>
      <tuv xml:lang="es"><seg>Más información sobre como bajarse el código fuente en XML en http: / /cvs.php.net /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The documentation is stored in the phpdoc module.</seg></tuv>
      <tuv xml:lang="es"><seg>La documentación se encuentra en el módulo phpdoc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to help improve the documentation</seg></tuv>
      <tuv xml:lang="es"><seg>Como ayudar a mejorar la documentación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Translations</seg></tuv>
      <tuv xml:lang="es"><seg>Traducciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are three ways you can help to improve this documentation.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden ayudar de tres maneras a mejorar esta documentción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you find errors in this manual, in any language, please report them using the bug system at http: / /bugs.php.net /.</seg></tuv>
      <tuv xml:lang="es"><seg>Si encontrais errores en este manual, en cualquier lenguaje, podeis informar sobre el mismo, usando el sistema de informes de errores en http: / /bugs.php.net /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classify the bug as "Documentation Problem".</seg></tuv>
      <tuv xml:lang="es"><seg>Clasificar el error como "Documentation Problem".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also submit problems related to specific manual formats here.</seg></tuv>
      <tuv xml:lang="es"><seg>Problemas encontrados con los diferentes formatos tambien se pueden mandar usando este sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please don 't abuse the bug system by submitting requests for help.</seg></tuv>
      <tuv xml:lang="es"><seg>Por favor, no abusar del sistema de informes de errores mandando peticiones de ayuda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the mailing lists or community sites mentioned earlier, instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Utilizar las listas de correos y recursos mencionados anteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By contributing notes, you can provide additional examples, caveats, and clarifications for other readers.</seg></tuv>
      <tuv xml:lang="es"><seg>Contribuyendo con notas / comentarios, podeis dar ejemplos adicionales y aclaraciones a otros lectores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But do not submit bug reports using the annotation system please.</seg></tuv>
      <tuv xml:lang="es"><seg>Pero no mandar informes de errores mediante el sistema de notas / comentarios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can read more about annotations in the 'About user notes' section of this appendix.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis leer más sobre notas / comentarios en la sección 'Sobre las notas de usuarios' de este apendice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you know English and some foreign language, you may also help out in the translations.</seg></tuv>
      <tuv xml:lang="es"><seg>Si sabes ingles y otro idioma, podeis ayudar en las traducciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to start a new translation, or help in a translation project, please read http: / /cvs.php.net / co.php / phpdoc / howto / howto.html.tar.gz.</seg></tuv>
      <tuv xml:lang="es"><seg>Si te interesa comenzar una nueva traducción o ayudar una existente, pasate por http: / /cvs.php.net / co.php / phpdoc / howto / howto.html.tar.gz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to find more information about PHP</seg></tuv>
      <tuv xml:lang="es"><seg>Como encontrar más información sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP manual is provided in several formats.</seg></tuv>
      <tuv xml:lang="es"><seg>El manual de PHP se encuentra disponible en diferentes formatos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These formats can be divided into two groups: online readable formats, and downloadable packages.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos formatos se pueden dividir en dos grupos: formatos accesible en línea (online) y ficheros que se pueden bajar a tu ordenador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some publishers have made available printed versions of this manual.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunos editores han publicado versiones impresas de este manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We cannot recommend any of those, as they tend to become out-of-date very quickly.</seg></tuv>
      <tuv xml:lang="es"><seg>No podemos recomendar ninguna de ellas, ya que suelen quedarse obsoletas rápidamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can read the manual online at http: / /www.php.net / You can read the manual online at http: / /www.php.net / and on the numerous mirror sites.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis leer el manual en linea (online) en http: / /www.php.net / y en numerosos servidores espejo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For best performance, you should choose the mirror site closest to you.</seg></tuv>
      <tuv xml:lang="es"><seg>Para mejorar la respuesta, deberiais utilizar el servidor espejo más cercano a vosotros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can view the manual in either its plain (print-friendly) HTML format or an HTML format that integrates the manual into the look and feel of the PHP website itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis consultar el manual en formato HTML -impresión amigable - ó en formato HTML que integra el manual en el diseno de la página web del proyecto PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An advantage of the online manual over most of the offline formats is the integration of user-contributed notes.</seg></tuv>
      <tuv xml:lang="es"><seg>Una ventaja del manual en línea sobre la mayoria de formatos fuera de línea es la integración de los comentarios / notas de usuarios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An obvious disadvantage is that you have to be online to view the manual in the online formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Una desventaja es que teneis que estar conectados para ver consultar las versiones en línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are several offline formats of the manual, and the most appropriate format for you depends on what operating system you use and your personal reading style.</seg></tuv>
      <tuv xml:lang="es"><seg>Existen varios formatos fuera de línea y el más apropiado para cada usuario depende del sistema operativo que se use y de tus preferencias a la hora de leer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information on how the manual is generated in so many formats, read the 'How we generate the formats' section of this appendix.</seg></tuv>
      <tuv xml:lang="es"><seg>Informacion sobre como el manual es generado en tantos formatos diferentes se puede obtener en la seccion de este apendice titulada 'Como generamos los dierentes formatos'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The HTML format is provided both as a single HTML file and as a package of individual files for each section (which results in a collection of several thousand files).</seg></tuv>
      <tuv xml:lang="es"><seg>Los formatos HTML y texto plano se distribuyen como ficheros tar y con compresión bz2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The HTML and plaintext formats are provided as tar files compressed using the bzip2 archiver.</seg></tuv>
      <tuv xml:lang="es"><seg>Otro formato muy popular y el más adecuado para imprimir, es PDF (Adobe Acrobat).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another popular cross-platform format, and the format most suited to printing, is PDF (also known as Adobe Acrobat).</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Los usuarios de ordenadores de mano compatibles con Palm, tienen los formatos Palm doc y iSilo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you do not already have a program capable of viewing PDF format files, you may need to download Adobe Acrobat Reader.</seg></tuv>
      <tuv xml:lang="es"><seg>Podreis utlizar un lector de documentos DOC ó iSilo para consultar la documentación de PHP o como referencia rápida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For owners of Palm-compatible handhelds, the Palm document and iSilo formats are ideal for this platform.</seg></tuv>
      <tuv xml:lang="es"><seg>Para plataformas Windows, la versión Windows HTML Ayuda proporciona el formato HTML usado con la aplicacion de ayuda Windows HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can bring your handheld with you on your daily commute and use a DOC or iSilo reader to brush up on your PHP knowledge, or just use it as a quick reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchos entornos de desarrollo para PHP en Windows integran esta versión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This version provides full-text search, a full index, and bookmarking.</seg></tuv>
      <tuv xml:lang="es"><seg>Un projecto de Visual Basic para Linux se encuentra en fase de planificación, incluirá la creación de "CHM Creator and Viewer" para Linux.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many popular Windows PHP development environments also integrate with this version of the documentation to provide easy access.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis consultar la página en SourceForge.net si estais interesados en su progreso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>About user notes</seg></tuv>
      <tuv xml:lang="es"><seg>Sobre las notas de usuarios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual does not attempt to provide instruction about general programming practices.</seg></tuv>
      <tuv xml:lang="es"><seg>Este manual no pretende explicar practicas generales de programación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are a first-time, or even just a beginning, programmer, you may find it difficult to learn how to program in PHP using just this manual.</seg></tuv>
      <tuv xml:lang="es"><seg>Si vas a empezar a programar ó eres un programador principiante, seguramente tendras dificultades para aprender a programar en PHP usando solamente este manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may want to seek out a text more oriented towards beginners.</seg></tuv>
      <tuv xml:lang="es"><seg>Te será de gran ayuda utilizar otros textos más orientados a principiantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find a list of PHP-related books at http: / /www.php.net / books.php.</seg></tuv>
      <tuv xml:lang="es"><seg>Una lista con libros sobre PHP puede encontrarse en http: / /www.php.net / books.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are a number of active mailing lists for discussion of all aspects of programming with PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Existen una serie de listas de correo en donde se puede discutir sobre diferentes aspectos relacionados con la programación en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you find yourself stuck on a problem for which you can 't find your own solution, you may be able to get help from someone on these lists.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tienes un problema, el cual no puedes solucionar, puedes usar estas listas para preguntar y obtener ayuda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find a list of the mailing lists at http: / /www.php.net / support.php, as well as links to the mailing list archives and other online support resources.</seg></tuv>
      <tuv xml:lang="es"><seg>Una lista con las listas de correo disponibles puede encontrarse en http: / /www.php.net / support.php, asi como enlaces a los archivos historicos de estas listas y otros recursos de ayuda en línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Furthermore, at http: / /www.php.net / links.php there is a list of websites devoted to PHP articles, forums, and code galleries.</seg></tuv>
      <tuv xml:lang="es"><seg>Además en http: / /www.php.net / links.php puedes encontrar información sobre servidores web dedicados a PHP, artículos, foros y galerias de código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP versions documented in this manual</seg></tuv>
      <tuv xml:lang="es"><seg>Sobre las notas de usuarios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user-contributed notes play an important role in the development of this manual.</seg></tuv>
      <tuv xml:lang="es"><seg>Las notas de usuarios juegan un importante papael en el desarrollo de este manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And until the notes have been incorporated, they can be viewed in their submitted form online and in some of the offline formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Permitiendo a los lectores del manual contribuir con ejemplos y aclaraciones desde su navegador, podemos incorporar estas aclaraciones en el manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user-contributed notes are not moderated before they appear online, so the quality of the writing or code examples, and even the veracity of the contribution, cannot be guaranteed. (Not that there is any guarantee of the quality or accuracy of the manual text itself.)</seg></tuv>
      <tuv xml:lang="es"><seg>Hasta que las notas son incorporadas en el manual, pueden ser accedidas desde el manual en línea y algunos formatos fuera de línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more details see the Manual 's Copyright page.</seg></tuv>
      <tuv xml:lang="es"><seg>Las notas de usuario no son moderadas antes de estar disponibles en línea, asi que la calidad de lo escrito asi como los ejemplos ó incluso la veracidad de lo expuesto en la nota no puede ser garantizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>About the manual</seg></tuv>
      <tuv xml:lang="es"><seg>Sobre el manual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to read a function definition (prototype)</seg></tuv>
      <tuv xml:lang="es"><seg>Como encontrar más información sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix K.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice K.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP manual is not only available in various formats, it is also available in various languages.</seg></tuv>
      <tuv xml:lang="es"><seg>El manual de PHP no está disponible solamente en diferentes formatos, tambien se encuentra en diferentes idiomas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The text of the manual is first written in english, then teams of people across the world take care of translating it to their native language.</seg></tuv>
      <tuv xml:lang="es"><seg>El manual es escrito primero en ingles y luego grupos de traductores de todo el mundo se encargan de mantener la traducción a su idioma sincronizada con la versión inglesa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a translation for a specified function or chapter has not yet been made, the build system of the manual falls back to the english version of it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la traducción de algún apartado del manual no ha sido realizada todavia por el equipo de traductores, este aparecerá en ingles hasta que sea traducido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Peoples involved in the translations start from the XML source code available from http: / /cvs.php.net / and from it they translate to thier mother language.</seg></tuv>
      <tuv xml:lang="es"><seg>Las personas involucradas en las traducciones, utilizan el código fuente en XML disponible en http: / /cvs.php.net / y lo traducen a su idioma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They do not use the HTML, the plain text, or the PDF version.</seg></tuv>
      <tuv xml:lang="es"><seg>No utilizan la versión en HTML, texto plano ó PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is the build system which takes care of the conversions from XML to human readable formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Es el sistema de generación de formatos el que se encarga de producirlos a partir de XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to help translating the documentation to your native language, please get in touch with the translation / documentation team subscribing to the phpdoc mailinglist: send an empty mail to phpdoc-subscribe@lists.php.net.</seg></tuv>
      <tuv xml:lang="es"><seg>Manda un mensaje vacio a phpdoc-subscribe@lists.php.net.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mailing list address is phpdoc@lists.php.net.</seg></tuv>
      <tuv xml:lang="es"><seg>La dirección de la esta lista de correo es phpdoc@lists.php.net.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>State in the message that you are interested in translating the manual to a language and someone will get back to you, helping you start a new language translation or reach the already active documentation team for your language.</seg></tuv>
      <tuv xml:lang="es"><seg>Explica que estás interesado en traducir el manual a un idioma y nos pondremos en contacto contigo, te mandaremos información para que puedas empezar una nueva traducción o para que pases a formar parte del equipo de traducción de tu idioma, si este ya existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At the moment the manual is available, partly or not, in the following languages:</seg></tuv>
      <tuv xml:lang="es"><seg>Por el momento existen traducciones, completas o en parciales, en los siguientes idiomas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Brazilian Portuguese, Chinese, Czech, Dutch, French, German, Hungarian, Italian, Japanese, Korean, Polish and Spanish.</seg></tuv>
      <tuv xml:lang="es"><seg>Brasileño, Portugues, Checo, Holandés, Finlandés, Frances, Alemán, Hungaro, Italiano, Japones, Koreano, Polaco, rumano, Ruso, Español y Turco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They all can be downloaded here: http: / /www.php.net / docs.php.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas ellas se pueden bajar de: http: / /www.php.net / docs.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How we generate the formats</seg></tuv>
      <tuv xml:lang="es"><seg>Como generamos los formatos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Missing Stuff</seg></tuv>
      <tuv xml:lang="es"><seg>Sobre la traducción al español</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is the aliases list.</seg></tuv>
      <tuv xml:lang="es"><seg>Aqui teneis la lista de alias de funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is usually a bad idea to use aliases, as they may be bound to obsolescence or renaming, which will lead to unportable script.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos loas alias están listados aqui. en general es una mala idea usar alias, ya que pueden ser modificados o renombrados, por lo que tu código no podra utilizarse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This list is provided to help those who want to upgrade their old scripts to newer syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta lista se provee para que quien quiera actualizar su código antiguo a la sintaxis actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, some functions simply have two names, and there is no real preference. (For example, is_int() and is_integer() are equally good)</seg></tuv>
      <tuv xml:lang="es"><seg>De todas maneras, algunas funciones tienen dos nombres, sin preferencia por uno u otro. (Por ejemplo, is_int() y is_integer() som válidas indistintamente)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For an alias list that updates daily, have a look here.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta lista es consistente con PHP 4.0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table F-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla F-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Master function</seg></tuv>
      <tuv xml:lang="es"><seg>Función principal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Extension used</seg></tuv>
      <tuv xml:lang="es"><seg>Extensión usada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reporting Errors</seg></tuv>
      <tuv xml:lang="es"><seg>Informando de errores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Materia que falta</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Miscellaneous Questions</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>History of PHP and related projects</seg></tuv>
      <tuv xml:lang="es"><seg>Historia de PHP y proyectos relacionados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix E.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice E.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Extending PHP</seg></tuv>
      <tuv xml:lang="es"><seg>Desarrollo en PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To call user functions from an internal function, you should use the call_user_function() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para llamar a funciones del usuario desde una función interna, deberá usar la función call_user_function().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should check that return value!</seg></tuv>
      <tuv xml:lang="es"><seg>call_user_function() devuelve SUCCESS si tiene éxito y FAILURE en caso de que la función no sea hallada. ¡Deberá comprobar ese valor de retorno!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it returns SUCCESS, you are responsible for destroying the retval pval yourself (or return it as the return value of your function).</seg></tuv>
      <tuv xml:lang="es"><seg>Si devuelve SUCCESS, debe usted ocuparse de destruir el pval devuelto (o devolverlo como el valor de retorno de su función).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it returns FAILURE, the value of retval is undefined, and you mustn 't touch it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si devuelve FAILURE, el valor de valret no está definido y no debe tocarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All internal functions that call user functions must be reentrant.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las funciones internas que llaman a funciones de usuario deben ser reentrantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, this means they must not use globals or static variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Entre otras cosas, esto quiere decir que no se utilicen variables globales ni estáticas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>call_user_function() takes six arguments:</seg></tuv>
      <tuv xml:lang="es"><seg>call_user_function() lleva 6 argumentos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the hash table in which the function is to be looked up.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es la matriz asociativa en la que se buscará la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a pointer to an object on which the function is invoked.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es un puntero a un objeto sobre el que se invoca la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This should be NULL if a global function is called.</seg></tuv>
      <tuv xml:lang="es"><seg>Deberá valer NULL si se llama a una función global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it' s not NULL (i.e. it points to an object), the function_table argument is ignored, and instead taken from the object's hash.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no es NULL (es decir, si apunta a un objeto), el argumento tabla_funciones se ignora y se toma su valor a partir de la codificación del objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object *may* be modified by the function that is invoked on it (that function will have access to it via $this).</seg></tuv>
      <tuv xml:lang="es"><seg>El objeto *puede* ser modificado por dicha función (ésta accede a él a través de $this).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If for some reason you don 't want that to happen, send a copy of the object instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Si por alguna razón no desea que eso ocurra, envíe entonces una copia del objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the function to call.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de la función a llamar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Must be a pval of type IS_STRING with function_name.str.val and function_name.str.len set to the appropriate values.</seg></tuv>
      <tuv xml:lang="es"><seg>Debe ser un pval de tipo IS_STRING, con nombre_func.str.val y nombre_func.str.len fijados a los valores apropiados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function_name is modified by call_user_function() - it's converted to lowercase.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre_func es modificado por call_user_function(), que lo convierte a minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to preserve the case, send a copy of the function name instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita preservar el nombre, envíe una copia del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A pointer to a pval structure, into which the return value of the invoked function is saved.</seg></tuv>
      <tuv xml:lang="es"><seg>Un puntero a una estructura pval, en la que se guarda el valor de returno de la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The structure must be previously allocated - call_user_function() does NOT allocate it by itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que asignar espacio a la estructura previamente, porque la función call_user_function() NO lo asigna por sí misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of parameters being passed to the function.</seg></tuv>
      <tuv xml:lang="es"><seg>El número de parámetros que se pasan a la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array of pointers to values that will be passed as arguments to the function, the first argument being in offset 0, the second in offset 1, etc.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer argumento está en el elemento 0, el segundo en el elemento 1, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array is an array of pointers to pval' s; The pointers are sent as-is to the function, which means if the function modifies its arguments, the original values are changed (passing by reference).</seg></tuv>
      <tuv xml:lang="es"><seg>Los punteros se envían tal cual a la función, lo que quiere decir que si la función modifica sus argumentos, se modifican los valores originales (paso por referencia).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don 't want that behavior, pass a copy instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no desea ese comportamiento, pase una copia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>COM support functions for Windows</seg></tuv>
      <tuv xml:lang="es"><seg>soporte de las funciones COM para Windows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A pseudo-object oriented mechanism for reading a directory.</seg></tuv>
      <tuv xml:lang="es"><seg>(PHP 3, PHP 4)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Two properties are available once the directory has been opened.</seg></tuv>
      <tuv xml:lang="es"><seg>Un mecanismo semi-orientado a objetos para leer directorios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The handle property can be used with other directory functions such as readdir(), rewinddir() and closedir().</seg></tuv>
      <tuv xml:lang="es"><seg>El parametro directory abre el directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Three methods are available: read, rewind and close.</seg></tuv>
      <tuv xml:lang="es"><seg>Dos propiedades estan disponibles cuando el directorio ha sido abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We are explicitly testing whether the return value is identical to (equal to and of the same type as--see Comparison Operators for more information) FALSE since otherwise, any directory entry whose name evaluates to FALSE will stop the loop.</seg></tuv>
      <tuv xml:lang="es"><seg>La propiedad de manejo puede ser usada con otras funciones de directorios tal como readdir(), rewinddir() y closedir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$d = dir( "/ etc"); echo "Handle: ".$d - handle." br \n"; echo "Path: ".$d - path. "br \n"; while (false !== ($entry = $d - read())) {echo $entry." br \n";} $d - close();</seg></tuv>
      <tuv xml:lang="es"><seg>La propiedad de trayectoria (path) es fijada para encaminar el directorio que ha sido abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The order in which directory entries are returned by the read method is system-dependent.</seg></tuv>
      <tuv xml:lang="es"><seg>Tres metodos estan disponibles: leer, rebobinar y cerrar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dir() Ejemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a full list of predefined classes in PHP, please see Predefined Classes.</seg></tuv>
      <tuv xml:lang="es"><seg>$d = dir( "/ etc"); echo "Handle: ".$d - handle." br \n"; echo "Path: ".$d - path. "br \n"; while($entry=$d - read()) {echo $entry." br \n";} $d - close();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The configuration file (called php3.ini in PHP 3.0, and simply php.ini as of PHP 4.0) is read when PHP starts up.</seg></tuv>
      <tuv xml:lang="es"><seg>Con el PHP 3.0 hay directivas Apache que se corresponden a cada uno de los ajustes de configuración del php3.ini, con la excepción que su nombre va precedido de "php3_".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the server module versions of PHP, this happens only once when the web server is started.</seg></tuv>
      <tuv xml:lang="es"><seg>Poniendo php3_engine off en los sitios apropiados del archivo httpd.conf, se puede habilitar o deshabilitar el PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the CGI and CLI version, it happens on every invocation.</seg></tuv>
      <tuv xml:lang="es"><seg>Fijándola, por ejemplo, a "GP", hará que el PHP ignore por completo las cookies y que sobreescriba las variables recibidas por GET con las que tengan el mismo nombre y vengan por POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default location of php.ini is a compile time option (see the FAQ entry), but can be changed for the CGI and CLI version with the -c command line switch, see the chapter about using PHP from the command line.</seg></tuv>
      <tuv xml:lang="es"><seg>El formato es similar a la variable de entorno de sistema PATH: una lista de directorios separados por dos puntos en UNIX o por punto y coma en Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use the environment variable PHPRC for an additional path to search for a php.ini file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si además magic_quotes_sybase vale on, la comilla sencilla es marcada con otra comilla sencilla en lugar de la barra invertida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not every PHP directive is documented below.</seg></tuv>
      <tuv xml:lang="es"><seg>Si magic_quotes_sybase está a on, la comilla simple es marcada con una comilla simple en lugar de la barra invertida cuando están habilitados magic_quotes_gpc o magic_quotes_runtime.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a list of all directives, please read your well commented php.ini file.</seg></tuv>
      <tuv xml:lang="es"><seg>Así se evita que scripts mal escritos puedan bloquear el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may want to view the latest php.ini here from CVS.</seg></tuv>
      <tuv xml:lang="es"><seg>Indica si se debe permitir el formato corto (??) de la etiqueta de apertura del PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si está activada, la información de entrada de GET, POST y de las cookies se puede encontrar en las matrices asociativas $HTTP_GET_VARS, $HTTP_POST_VARS y $HTTP_COOKIE_VARS respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default value for the PHP directive register_globals changed from on to off in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre DNS o dirección IP del servidor de SMTP que el PHP bajo Windows deberá usar para enviar correo con la función mail().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4-1. php.ini example</seg></tuv>
      <tuv xml:lang="es"><seg>Los sistemas que no usan sendmail deberán fijar esta directiva al nombre del programa alternativo que ofrezca su sistema de correo, si es que existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>; any text on a line after an unquoted semicolon (;) is ignored [php]; section markers (text within square brackets) are also ignored; Boolean values can be set to either:; true, on, yes; or false, off, no, none register_globals = off magic_quotes_gpc = yes; you can enclose strings in double-quotes include_path = ".: / usr / local / lib / php "; backslashes are treated the same as any other character include_path = ".;c:\php\lib"</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que si se ha excedido max_execution_time cuando finaliza la espera de un intento de conexión, el script será finalizado antes de que se pueda tomar una acción en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Complete list of configure options</seg></tuv>
      <tuv xml:lang="es"><seg>¿Problemas?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to change configuration settings</seg></tuv>
      <tuv xml:lang="es"><seg>Seguridad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP offers an alternative syntax for some of its control structures; namely, if, while, for, foreach, and switch.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP ofrece una sintaxis altenativa para alguna de sus estructuras de control; a saber, if, while, for, y switch.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In each case, the basic form of the alternate syntax is to change the opening brace to a colon (:) and the closing brace to endif;, endwhile;, endfor;, endforeach;, or endswitch;, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>En cada caso, la forma básica de la sintaxis alternativa es cambiar abrir-llave por dos puntos (:) y cerrar-llave por endif;, endwhile;, endfor;, or endswitch;, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if ($a == 5):?</seg></tuv>
      <tuv xml:lang="es"><seg>?php if ($a==5):?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A is equal to 5 ?php endif;?</seg></tuv>
      <tuv xml:lang="es"><seg>A es igual a 5 ?php endif;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the above example, the HTML block "A is equal to 5" is nested within an if statement written in the alternative syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>En el ejemplo de arriba, el bloque HTML "A = 5" se anida dentro de una sentencia if escrita en la sintaxis alternativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The HTML block would be displayed only if $a is equal to 5.</seg></tuv>
      <tuv xml:lang="es"><seg>El bloque HTML se mostraría solamente si $a fuera igual a 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The alternative syntax applies to else and elseif as well.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis alternativa se aplica a else y también a elseif.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following is an if structure with elseif and else in the alternative format:</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente es una estructura if con elseif y else en el formato alternativo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a == 5): print "a equals 5"; print ".. ."; elseif ($a == 6): print "a equals 6"; print "!! !"; else: print "a is neither 5 nor 6"; endif;</seg></tuv>
      <tuv xml:lang="es"><seg>if ($a == 5): print "a es igual a 5"; print ".. ."; elseif ($a == 6): print "a es igual a 6"; print "!! !"; else: print "a no es ni 5 ni 6"; endif;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also while, for, and if for further examples.</seg></tuv>
      <tuv xml:lang="es"><seg>Mirar también while, for, e if para más ejemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>break ends execution of the current for, foreach while, do..while or switch structure.</seg></tuv>
      <tuv xml:lang="es"><seg>break escapa de la estructuras de control iterante (bucle) actuales for, while, o switch.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>break accepts an optional numeric argument which tells it how many nested enclosing structures are to be broken out of.</seg></tuv>
      <tuv xml:lang="es"><seg>break accepta un parámetro opcional, el cual determina cuantas estructuras de control hay que escapar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>continue is used within looping structures to skip the rest of the current loop iteration and continue execution at the beginning of the next iteration.</seg></tuv>
      <tuv xml:lang="es"><seg>continue se usa dentro de la estructura del bucle para saltar el resto de la iteración actual del bucle y continuar la ejecución al comienzo de la siguiente iteración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>continue accepts an optional numeric argument which tells it how many levels of enclosing loops it should skip to the end of.</seg></tuv>
      <tuv xml:lang="es"><seg>continue accepta un parámetro opcional, el cual determina cuantos niveles (bluces) hay que saltar antes de continuar con la ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while (list ($key, $value) = each ($arr)) {if (!($key% 2)) {/ / skip odd members continue;} do_something_odd ($value);} $i = 0; while ($i+ + 5) {echo "Outer br \n"; while (1) {echo "nbsp; nbsp;Middle br \n"; while (1) {echo" nbsp; nbsp;Inner br \n"; continue 3;} echo "This never gets output. br \n";} echo "Neither does this. br \n";}</seg></tuv>
      <tuv xml:lang="es"><seg>while (list($key,$value) = each($arr)) {if ($key% 2) {/ / salta los miembros impares continue;} do_something_odd ($value);} $i = 0; while ($i+ + 5) {echo "Outer br \n"; while (1) {echo "Middle br \n"; while (1) {echo" Inner br \n"; continue 3;} echo "This never gets output. br \n";} echo "Neither does this. br \n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>do..while loops are very similar to while loops, except the truth expression is checked at the end of each iteration instead of in the beginning.</seg></tuv>
      <tuv xml:lang="es"><seg>Los bucles do..while son muy similares a los bucles while, excepto que las condiciones se comprueban al final de cada iteración en vez de al principio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The main difference from regular while loops is that the first iteration of a do..while loop is guaranteed to run (the truth expression is only checked at the end of the iteration), whereas it's may not necessarily run with a regular while loop (the truth expression is checked at the beginning of each iteration, if it evaluates to FALSE right from the beginning, the loop execution would end immediately).</seg></tuv>
      <tuv xml:lang="es"><seg>La principal diferencia frente a los bucles regulares while es que se garantiza la ejecución de la primera iteración de un bucle do..while (la condición se comprueba sólo al final de la iteración), mientras que puede no ser necesariamente ejecutada con un bucle while regular (la condición se comprueba al principio de cada iteración, si esta se evalúa como FALSE desde el principio la ejecución del bucle finalizará inmediatamente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is just one syntax for do..while loops:</seg></tuv>
      <tuv xml:lang="es"><seg>Hay una sola sintaxis para los bucles do..while:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above loop would run one time exactly, since after the first iteration, when truth expression is checked, it evaluates to FALSE ($i is not bigger than 0) and the loop execution ends.</seg></tuv>
      <tuv xml:lang="es"><seg>El bucle de arriba se ejecutaría exactamente una sola vez, después de la primera iteración, cuando la condición se comprueba, se evalúa como FALSE ($i no es más grande que 0) y la ejecución del bucle finaliza.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Advanced C users may be familiar with a different usage of the do..while loop, to allow stopping execution in the middle of code blocks, by encapsulating them with do..while (0), and using the break statement.</seg></tuv>
      <tuv xml:lang="es"><seg>Los usuarios avanzados de C pueden estar familiarizados con un uso distinto del bucle do..while, para permitir parar la ejecución en medio de los bloques de código, encapsulandolos con do..while (0), y usando la sentencia break.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following code fragment demonstrates this:</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente fragmento de código demuestra esto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>do {if ($i 5) {print "i is not big enough"; break;} $i *= $factor; if ($i $minimum_limit) {break;} print "i is ok"; ...process i...} while(0);</seg></tuv>
      <tuv xml:lang="es"><seg>do {if ($i 5) {print "i no es lo suficientemente grande"; break;} $i *= $factor; if ($i $minimum_limit) {break;} print "i es correcto"; ...procesa i...} while(0);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don' t worry if you don't understand this right away or at all.</seg></tuv>
      <tuv xml:lang="es"><seg>No se preocupes si no entiende esto completamente o en absoluto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can code scripts and even powerful scripts without using this' feature '.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden codificar archivos de comandos e incluso archivos de comandos potentes sin usar esta 'propiedad'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often you 'd want to execute a statement if a certain condition is met, and a different statement if the condition is not met.</seg></tuv>
      <tuv xml:lang="es"><seg>A menudo queremos ejecutar una sentencia si se cumple una cierta condicion, y una sentencia distinta si la condición no se cumple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is what else is for. else extends an if statement to execute a statement in case the expression in the if statement evaluates to FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es para lo que sirve else. else extiende una sentencia if para ejecutar una sentencia en caso de que la expresión en la sentencia if se evalúe como FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the following code would display a is bigger than b if $a is bigger than $b, and a is NOT bigger than b otherwise:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el siguiente código mostraría a es mayor que b si $a fuera mayor que $b, y a NO es mayor que b en cualquier otro caso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) {print "a is bigger than b";} else {print "a is NOT bigger than b";}</seg></tuv>
      <tuv xml:lang="es"><seg>if ($a $b) {print "a es mayor que b";} else {print "a NO es mayor que b";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>elseif, as its name suggests, is a combination of if and else.</seg></tuv>
      <tuv xml:lang="es"><seg>elseif, como su nombre sugiere, es una combinación de if y else.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like else, it extends an if statement to execute a different statement in case the original if expression evaluates to FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Como else, extiende una sentencia if para ejecutar una sentencia diferente en caso de que la expresión if original se evalúa como FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, unlike else, it will execute that alternative expression only if the elseif conditional expression evaluates to TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>No obstante, a diferencia de else, ejecutará esa expresión alternativa solamente si la expresión condicional elseif se evalúa como TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the following code would display a is bigger than b, a equal to b or a is smaller than b:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el siguiente código mostraría a es mayor que b, a es igual a b o a es menor que b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) {print "a is bigger than b";} elseif ($a == $b) {print "a is equal to b";} else {print "a is smaller than b";}</seg></tuv>
      <tuv xml:lang="es"><seg>if ($a $b) {print "a es mayor que b";} elseif ($a == $b) {print "a es igual que b";} else {print "a es mayor que b";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There may be several elseif s within the same if statement.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede haber varios elseif s dentro de la misma sentencia if.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first elseif expression (if any) that evaluates to TRUE would be executed.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera expresión elseif (si hay alguna) que se evalúe como TRUE se ejecutaría.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, you can also write 'else if' (in two words) and the behavior would be identical to the one of'elseif '(in a single word).</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP, también se puede escribir 'else if' (con dos palabras) y el comportamiento sería idéntico al de un 'elseif '(una sola palabra).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntactic meaning is slightly different (if you're familiar with C, this is the same behavior) but the bottom line is that both would result in exactly the same behavior.</seg></tuv>
      <tuv xml:lang="es"><seg>El significado sintáctico es ligeramente distinto (si estas familiarizado con C, es el mismo comportamiento) pero la línea básica es que ambos resultarían tener exactamente el mismo comportamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The elseif statement is only executed if the preceding if expression and any preceding elseif expressions evaluated to FALSE, and the current elseif expression evaluated to TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia elseif se ejecuta sólo si la expresión if precedente y cualquier expresión elseif precedente se evalúan como FALSE, y la expresión elseif actual se evalúa como TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternative syntax for control structures</seg></tuv>
      <tuv xml:lang="es"><seg>Sintaxis Alternativa de Estructuras de Control</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simply gives an easy way to iterate over arrays. foreach works only on arrays, and will issue an error when you try to use it on a variable with a different data type or an uninitialized variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto simplemente da un modo fácil de iterar sobre arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two syntaxes; the second is a minor but useful extension of the first:</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos sintaxis; la segunda es una extensión menor, pero útil de la primera:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>foreach( array_expression as $value) statement foreach(array_expression as $key = $value) statement</seg></tuv>
      <tuv xml:lang="es"><seg>foreach( expresion_array as $value) sentencia foreach(expresion_array as $key = $value) sentencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first form loops over the array given by array_expression.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera forma recorre el array dado por expresion_array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On each loop, the value of the current element is assigned to $value and the internal array pointer is advanced by one (so on the next loop, you'll be looking at the next element).</seg></tuv>
      <tuv xml:lang="es"><seg>En cada iteración, el valor del elemento actual se asigna a $value y el puntero interno del array se avanza en una unidad (así en el siguiente paso, se estará mirando el elemento siguiente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second form does the same thing, except that the current element 's key will be assigned to the variable $key on each loop.</seg></tuv>
      <tuv xml:lang="es"><seg>La segunda manera hace lo mismo, salvo que la clave del elemento actual será asignada a la variable $key en cada iteración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando foreach Cuando foreach comienza su primera ejecución, el puntero interno a la lista (array) se reinicia automáticamente al primer elemento del array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that you do not need to call reset() before a foreach loop.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que no se necesita llamar a reset() antes de un bucle foreach.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assuming the foreach loop runs to completion, the array 's internal pointer will be at the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que tener en cuanta que foreach con una copia de la lista (array) especificada y no la lista en si, por ello el puntero de la lista no es modificado como en la construcción each.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may have noticed that the following are functionally identical:</seg></tuv>
      <tuv xml:lang="es"><seg>Puede haber observado que las siguientes son funcionalidades idénticas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset ($arr); while (list(, $value) = each ($arr)) {echo "Value: $value br \n";} foreach ($arr as $value) {echo "Value: $value br \n";}</seg></tuv>
      <tuv xml:lang="es"><seg>reset( $arr); while (list (, $value) = each ($arr)) {echo "Valor: $value br \n";} foreach ($arr as $value) {echo "Valor: $value br \n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset ($arr); while (list($key, $value) = each ($arr)) {echo "Key: $key; Value: $value br \n";} foreach ($arr as $key = $value) {echo "Key: $key; Value: $value br \n";}</seg></tuv>
      <tuv xml:lang="es"><seg>reset( $arr); while (list ($key, $value) = each ($arr)) {echo "Key: $key; Valor: $value br \n";} foreach ($arr as $key = $value) {echo "Key: $key; Valor: $value br \n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some more examples to demonstrate usages:</seg></tuv>
      <tuv xml:lang="es"><seg>Algunos ejemplos más para demostrar su uso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* foreach example 1: value only * / $a = array (1, 2, 3, 17); foreach ($a as $v) {print "Current value of \$a: $v.\n";} / * foreach example 2: value (with key printed for illustration) * / $a = array (1, 2, 3, 17); $i = 0; / * for illustrative purposes only * / foreach($a as $v) {print "\$a[$i] = $v.\n"; $i++;} / * foreach example 3: key and value * / $a = array ("one "= 1, "two" = 2, "three "= 3, "seventeen" = 17); foreach($a as $k = $v) {print "\$a[$k] = $v.\n";} / * foreach example 4: multi-dimensional arrays * / $a[0][0] = "a"; $a[0][1] = "b"; $a[1][0] = "y"; $a[1][1] = "z"; foreach($a as $v1) {foreach ($v1 as $v2) {print "$v2\n";}} / * foreach example 5: dynamic arrays * / foreach(array(1, 2, 3, 4, 5) as $v) {print "$v\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>/* foreach ejemplo 1: sólo valor* / $a = array( 1, 2, 3, 17); foreach($a as $v) {print "Valor actual de \$a: $v.\n";} / * foreach ejemplo 2: valor (con clave impresa para ilustrar) * / $a = array(1, 2, 3, 17); $i = 0; / * sólo para propósitos demostrativos * / foreach($a as $v) {print "\$a[$i] = $k.\n";} / * foreach ejemplo 3: clave y valor * / $a = array ("uno "= 1, "dos" = 2, "tres "= 3, "diecisiete" = 17); foreach($a as $k = $v) {print "\$a[$k] = $v.\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for loops are the most complex loops in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Los bucles for son los bucles más complejos en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They behave like their C counterparts.</seg></tuv>
      <tuv xml:lang="es"><seg>Se comportan como su contrapartida en C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax of a for loop is:</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis de un bucle for es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for (expr1; expr2; expr3) statement</seg></tuv>
      <tuv xml:lang="es"><seg>for (expr1; expr2; expr3) sentencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first expression (expr1) is evaluated (executed) once unconditionally at the beginning of the loop.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera expresión (expr1) se evalúa (ejecuta) incondicionalmente una vez al principio del bucle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the beginning of each iteration, expr2 is evaluated.</seg></tuv>
      <tuv xml:lang="es"><seg>Al comienzo de cada iteración, se evalúa expr2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it evaluates to TRUE, the loop continues and the nested statement( s) are executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se evalúa como TRUE, el bucle continúa y las sentencias anidadas se ejecutan.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it evaluates to FALSE, the execution of the loop ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se evalúa como FALSE, la ejecución del bucle finaliza.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At the end of each iteration, expr3 is evaluated (executed).</seg></tuv>
      <tuv xml:lang="es"><seg>Al final de cada iteración, se evalúa (ejecuta) expr3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of the expressions can be empty. expr2 being empty means the loop should be run indefinitely (PHP implicitly considers it as TRUE, like C).</seg></tuv>
      <tuv xml:lang="es"><seg>Que expr2 esté vacía significa que el bucle debería correr indefinidamente (PHP implicitamente lo considera como TRUE, al igual que C).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may not be as useless as you might think, since often you 'd want to end the loop using a conditional break statement instead of using the for truth expression.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede que no sea tan inútil como se podría pensar, puesto que a menudo se quiere salir de un bucle usando una sentencia break condicional en vez de usar la condición de for.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the following examples.</seg></tuv>
      <tuv xml:lang="es"><seg>Considera los siguientes ejemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All of them display numbers from 1 to 10:</seg></tuv>
      <tuv xml:lang="es"><seg>Todos ellos muestran números del 1 al 10:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* example 1 * / for ($i = 1; $i = 10; $i++) {print $i;} / * example 2 * / for ($i = 1;;$i++) {if ($i 10) {break;} print $i;} / * example 3 * / $i = 1; for (;;) {if ($i 10) {break;} print $i; $i++;} / * example 4 * / for ($i = 1; $i = 10; print $i, $i++);</seg></tuv>
      <tuv xml:lang="es"><seg>/* ejemplo 1 * / for ($i = 1; $i = 10; $i++) {print $i;} / * ejemplo 2 * / for ($i = 1;;$i++) {if ($i 10) {break;} print $i;} / * ejemplo 3 * / $i = 1; for (;;) {if ($i 10) {break;} print $i; $i++;} / * ejemplo 4 * / for ($i = 1; $i = 10; print $i, $i++);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, the first example appears to be the nicest one (or perhaps the fourth), but you may find that being able to use empty expressions in for loops comes in handy in many occasions.</seg></tuv>
      <tuv xml:lang="es"><seg>Por supuesto, el primer ejemplo parece ser el mas elegante (o quizás el cuarto), pero uno puede descubrir que ser capaz de usar expresiones vacías en bucles for resulta útil en muchas ocasiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also supports the alternate "colon syntax" for for loops.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP también soporta la "sintaxis de dos puntos" alternativa para bucles for.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for (expr1; expr2; expr3): statement;...; endfor;</seg></tuv>
      <tuv xml:lang="es"><seg>for (expr1; expr2; expr3): sentencia;...; endfor;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other languages have a foreach Other languages have a foreach statement to traverse an array or hash.</seg></tuv>
      <tuv xml:lang="es"><seg>Otros lenguajes poseen una sentencia foreach para traducir un array o una tabla hash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 has no such construct; PHP 4 does (see foreach).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP3 no posee tal construcción; PHP4 sí (ver foreach).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, you can combine while with the list() and each() functions to achieve the same effect.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP3, se puede combinar while con las funciones list() y each() para conseguir el mismo efecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the documentation for these functions for an example.</seg></tuv>
      <tuv xml:lang="es"><seg>Mirar la documentación de estas funciones para ver un ejemplo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any PHP script is built out of a series of statements.</seg></tuv>
      <tuv xml:lang="es"><seg>Todo archivo de comandos PHP se compone de una serie de sentencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A statement can be an assignment, a function call, a loop, a conditional statement of even a statement that does nothing (an empty statement).</seg></tuv>
      <tuv xml:lang="es"><seg>Una sentencia puede ser una asignación, una llamada a función, un bucle, una sentencia condicional e incluso una sentencia que no haga nada (una sentencia vacía).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Statements usually end with a semicolon.</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentencias normalmente acaban con punto y coma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition, statements can be grouped into a statement-group by encapsulating a group of statements with curly braces.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, las sentencias se pueden agrupar en grupos de sentencias encapsulando un grupo de sentencias con llaves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A statement-group is a statement by itself as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Un grupo de sentencias es también una sentencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The various statement types are described in this chapter.</seg></tuv>
      <tuv xml:lang="es"><seg>En este capítulo se describen los diferentes tipos de sentencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The if construct is one of the most important features of many languages, PHP included.</seg></tuv>
      <tuv xml:lang="es"><seg>La construcción if es una de las más importantes características de muchos lenguajes, incluido PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It allows for conditional execution of code fragments.</seg></tuv>
      <tuv xml:lang="es"><seg>Permite la ejecución condicional de fragmentos de código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP features an if structure that is similar to that of C:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP caracteriza una estructura if que es similar a la de C:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (expr) statement</seg></tuv>
      <tuv xml:lang="es"><seg>if (expr) sentencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If expr evaluates to TRUE, PHP will execute statement, and if it evaluates to FALSE - it 'll ignore it.</seg></tuv>
      <tuv xml:lang="es"><seg>Como se describe en la sección sobre expresiones, expr se evalúa a su valor condicional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about what values evaluate to FALSE can be found in the 'Converting to boolean' section.</seg></tuv>
      <tuv xml:lang="es"><seg>Si expr se evalúa como TRUE, PHP ejecutará la sentencia, y si se evalúa como FALSE - la ignorará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example would display a is bigger than b if $a is bigger than $b:</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente ejemplo mostraría a es mayor que b si $a fuera mayor que $b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) print "a is bigger than b";</seg></tuv>
      <tuv xml:lang="es"><seg>if ($a $b) print "a es mayor que b";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often you 'd want to have more than one statement to be executed conditionally.</seg></tuv>
      <tuv xml:lang="es"><seg>A menudo, se desea tener más de una sentencia ejecutada de forma condicional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, there 's no need to wrap each statement with an if clause.</seg></tuv>
      <tuv xml:lang="es"><seg>Por supuesto, no hay necesidad de encerrar cada sentencia con una cláusula if.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, you can group several statements into a statement group.</seg></tuv>
      <tuv xml:lang="es"><seg>En vez de eso, se pueden agrupar varias sentencias en un grupo de sentencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, this code would display a is bigger than b if $a is bigger than $b, and would then assign the value of $a into $b:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, este código mostraría a es mayor que b si $a fuera mayor que $b, y entonces asignaría el valor de $a a $b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) {print "a is bigger than b"; $b = $a;}</seg></tuv>
      <tuv xml:lang="es"><seg>if ($a $b) {print "a es mayor que b"; $b = $a;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If statements can be nested indefinitely within other if statements, which provides you with complete flexibility for conditional execution of the various parts of your program.</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentencias if se pueden anidar indefinidamente dentro de otras sentencias if, lo cual proporciona una flexibilidad completa para ejecuciones condicionales en las diferentes partes de tu programa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Cadenas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The switch statement is similar to a series of IF statements on the same expression.</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia switch es similar a una serie de sentencias IF en la misma expresión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In many occasions, you may want to compare the same variable (or expression) with many different values, and execute a different piece of code depending on which value it equals to.</seg></tuv>
      <tuv xml:lang="es"><seg>En muchas ocasiones, se quiere comparar la misma variable (o expresión) con nuchos valores diferentes, y ejecutar una parte de código distinta dependiendo de a qué valor es igual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is exactly what the switch statement is for.</seg></tuv>
      <tuv xml:lang="es"><seg>Para ello sirve la sentencia switch.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following two examples are two different ways to write the same thing, one using a series of if statements, and the other using the switch statement:</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes dos ejemplos son dos modos distintos de escribir la misma cosa, uno usa una serie de sentencias if, y el otro usa la sentencia switch:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($i == 0) {print "i equals 0";} if ($i == 1) {print "i equals 1";} if ($i == 2) {print "i equals 2";} switch ($i) {case 0: print "i equals 0"; break; case 1: print "i equals 1"; break; case 2: print "i equals 2"; break;}</seg></tuv>
      <tuv xml:lang="es"><seg>if ($i == 0) {print "i es igual a 0";} if ($i == 1) {print "i es igual a 1";} if ($i == 2) {print "i es igual a 2";} switch ($i) {case 0: print "i es igual a 0"; break; case 1: print "i es igual a 1"; break; case 2: print "i es igual a 2"; break;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is important to understand how the switch statement is executed in order to avoid mistakes.</seg></tuv>
      <tuv xml:lang="es"><seg>Es importante entender cómo se ejecuta la sentencia switch para evitar errores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The switch statement executes line by line (actually, statement by statement).</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia switch ejecuta línea por línea (realmente, sentencia a sentencia).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the beginning, no code is executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Al comienzo, no se ejecuta código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only when a case statement is found with a value that matches the value of the switch Only when a case statement is found with a value that matches the value of the switch expression does PHP begin to execute the statements.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo cuando se encuentra una sentencia case con un valor que coincide con el valor de la expresión switch PHP comienza a ejecutar las sentencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP continues to execute the statements until the end of the switch block, or the first time it sees a break statement.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP continúa ejecutando las sentencias hasta el final del bloque switch, o la primera vez que vea una sentencia break.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don' t write a break statement at the end of a case's statement list, PHP will go on executing the statements of the following case.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se escribe una sentencia break al final de una lista de sentencias case, PHP seguirá ejecutando las sentencias del siguiente case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i) {case 0: print "i equals 0"; case 1: print "i equals 1"; case 2: print "i equals 2";}</seg></tuv>
      <tuv xml:lang="es"><seg>switch ($i) {case 0: print "i es igual a 0"; case 1: print "i es igual a 1"; case 2: print "i es igual a 2";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here, if $i is equal to 0, PHP would execute all of the print statements!</seg></tuv>
      <tuv xml:lang="es"><seg>Aquí, si $i es igual a 0, ¡PHP ejecutaría todas las sentecias print!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You would get the expected behavior ('i equals 2 'would be displayed) only if $i is equal to 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Si $i es igual a 1, PHP ejecutaría las últimas dos sentencias print y sólo si $i es igual a 2, se obtendría la conducta 'esperada' y solamente se mostraría 'i es igual a 2 '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, it is important not to forget break statements (even though you may want to avoid supplying them on purpose under certain circumstances).</seg></tuv>
      <tuv xml:lang="es"><seg>Así, es importante no olvidar las sentencias break (incluso aunque pueda querer evitar escribirlas intencionadamente en ciertas circunstancias).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In a switch statement, the condition is evaluated only once and the result is compared to each case statement.</seg></tuv>
      <tuv xml:lang="es"><seg>En una sentencia switch, la condición se evalúa sólo una vez y el resultado se compara a cada sentencia case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In an elseif statement, the condition is evaluated again.</seg></tuv>
      <tuv xml:lang="es"><seg>En una sentencia elseif, la condición se evalúa otra vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your condition is more complicated than a simple compare and / or is in a tight loop, a switch may be faster.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tu condición es más complicada que una comparación simple y / o está en un bucle estrecho, un switch puede ser más rápido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The statement list for a case can also be empty, which simply passes control into the statement list for the next case.</seg></tuv>
      <tuv xml:lang="es"><seg>La lista de sentencias de un case puede también estar vacía, lo cual simplemente pasa el control a la lista de sentencias del siguiente case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i) {case 0: case 1: case 2: print "i is less than 3 but not negative"; break; case 3: print "i is 3";}</seg></tuv>
      <tuv xml:lang="es"><seg>switch ($i) {case 0: case 1: case 2: print "i es menor que 3, pero no negativo"; break; case 3: print "i es 3";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A special case is the default case.</seg></tuv>
      <tuv xml:lang="es"><seg>Un case especial es el default case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This case matches anything that wasn 't matched by the other cases, and should be the last case statement.</seg></tuv>
      <tuv xml:lang="es"><seg>Este case coincide con todo lo que no coincidan los otros case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i) {case 0: print "i equals 0"; break; case 1: print "i equals 1"; break; case 2: print "i equals 2"; break; default: print "i is not equal to 0, 1 or 2";}</seg></tuv>
      <tuv xml:lang="es"><seg>switch ($i) {case 0: print "i es igual a 0"; break; case 1: print "i es igual a 1"; break; case 2: print "i es igual a 2"; break; default: print "i no es igual a 0, 1 o 2";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The case expression may be any expression that evaluates to a simple type, that is, integer or floating-point numbers and strings.</seg></tuv>
      <tuv xml:lang="es"><seg>La expresión case puede ser cualquier expresión que se evalúe a un tipo simple, es decir, números enteros o de punto flotante y cadenas de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays or objects cannot be used here unless they are dereferenced to a simple type.</seg></tuv>
      <tuv xml:lang="es"><seg>No se pueden usar aquí ni arrays ni objetos a menos que se conviertan a un tipo simple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The alternative syntax for control structures is supported with switches.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis alternativa para las estructuras de control está también soportada con switch.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see Alternative syntax for control structures.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información, ver Sintaxis alternativa para estructuras de control.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i): case 0: print "i equals 0"; break; case 1: print "i equals 1"; break; case 2: print "i equals 2"; break; default: print "i is not equal to 0, 1 or 2"; endswitch;</seg></tuv>
      <tuv xml:lang="es"><seg>switch ($i): case 0: print "i es igual 0"; break; case 1: print "i es igual a 1"; break; case 2: print "i es igual a 2"; break; default: print "i no es igual a 0, 1 o 2"; endswitch;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>declare</seg></tuv>
      <tuv xml:lang="es"><seg>require()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while loops are the simplest type of loop in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Los bucles while son los tipos de bucle más simples en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They behave just like their C counterparts.</seg></tuv>
      <tuv xml:lang="es"><seg>Se comportan como su contrapartida en C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The basic form of a while statement is:</seg></tuv>
      <tuv xml:lang="es"><seg>La forma básica de una sentencia while es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while (expr) statement</seg></tuv>
      <tuv xml:lang="es"><seg>while (expr) sentencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meaning of a while The meaning of a while statement is simple.</seg></tuv>
      <tuv xml:lang="es"><seg>El significado de una sentencia while es simple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It tells PHP to execute the nested statement( s) repeatedly, as long as the while expression evaluates to TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Le dice a PHP que ejecute la( s) sentencia(s) anidada(s) repetidamente, mientras la expresión while se evalúe como TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of the expression is checked each time at the beginning of the loop, so even if this value changes during the execution of the nested statement( s), execution will not stop until the end of the iteration (each time PHP runs the statements in the loop is one iteration).</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de la expresión es comprobado cada vez al principio del bucle, así que incluso si este valor cambia durante la ejecución de la( s) sentencia(s) anidada(s), la ejecución no parará hasta el fin de la iteración (cada vez que PHP ejecuta las sentencias en el bucle es una iteración).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes, if the while expression evaluates to FALSE from the very beginning, the nested statement( s) won't even be run once.</seg></tuv>
      <tuv xml:lang="es"><seg>A veces, si la expresión while se evalúa como FALSE desde el principio de todo, la( s) sentencia(s) anidada(s) no se ejecutarán ni siquiera una vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like with the if statement, you can group multiple statements within the same while loop by surrounding a group of statements with curly braces, or by using the alternate syntax:</seg></tuv>
      <tuv xml:lang="es"><seg>Como con la sentencia if, se pueden agrupar multiples sentencias dentro del mismo bucle while encerrando un grupo de sentencias con llaves, o usando la sintaxis alternativa:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while (expr): statement... endwhile;</seg></tuv>
      <tuv xml:lang="es"><seg>while (expr): sentencia... endwhile;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following examples are identical, and both print numbers from 1 to 10:</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes ejemplos son idénticos, y ambos imprimen números del 1 al 10:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* example 1 * / $i = 1; while ($i = 10) {print $i++; / * the printed value would be $i before the increment (post-increment) * /} / * example 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;</seg></tuv>
      <tuv xml:lang="es"><seg>/* ejemplo 1 * / $i = 1; while ($i = 10) {print $i++; / * el valor impreso sería $i antes del incremento (post-incremento) * /} / * ejemplo 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual is © Copyright 1997 - 2003 by the PHP Documentation Group.</seg></tuv>
      <tuv xml:lang="es"><seg>Este manual es © Copyright 1997, 1998, 1999, 2000, 2001, 2002 por el Grupo de documentación de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The members of this group are listed on the front page of this manual.</seg></tuv>
      <tuv xml:lang="es"><seg>Los miembros de este grupo se encuentran listados en la primera página de este manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual can be redistributed under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</seg></tuv>
      <tuv xml:lang="es"><seg>Este manual puede ser redistribuido bajo los términos de la "GNU General Public License" publicada por la "Free Software Foundation"; tanto bajo la versión 2 de esta licencia o bajo versiones posteriores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The 'Extending PHP 4.0' section of this manual is copyright © 2000 by Zend Technologies, Ltd.</seg></tuv>
      <tuv xml:lang="es"><seg>La sección 'Extendiendo PHP 4.0' de este manual es copyright © 2000 por Zend Technologies, Ltd.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This material may be distributed only subject to the terms and conditions set forth in the Open Publication License, v1.0 or later (the latest version is presently available at http: / /www.opencontent.org / openpub /).</seg></tuv>
      <tuv xml:lang="es"><seg>Este material puede ser distribuido solamente bajo los terminos y condiciones de la Open Publication License, v1.0 ó posterior (la última versión está disponible en http: / /www.opencontent.org / openpub /).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 includes support for a network-based debugger.</seg></tuv>
      <tuv xml:lang="es"><seg>El debugger funciona conectandose a un puerto TCP cada vez que PHP comienza.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 does not have an internal debugging facility.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta información se entiende que que es para un "servidor de debugger" que puede ejecutarse en un IDE o en un editor programabler (como Emacs).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use one of the external debuggers though.</seg></tuv>
      <tuv xml:lang="es"><seg>Establezca un puerto TCP para el debugger en el archivo de configuración (debugger.port) y activelo (debugger.enabled).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Zend IDE includes a debugger, and there are also some free debugger extensions like DBG at http: / /dd.cron.ru / dbg /, the Advanced PHP Debugger (APD) or Xdebug which even has a compatible debugger interface as PHP 3's debugging functionality as is described in this section.</seg></tuv>
      <tuv xml:lang="es"><seg>En su código, ejecute "debugger_on (host)", donde host es la dirección IP o el nombre de el host ejecutando un módulo de escucha de TCP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other incompatibilities</seg></tuv>
      <tuv xml:lang="es"><seg>Otras incompatibilidades</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the Debugger</seg></tuv>
      <tuv xml:lang="es"><seg>Protocolo del debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix D.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice D.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugging PHP</seg></tuv>
      <tuv xml:lang="es"><seg>El debugger de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP 3 debugger protocol is line-based.</seg></tuv>
      <tuv xml:lang="es"><seg>El protocolo del debugger está basado en líneas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each line has a type, and several lines compose a message.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada línea tiene un tipo, y varias línea componen un mensaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each message starts with a line of the type start and terminates with a line of the type end.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada mensaje comienza con una línea del tipo start y termina con una línea del tipo end.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 may send lines for different messages simultaneously.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP puede enviar líneas para diferentes mensajes simultaneamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A line has this format:</seg></tuv>
      <tuv xml:lang="es"><seg>Una línea tiene este formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date in ISO 8601 format (yyyy - mm - dd)</seg></tuv>
      <tuv xml:lang="es"><seg>Fecha en formato ISO 8601 (aaaa - mm - dd)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Time including microseconds: hh: mm: uuuuuu</seg></tuv>
      <tuv xml:lang="es"><seg>Hora incluyendo microsegundos: hh: mm: uuuuuu</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DNS name or IP address of the host where the script error was generated.</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre DNS o dirección IP del host donde el script de error fue generado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PID (process id) on host of the process with the PHP 3 script that generated this error.</seg></tuv>
      <tuv xml:lang="es"><seg>PID (id proceso) en el host del proceso en que el script de PHP generó este error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type of line.</seg></tuv>
      <tuv xml:lang="es"><seg>Tipo de la línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells the receiving program about what it should treat the following data as:</seg></tuv>
      <tuv xml:lang="es"><seg>Dice al programa programa que recibe que debe considerar los datos siguientes como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table D-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla D-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger Line Types</seg></tuv>
      <tuv xml:lang="es"><seg>Tipos de línea del debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells the receiving program that a debugger message starts here.</seg></tuv>
      <tuv xml:lang="es"><seg>Informa al programa que recibe que un mensaje del debugger comienza aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The contents of data will be the type of error message, listed below.</seg></tuv>
      <tuv xml:lang="es"><seg>El contenido de data será el tipo del mensaje de error, listados debajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP 3 error message.</seg></tuv>
      <tuv xml:lang="es"><seg>El mensaje de error de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File name and line number where the error occurred.</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre del fichero y número de línea donde ocurrió el error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first location line will always contain the top-level location. data will contain file: line.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera línea con location siempre contendrá la localización de mayor nivel. data contendrá fichero: línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There will always be a location line after message and after every function.</seg></tuv>
      <tuv xml:lang="es"><seg>Siempre habrá una línea de tipo location después de message y después de cada function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of frames in the following stack dump.</seg></tuv>
      <tuv xml:lang="es"><seg>Número de marcos en la pila.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are four frames, expect information about four levels of called functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay cuatro marcos, espere información sobre los cuatro niveles de las funciones llamadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no "frames" line is given, the depth should be assumed to be 0 (the error occurred at top-level).</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay una línea de tipo "frames", la profundidad se asume que es 0 (el error ocurrió en el nivel superior).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name of function where the error occurred.</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre de la función donde ocurrió el error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will be repeated once for every level in the function call stack.</seg></tuv>
      <tuv xml:lang="es"><seg>Será repetida una vez por cada nivel en la pila de funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells the receiving program that a debugger message ends here.</seg></tuv>
      <tuv xml:lang="es"><seg>Informa al programa que recibe que el mensaje del debugger termina aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Line data.</seg></tuv>
      <tuv xml:lang="es"><seg>Línea de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table D-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla D-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger Error Types</seg></tuv>
      <tuv xml:lang="es"><seg>Tipos de error del debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 Internal</seg></tuv>
      <tuv xml:lang="es"><seg>PHP Internal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example D-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo D-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example Debugger Message</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de mensaje del debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the Debugger</seg></tuv>
      <tuv xml:lang="es"><seg>El debugger de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be sure to read the installation instructions carefully and note that you need both flex and bison installed to compile PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Be sure to read the installation Be sure to read the installation instructions carefully and note that you need both flex and bison installed to compile PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 52-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 52-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Miscellaneous Questions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Stream open options</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 51-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 51-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 51-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 51-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 51-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 51-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When track_vars is on, it creates some associative arrays, the most important here is: $_POST (this used to be called $HTTP_POST_VARS in PHP versions prior 4.1.0).</seg></tuv>
      <tuv xml:lang="es"><seg>When track_vars is on, it creates some associative arrays, the most important here is: $_POST (this used to be called $HTTP_POST_VARS in PHP When track_vars is on, it creates some associative arrays, the most important here is: $_POST (this used to be called $HTTP_POST_VARS in PHP versions prior 4.1.0).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 23-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 23-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 23-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 23-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 23-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 23-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 23-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 23-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 23-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 23-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions restricted / disabled by safe mode</seg></tuv>
      <tuv xml:lang="es"><seg>Modo Seguro (Safe Mode)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following applies to 3.0.7 and later.</seg></tuv>
      <tuv xml:lang="es"><seg>Todo lo siguiente se aplica a partir de la versión 3.0.7 y posterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Internally in PHP a connection status is maintained.</seg></tuv>
      <tuv xml:lang="es"><seg>Internamente en PHP se mantiene el estado de la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are 3 possible states:</seg></tuv>
      <tuv xml:lang="es"><seg>Hay 3 posibles estados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 - ABORTED</seg></tuv>
      <tuv xml:lang="es"><seg>1 - ABORTED (Abortado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 - TIMEOUT</seg></tuv>
      <tuv xml:lang="es"><seg>2 - TIMEOUT (Fuera de tiempo)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a PHP script is running normally the NORMAL state, is active.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando un script PHP se está ejecutando se activa el estado NORMAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the remote client disconnects the ABORTED state flag is turned on.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el cliente remoto se desconecta, se pasa al estado ABORTED.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A remote client disconnect is usually caused by the user hitting his STOP button.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto suele ocurrir cuando el usuario pulsa en el botón STOP del navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PHP-imposed time limit (see set_time_limit()) is hit, the TIMEOUT state flag is turned on.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se alcanza el límite de tiempo impuesto por PHP (ver set_time_limit()), se pasa al estado TIMEOUT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can decide whether or not you want a client disconnect to cause your script to be aborted.</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes decidir si quieres que la desconexión de un cliente cause que tu script sea abortado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes it is handy to always have your scripts run to completion even if there is no remote browser receiving the output.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunas veces es cómodo que tus scripts se ejecuten por completo, incluso si no existe ya un navegador remoto que reciba la salida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default behaviour is however for your script to be aborted when the remote client disconnects.</seg></tuv>
      <tuv xml:lang="es"><seg>El comportamiento por defecto es sin embargo, que tu script se aborte cuando el cliente remoto se desconecta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This behaviour can be set via the ignore_user_abort php.ini directive as well as through the corresponding "php_value ignore_user_abort" Apache .conf directive or with the ignore_user_abort() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Este comportamiento puede ser configurado vía la directiva ignore_user_abort en el fichero php3.ini, o también con la función ignore_user_abort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you do not tell PHP to ignore a user abort and the user aborts, your script will terminate.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no le espeficicas al PHP que cuando un usuario aborte lo ignore, tu script terminará su ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The one exception is if you have registered a shutdown function using register_shutdown_function().</seg></tuv>
      <tuv xml:lang="es"><seg>La única excepción es si tienes registrada un función de desconexión usando la función register_shutdown_function().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With a shutdown function, when the remote user hits his STOP button, the next time your script tries to output something PHP will detect that the connection has been aborted and the shutdown function is called.</seg></tuv>
      <tuv xml:lang="es"><seg>Con una función de desconexión, cuando un usuario remoto pulsa en el botón STOP, la próxima vez que tu script intenta mostrar algo, PHP detecta que la conexión ha sido abortada y se llama a la función de desconexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This shutdown function will also get called at the end of your script terminating normally, so to do something different in case of a client disconnect you can use the connection_aborted() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función de desconexión también se llama al final de la ejecución de tu script cuando se ha ejecutado normalmente, de manera que si quieres hacer algo diferente en caso de que un cliente se haya desconectado, puedes usar la función connection_aborted().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return TRUE if the connection was aborted.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve TRUE si la conexión fue abortada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Your script can also be terminated by the built-in script timer.</seg></tuv>
      <tuv xml:lang="es"><seg>Vuestro script también se puede terminar por un temporizador interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default timeout is 30 seconds.</seg></tuv>
      <tuv xml:lang="es"><seg>El timeout por defecto es de 30 segundos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be changed using the max_execution_time php.ini directive or the corresponding "php_value max_execution_time" Apache .conf directive as well as with the set_time_limit() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede cambiar usando la directiva max_execution_time en el fichero php.ini o la correspondiente directiva php_max_execution_time en la configuración del servidor de páginas Apache, como también con la función set_time_limit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the timer expires the script will be aborted and as with the above client disconnect case, if a shutdown function has been registered it will be called.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el temporizador expira, el script se aborta como en el caso de la desconexión del cliente, de manera que si se ha definido una función de desconexión, esta se llamará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Within this shutdown function you can check to see if a timeout caused the shutdown function to be called by calling the connection_timeout() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Dentro de esta función de desconexión, puedes comprobar si fue el timeout el que causó que se llamara a la función de desconexión, llamando a la función connection_timeout().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return TRUE if a timeout caused the shutdown function to be called.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devolverá verdadero si el timeout causa que se llame a la función de desconexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One thing to note is that both the ABORTED and the TIMEOUT states can be active at the same time.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que destacar que ambos, el estado ABORTED y el TIMEOUT, se pueden activar al mismo tiempo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is possible if you tell PHP to ignore user aborts.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es posible si le dices a PHP que ignore las desconexiones intencionadas de los usuarios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP will still note the fact that a user may have broken the connection, but the script will keep running.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP aún notará el hecho de que el usuario puede haberse desconectado, pero el script continuará ejecutándose.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it then hits the time limit it will be aborted and your shutdown function, if any, will be called.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se alcanza el tiempo límite de ejecución será abortado y, si se ha definido una función de desconexión, esta será llamada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At this point you will find that connection_timeout() and connection_aborted() return TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>En este punto, encontrarás que las funciones connection_timeout() y connection_aborted() devuelven verdadero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also check both states in a single call by using the connection_status().</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes comprobar ambos estados de una manera simple usando la función connection_status().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a bitfield of the active states.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un campo de bit de los estados activos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, if both states are active it would return 3, for example.</seg></tuv>
      <tuv xml:lang="es"><seg>De este modo, si ambos estados están activos devolvería por ejemplo un valor 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using remote files</seg></tuv>
      <tuv xml:lang="es"><seg>Usando archivos remotos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP transparently supports HTTP cookies.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta transparentemente cookies HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are a mechanism for storing data in the remote browser and thus tracking or identifying return users.</seg></tuv>
      <tuv xml:lang="es"><seg>Las Cookies son un mecanismo que sirve para almacenar datos en el navegador del usuario remoto, para así poder identificar al usuario cuando vuelva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can set cookies using the setcookie() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden poner cookies usando la función setcookies().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are part of the HTTP header, so setcookie() must be called before any output is sent to the browser.</seg></tuv>
      <tuv xml:lang="es"><seg>Las Cookies son parte de la cabecera HTTP, por tanto la función setcookie() debe ser llamada antes de que se produzca cualquier salida al navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the same limitation that header() has.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta limitación es la misma a la de la función header().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the output buffering functions to delay the script output until you have decided whether or not to set any cookies or send any headers.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden usar las funciones de almacenamiento intermedio del resultado para retrasar el resultado del script hasta que hayas decidido mandar o no una cookie o cabecera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any cookies sent to you from the client will automatically be turned into a PHP variable just like GET and POST method data, depending on the register_globals and variables_order configuration variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier cookie enviada a ti desde el cliente, automáticamente se convertirá en una variable PHP igual como ocurre con los métodos de datos GET y POST, dependiendo de las variables de configuración register_globals y variables_order.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to assign multiple values to a single cookie, just add [] to the cookie name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si deseas asignar multiples valores a una cookie simple, añade simplemente [] a el nombre de la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.1.0 and later, the $_COOKIE auto-global array will always be set with any cookies sent from the client. $HTTP_COOKIE_VARS is also set in earlier versions of PHP when the track_vars configuration variable is set.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP 4.1.0 y posteriores, la array auto-global $_COOKIE será siempre actualizada con cualquier cookie mandada por el cliente. $HTTP_COOKIE_VARS es tambien actualizada en versiones anteriores de PHP cuando la variable de configuración track_vars esté activada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more details, including notes on browser bugs, see the setcookie() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más detalles ver la función setcookie().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HTTP authentication with PHP</seg></tuv>
      <tuv xml:lang="es"><seg>Autentificación HTTP con PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling file uploads</seg></tuv>
      <tuv xml:lang="es"><seg>Manejo de envío de ficheros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 18.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 18.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The MAX_FILE_SIZE item cannot specify a file size greater than the file size that has been set in the upload_max_filesize ini-setting.</seg></tuv>
      <tuv xml:lang="es"><seg>A MAX_FILE_SIZE no se le puede dar un valor mayor que el valor que se haya especificado en la directiva upload_max_filesize.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is 2 Megabytes.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto se tiene un límite de 2 MegaBytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If memory limit is enabled, larger memory_limit may be needed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se ha activado el límite de memoria, se deben especificar un valor alto para memory_limit.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to set memory_limit large enough.</seg></tuv>
      <tuv xml:lang="es"><seg>En cualquier caso, se debe asegurar un valor suficientemente grande para memory_limit.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If max_execution_time is set too small, script execution may be exceeded the value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si max_execution_time tiene un valor muy pequeño, la ejecución del script puede exceder este valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to set max_execution_time large enough.</seg></tuv>
      <tuv xml:lang="es"><seg>De esta forma, se debe asegurar un valor suficientemente grande para max_execution_time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to set post_max_size large enough.</seg></tuv>
      <tuv xml:lang="es"><seg>Si post_max_size tiene un valor muy pequeño, los ficheros mas grandes a este valor, no podrán ser enviados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not validating which file you operate on may mean that users can access sensitive information in other directories.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ello, se debe asegurar un valor suficientemente grande para post_max_size.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that the CERN httpd seems to strip off everything starting at the first whitespace in the content-type mime header it gets from the client.</seg></tuv>
      <tuv xml:lang="es"><seg>No verificar que ficheros se estan manipulando puede tener como consecuencia que los usuarios puedan acceder a información sensible en otros directorios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Due to the large amount of directory listing styles we cannot guarantee that files with exotic names (like containing spaces) are handled properly.</seg></tuv>
      <tuv xml:lang="es"><seg>Si este es el caso, con el httpd de CERN no se soporta la funcionalidad de envío de ficheros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error Messages Explained</seg></tuv>
      <tuv xml:lang="es"><seg>Manejo de envío de ficheros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uploading multiple files</seg></tuv>
      <tuv xml:lang="es"><seg>Envío de multiples ficheros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is capable of receiving file uploads from any RFC-1867 compliant browser (which includes Netscape Navigator 3 or later, Microsoft Internet Explorer 3 with a patch from Microsoft, or later without a patch).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP es capaz de recibir envíos de archivo de cualquier navegador que cumpla la norma RFC-1867 (entre los que se incluyen Netscape Navigator 3 o posterior, Microsoft Internet Explorer 3 con un parche o posterior sin éste).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This feature lets people upload both text and binary files.</seg></tuv>
      <tuv xml:lang="es"><seg>Ésta característica permite que los usuarios envien archivos de texto y binarios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP 's authentication and file manipulation functions, you have full control over who is allowed to upload and what is to be done with the file once it has been uploaded.</seg></tuv>
      <tuv xml:lang="es"><seg>Mediante la autentificación y funciones de manejo de archivos de PHP, es posible un control total de quién puede enviar archivos y que se hace con éstos una vez recibidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the file_uploads, upload_max_filesize, upload_tmp_dir, and post_max_size directives in php.ini</seg></tuv>
      <tuv xml:lang="es"><seg>Es importante destacar que PHP también soporta el método PUT para envío de archivos tal y como lo utiliza Netscape Composer y el cliente Amaya de W3C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that PHP also supports PUT-method file uploads as used by Netscape Composer and W3C 's Amaya clients.</seg></tuv>
      <tuv xml:lang="es"><seg>Una página de envío de archivos se puede crear mediante un formulario parecido a éste:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the PUT Method Support for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Formulario de envío de archivo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-1.</seg></tuv>
      <tuv xml:lang="es"><seg>form enctype=" multipart / form-data "action="_URL_" method="post "input type="hidden" name="MAX_FILE_SIZE "value="1000" Send this file: input name="userfile "type="file" input type="submit "value="Send File" / form</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File Upload Form</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>En contrapartida, la configuracion de PHP relativa al tamaño maximo no puede ser obviada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is easy to circumvent this maximum.</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables definidas para los archivos enviados varian en función de la versión y configuración de PHP que se utilice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP-settings for maximum-size, however, cannot be fooled.</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables de las que hablamos a continuación serán definidas en la página destino despues de una recepción de fichero correcta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Variables defined for uploaded files differs depending on the PHP version and configuration.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando track_vars este activado, el array $HTTP_POST_FILES / $_FILES se inicializará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The autoglobal $_FILES exists as of PHP 4.1.0 The $HTTP_POST_FILES array has existed since PHP 4.0.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ultimo, las variables relacionadas seran inicializadas como globales cuando register_globals esté habilitado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These arrays will contain all your uploaded file information.</seg></tuv>
      <tuv xml:lang="es"><seg>Cabe señalar que el uso de las variables globales no esta recomendado en ningún caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PHP directive register_globals is on, related variable names will also exist. register_globals defaults to off as of PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>$HTTP_POST_FILES / $_FILES contienen la información sobre el fichero recibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The contents of $_FILES from our example script is as follows.</seg></tuv>
      <tuv xml:lang="es"><seg>A continuación se describe el contenido de $HTTP_POST_FILES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this assumes the use of the file upload name userfile, as used in the example script above.</seg></tuv>
      <tuv xml:lang="es"><seg>Se ha tomado el nombre 'userfile' para el fichero recibido tal y como se usaba en el script de ejemplo anterior:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The original name of the file on the client machine.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre original del fichero en la máquina cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mime type of the file, if the browser provided this information.</seg></tuv>
      <tuv xml:lang="es"><seg>El tipo mime del fichero (si el navegador lo proporciona).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example would be "image / gif".</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo podría ser "image / gif".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The size, in bytes, of the uploaded file.</seg></tuv>
      <tuv xml:lang="es"><seg>El tamaño en bytes del fichero recibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The temporary filename of the file in which the uploaded file was stored on the server.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre del fichero temporal que se utiliza para almacenar en el servidor el archivo recibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error code associated with this file upload. ['error'] was added in PHP 4.2.0</seg></tuv>
      <tuv xml:lang="es"><seg>A partir de PHP 4.1.0 se puede utilizar el variable corta $_FILES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP 3 no soporta $HTTP_POST_FILES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 does not support $HTTP_POST_FILES.</seg></tuv>
      <tuv xml:lang="es"><seg>Se ha tomado el nombre 'userfile' para el fichero recibido tal y como se usaba en el script de ejemplo del principio:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When register_globals is turned on in php.ini, additional variables are available.</seg></tuv>
      <tuv xml:lang="es"><seg>$userfile - El nombre del fichero temporal que se utiliza para almacenar en el servidor el archivo recibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, $userfile_name will equal $_FILES[ 'userfile']['name'], $userfile_type will equal $_FILES['userfile']['type'], etc.</seg></tuv>
      <tuv xml:lang="es"><seg>$userfile_size - El tamaño en bytes del fichero recibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keep in mind that as of PHP 4.2.0, register_globals defaults to off.</seg></tuv>
      <tuv xml:lang="es"><seg>$userfile_type - El tipo mime del fichero (si el navegador lo proporciona).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It 's preferred to not rely on this directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo podría ser "image / gif".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Files will by default be stored in the server 's default temporary directory, unless another location has been given with the upload_tmp_dir directive in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, los ficheros serán almacenados en el directorio temporal por defecto del servidor a no ser que se especifique otra localizacion con la directiva upload_tmp_dir en php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting it using putenv() from within a PHP script will not work.</seg></tuv>
      <tuv xml:lang="es"><seg>El directorio temporal por defecto del servidor puede ser modificado cambiando el valor de la variable de entorno TMPDIR en el contexto en que se ejecuta PHP La configuración de las variables de entorno no se puede realizar en PHP a través de la función putenv().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This environment variable can also be used to make sure that other operations are working on uploaded files, as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta variable de entorio puede ser utilizada también para asegurarnos que otras operaciones con archivos recibidos están funcionando correctamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 18-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Validating file uploads</seg></tuv>
      <tuv xml:lang="es"><seg>Verificando los archivos recibidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the function entries for is_uploaded_file() and move_uploaded_file() for further information.</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes ejemplos son validos para versiones de PHP 4 superiores a la 4.0.2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example will process the file upload that came from a form.</seg></tuv>
      <tuv xml:lang="es"><seg>Veanse las funciones is_uploaded_file() y move_uploaded_file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here' s some more debugging info:\n"; print_r($_FILES);} else {print "Possible file upload attack!</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / In PHP 4.1.0 or later, $_FILES should be used instead of $HTTP_POST_FILES. if (is_uploaded_file($HTTP_POST_FILES['userfile']['tmp_name'])) {copy($HTTP_POST_FILES['userfile']['tmp_name'], "/ place / to / put / uploaded / file");} else {echo "Possible file upload attack.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP script which receives the uploaded file should implement whatever logic is necessary for determining what should be done with the uploaded file.</seg></tuv>
      <tuv xml:lang="es"><seg>Filename: ". $HTTP_POST_FILES['userfile']['name'];} / * ...or... * / move_uploaded_file($HTTP_POST_FILES['userfile']['tmp_name']," / place / to / put / uploaded / file");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can for example use the $_FILES[ 'userfile']['size'] variable to throw away any files that are either too small or too big.</seg></tuv>
      <tuv xml:lang="es"><seg>El script PHP que recibe el fichero, debe implementar la lógica necesaria para determinar que debe ser realizado con el fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.2.0, you could use $_FILES[ 'userfile']['error'] and plan your logic according to the error codes.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede utilizar, por ejemplo, la variable $HTTP_POST_FILES[ 'userfile']['size'] para descartar los ficheros demasiado chicos o demasiado grandes; por otro lado, se puede usar la variable $HTTP_POST_FILES['userfile']['type'] para descartar los que no se ajusten a algun criterio de tipo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whatever the logic, you should either delete the file from the temporary directory or move it elsewhere.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquiera que sea la logica que utilicemos, se debe borrar o mover el archivo del directorio temporal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file will be deleted from the temporary directory at the end of the request if it has not been moved away or renamed.</seg></tuv>
      <tuv xml:lang="es"><seg>El archivo será borrado del directorio temporal al final de la petición si no se ha movido o renombrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error Messages Explained</seg></tuv>
      <tuv xml:lang="es"><seg>Errores comunes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiple files can be uploaded using different name for input.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden enviar multiples ficheros usando diferentes nombres (name) para los input.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is also possible to upload multiple files simultaneously and have the information organized automatically in arrays for you.</seg></tuv>
      <tuv xml:lang="es"><seg>Así mismo, es posible enviar varios archivos simultaneamente y tener organizada en arrays la información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do so, you need to use the same array submission syntax in the HTML form as you do with multiple selects and checkboxes:</seg></tuv>
      <tuv xml:lang="es"><seg>Para hacer esto, se utiliza la misma sintáxis que cuando tenemos multiples "selects" o "checkboxes "en el formulario HTML:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for multiple file uploads was added in version 3.0.10.</seg></tuv>
      <tuv xml:lang="es"><seg>El soporte para envío multiple de ficheros fue añadido en la versión 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 18-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the above form is submitted, the arrays $_FILES[ 'userfile'], $_FILES['userfile']['name'], and $_FILES['userfile']['size'] will be initialized (as well as in $HTTP_POST_FILES for PHP version prior 4.1.0).</seg></tuv>
      <tuv xml:lang="es"><seg>Así mismo pasa con $_FILES en PHP 4.1.0 o superiores y $HTTP_POST_VARS en PHP 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When register_globals is on, globals for uploaded files are also initialized.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando register_globals esta activa, las variables globales para los archivos recibidos también son inicializadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of these will be a numerically indexed array of the appropriate values for the submitted files.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno de estos arrays tendrá en los índices numericos correspondientes los valores para cada fichero recibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, assume that the filenames / home / test / review.html and / home / test / xwp.out are submitted.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si tomamos como nombres de archivo enviados / home / test / review.html y / home / test / xwp.out.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similarly, $_FILES[ 'userfile']['size'][0] would contain review.html's filesize, and so forth.</seg></tuv>
      <tuv xml:lang="es"><seg>Tendríamos en $HTTP_POST_FILES[ 'userfile']['name'][0] el valor de review.html, y en $HTTP_POST_FILES['userfile']['name'][1] tendríamos xwp.out; analogamente, $HTTP_POST_FILES['userfile']['size'][0] contendría el tamaño del fichero review.html, y asi sucesivamente...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$_FILES[ 'userfile']['name'][0], $_FILES['userfile']['tmp_name'][0], $_FILES['userfile']['size'][0], and $_FILES['userfile']['type'][0] are also set.</seg></tuv>
      <tuv xml:lang="es"><seg>$HTTP_POST_FILES[ 'userfile']['name'][0], $HTTP_POST_FILES['userfile']['tmp_name'][0], $HTTP_POST_FILES['userfile']['size'][0] y $HTTP_POST_FILES['userfile']['type'][0] tambien son asignadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Common Pitfalls</seg></tuv>
      <tuv xml:lang="es"><seg>Errores comunes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PUT method support</seg></tuv>
      <tuv xml:lang="es"><seg>Soporte del método PUT</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PUT method support has changed between PHP 3 and PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta el metodo HTTP PUT que usan aplicaciones como Netscape Composer y Amaya del W3C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, one should use the standard input stream to read the contents of an HTTP PUT.</seg></tuv>
      <tuv xml:lang="es"><seg>Las peticiones PUT son más sencillas que el método POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Lógicamente no una buena idea que la gente pueda escribir en tu árbol web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides support for the HTTP PUT method used by clients such as Netscape Composer and W3C Amaya.</seg></tuv>
      <tuv xml:lang="es"><seg>Para manipular esta petición debes decirle al servidor que esta petición sea atendida por un script PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PUT / path / filename.html HTTP / 1.1</seg></tuv>
      <tuv xml:lang="es"><seg>En Apache, por ejemplo, se utiliza para esto la directiva Script en los alguno de los archivos de configuración del servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would normally mean that the remote client would like to save the content that follows as: / path / filename.html in your web tree.</seg></tuv>
      <tuv xml:lang="es"><seg>Un sitio típico de uso es dentro del bloque lt; Directory gt; o quizás en el bloque lt;Virtualhost gt;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is obviously not a good idea for Apache or PHP to automatically let everybody overwrite any files in your web tree.</seg></tuv>
      <tuv xml:lang="es"><seg>Una linia así deberia hacer ésta función:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, to handle such a request you have to first tell your web server that you want a certain PHP script to handle the request.</seg></tuv>
      <tuv xml:lang="es"><seg>Ésto le dice a Apache que envíe todas peticiones PUT para URIs que contengan esta linia al script put.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be placed almost anywhere in your Apache configuration file.</seg></tuv>
      <tuv xml:lang="es"><seg>Se asume que PHP se encuentra activo y con la extensión .php enlazada a él.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A common place is inside a Directory block or perhaps inside a Virtualhost block.</seg></tuv>
      <tuv xml:lang="es"><seg>Dentro del script put.php3 se podría implementar algo así:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This tells Apache to send all PUT requests for URIs that match the context in which you put this line to the put.php script.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto copiaría el archivo a la localización requerida por el cliente remoto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inside your put.php file you would then do something like this:</seg></tuv>
      <tuv xml:lang="es"><seg>Aqui se pueden ejecutar funciones de autentificación de usuario o cualquier otro tipo de chequeo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would copy the file to the location requested by the remote client.</seg></tuv>
      <tuv xml:lang="es"><seg>El archivo se guarda en el archivo temporal del sistema servidor de la misma manera que el Método POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You would probably want to perform some checks and / or authenticate the user before performing this file copy.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando la petición finaliza, el archivo temporal es eliminado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the request ends, this temporary file is deleted.</seg></tuv>
      <tuv xml:lang="es"><seg>En consequencia el script dede proceder al trato de éste inmediatamente, ya sea para copiarlo, renombrarlo, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The filename of this temporary file is in the $PHP_PUT_FILENAME variable, and you can see the suggested destination filename in the $REQUEST_URI (may vary on non-Apache web servers).</seg></tuv>
      <tuv xml:lang="es"><seg>El archivo se encuentra en la variable $PHP_PUT_FILENAME, y el destino sugerido por el cliente en la variable $REQUEST_URI (puede variar en servidores web que no sean Apache).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This destination filename is the one that the remote client specified.</seg></tuv>
      <tuv xml:lang="es"><seg>No es necesario hacer caso al destino sugerido por el cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You could, for example, copy all uploaded files to a special uploads directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo se podrían copiar los archivos enviados a directorios especialmente designados para esta tarea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Using PHP from the command line</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Spotting References</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In an Apache module PHP script, it is possible to use the header() function to send an "Authentication Required "message to the client browser causing it to pop up a Username / Password input window.</seg></tuv>
      <tuv xml:lang="es"><seg>Las caracteríticas de autentificación HTTP en PHP solo estan disponibles cuando se está ejecutando como un módulo en Apache y hasta ahora no lo estan en la versión CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These predefined variables are found in the $_SERVER and $HTTP_SERVER_VARS These predefined variables are found in the $_SERVER and $HTTP_SERVER_VARS arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>Una vez que el usuario ha rellenado el nombre y la contraseña, la URL que contiene el script PHP vuelve a ser llamada con las variables $PHP_AUTH_USER, $PHP_AUTH_PW y $PHP_AUTH_TYPE rellenas con el nombre de usuario, la contraseña y el tipo de autentificación respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only "Basic" authentication is supported.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo autentificación "Básica" esta soportada en este momento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Version Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Consulte la función header() para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example script fragment which would force client authentication on a page is as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>Un fragmento de script de ejmplo que fuerce la autentificación del cliente en una página sería como el siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 16-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 16-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HTTP Authentication example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de autentificación HTTP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if (!isset($_SERVER['PHP_AUTH_USER'])) {header( 'WWW-Authenticate:</seg></tuv>
      <tuv xml:lang="es"><seg>?php if (!isset($_SERVER['PHP_AUTH_USER'])) {header( "WWW-Authenticate:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic realm=" My Realm"'); header('HTTP / 1.0 401 Unauthorized'); echo'Text to send if user hits Cancel button'; exit;} else {echo "p Hello {$_SERVER['PHP_AUTH_USER']}. / p"; echo "p You entered {$_SERVER['PHP_AUTH_PW']} as your password. / p";}?</seg></tuv>
      <tuv xml:lang="es"><seg>Basic realm=\" My Realm\""); header("HTTP / 1.0 401 Unauthorized"); echo "Text to send if user hits Cancel button\n"; exit;} else {echo "p Hello {$_SERVER['PHP_AUTH_USER']}. / p"; echo "p You entered {$_SERVER['$PHP_AUTH_PW']} as your password. / p";}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Compatibility Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please be careful when coding the HTTP header lines.</seg></tuv>
      <tuv xml:lang="es"><seg>Por favor tener cuidado cuando esteis programando las lines de cabecera HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to guarantee maximum compatibility with all clients, the keyword "Basic" should be written with an uppercase "B", the realm string must be enclosed in double (not single) quotes, and exactly one space should precede the 401 code in the HTTP / 1.0 401 header line.</seg></tuv>
      <tuv xml:lang="es"><seg>Para garantizar la maxima compatibilidad con todos los clientes, la palabra clave "Basic" debe de ser escrita con "B "mayúscula, la cadena de texto debe estar incluida entre comillas dobles (no simples) y un espacio debe preceder el código "401" en la linea de cabecera "HTTP / 1.0 401 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of simply printing out PHP_AUTH_USER and PHP_AUTH_PW, as done in the above example, you may want to check the username and password for validity.</seg></tuv>
      <tuv xml:lang="es"><seg>En vez de, sencillamente, mostrar $PHP_AUTH_USER y $PHP_AUTH_PW, seguramente querais comprobar la validez del nombre de usuario y la contraseña.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Perhaps by sending a query to a database, or by looking up the user in a dbm file.</seg></tuv>
      <tuv xml:lang="es"><seg>Tal vez enviando una consulta a una base de datos o buscando el usuario en un fichero dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Watch out for buggy Internet Explorer browsers out there.</seg></tuv>
      <tuv xml:lang="es"><seg>Vigilar aquí los navegadores Interner Explorer con bugs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They seem very picky about the order of the headers.</seg></tuv>
      <tuv xml:lang="es"><seg>Parecen muy quisquillosos con el orden de las cabeceras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sending the WWW-Authenticate header before the HTTP / 1.0 401 header seems to do the trick for now.</seg></tuv>
      <tuv xml:lang="es"><seg>Enviar la cabecera WWW-Autentificación antes que la cabecera HTTP / 1.0 401 parece ser el truco por ahora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3.0, in order to prevent someone from writing a script which reveals the password for a page that was authenticated through a traditional external mechanism, the PHP_AUTH variables will not be set if external authentication is enabled for that particular page and safe mode is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Para prevenir que alguien escriba un script que revele la contraseña de una página que ha sido autentificada a través de algún mecanismo externo tradicional, las variables PHP_AUTH no serán rellenadas si algún tipo de autentificación externo ha sido activado para una página en particular.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regardless, REMOTE_USER can be used to identify the externally-authenticated user.</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso, la variable $REMOTE_USER puede ser usada para identificar al usuario autentificado externamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration Note:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP usa la directiva AuthType para determinar si una autentificación externa esta en uso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP uses the presence of an AuthType directive to determine whether external authentication is in effect.</seg></tuv>
      <tuv xml:lang="es"><seg>Recordar no usar esta directiva cuando querais usar la autentificación de PHP (si no todo intentento de autentificación fallará)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, however, that the above does not prevent someone who controls a non-authenticated URL from stealing passwords from authenticated URLs on the same server.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota, a pesar de todo, lo ya dicho no proteje de que alguien que controle una URL no autentificada robe contraseñas de URLs autentificadas en el mismo servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both Netscape Navigator and Internet Explorer will clear the local browser window 's authentication cache for the realm upon receiving a server response of 401.</seg></tuv>
      <tuv xml:lang="es"><seg>Tanto Netscape como Internet Explorer borrarán la caché de la ventana de autentificación en el navegador local después de recibir una respuesta 401 del servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can effectively "log out" a user, forcing them to re-enter their username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede usarse, de forma efectiva, para "desconectar" a un usuario, forzandole a reintroducir su nombre y contraseña.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some people use this to "time out" logins, or provide a "log-out "button.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunas personas usan esto para "hacer caducar" entradas, o para proveer un botón de "desconectar ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 16-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 16-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HTTP Authentication example forcing a new name / password</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de autentificación HTTP forzando una reentrada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function authenticate() {header( 'WWW-Authenticate:</seg></tuv>
      <tuv xml:lang="es"><seg>?php function authenticate() {header ("WWW-Authenticate:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This behavior is not required by the HTTP Basic authentication standard, so you should never depend on this.</seg></tuv>
      <tuv xml:lang="es"><seg>Basic realm=\" Test Authentication System\""); header ("HTTP / 1.0 401 Unauthorized"); echo "You must enter a valid login ID and password to access this resource\n "; exit;} if (!isset($_SERVER['PHP_AUTH_USER']) _BAR_ _BAR_ ($SeenBefore == 1 $OldAuth == $_SER VER['$PHP_AUTH_USER']))) {authenticate();} else {echo" p Welcome: {$_SERVER['$PHP_AUTH_USER']} br "; echo "Old: {$_REQUEST['$OldAuth']}"; echo" form action='{$_SERVER['$PHP_SELF']} 'METHOD='POST' \n"; echo "input type='hidden 'name='SeenBefore' value='1 '\n"; echo" input type='hidden' name='OldAuth 'value='{$_SERVER['$PHP_AUTH_USER']}' \n"; echo "input type='submit 'value='Re Authenticate' \n"; echo" / form / p \n";}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Testing with Lynx has shown that Lynx does not clear the authentication credentials with a 401 server response, so pressing back and then forward again will open the resource as long as the credential requirements haven 't changed.</seg></tuv>
      <tuv xml:lang="es"><seg>Este comportamiento no es requerido por el estándar de autentificación básica de HTTP, por lo que nunca debe depender de esto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also note that this does not work using Microsoft 's IIS server and the CGI version of PHP due to a limitation of IIS.</seg></tuv>
      <tuv xml:lang="es"><seg>Pruebas con Lynx han demostrado que Lynx no borra las credenciales de autentificación con una respuesta 401 del servidor, por lo que pulsando atrás y después adelante abriría el recurso de nuevo (siempre que los requerimientos de contraseña no hayan cambiado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If safe mode is enabled, the uid of the script is added to the realm part of the WWW-Authenticate header.</seg></tuv>
      <tuv xml:lang="es"><seg>Además tener en cuanta que esto no funciona usando el servidor IIS de Microsoft y la versión CGI de PHP debido a una limitación del IIS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Persistent connections are SQL links that do not close when the execution of your script ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Las conexiones persistentes son enlaces SQL que no se cierran cuando termina la ejecución del archivo de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a persistent connection is requested, PHP checks if there' s already an identical persistent connection (that remained open from earlier) - and if it exists, it uses it.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se pide una conexión persistente, PHP comprueba si hay ya una conexión persistente idéntica (que permanecía abierta desde antes) - y si existe, la usa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it does not exist, it creates the link.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no existe, crea un enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An 'identical' connection is a connection that was opened to the same host, with the same username and the same password (where applicable).</seg></tuv>
      <tuv xml:lang="es"><seg>Una conexión 'idéntica' es una conexión que se abrió hacia el mismo "host", con el mismo nombre de usuario y la misma contraseña (donde sea aplicable).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are other extensions that provide persistent connections, such as the IMAP extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Existen otras extensiones que proporcionan conexiones persistentes, tal como la extensión IMAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>People who aren' t thoroughly familiar with the way web servers work and distribute the load may mistake persistent connects for what they're not.</seg></tuv>
      <tuv xml:lang="es"><seg>La gente que no está familiarizada con el modo como trabajan y distribuyen la carga los servidores "web" puede confundir que significa conexiones persistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In particular, they do not give you an ability to open 'user sessions' on the same SQL link, they do not In particular, they do not give you an ability to open'user sessions' on the same SQL link, they do not give you an ability to build up a transaction efficiently, and they don't do a whole lot of other things.</seg></tuv>
      <tuv xml:lang="es"><seg>En particular, no te dan la habilidad de abrir 'sesiones de usuario' en el mismo enlace SQL, no dan la habilidad de construir una transacción de forma eficiente, y no hacen un montón de otras cosas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact, to be extremely clear about the subject, persistent connections don' t give you any functionality that wasn't possible with their non-persistent brothers.</seg></tuv>
      <tuv xml:lang="es"><seg>De hecho, para ser extremadamente claros sobre el tema las conexiones persistentes no te dan ninguna functionalidad que no fuera posible con sus hermanas no-persistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Why?</seg></tuv>
      <tuv xml:lang="es"><seg>¿Por qué?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has to do with the way web servers work.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto tiene que ver con el modo como funcionan los servidores "web".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are three ways in which your web server can utilize PHP to generate web pages.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay tres modos en que un servidor "web" puede utilizar PHP para generar páginas web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first method is to use PHP as a CGI "wrapper".</seg></tuv>
      <tuv xml:lang="es"><seg>El primer método es usar PHP como una capa CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When run this way, an instance of the PHP interpreter is created and destroyed for every page request (for a PHP page) to your web server.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando corre de este modo, se crea y destruye una instancia del intérprete PHP por cada página solicitada (para una página PHP) a tu servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because it is destroyed after every request, any resources that it acquires (such as a link to an SQL database server) are closed when it is destroyed.</seg></tuv>
      <tuv xml:lang="es"><seg>Debido a que se destruye después de cada petición, cualquier recurso que adquiera (como un enlace a un servidor de base de datos SQL) se cierra cuando es destruido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case, you do not gain anything from trying to use persistent connections - - they simply don 't persist.</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso, no se gana nada si se intentan usar conexiones persistentes, ya que simplemente no persisten.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second, and most popular, method is to run PHP as a module in a multiprocess web server, which currently only includes Apache.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo, y más popular, método es correr PHP como un módulo en un servidor web multiproceso, lo cual actualmente sólo incluye Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A multiprocess server typically has one process (the parent) which coordinates a set of processes (its children) who actually do the work of serving up web pages.</seg></tuv>
      <tuv xml:lang="es"><seg>Un servidor multiproceso tiene típicamente un proceso (el padre) que coordina un conjunto de procesos (sus hijos) que realmente hacen el trabajo se servir las páginas web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When each request comes in from a client, it is handed off to one of the children that is not already serving another client.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando entra cada petición de un cliente, es entregada a uno de los hijos que no esté ya sirviendo a otro cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that when the same client makes a second request to the server, it may be serviced by a different child process than the first time.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que cuando el mismo cliente hace una segunda petción al servidor, puede ser atendido por un proceso hijo distinto del de la primera vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What a persistent connection does for you in this case it make it so each child process only needs to connect to your SQL server the first time that it serves a page that makes use of such a connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Lo que una conexión persistente hace por ti en este caso es hacerlo de tal modo que cada proceso hijo sólo necesita conectar a tu SQL server la primera vez que sirve una página que hace uso de una conexión así.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When another page then requires a connection to the SQL server, it can reuse the connection that child established earlier.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando otra página solicita una conexión a SQL server, puede reutilizar la conexión que el hijo estableció previamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last method is to use PHP as a plug-in for a multithreaded web server.</seg></tuv>
      <tuv xml:lang="es"><seg>El último método es usar PHP como un "plug-in" para un servidor web multihilo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently PHP 4 has support for ISAPI, WSAPI, and NSAPI (on Windows), which all allow PHP to be used as a plug-in on multithreaded servers like Netscape FastTrack (iPlanet), Microsoft's Internet Information Server (IIS), and O'Reilly's WebSite Pro.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente PHP 4 soporta ISAPI, WSAPI y NSAPI (en Windows), lo cual permite a PHP ser utilizado como "plug-in "para servidores web multihilo como Netscape FastTrack, Internet Information Server (IIS) de Microsoft, y O'Reilly 's WebSite Pro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behavior is essentially the same as for the multiprocess model described before.</seg></tuv>
      <tuv xml:lang="es"><seg>El comportamiento es exactamente el mismo que para el modelo de multiprocesador descrito anteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that SAPI support is not available in PHP 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tener en cuanta que el soporte para SAPI no está disponible en PHP 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If persistent connections don 't have any added functionality, what are they good for?</seg></tuv>
      <tuv xml:lang="es"><seg>Si las conexiones persistentes no aportan ninguna funcionalidad añadida, ¿para qué son buenas?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The answer here is extremely simple - - efficiency.</seg></tuv>
      <tuv xml:lang="es"><seg>La respuesta aqui es extremadamente simple - - eficiencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Persistent connections are good if the overhead to create a link to your SQL server is high.</seg></tuv>
      <tuv xml:lang="es"><seg>Las conexiones persistentes son buenas si las cabeceras de control para crear un enlace a tu servidor SQL es alta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether or not this overhead is really high depends on many factors.</seg></tuv>
      <tuv xml:lang="es"><seg>Que estas cabeceras sean o no realmente altas depende de muchos factores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like, what kind of database it is, whether or not it sits on the same computer on which your web server sits, how loaded the machine the SQL server sits on is and so forth.</seg></tuv>
      <tuv xml:lang="es"><seg>Como, qué clase de base de datos es, si esta o no situada en el mismo ordenador que el servidor web, cómo está de cargada la máquina donde se encuentre el servidor SQL, y otras así.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The bottom line is that if that connection overhead is high, persistent connections help you considerably.</seg></tuv>
      <tuv xml:lang="es"><seg>El hecho fundamental es que si la cabecera de conexión es alta, las conexiones persistentes te ayudan considerablemente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They cause the child process to simply connect only once for its entire lifespan, instead of every time it processes a page that requires connecting to the SQL server.</seg></tuv>
      <tuv xml:lang="es"><seg>Ellas hacen que el proceso hijo simplemente conecte solamente una vez durante todo su intervalo de vida, en vez de cada vez que procesa una pagina que requiere conectar al servidor SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that for every child that opened a persistent connection will have its own open persistent connection to the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que por cada hijo que abrió una conexión persistente tendrá su propia conexión persistente al servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, if you had 20 different child processes that ran a script that made a persistent connection to your SQL server, you 'd have 20 different connections to the SQL server, one from each child.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si tienes 20 procesos hijos distintos que corran un archivo de comandos que cree una conexión persistente a tu servidor SQL, tendrías 20 conexiones diferentes a ti servidor SQL, una por cada hijo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, however, that this can have some drawbacks if you are using a database with connection limits that are exceeded by persistent child connections.</seg></tuv>
      <tuv xml:lang="es"><seg>No obstante, hay que tener en cuenta que esto puede tener desventajas si estais utilizando una base de datos con límites de conexión, por debajo del numero de procesos hijo con conexiones persistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your database has a limit of 16 simultaneous connections, and in the course of a busy server session, 17 child threads attempt to connect, one will not be able to.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tu base de datos tiene un límite de 16 conexiones simultaneas y en el curso de una sesión de servidor, 17 procesos hijo intentan conectarse, uno de ellos no podrá hacerlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are bugs in your scripts which do not allow the connections to shut down (such as infinite loops), the database with only 16 connections may be rapidly swamped.</seg></tuv>
      <tuv xml:lang="es"><seg>Si existen errores en los scripts, que no permitan terminar la conexion (p.ej.bucles infinitos), una base de datos con solo 32 conexiones puede ser rápidamente hundida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Check your database documentation for information on handling abandoned or idle connections.</seg></tuv>
      <tuv xml:lang="es"><seg>Comprobar la documentacion de vuestra base de datos para obtener información sobre que hacer con conexiones abandonadas ó libres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are a couple of additional caveats to keep in mind when using persistent connections.</seg></tuv>
      <tuv xml:lang="es"><seg>Un par de advertencias más a tener en cuenta cuando utiliceis conexiones persistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One is that when using table locking on a persistent connection, if the script for whatever reason cannot release the lock, then subsequent scripts using the same connection will block indefinitely and may require that you either restart the httpd server or the database server.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera, si utilizais bloqueos en una tabla desde una conexión persistente y por cualquier causa el script no puede desbloquear la tabla, todos los scripts posteriores que usen esta conexión, quedarán bloqueados indefinídamente y se requerirá que, ó bien el servidor httpd ó la base de datos sean arrancados de nuevo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In either case, you can use register_shutdown_function() to register a simple cleanup function to unlock your tables or roll back your transactions.</seg></tuv>
      <tuv xml:lang="es"><seg>La segunda, cuando utiliceis transacciones, un bloqueo por transacción será heredado por el próximo script usando la conexión, si la ejecución del primer script termina antes que el bloqueo. en ambos caso podeis utilizar register_shutdown_function() para registrar una funcion simple de limpieza que desbloquee las tablas ó deshaga la transacción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important summary.</seg></tuv>
      <tuv xml:lang="es"><seg>Lo mejor para evitar problemas es no usar conexiones persistentes en scripts que usen bloqueos de tablas ó transacciones (para todolo demás pueden ser usadas sin problemas)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Persistent connections were designed to have one-to-one mapping to regular connections.</seg></tuv>
      <tuv xml:lang="es"><seg>Un resumen importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means that you should always be able to replace persistent connections with non-persistent connections, and it won 't change the way your script behaves.</seg></tuv>
      <tuv xml:lang="es"><seg>Las conexiones persistentes fueron diseñadas para tener una equivalencia uno-a-uno con las conexiones normales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fbsql_pconnect(), ibase_pconnect(), ifx_pconnect(), imap_popen(), ingres_pconnect(), msql_pconnect(), mssql_pconnect(), mysql_pconnect(), OCIPLogon(), odbc_pconnect(), Ora_pLogon(), pfsockopen(), pg_pconnect(), and sybase_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Puede cambiar la eficiencia del archivo de comandos (y probablemete lo hará), ¡pero no su comportamiento!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Connection handling</seg></tuv>
      <tuv xml:lang="es"><seg>Manejando conexiones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Safe Mode</seg></tuv>
      <tuv xml:lang="es"><seg>Modo Seguro (Safe Mode)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition, URLs can be used with the include(), include_once(), require() and require_once() statements.</seg></tuv>
      <tuv xml:lang="es"><seg>Siempre que el soporte para la "envoltura URL fopen" esté habilitado cuando se configura PHP (lo cual ocurre a menos que se pasa explícitamente la opción --disable-url-fopen-wrapper a configure (para versiones hasta la 4.0.3), ó configurar como "off "el parámetro allow_url_fopen en php.ini (para las nuevas versiones)) se pueden usar URLs HTTP y FTP con la mayoría de las funciones que toman un archivo como parámetro, incluyendo las sentencias require() e include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>La versión actual de PHP para Windows no soporta el acceso remoto a ficheros en las siguientes funciones: include(), include_once(), require() y require_once().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, you can use this to open a file on a remote web server, parse the output for the data you want, and then use that data in a database query, or simply to output it in a style matching the rest of your website.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, se puede usar este para abrir un archivo en un servidor web remoto, analizar en la salida la información que se quiera, y entonces, usar la información en una consulta a base de datos, o simplemente para sacarlas en un estilo que coincida con el resto de su sitio web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 19-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 19-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getting the title of a remote page</seg></tuv>
      <tuv xml:lang="es"><seg>Obtener el título de una página remota</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To connect as a user other than 'anonymous', you need to specify the username (and possibly password) within the URL, such as'ftp: / /user:password@ftp.example.com / path / to / file'. (You can use the same sort of syntax to access files via HTTP when they require Basic authentication.)</seg></tuv>
      <tuv xml:lang="es"><seg>También se puede escribir a archivos en un FTP siempre que se conecte como un usuario con los correctos derechos de acceso, y el archivo no exista ya.Para conectar como un usuario distinto de 'anonymous', se necesita especificar el nombre de usuario (y posiblemente contraseña) dentro de la URL, tales como 'ftp: / /usuario:clave@ftp.ejemplo.com / camino / a/archivo'. (Se puede usar la misma clase de sintaxis para acceder a archivos via HTTP cuando se requería una autenticació de same sort of syntax to access files via HTTP when they require Basic authentication.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 19-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 19-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Storing data on a remote server</seg></tuv>
      <tuv xml:lang="es"><seg>Almacenando datos en un servidor remoto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $file = fopen ("ftp: / /ftp.example.com / incoming / outputfile", "w"); if (!$file) {echo "p Unable to open remote file for writing.\n"; exit;} / * Write the data here. * / fputs ($file, $HTTP_SERVER_VARS['HTTP_USER_AGENT']. "\n"); fclose ($file);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You might get the idea from the example above that you can use this technique to write to a remote log file.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do distributed logging like that, you should take a look at syslog().</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis captar la idea en el ejemplo anterior de como escribir en un registro remoto, pero como ya hemos comentado antes, solamente se puede escribir a un fichero nuevo usando la "envoltura URL fopen" Para registros distribuidos, consultar la función syslog().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP safe mode is an attempt to solve the shared-server security problem.</seg></tuv>
      <tuv xml:lang="es"><seg>El Modo Seguro de PHP es un intento para resolver el problema de la seguridad en un servidor compartido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is architecturally incorrect to try to solve this problem at the PHP level, but since the alternatives at the web server and OS levels aren' t very realistic, many people, especially ISP's, use safe mode for now.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 22-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 22-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Las directivas de Configuración que controlan el Modo Seguro son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Security and Safe Mode Configuration Directives</seg></tuv>
      <tuv xml:lang="es"><seg>Valor por Omisión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>Off</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default</seg></tuv>
      <tuv xml:lang="es"><seg>0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>safe_mode</seg></tuv>
      <tuv xml:lang="es"><seg>1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>safe_mode_include_dir</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe_mode está en On, el PHP verifica si el dueño del script actual coincide con el dueño del fichero a ser operado por una función de fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>safe_mode_allowed_env_vars</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, pueden haber ambientes donde una estricta verificación del UID no es apropiada, y una relajada verificación del GID es suficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es soportado por medio del switch safe_mode_gid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_SYSTEM</seg></tuv>
      <tuv xml:lang="es"><seg>Si en vez del safe_mode, Ud. setea un directorio open_basedir, entonces todas las operaciones de fichero estarán limitadas a los ficheros bajo ese directorio especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>safe_mode_protected_env_vars</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo (ejemplo de httpd.conf de Apache):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL</seg></tuv>
      <tuv xml:lang="es"><seg>Note que la directiva disable_functions no puede ser usada fuera del fichero php.ini lo que significa que Ud. no puede inhabilitar funciones en los principios per-virtualhost o per-directory en su fichero httpd.conf.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_SYSTEM</seg></tuv>
      <tuv xml:lang="es"><seg>Si agregamos esto a nuestro fichero php.ini:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 22-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether to enable PHP 's safe mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Función</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read the Security and chapter for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>dbmopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, Safe Mode does a UID compare check when opening files.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to relax this to a GID compare, then turn on safe_mode_gid.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether to use UID (FALSE) or GID (TRUE) checking upon file access.</seg></tuv>
      <tuv xml:lang="es"><seg>filepro()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UID / GID checks are bypassed when including files from this directory and its subdirectories (directory must also be in include_path or full path must including).</seg></tuv>
      <tuv xml:lang="es"><seg>filepro_rowcount()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.2.0, this directive can take a semi-colon separated path in a similar fashion to the include_path directive, rather than just a single directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The restriction specified is actually a prefix, not a directory name.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that "safe_mode_include_dir = / dir / incl" also allows access to "/ dir / include" and "/ dir / incls" if they exist.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_*()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you want to restrict access to only the specified directory, end with a slash.</seg></tuv>
      <tuv xml:lang="es"><seg>ingres_*()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example: "safe_mode_include_dir = / dir / incl /"</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_*()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP is used in safe mode, system() and the other functions executing system programs refuse to start programs that are not in this directory.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_loimport()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting certain environment variables may be a potential security breach.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive contains a comma-delimited list of prefixes.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In Safe Mode, the user may only alter environment variables whose names begin with the prefixes supplied here.</seg></tuv>
      <tuv xml:lang="es"><seg>putenv()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, users will only be able to set environment variables that begin with PHP_ (e.g.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la documentación de putenv()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_FOO=BAR).</seg></tuv>
      <tuv xml:lang="es"><seg>move_uploaded_file()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this directive is empty, PHP will let the user modify ANY environment variable!</seg></tuv>
      <tuv xml:lang="es"><seg>chdir()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive contains a comma-delimited list of environment variables that the end user won' t be able to change using putenv().</seg></tuv>
      <tuv xml:lang="es"><seg>dl()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These variables will be protected even if safe_mode_allowed_env_vars is set to allow to change them.</seg></tuv>
      <tuv xml:lang="es"><seg>backtick operator</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Limit the files that can be opened by PHP to the specified directory-tree, including the file itself.</seg></tuv>
      <tuv xml:lang="es"><seg>shell_exec() (equivalencia funcional de backticks)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive is NOT affected by whether Safe Mode is turned On or Off.</seg></tuv>
      <tuv xml:lang="es"><seg>exec()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a script tries to open a file with, for example, fopen or gzopen, the location of the file is checked.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones prácticas, no está actualmente permitido tener componentes.. en la ruta del fichero ejecutable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the file is outside the specified directory-tree, PHP will refuse to open it.</seg></tuv>
      <tuv xml:lang="es"><seg>Ud. puede correr sólo ejecutatables dentro del safe_mode_exec_dir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All symbolic links are resolved, so it 's not possible to avoid this restriction with a symlink.</seg></tuv>
      <tuv xml:lang="es"><seg>passthru()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The special value. indicates that the directory in which the script is stored will be used as base-directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones prácticas, no está actualmente permitido tener componentes.. en la ruta del fichero ejecutable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Under Windows, separate the directories with a semicolon.</seg></tuv>
      <tuv xml:lang="es"><seg>Ud. puede correr sólo ejecutatables dentro del safe_mode_exec_dir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On all other systems, separate the directories with a colon.</seg></tuv>
      <tuv xml:lang="es"><seg>mkdir()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As an Apache module, open_basedir paths from parent directories are now automatically inherited.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si los directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The restriction specified with open_basedir is actually a prefix, not a directory name.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that "open_basedir = / dir / incl" also allows access to "/ dir / include" and "/ dir / incls" if they exist.</seg></tuv>
      <tuv xml:lang="es"><seg>rename()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you want to restrict access to only the specified directory, end with a slash.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example: "open_basedir = / dir / incl /"</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si los directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is to allow all files to be opened.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive allows you to disable certain functions for security This directive allows you to disable certain functions for security reasons.</seg></tuv>
      <tuv xml:lang="es"><seg>copy()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes on a comma-dilimited list of function names. disable_functions is not affected by Safe Mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive must be set in php.ini For example, you cannot set this in httpd.conf.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si los directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: register_globals, display_errors, and log_errors</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe_mode is on, PHP checks to see if the owner of the current script matches the owner of the file to be operated on by a file function.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>-rw-rw-r- - 1 rasmus rasmus 33 Jul 1 19:20 script.php -rw-r--r- - 1 root root 1116 May 26 18:01 / etc / passwd</seg></tuv>
      <tuv xml:lang="es"><seg>chmod()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php readfile( '/ etc / passwd');?</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SAFE MODE Restriction in effect.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The script whose uid is 500 is not allowed to access / etc / passwd owned by uid 0 in / docroot / script.php on line 2</seg></tuv>
      <tuv xml:lang="es"><seg>symlink()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, there may be environments where a strict UID check is not appropriate and a relaxed GID check is sufficient.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is supported by means of the safe_mode_gid switch.</seg></tuv>
      <tuv xml:lang="es"><seg>link()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting it to On performs the relaxed GID checking, setting it to Off (the default) performs UID checking.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If instead of safe_mode, you set an open_basedir directory then all file operations will be limited to files under the specified directory For example (Apache httpd.conf example):</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si los directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Directory / docroot php_admin_value open_basedir / docroot / Directory</seg></tuv>
      <tuv xml:lang="es"><seg>En Modo Seguro, las cabeceras que empiezan con 'authorization' (insensitivo al tipo de letra) no serán retornadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning: open_basedir restriction in effect.</seg></tuv>
      <tuv xml:lang="es"><seg>header()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File is in wrong directory in / docroot / script.php on line 2</seg></tuv>
      <tuv xml:lang="es"><seg>highlight_file(), show_source()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also disable individual functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the disable_functions directive can not be used outside of the php.ini file which means that you cannot disable functions on a per-virtualhost or per-directory basis in your httpd.conf file.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si los directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If we add this to our php.ini file:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>disable_functions readfile,system</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning: readfile() has been disabled for security reasons in / docroot / script.php on line 2</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier función que usa php4 / main / fopen_wrappers.c</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Persistent Database Connections</seg></tuv>
      <tuv xml:lang="es"><seg>Conexiones persistentes a bases de datos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions restricted / disabled by safe mode</seg></tuv>
      <tuv xml:lang="es"><seg>Using PHP from the command line</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Compresión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using PHP from the command line</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Apache-specific Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones específicas de Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the argument number is of type float, the return type is also float, otherwise it is integer (as float usually has a bigger value range than integer).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor absoluto de un número.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$abs = abs( -4.2); / / $abs = 4.2; (double / float) $abs2 = abs(5); / / $abs2 = 5; (integer) $abs3 = abs(-5); / / $abs3 = 5; (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>Si el número del argumento es decimal, el tipo de retorno también es decimal, de otra manera devuelve un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mathematical Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones matemáticas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not implemented on Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no está implementada en plataformas Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the arc cosine of arg in radians. acos() is the complementary function of cos(), which means that a==cos(acos(a)) for every value of a that is within acos() 'range.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el arco coseno de arg en radianes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acosh(), asin() and atan().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también asin() y atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes before characters that are listed in charlist Returns a string with backslashes before characters that are listed in charlist parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena con barras invertidas antes de los caracteres listados en el parámetro listcar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v.</seg></tuv>
      <tuv xml:lang="es"><seg>Al estilo del C, los caracteres con códico ASCII inferior a 32 y superior a 126 son convertidos a representación octal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They will be converted to \0, \a, \b, \f, \n, \r, \t and \v.</seg></tuv>
      <tuv xml:lang="es"><seg>Tenga cuidado cuando marque caracteres alfanuméricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP \0 (NULL), \r (carriage return), \n (newline) and \t (tab) are predefined escape sequences, while in C all of these are predefined escape sequences.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede especificar un rango en listcar como el "\0..\37", que marcaría todos los caracteres con código ASCII entre 0 y 31.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>charlist like "\0..\37", which would escape all characters with ASCII code between 0 and 31.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. addcslashes() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de addcslashes()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$escaped = addcslashes( $not_escaped, "\0..\37!@\177..\377");</seg></tuv>
      <tuv xml:lang="es"><seg>$tradformado = addcslashes ($no_transf, "\0..\37!@\177..\377");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo addcslashes( 'foo []', 'A..z'); / / output: \f\o\o\ [\] / / All upper and lower-case letters will be escaped / /... but so will the [\ ]^_` and any tabs, line / / feeds, carriage returns, etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo addcslashes( "zoo[' .']", 'z..A'); / / output: \zoo['\ .']</seg></tuv>
      <tuv xml:lang="es"><seg>Añadida en PHP4b3-dev.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also stripcslashes(), stripslashes(), htmlspecialchars(), and quotemeta().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también stripcslashes(), stripslashes(), htmlspecialchars(), htmlspecialchars(), y quotemeta().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de cadenas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>addslashes</seg></tuv>
      <tuv xml:lang="es"><seg>AddSlashes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes before characters that need to be quoted in database queries etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena con barras invertidas frente a los caracteres que necesitan marcarse en consultas de bases de datos, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These characters are single quote ('), double quote ("), backslash (\) and NUL (the NULL byte).</seg></tuv>
      <tuv xml:lang="es"><seg>Estos son la comilla simple ('), comilla doble ("), barra invertida (\) y NUL (el byte nulo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also stripslashes(), htmlspecialchars(), and quotemeta().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también stripslashes(), htmlspecialchars(), y quotemeta().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>addcslashes</seg></tuv>
      <tuv xml:lang="es"><seg>AddCSlashes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This performs a partial request for a URI.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función efectua una llamada parcial a URI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The properties of the returned class are:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta llamada no hace sino obtener toda la información importante sobre el recurso pedido y la devuelve en un tipo clase .Las propiedades de esa clase son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mtime</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>request_time</seg></tuv>
      <tuv xml:lang="es"><seg>Nota: apache_lookup_uri solo funciona cuando el PHP está instalado como módule del Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>apache_note() is an Apache-specific function which gets and sets values in a request's notes table.</seg></tuv>
      <tuv xml:lang="es"><seg>apache_note() es una función específica del Apache que recibe y establece valores de la petición en una tabla de notas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with one argument, it returns the current value of note note_name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se llama con un solo parámetro,devuelve el valor de note_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with two arguments, it sets the value of note note_name to note_value and returns the previous value of note note_name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se llama con dos parámetros, establece el valor de note_value en note_value y devuelve el valor que había en note_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. apache_request_headers() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. apache_request_headers() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_change_key_case() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_change_key_case() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de matrices</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_chunk() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_chunk() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_count_values() returns an array using the values of the input array as keys and their frequency in input as values.</seg></tuv>
      <tuv xml:lang="es"><seg>array_count_values() devuelve una matriz usando los valores de la matriz entrada como claves y su frecuencia de aparición en la entrada como valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_count_values() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_count_values()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array (1, "hello", 1, "world", "hello"); print_r(array_count_values ($array));</seg></tuv>
      <tuv xml:lang="es"><seg>$matriz = array( 1, "hola", 1, "mundo", "hola"); array_count_values($matriz); / / devuelve array(1= 2, "hola"= 2, "mundo"= 1)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the above program will be:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([1] = 2 [hello] = 2 [world] = 1)</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_diff_assoc() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_diff_assoc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_diff() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_diff() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_fill() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_fill() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_filter() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_filter() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A warning will be emitted if a value has the wrong type, and the key / value pair in question will not be flipped.</seg></tuv>
      <tuv xml:lang="es"><seg>array_flip() devuelve una matriz con los valores intercambiados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a value has several occurrences, the latest key will be used as its values, and all others will be lost.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_flip() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_flip()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$trans = array ("a "= 1, "b" = 1, "c "= 2); $trans = array_flip ($trans); print_r($trans);</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([1] = b [2] = c)</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If index is an integer, next generated index will be the biggest integer index + 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz con los parámetros que se le pasan.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example demonstrates how to create a two-dimensional array, how to specify keys for associative arrays, and how to skip-and-continue numeric indices in normal arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>A dichos parámetros se les puede dar un índice usando el operador =.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array ("fruits "= array ("a"= "orange", "b"= "banana", "c"= "apple"), "numbers" = array (1, 2, 3, 4, 5, 6), "holes "= array ("first", 5 = "second", "third"));</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente ejemplo demuestra cómo crear una matriz bidimensional, cómo especificar claves para matrices asociativas, y cómo especificar índices no consecutivos en matrices normales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array( 1, 1, 1, 1, 1, 8= 1, 4= 1, 19, 3= 13); print_r($array);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example creates a 1-based array.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$firstquarter = array( 1 = 'January', 'February', 'March'); print_r($firstquarter);</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("frutas "= array("a"= "naranja", "b"= "plátano", "c"= "manzana"), "números" = array(1, 2, 3, 4, 5, 6), "hoyos "= array("primero", 5 = "segundo", "tercero"));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_pad(), list(), and range().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: list().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_intersect_assoc() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_intersect_assoc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_intersect() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_intersect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_key_exists() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_key_exists() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_keys() returns the keys, numeric and string, from the input array.</seg></tuv>
      <tuv xml:lang="es"><seg>array_keys() devuelve las claves, numéricas y de cadena, de la matriz entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional search_value is specified, then only the keys for that value are returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica el parámetro opcional val_a_buscar, sólo se devuelven las claves para dicho valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, all the keys from the input are returned.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo, se devuelven todas las claves de la entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array (0 = 100, "color "= "red"); print_r(array_keys ($array)); $array = array ("blue", "red", "green", "blue", "blue"); print_r(array_keys ($array, "blue")); $array = array ("color" = array("blue", "red", "green"), "size "= array("small", "medium", "large")); print_r(array_keys ($array));</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the program above will be:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_keys()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>$matriz = array( 0 = 100, "color "= "rojo"); array_keys ($matriz); / / devuelve array (0, "color") $matriz = array(1, 100, 2, 100); array_keys ($matriz, 100); / / devuelve array (0, 2)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_values().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Implementation of array_keys() for PHP 3 users</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_values().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_map() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_map() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. array_map() - using more arrays</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. array_map() - using more arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the resulting array.</seg></tuv>
      <tuv xml:lang="es"><seg>array_merge() combina los elementos de dos o más matrices conjuntamente de modo que los valores de una son agregados al final de los valores de la anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the input arrays have the same string keys, then the later value for that key will overwrite the previous one.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la matriz resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_merge() example</seg></tuv>
      <tuv xml:lang="es"><seg>Si las matrices de entrada tienen las mismas claves de cadena, el último valor para cada clave reemplazará el valor previo de la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $result will be:</seg></tuv>
      <tuv xml:lang="es"><seg>Si, por el contrario, las matrices tienen la misma clave numérica, esto no pasa y los valores son simplemente agregados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([color] = green [0] = 2 [1] = 4 [2] = a [3] = b [shape] = trapezoid [4] = 4)</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple array_merge() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_merge()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don 't forget that numeric keys will be renumbered!</seg></tuv>
      <tuv xml:lang="es"><seg>$matriz1 = array ("color "= "rojo", 2, 4); $matriz2 = array ("a", "b", "color" = "verde", "forma "= "trapezoide"); array_merge ($matriz1, $matriz2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array1 = array(); $array2 = array(1 = "data"); $result = $array1 + $array2;</seg></tuv>
      <tuv xml:lang="es"><seg>La matriz resultante sería array( "color "= "verde", 2, 4, "a", "b", "forma" = "trapezoide").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_merge_recursive().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_merge_recursive() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_merge_recursive() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_pad() returns a copy of the input padded to size specified by pad_size with value pad_value.</seg></tuv>
      <tuv xml:lang="es"><seg>array_pad() Devuelve una copia de la entrada rellenada hasta el tamaño tama_relleno con el valor valor_relleno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pad_size is positive then the array is padded on the right, if it 's negative then on the left.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tama_relleno es positivo, entonces la matriz es rellenada por la derecha, y si es negativo, por la izquierda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el valor absoluto de tama_relleno es menor o igual que el tamaño de la entrada no se produce relleno alguno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_pad() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_pad()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (12, 10, 9); $result = array_pad ($input, 5, 0); / / result is array (12, 10, 9, 0, 0) $result = array_pad ($input, -7, -1); / / result is array (-1, -1, -1, -1, 12, 10, 9) $result = array_pad ($input, 2, "noop"); / / not padded</seg></tuv>
      <tuv xml:lang="es"><seg>$entrada = array (12, 10, 9); $resultado = array_pad ($entrada, 5, 0); / / el resultado es array (12, 10, 9, 0, 0) $resultado = array_pad ($entrada, -7, -1); / / el resultado es array (-1, -1, -1, -1, 12, 10, 9) $resultado = array_pad ($entrada, 2, "no"); / / no rellenado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If array is empty (or is not an array), NULL will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>array_pop() extrae y devuelve el último valor de la matriz, acortando la matriz en un elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_pop() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_pop()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$stack = array ("orange", "banana", "apple", "raspberry"); $fruit = array_pop ($stack);</seg></tuv>
      <tuv xml:lang="es"><seg>$pila = array ("naranja", "manzana", "frambuesa"); $fruta = array_pop ($pila);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this, $stack will have only 3 elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Tras esto, $pila contiene sólo 2 elementos: "naranja" y "manzana", y $fruta contiene "frambuesa ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read the section on Booleans for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_push(), array_shift(), y array_unshift().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_push(), array_shift(), and array_unshift().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_push() treats array as a stack, and pushes the passed variables onto the end of array.</seg></tuv>
      <tuv xml:lang="es"><seg>array_push() considera a la matriz como una pila, e inserta las variables que se le pasan al final de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length of array increases by the number of variables pushed.</seg></tuv>
      <tuv xml:lang="es"><seg>La longitud de la matriz se incrementa en el número de variables insertadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Has the same effect as:</seg></tuv>
      <tuv xml:lang="es"><seg>Tiene el mismo efecto que ejecutar:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array[] = $var;</seg></tuv>
      <tuv xml:lang="es"><seg>$matriz[] = $var;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the new number of elements in the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nuevo número de elementos de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_push() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_push()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$stack = array ("orange", "banana"); array_push ($stack, "apple", "raspberry");</seg></tuv>
      <tuv xml:lang="es"><seg>$pila = array (1, 2); array_push($pila, "+", 3);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would result in $stack having the following elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_pop(), array_shift(), y array_unshift().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = orange [1] = banana [2] = apple [3] = raspberry)</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_pop(), array_shift(), and array_unshift().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_rand() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_rand() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_reduce() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_reduce() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_reverse() example</seg></tuv>
      <tuv xml:lang="es"><seg>array_reverse() toma la matriz de entrada y devuelve una nueva matriz con los elementos en orden inverso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array ("php", 4.0, array ("green", "red")); $result = array_reverse ($input); $result_keyed = array_reverse ($input, TRUE);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes both $result and $result_keyed have the same elements, but note the difference between the keys.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_reverse()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = Array ([0] = green [1] = red) [1] = 4 [2] = php) Array ([2] = Array ([0] = green [1] = red) [1] = 4 [0] = php)</seg></tuv>
      <tuv xml:lang="es"><seg>$entrada = array ("php", 4.0, array ("verde", "rojo")); $resultado = array_reverse ($entrada);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter was added in PHP 4.0.3.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en PHP 4.0 Beta 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function may return Boolean FALSE, but may also return a non-Boolean value which evaluates to FALSE, such as 0 or "".</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función puede devolver el Boolean FALSE, pero también puede devolver un valor no-Boolean que será evaluado FALSE, como por ejemplo 0 o "".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read the section on Booleans for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Por favor, lea la sección Booleans para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the === operator for testing the return value of this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Utilice el operador === para comprobar el valor devuelto por esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All numerical array keys will be modified to start counting from zero while literal keys won 't be touched.</seg></tuv>
      <tuv xml:lang="es"><seg>array_shift() extrae el primer valor de la matriz y lo devuele, acortando la matriz en un elemnto y moviendo todo hacia arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_shift() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_shift()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$stack = array ("orange", "banana", "apple", "raspberry"); $fruit = array_shift ($stack);</seg></tuv>
      <tuv xml:lang="es"><seg>$args = array ("-v", "-f"); $opcion = array_shift ($args);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would result in $stack having 3 elements left:</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_unshift(), array_push(), y array_pop().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = banana [1] = apple [2] = raspberry)</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_unshift(), array_push(), and array_pop().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_slice() returns the sequence of elements from the array array as specified by the offset and length parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>array_slice() devuelve una secuencia de elementos de la matriz especificada por los parámetros desplazamiento y tamano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is positive, the sequence will start at that offset in the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el desplazamiento es positivo, la secuencia comenzará en dicha posición de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is negative, the sequence will start that far from the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el desplazamiento es negativo, la secuencia comenzará en esa posición desde el final de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is given and is positive, then the sequence will have that many elements in it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica el tamano y éste es positivo, la secuencia contendrá tantos elementos como se diga en él.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is given and is negative then the sequence will stop that many elements from the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si fuese negativo, la secuencia se detendrá a tantos elementos del final de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is omitted, then the sequence will have everything from offset up until the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se omite, la secuencia contendrá todos los elementos desde el desplazamiento hasta el final de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that array_slice() will ignore array keys, and will calculate offsets and lengths based on the actual positions of elements within the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_slice() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_slice() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_splice().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array ("a", "b", "c", "d", "e"); $output = array_slice ($input, 2); / / returns "c", "d", and "e "$output = array_slice ($input, 2, -1); / / returns "c", "d" $output = array_slice ($input, -2, 1); / / returns "d "$output = array_slice ($input, 0, 3); / / returns "a", "b", and "c"</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_splice().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an array containing the extracted elements.</seg></tuv>
      <tuv xml:lang="es"><seg>array_splice() suprime los elementos designados por el desplazamiento y el tamano de la matriz entrada, y los sustituye con los elementos de la matriz de sustitucion si se especifica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is positive then the start of removed portion is at that offset from the beginning of the input If offset is positive then the start of removed portion is at that offset from the beginning of the input array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el desplazamiento es positivo, el comienzo de la parte suprimida sería en esa posición desde el comienzo de la matriz de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is negative then it starts that far from the end of the input array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el desplazamiento es negativo, se cuenta la posición desde el final de la matriz de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is omitted, removes everything from offset to the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se omite tamano, se suprime todo desde el desplazamiento hasta el final de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is specified and is positive, then that many elements will be removed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica el tamano y es positivo, se suprimirán tantos elementos como se especifica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is specified and is negative then the end of the removed portion will be that many elements from the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si fuera negativo, el final de la porción eliminada estará a tantos elementos del final de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip: to remove everything from offset to the end of the array when replacement is also specified, use count( $input) for length.</seg></tuv>
      <tuv xml:lang="es"><seg>Truco: para eliminar todo desde el desplazamiento hasta el final de la matriz cuando también se especifica sustitucion, utilice count( $entrada) como tamano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If replacement array is specified, then the removed elements are replaced with elements from this array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifia la matriz de sustitucion, entonces los elementos suprimidos son reemplazados con los elementos de dicha matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset and length are such that nothing is removed, then the elements from the replacement array are inserted in the place specified by the offset.</seg></tuv>
      <tuv xml:lang="es"><seg>Si los valores de desplazamiento y tamano son tales que nada es borrado, los elementos de la matriz sustitucion se insertarán en la posición indicada por el desplazamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip: if the replacement is just one element it is not necessary to put array() around it, unless the element is an array itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Truco: si sólo se va a sustituir algo por un elemento nada más, no hace falta poner array() alrededor del mismo, salvo que dicho elemento sea una matriz en sí mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following equivalences hold:</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes funciones son equivalentes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_push ($input, $x, $y) array_splice ($input, count ($input), 0, array ($x, $y)) array_pop ($input) array_splice ($input, -1) array_shift ($input) array_splice ($input, 0, 1) array_unshift ($input, $x, $y) array_splice ($input, 0, 0, array ($x, $y)) $input[$x] = $y array_splice ($input, $x, 1, $y)</seg></tuv>
      <tuv xml:lang="es"><seg>array_push( $entrada, $x, $y) array_splice($entrada, count($entrada), 0, array($x, $y)) array_pop($entrada) array_splice($entrada, -1) array_shift($entrada) array_splice($entrada, 0, 1) array_unshift($entrada, $x, $y) array_splice($entrada, 0, 0, array($x, $y)) $a[$x] = $y array_splice($entrada, $x, 1, $y)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the array consisting of removed elements.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz que tiene los elementos eliminados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_splice() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos de array_splice()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array ("red", "green", "blue", "yellow"); array_splice ($input, 2); / / $input is now array ("red", "green") $input = array ("red", "green", "blue", "yellow"); array_splice ($input, 1, -1); / / $input is now array ("red", "yellow") $input = array ("red", "green", "blue", "yellow"); array_splice ($input, 1, count($input), "orange"); / / $input is now array ("red", "orange") $input = array ("red", "green", "blue", "yellow"); array_splice ($input, -1, 1, array("black", "maroon")); / / $input is now array ("red", "green", / / "blue", "black", "maroon")</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_slice().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_slice().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_sum() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_sum() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_unique() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. array_unique() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. array_unique() and types</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. array_unique() and types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_unshift() prepends passed elements to the front of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>array_unshift() añade los elementos que se le pasan al principio de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All numerical array keys will be modified to start counting from zero while literal keys won 't be touched.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que la lista de elementos es añadida como un todo, de modo que los elementos añadidos mantienen su orden.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the new number of elements in the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de elementos en la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_unshift() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_unshift()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$queue = array ("orange", "banana"); array_unshift ($queue, "apple", "raspberry");</seg></tuv>
      <tuv xml:lang="es"><seg>$cola = array( "p1", "p3"); array_unshift($cola, "p4", "p5", "p6");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would result in $queue having the following elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: array_shift(), array_push(), y array_pop().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = apple [1] = raspberry [2] = orange [3] = banana)</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_shift(), array_push(), and array_pop().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array ("size "= "XL", "color" = "gold"); print_r(array_values ($array));</seg></tuv>
      <tuv xml:lang="es"><seg>array_values() devuelve todos los valores de la matriz entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will output:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_values()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>$matriz = array( "talla "= "XL", "color" = "dorado"); array_values($matriz); / / devuelve array("XL", "dorado")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Implementation of array_values() for PHP 3 users</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_keys().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Applies the user-defined function function to each element of the array array.</seg></tuv>
      <tuv xml:lang="es"><seg>Aplica la función llamada func a cada elemento de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array parameter 's value being the first, and the key / index second.</seg></tuv>
      <tuv xml:lang="es"><seg>La función func recibirá el valor de la matriz como primer parámetro y la clave como segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional userdata parameter is supplied, it will be passed as the third parameter to the callback function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se proporciona el parámetro datosvarios será pasado como tercer parámetro a la función de usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If function function requires more parameters than given to it, an error of level E_WARNING will be generated each time array_walk() calls function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si func necesita más de dos o 3 argumentos, dependiendo de datosvarios, se generará un aviso cada vez que array_walk() llama a func.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These warnings may be suppressed by prepending the PHP error operator @ to the array_walk() call, or by using error_reporting().</seg></tuv>
      <tuv xml:lang="es"><seg>Estos avisos pueden suprimirse si se pone '@' antes de la llamada a array_walk(), o usando la función error_reporting().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then, any changes made to those elements will be made in the original array itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Si func precisa trabajar con los valores reales de la matriz, especifique que el valor del primer parámetro de func debe pasarse por referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_walk() is not affected by the internal array pointer of array. array_walk() will walk through the entire array regardless of pointer position.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde ese instante, los cambios realizados sobre dichos elementos también serán realizados en la propia matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To reset the pointer, use reset().</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users may not change the array itself from the callback function. e.g.</seg></tuv>
      <tuv xml:lang="es"><seg>El pasar la clave y los datos de usuario a func fue una característica añadida en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array that array_walk() is applied to is changed, the behavior of this function is undefined, and unpredictable.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_walk() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de array_walk()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the program above will be:</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("d"= "limón", "a"= "naranja", "b"= "plátano", "c"= "manzana"); function test_alterar ($item1, $clave, $prefix) {$item1 = "$prefix: $item1";} function test_ver ($item2, $clave) {echo "$clave. $item2 br \n";} array_walk ($frutas, 'test_ver'); reset ($frutas); array_walk ($frutas, 'test_alterar', 'fruta'); reset ($frutas); array_walk ($frutas, 'test_ver');</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also list(), foreach, each(), and call_user_func_array().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: each() y list().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is used mainly when sorting associative arrays where the actual element order is significant.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función ordena una matriz de modo que los índices mantengan su correlación con los elementos de la misma a los que están asociados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array ("d"= "lemon", "a"= "orange", "b"= "banana", "c"= "apple"); arsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>Esto se utiliza principalmente para ordenar matrices asociativas en las que el orden de los elementos es importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>a = orange d = lemon b = banana c = apple</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de arsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("d"= "limón", "a"= "naranja", "b"= "plátano", "c"= "manzana"); arsort ($frutas); for (reset ($frutas); $clave = key ($frutas); next ($frutas)) {echo "frutas[$clave] = ".$frutas[$clave] ."\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asort(), rsort(), ksort(), and sort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: asort(), rsort(), ksort(), y sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the arc sine of arg in radians. asin() is the complementary function of sin(), which means that a==sin(asin(a)) for every value of a that is within asin() 's range.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el arco seno de arg en radianes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asinh(), acos() and atan().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también acos() y atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array ("d"= "lemon", "a"= "orange", "b"= "banana", "c"= "apple"); asort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>Esto se utiliza principalmente para ordenar matrices asociativas en las que el orden de los elementos es importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>c = apple b = banana d = lemon a = orange</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de asort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("d"= "limón", "a"= "naranja", "b"= "plátano", "c"= "manzana"); asort ($frutas); for (reset ($frutas); $clave = key ($frutas); next ($frutas)) {echo "frutas[$clave] = ".$frutas[$clave] ."\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), rsort(), ksort(), and sort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: arsort(), rsort(), ksort(), y sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>aspell_check() checks the spelling of a word and returns TRUE if the spelling is correct, FALSE if not.</seg></tuv>
      <tuv xml:lang="es"><seg>aspell_check() comprueba la ortografía de una palabra, y devuelve cierto (TRUE) si la ortografía es correcta ,falso (FALSE) si no lo es.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_check()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. aspell_check</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>aspell_check_raw</seg></tuv>
      <tuv xml:lang="es"><seg>aspell_check-raw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>aspell_check_raw() checks the spelling of a word, without changing its case or trying to trim it in any way and returns TRUE if the spelling is correct, FALSE if not.</seg></tuv>
      <tuv xml:lang="es"><seg>Si está bien, devuelve cierto (TRUE), si no lo está, devuelve falso (FALSE).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_check_raw()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. aspell_check_raw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Aspell functions [deprecated]</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones Aspell [deprecated]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>aspell_new() Abre un nuevo diccionario devolviendo el identificador de este para ser utilizado en otras funciones ortográficas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_new()</seg></tuv>
      <tuv xml:lang="es"><seg>Nuevo_diccionario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>aspell_suggest() returns an array of possible spellings for the given word.</seg></tuv>
      <tuv xml:lang="es"><seg>aspell_suggest() devuelve una matriz con posibles correciones ortográficas para la palabra dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_suggest()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. aspell_suggest</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BCMath Arbitrary Precision Mathematics Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones matemáticas de precisión arbitraria BCMath</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Options Information</seg></tuv>
      <tuv xml:lang="es"><seg>opciones e información de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function calculates the arc tangent of the two variables x and y.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función calcula la arco tangente de las dos variables x e y.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is similar to calculating the arc tangent of y / x, except that the signs of both arguments are used to determine the quadrant of the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Es similar a el cálculo de la arco tangente de y / x, excepto que los signos de ambos argumentos son usados para determinar el cuadrante del resultado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function returns the result in radians, which is between -PI and PI (inclusive).</seg></tuv>
      <tuv xml:lang="es"><seg>La función devuelve el resultado en radianes, el cual está entre -PI y PI (inclusive).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acos() and atan().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también acos() y atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the arc tangent of arg in radians. atan() is the complementary function of tan(), which means that a==tan(atan(a)) for every value of a that is within atan() 's range.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la arco tangente de arg en radianes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also atanh(), asin() and acos().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también acos() y atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>base64_decode() decodes encoded_data and returns the original data.</seg></tuv>
      <tuv xml:lang="es"><seg>base64_decode() decodifica datos_cifrados y devuelve los datos originales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned data may be binary.</seg></tuv>
      <tuv xml:lang="es"><seg>Los datos devueltos pueden ser binarios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: base64_encode(), RFC 2045 section 6.8.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: base64_encode(), RFC-2045 sección 6.8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>URL Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones URL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>base64_encode() returns data encoded with base64.</seg></tuv>
      <tuv xml:lang="es"><seg>base64_encode() devuelve datos cifrados en base64.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean, such as mail bodies.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta codificación está pensada para que los datos binarios sobrevivan al transporte a través de capas que no son de 8 bits, como por ejemplo los cuerpos de los mensajes de correo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Base64-encoded data takes about 33% more space than the original data.</seg></tuv>
      <tuv xml:lang="es"><seg>Los datos codificados con Base64 ocupan aproximadamente un 33% más de espacio que los datos originales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: base64_decode(), chunk_split(), RFC 2045 section 6.8.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: base64_decode(), chunk_split(), RFC-2045 sección 6.8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing number represented in base tobase.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena conteniendo el number representado en base tobase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base in which number is given is specified in frombase.</seg></tuv>
      <tuv xml:lang="es"><seg>La base en la cual number es dado viene especificada en frombase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both frombase and tobase have to be between 2 and 36, inclusive.</seg></tuv>
      <tuv xml:lang="es"><seg>Tanto frombase y tobase tienen que estar entre 2 y 36, inclusive.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35.</seg></tuv>
      <tuv xml:lang="es"><seg>Los dígitos en números con una base mayor que 10 serán representados con las letras a-z, a vale 10, b vale 11 y z vale 36.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. base_convert()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. base_convert()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$binary = base_convert ($hexadecimal, 16, 2);</seg></tuv>
      <tuv xml:lang="es"><seg>$binary = base_convert( $hexadecimal, 16, 2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bindec</seg></tuv>
      <tuv xml:lang="es"><seg>BinDec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Given a string containing a path to a file, this function will return the base name of the file.</seg></tuv>
      <tuv xml:lang="es"><seg>Dada una cadena (string) que contiene el path de un fichero, esta función devuelve el nombre base del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows, both slash (/) and backslash (\) are used as path separator character.</seg></tuv>
      <tuv xml:lang="es"><seg>En Windows, tanto la barra (/) como la barra inversa (\) pueden usarse como caracter separador en el path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other environments, it is the forward slash (/).</seg></tuv>
      <tuv xml:lang="es"><seg>En otros entornos, se usa la barra directa (/).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. basename() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>$path = "/ home / httpd / html / index.php3"; $file = basename($path); / / $file toma el valor "index.php3"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dirname()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: dirname()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Filesystem functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones del sistema de ficheros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds the left_operand to the right_operand and returns the sum in a string.</seg></tuv>
      <tuv xml:lang="es"><seg>Suma el operando izq con el operando der y devuelve la suma en una cadena de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale parameter is used to set the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala se usa para fijar el número de dígitos tras el punto decimal que aparecerán en el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcsub().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también bcsub().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Compares the left_operand to the right_operand and returns the result as an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>Compara el operando izq con el operando der y devuelve el resultado como un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale The optional scale parameter is used to set the number of digits after the decimal place which will be used in the comparison.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala El parámetro opcional escala se usa para fijar el número de dígitos tras el punto decimal que se utilizarán en la comparación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value is 0 if the two operands are equal.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor devuelto es 0 si los dos operandos son iguales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the left_operand is larger than the right_operand the return value is +1 and if the left_operand is less than the right_operand the return value is -1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el operando izq es mayor que el operando der el valor devuelto es +1 y si el operando izq es menor que el operando der el valor devuelto es -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Divides the left_operand by the right_operand and returns the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Divide el operando izq por el operando der y devuelve el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale sets the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala fija el número de dígitos tras el punto decimal a usar en el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcmul().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también bcmul().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Get the modulus of the left_operand using modulus.</seg></tuv>
      <tuv xml:lang="es"><seg>Obtiene el módulo del operando izq usando modulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcdiv().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también bcdiv().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiply the left_operand by the right_operand and returns the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Multiplica el operando izq por el operando der y devuelve el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale sets the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala fija el número de dígitos tras el punto decimal del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Raise x to the power y.</seg></tuv>
      <tuv xml:lang="es"><seg>Eleva x a la potencia de y.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale can be used to set the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala se puede usar para fijar el número de dígitos tras el punto decimal del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcpowmod(), and bcsqrt().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también bcsqrt().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sets the default scale parameter for all subsequent bc math functions that do not explicitly specify a scale parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fija el parámetro de escala por defecto para las subsiguientes funciones matemáticas bc que no especifican dicho parámetro explícitamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the square root of the operand.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la raíz cuadrada del operando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale parameter sets the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala fija el número de dígitos tras el punto decimal del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcpow().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también bcpow().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subtracts the right_operand from the left_operand and returns the result in a string.</seg></tuv>
      <tuv xml:lang="es"><seg>Resta el operando der del operando izq y devuelve el resultado en una cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale parameter is used to set the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional escala se utiliza para fijar el número de dígitos tras el punto decimal del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcadd().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también bcadd().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bzip2 Compression Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de compresión Bzip2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ASCII string containing the hexadecimal representation of str.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena ASCII que contiene la representación hexadecimal de cad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pack() and unpack().</seg></tuv>
      <tuv xml:lang="es"><seg>La conversión se realiza byte a byte, con los 4 bits superiores primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the decimal equivalent of the binary number represented by the binary_string argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el equivalente decimal del número binario representado por el argumento binary_string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bindec() converts a binary number to an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>BinDec convierte un número binario en un número decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 31 bits of 1 's or 2147483647 in decimal.</seg></tuv>
      <tuv xml:lang="es"><seg>El mayor número que puede ser convertido son 31 bits de unos o 2147483647 en decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: decbin().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la función decbin().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gettext</seg></tuv>
      <tuv xml:lang="es"><seg>GNU Gettext</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The bindtextdomain() function sets the path for a domain.</seg></tuv>
      <tuv xml:lang="es"><seg>La función bindtextdomain() establece la ruta para el dominio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzcompress() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. bzcompress() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzdecompress()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. bzdecompress()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzerror() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. bzerror() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzopen() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. bzopen() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzread() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. bzread() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzwrite() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. bzwrite() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calendar functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de calendario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return the number of days in the month of year for the specified calendar.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve el numero de dias en el mes del año para el calendario especificado calendario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also jdtounix().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también jdtounix().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Call a user defined function given by the function parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Call a user defined function given by the function_name parameter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Class / Object Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Clases / Objectos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CCVS API Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones del API de CCVS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next highest integer value by rounding up value if necessary.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor entero superior más cercano a number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value of ceil() is still of type float as the value range of float is usually bigger than that of integer.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de ceil() con enteros es una perdida de tiempo absoluta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ceil() example</seg></tuv>
      <tuv xml:lang="es"><seg>Use: $new = (double)ceil($number); para tener el comportamiento antiguo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also floor() and round().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también floor() y round().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changes PHP 's current directory to directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Cambia el directorio PHP actual a directory.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getcwd().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si no puede cambiar al directorio, TRUE si todo va bien.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Directory functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones con directorios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the date given is valid; otherwise returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un valor verdadero si la fecha dada es válida; en caso contrario, devuelve un valor falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks the validity of the date formed by the arguments.</seg></tuv>
      <tuv xml:lang="es"><seg>Comprueba la validez de la fecha formada por los argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A date is considered valid if:</seg></tuv>
      <tuv xml:lang="es"><seg>Se considera válida una fecha si:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>year is between 1 and 32767 inclusive</seg></tuv>
      <tuv xml:lang="es"><seg>el año está entre 0 y 32767, ambos incluidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>month is between 1 and 12 inclusive</seg></tuv>
      <tuv xml:lang="es"><seg>el mes está entre 1 y 12, ambos incluidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Day is within the allowed number of days for the given month.</seg></tuv>
      <tuv xml:lang="es"><seg>el día está en el rango permitido para el mes dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mktime() and strtotime().</seg></tuv>
      <tuv xml:lang="es"><seg>Se tienen en consideración los años bisiestos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date and Time functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de fecha y hora</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches DNS for records of type type corresponding to host.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca en DNS entradas del tipo type correspondientes a host.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type may be any one of:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si encuentra algún registro; devuelve falso si no encuentra ninguno o sucedió algún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A, MX, NS, SOA, PTR, CNAME, AAAA, or ANY.</seg></tuv>
      <tuv xml:lang="es"><seg>type puede ser:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Host may either be the IP address in dotted-quad notation or the host name.</seg></tuv>
      <tuv xml:lang="es"><seg>A, MX, NS, SOA, PTR, CNAME, o ANY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>AAAA type added with PHP 4.3.0</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es MX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not implemented on Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>host puede ser o la dirección IP de la forma xxxx.xxxx.xxxx.xxxx o el nombre de la máquina.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getmxrr(), gethostbyaddr(), gethostbyname(), gethostbynamel(), and the named(8) manual page.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también getmxrr(), gethostbyaddr(), gethostbyname(), gethostbynamel(), y named(8) en las páginas del manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to change the group of the file filename to group (specified by name or number).</seg></tuv>
      <tuv xml:lang="es"><seg>Trata de cambiar el grupo al que pertenece el fichero filename al grupo group.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the superuser may change the group of a file arbitrarily; other users may change the group of a file to any group of which that user is a member.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito; en otro caso devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>En Windows, no hace nada y devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chown() and chmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también chown() y chmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To ensure the expected operation, you need to prefix mode with a zero (0):</seg></tuv>
      <tuv xml:lang="es"><seg>Trata de cambiar los permisos del fichero especificado por filename a los permisos dados por mode.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mode parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuidado que mode no es asumido de forma automática como un valor octal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number 1 means that you grant execute rights, number 2 means that you make the file writeable, number 4 means that you make the file readable.</seg></tuv>
      <tuv xml:lang="es"><seg>Para asegurar que se hace la operación esperada necesitas anteponer un cero (0) como prefijo del parámetro mode:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also read more about modes on UNIX systems with 'man 1 chmod' and'man 2 chmod '.</seg></tuv>
      <tuv xml:lang="es"><seg>chmod( "/ somedir / somefile", 755); / / decimal; probablemente incorrecto chmod (" / somedir / somefile", 0755); / / octal; valor correcto de mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is probably not the same user you use for normal shell or FTP access.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chown() and chgrp().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también chown() y chgrp().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of rtrim().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena argumento sin los espacios sobrantes, incluyendo los saltos de línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to change the owner of the file filename to user user (specified by name or number).</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo el superusuario puede cambiar el propietario de un fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the superuser may change the owner of a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito; en otro caso devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también chown() y chmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$str .= chr( 27); / * add an escape character at the end of $str * / / * Often this is more useful * / $str = sprintf("The string ends in escape: %c", 27);</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena de un caracter que congiene el caracter especificado por ascii.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find an ASCII-table over here: http: / /www.asciitable.com.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de chr()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sprintf() with a format string of %c.</seg></tuv>
      <tuv xml:lang="es"><seg>$cad .= chr (27); / * añade un caracter de escape al final de $cad * / / * A veces esto es más útil * / $cad = sprintf ("La cadena termina en escape: %c", 27);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure..</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si todo fue bien, FALSE en caso de fallo..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Can be used to split a string into smaller chunks which is useful for e.g. converting base64_encode output to match RFC 2045 semantics.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede utilizar para trocear una cadena en pedazos más pequeños, lo que es útil, p.ej., para convertir la salida de la función base64_encode a la semántica del RFC 2045.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It inserts end (defaults to "\r\n") every chunklen characters (defaults to 76).</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta la cadena final cada tamatrozo (por defecto vale 76) caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the new string leaving the original string untouched.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la nueva cadena y deja intacta la original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. chunk_split() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de chunk_split()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg># format $data using RFC 2045 semantics $new_string = chunk_split( base64_encode($data));</seg></tuv>
      <tuv xml:lang="es"><seg># formatear $datos usando la semántica del RFC 2045 $nueva_cad = chunk_split (base64_encode($datos));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), split() wordwrap() and RFC 2045.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se añadió en la 3.0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, in certain cases, you may want to clear the cached information.</seg></tuv>
      <tuv xml:lang="es"><seg>Por lo tanto, el resultado de la última llamada a cualquiera de las funciones de estado (listadas abajo) es guardado para usarlo en la próxima llamada de este tipo empleando el mismo nombre de fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In these cases, you can use the clearstatcache() function to clear the information that PHP caches about a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si deseas forzar un nuevo chequeo del estado del fichero, por ejemplo si el fichero está siendo chequeado muchas veces y puede cambiar o desaparecer, usa esta función para borrar los resultados almacenados en memoria de la última llamada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function caches information about specific filenames, so you only need to call clearstatcache() if you are performing multiple operations on the same filename and require the information about that particular file to not be cached.</seg></tuv>
      <tuv xml:lang="es"><seg>Este valor sólo es cacheado durante el tiempo de vida de una petición simple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Affected functions include stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), and fileperms().</seg></tuv>
      <tuv xml:lang="es"><seg>Entre las funciones afectadas se incluyen stat(), lstat(), file_exists(), is_writeable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), y fileperms().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes the directory stream indicated by dir_handle.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra la secuencia de directorio determinada por dir_handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The stream must have previously been opened by opendir().</seg></tuv>
      <tuv xml:lang="es"><seg>La secuencia debe de haber sido abierta previamente con opendir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The use of closelog() is optional.</seg></tuv>
      <tuv xml:lang="es"><seg>closelog() cierra el descriptor que se está usando para escribir en el logger del sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also define_syslog_variables(), syslog() and openlog().</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de closelog() es opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>compact() takes a variable number of parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>compact() toma un número variable de parámetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each parameter can be either a string containing the name of the variable, or an array of variable names.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno puede ser tanto una cadena que contiene el nombre de la variable, como una matriz de nombres de variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array can contain other arrays of variable names inside it; compact() handles it recursively.</seg></tuv>
      <tuv xml:lang="es"><seg>La matriz puede contener otras matrices de nombres de variable en su interior; compact() los procesa recursivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For each of these, compact() For each of these, compact() looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key.</seg></tuv>
      <tuv xml:lang="es"><seg>Para cada uno de estos, compact() busca una variable con dicho nombre en la tabla de símbolos y la añade a la matriz de salida de modo que el nombre de la variable es la clave y el contenido de ésta es el valor para dicha clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In short, it does the opposite of extract().</seg></tuv>
      <tuv xml:lang="es"><seg>Para resumir, hace lo contrario de extract().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the output array with all the variables added to it.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la matriz de salida con las variables añadidas a la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any strings that are not set will simply be skipped.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de compact()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. compact() example</seg></tuv>
      <tuv xml:lang="es"><seg>Tras esto, $resultado valdrá array ("evento "= "SIGGRAPH", "ciudad" = "San Francisco", "estado "= "CA").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this, $result will be:</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: extract().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also extract().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias for com_set().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es un alias para com_propput().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the newly set value if succeeded, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es un alias para com_set().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if client disconnected.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el cliente está desconectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Connection Handling description in the Features chapter for a complete explanation.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea la descripción de la Gestión de la Conexión en el capítulo Características para una explicación completa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Miscellaneous functions</seg></tuv>
      <tuv xml:lang="es"><seg>Miscelánea de funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the connection status bitfield.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el estado de la conexión en un campo de bits.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el script ha alcanzado su time out.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. constant() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. constant() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the given string converted from one Cyrillic character set to another.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función convierte la cadena dada de un juego de caracteres Cirílico a otro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The from and to arguments are single characters that represent the source and target Cyrillic character sets.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos desde y hasta son caracteres sencillos que representan los juegos de caracteres Cirílicos fuente y destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The supported types are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los tipos soportados son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. copy() example</seg></tuv>
      <tuv xml:lang="es"><seg>Hace una copia de un fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si la copia tiene éxito, y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3.0, both source and dest may be URLs if the "fopen wrappers" have been enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de copy()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>if (!copy($file, $file .'.bak')) {print("failed to copy $file... br \n");}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also move_uploaded_file(), rename(), and the section of the manual about handling file uploads.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: rename().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>decbin</seg></tuv>
      <tuv xml:lang="es"><seg>DecBin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg parameter is in radians.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el coseno de arg en radianes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acos(), sin() tan() and deg2rad().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también sin() y tan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Counts the number of occurrences of every byte-value (0..255) in string and returns it in various ways.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuenta el número de apariciones de cada valor de byte (0..255) en cadena y lo devuelve de varias maneras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter Mode default to 0.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional modo vale por defecto 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Depending on mode count_chars() returns one of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Dependiendo de modo, count_chars() puede devolver:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 - an array with the byte-value as key and the frequency of every byte as value.</seg></tuv>
      <tuv xml:lang="es"><seg>0 - una matriz con el valor del byte como clave y la frecuencia de cada uno como valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 - same as 0 but only byte-values with a frequency greater than zero are listed.</seg></tuv>
      <tuv xml:lang="es"><seg>1 - como el 0, pero listando únicamente los valores de byte con frecuencia superior a cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 - same as 0 but only byte-values with a frequency equal to zero are listed.</seg></tuv>
      <tuv xml:lang="es"><seg>2 - como el 0, pero listando únicamente los valores de byte con frecuencia igual a 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3 - a string containing all used byte-values is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>3 - se devuelve una cadena que contiene todos los valores de byte utilizados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>4 - a string containing all not used byte-values is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>4 - se devuelve una cadena que contiene todos los valores de byte no utilizados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strpos() and substr_count().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se añadió en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If var is not an array, 1 will be returned (exception: count (NULL) equals 0).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de elementos en var, que típicamente es una matriz (porque cualquier otra cosa tendría sólo un elemento).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>count() may return 0 for a variable that isn't set, but it may also return 0 for a variable that has been initialized with an empty array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve 0 si la variable no tiene valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use isset() to test if a variable is set.</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. count() example</seg></tuv>
      <tuv xml:lang="es"><seg>count() puede devolver 0 para una variable sin valor, pero también puede devolver 0 para una variable ya inicializada pero con una matriz vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Utilice isset() para comprobar si una variable está inicializada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_array(), isset(), and strlen().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sizeof(), isset(), y is_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_add_annotation() adds a note with the lower left corner at (llx, lly) and the upper right corner at (urx, ury).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_add_annotation() añade una nota con la esquina inferior izquierda en (llx, lly) y la esquina superior derecha en (urx, ury).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El últomo parámetro opcional determina el tamaño de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, se usa la unidad por defecto especificada para la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas se miden en puntos postscript, despreciando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_add_outline() function adds a bookmark with text text that points to the current page.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_add_outline() añade una marca con el texto text que apunta a la página actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding a page outline</seg></tuv>
      <tuv xml:lang="es"><seg>Añadiendo un contorno de página</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $cpdf = cpdf_open( 0); cpdf_page_init($cpdf, 1, 0, 595, 842); cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1"); / /... / / some drawing / /... cpdf_finalize($cpdf); Header("Content-type: application / pdf"); cpdf_output_buffer($cpdf); cpdf_close($cpdf);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $cpdf = cpdf_open( 0); cpdf_page_init($cpdf, 1, 0, 595, 842); cpdf_add_outline($cpdf, 0, 0, 0, 1, "Página 1"); / /... / / Algún dibujo / /... cpdf_finalize($cpdf); Header("Content-type: application / pdf"); cpdf_output_buffer($cpdf); cpdf_close($cpdf);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_arc() function draws an arc with center at point (x-coor, y-coor) and radius radius, starting at angle start and ending at angle end.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_arc() dibuja un arco con el centro rn el punto (x-koor, y-koor) y radio radius, empezando en el ángulo start y terminando en el ángulo end.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opcional especifica el tamaño de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, se usa la unidad especificada por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas son medidas en puntos postscript,despreciando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_circle().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_circle().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_begin_text() function starts a text section.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_begin_text() La función cpdf_begin_text() comienza una sección de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It must be ended with cpdf_end_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Debe ser terminada con cpdf_end_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Text output</seg></tuv>
      <tuv xml:lang="es"><seg>Salida de texto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php cpdf_begin_text( $pdf); cpdf_set_font($pdf, 16, "Helvetica", "WinAnsiEncoding"); cpdf_text($pdf, 100, 100, "Some text"); cpdf_end_text($pdf)?</seg></tuv>
      <tuv xml:lang="es"><seg>?php cpdf_begin_text( $pdf); cpdf_set_font($pdf, 16, "Helvetica", "WinAnsiEncoding"); cpdf_text($pdf, 100, 100, "Algún texto"); cpdf_end_text($pdf)?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_end_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_end_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_circle() function draws a circle with center at point (x-coor, y-coor) and radius radius.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_circle() dibuja un círculo con centro en el punto (x-koor, y-koor) y radio radius.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opcional define el tamaño de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, se usa el valor por defecto para la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_arc().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_arc().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_clip() function clips all drawing to the current path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_clip() ajusta todos los dibujos al camino actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_close() function closes the pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_close() cierra un documento PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This should be the last function even after cpdf_finalize(), cpdf_output_buffer() and cpdf_save_to_file().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta debería ser la última operación incluso después de cpdf_finalize(), cpdf_output_buffer() y cpdf_save_to_file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_closepath_fill_stroke() function closes, fills the interior of the current path with the current fill color and draws current path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_closepath_fill_stroke() cierra, llena el interior del caminoa catual con el color actual de relleno y dibuja el camino actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_closepath(), cpdf_stroke(), cpdf_fill(), cpdf_setgray_fill(), cpdf_setgray(), cpdf_setrgbcolor_fill(), cpdf_setrgbcolor().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_closepath(), cpdf_stroke(), cpdf_fill(), cpdf_setgray_fill(), cpdf_setgray(), cpdf_setrgbcolor_fill(), cpdf_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_closepath() function closes the current path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_closepath() cierra el camino actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_closepath_stroke() function is a combination of cpdf_closepath() and cpdf_stroke().</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_closepath_stroke() es una combinación de cpdf_closepath() y cpdf_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then clears the path.</seg></tuv>
      <tuv xml:lang="es"><seg>Después limpia el camino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_closepath(), cpdf_stroke().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_closepath(), cpdf_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_continue_text() function outputs the string in text in the next line.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_continue_text() pone la cadena text en la línea siguiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_show_xy(), cpdf_text(), cpdf_set_leading(), cpdf_set_text_pos().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_show_xy(), cpdf_text(), cpdf_set_leading(), cpdf_set_text_pos().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_curveto() function draws a Bezier curve from the current point to the point (x3, y3) using (x1, y1) and (x2, y2) as control points.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_curveto() dibuja una curva Bezier desde el punto actual al punto (x3, y3) usando (x1, y1) y (x2, y2) como puntos de control.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, se usa la unidad especificada para la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas se miden en puntos postscript, despreciando la unidad en curso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_moveto(), cpdf_rmoveto(), cpdf_rlineto(), cpdf_lineto().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_moveto(), cpdf_rmoveto(), cpdf_rlineto(), cpdf_lineto().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_end_text() function ends a text section which was started with cpdf_begin_text().</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_end_text() finaliza unasección de texto que fue inicializada con cpdf_begin_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_begin_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_begin_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_fill() function fills the interior of the current path with the current fill color.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_fill() llena el interior del camino actual con el color alctual de relleno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_closepath(), cpdf_stroke(), cpdf_setgray_fill(), cpdf_setgray(), cpdf_setrgbcolor_fill(), cpdf_setrgbcolor().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_closepath(), cpdf_stroke(), cpdf_setgray_fill(), cpdf_setgray(), cpdf_setrgbcolor_fill(), cpdf_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_fill_stroke() function fills the interior of the current path with the current fill color and draws current path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_fill_stroke() llena el interior del camino actual con el color de relleno actual y dibuja el camino actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_finalize() function ends the document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_finalize() La función cpdf_finalize() finaliza un documento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You still have to call cpdf_close()</seg></tuv>
      <tuv xml:lang="es"><seg>Aún se tiene que llamar a cpdf_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_finalize_page() function ends the page with page number page number.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_finalize_page() finaliza una página con número de página page number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only for saving memory.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es sólo para ahorrar memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A finalized page takes less memory but cannot be modified anymore.</seg></tuv>
      <tuv xml:lang="es"><seg>Una página terminada ocupa menos memoria pero no puede volver a ser modificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_page_init().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_page_init().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_global_set_document_limits() function sets several document limits.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_global_set_document_limits() define varios límites del documento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function has to be called before cpdf_open() to take effect.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función debe ser llamada antes de cpdf_open() para que haga efecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It sets the limits for any document open afterwards.</seg></tuv>
      <tuv xml:lang="es"><seg>Ello define los límites de cualquier documento abierto con anterioridad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_import_jpeg() function opens an image stored in the file with the name file name.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_import_jpeg() abre una imagen almacenada en el fichero de nombre file name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format of the image has to be jpeg.</seg></tuv>
      <tuv xml:lang="es"><seg>El formato de la imagen debe ser JPEG.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The image is placed on the current page at position (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La imagen es situada en la página actual en la posición (x-koor, y-koor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The image is rotated by angle degrees.</seg></tuv>
      <tuv xml:lang="es"><seg>La imagen es rotada angle grados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opcional determina el tamaño de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_place_inline_image().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_place_inline_image(),</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_lineto() function draws a line from the current point to the point with coordinates (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_lineto() dibuja una línea desde el punto actual al punto con coordenadas (x-koor, y-koor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, se usa el valor especificado para la página por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_moveto(), cpdf_rmoveto(), cpdf_curveto().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_moveto(), cpdf_rmoveto(), cpdf_curveto().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_moveto() function set the current point to the coordinates x-coor and y-coor.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_moveto() pone el punto actual en las coordenadas x-koor y y-koor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opcional determina la longitud de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, la unidad por defecto será la especificada para la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas se medirán en puntos postscript despreciando la unidad en curso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_open() function opens a new pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>LA función cpdf_open() abre un documento PDF nuevo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first parameter turns document compression on if it is unequal to 0.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer parámetro activa la compresión del documento si no es igual a 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second optional parameter sets the file in which the document is written.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, opcional, es el fichero en el que el documento es escrito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is omitted the document is created in memory and can either be written into a file with the cpdf_save_to_file() or written to standard output with cpdf_output_buffer().</seg></tuv>
      <tuv xml:lang="es"><seg>Si es omitido, el documento es creado en memoria y puede ser escrito en un fichero mediante la función cpdf_save_to_file() o escrito por la salida estándar con cpdf_output_buffer().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value will be needed in further versions of ClibPDF as the first parameter in all other functions which are writing to the pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de retorno será necesario en nuevas versiones de ClibPDF como el primer parámetro en todas las demás funciones que escriben en el documento PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ClibPDF library takes the filename "-" as a synonym for stdout.</seg></tuv>
      <tuv xml:lang="es"><seg>La librería ClibPDF toma el nombre de fichero "-" como sinónimo de stdout (salida estándar).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP is compiled as an apache module this will not work because the way ClibPDF outputs to stdout does not work with apache.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se compila PHP como módulo de apache esto no funcionará porque la manera en que ClibPDF direcciona a la salida estándar no funciona con apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can solve this problem by skipping the filename and using cpdf_output_buffer() to output the pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>Usted puede solucionar este problema evitando el enobre de fichero y usando cpdf_output_buffer() para la salida de documentos PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_close(), cpdf_output_buffer().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_close(), cpdf_output_buffer().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_output_buffer() The cpdf_output_buffer() function outputs the pdf document to stdout.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_output_buffer() La función cpdf_output_buffer() muestra el documento PDF por la salida estándar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The document has to be created in memory which is the case if cpdf_open() has been called with no filename parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>El documento debe ser creado en memoria, que es el caso de la función cpdf_open() cuando ha sido llamada sin parámetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_page_init() function starts a new page with height height and width width.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_page_init() crea una nueva página de altura height y profundidad width.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The page has number page number and orientation orientation. orientation can be 0 for portrait and 1 for landscape.</seg></tuv>
      <tuv xml:lang="es"><seg>La página tiene el número page number y orientación orientation. orientation puede ser 0 para retrato y 1 para paisaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last optional parameter unit sets the unit for the coordinate system.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opcional unit define la unidad del sistema de coordenadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value should be the number of postscript points per unit.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor debería ser el número de puntos postscript por unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since one inch is equal to 72 points, a value of 72 would set the unit to one inch.</seg></tuv>
      <tuv xml:lang="es"><seg>Como el valor de una pulgada el igual a 72 puntos, un valor de 72 sería la unidad para una pulgada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is also 72.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es 72.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_current_page().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_current_page().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_place_inline_image() function places an image created with the php image functions on the page at position (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_place_inline_image() situa una imagen creada con las funciones de imagenes de PHP en la posición de la página (x-koor, y-koor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The image can be scaled at the same time.</seg></tuv>
      <tuv xml:lang="es"><seg>La imagen puede ser escalada al mismo tiempo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas son medidas en puntos postscript, descartando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_import_jpeg().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_import_jpeg(),</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_rect() function draws a rectangle with its lower left corner at point (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_rect() dibuja un rectángulo con su esquina inferior izquierda en el punto (x-koor, y-koor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This width is set to width.</seg></tuv>
      <tuv xml:lang="es"><seg>La anchura es widgth.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This height is set to height.</seg></tuv>
      <tuv xml:lang="es"><seg>La altura es height.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_restore() function restores the environment saved with cpdf_save().</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_restore() restaura el entorno salvado con cpdf_save().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It works like the postscript command grestore.</seg></tuv>
      <tuv xml:lang="es"><seg>Funciona como el comando grestore de postscript.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Very useful if you want to translate or rotate an object without effecting other objects.</seg></tuv>
      <tuv xml:lang="es"><seg>Muy útil si se quiere trasladar o rotar un objeto sin afectar ortros objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Save / Restore</seg></tuv>
      <tuv xml:lang="es"><seg>Salvar / Restaurar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php cpdf_save( $pdf); / / do all kinds of rotations, transformations,... cpdf_restore($pdf)?</seg></tuv>
      <tuv xml:lang="es"><seg>?php cpdf_save( $pdf); / / hacer todo tipo de rotaciones, transformaciones,... cpdf_restore($pdf)?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_save().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_save().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_rlineto() function draws a line from the current point to the relative point with coordinates (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_rlineto() dibuja una línea desde el punto actual al punto relativo con coordenadas (x-koor, y-koor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_rmoveto() function set the current point relative to the coordinates x-coor and y-coor.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_rmoveto() pone el punto actual relativo a las coordenadas x-koor y y-koor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opciona determina la loingitud de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas se medirán en puntos postscript, despreciando la unidad en curso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_moveto().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_moveto().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_rotate() function set the rotation in degrees to angle.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_rotate() define la rotación en angle grados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_save() function saves the current environment.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_save() salva el entorno actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It works like the postscript command gsave.</seg></tuv>
      <tuv xml:lang="es"><seg>Funciona como el comando gsave de postscript.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Very useful if you want to translate or rotate an object without effecting other objects.</seg></tuv>
      <tuv xml:lang="es"><seg>Muy útil si se quiere trasladar o trotar un objeto sin afetar a los demás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_restore().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_restore().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_save_to_file() function outputs the pdf document into a file if it has been created in memory.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_save_to_file() La función cpdf_save_to_file() guarda el documento PDF en un fichero si este documeto ha sido creado en memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not needed if the pdf document has been open by specifying a filename as a parameter of cpdf_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no es necesaria si el documento PDF ha sido abierto mediante la especificación de un nombre de fichero en la función cpdf_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_output_buffer(), cpdf_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_output_buffer(), cpdf_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_scale() function set the scaling factor in both directions.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_scale() define el factor de escala en los dos sentidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_char_spacing() function sets the spacing between characters.</seg></tuv>
      <tuv xml:lang="es"><seg>LA función cpdf_set_char_spacing() define el espacio entre caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_word_spacing(), cpdf_set_leading().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_word_spacing(), cpdf_set_leading().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_creator() function sets the creator of a pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_creator() define el creador de un documento PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_subject(), cpdf_set_title(), cpdf_set_keywords().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_subject(), cpdf_set_title(), cpdf_set_keywords().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_current_page() function set the page on which all operations are performed.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_current_page() define la página en la que se van a realizar todas las operaciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One can switch between pages until a page is finished with cpdf_finalize_page().</seg></tuv>
      <tuv xml:lang="es"><seg>Uno puede cambiar entre páginas a menos que una página ha sido finalizada con cpdf_finalize_page().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_finalize_page().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_finalize_page().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setdash() function set the dash pattern white white units and black black units.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setdash() define el patrón de la raya white unidades blancas y black La función cpdf_setdash() define el patrón de la raya white unidades blancas y black unidades negras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If both are 0 a solid line is set.</seg></tuv>
      <tuv xml:lang="es"><seg>Si los dos son 0 se pone una línea sólida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setflat() function set the flatness to a value between 0 and 100.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setflat() pone la monotonía a un valor de entre 0 y 100.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_font() function sets the current font face, font size and encoding.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_font() define la fuente actual, el tamaño y la codificación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently only the standard postscript fonts are supported.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente solo son soportadas las fuentes estándar de postscript.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last parameter encoding can take the following values: "MacRomanEncoding", "MacExpertEncoding", "WinAnsiEncoding", and" NULL "." NULL "stands for the font's built-in encoding.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro encoding puede tomar los siguientes valores: "MacRomanEncoding", "MacExpertEncoding", "WinAnsiEncoding", y" NULL "." NULL "es para el cifrado incluído en la fuente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the ClibPDF Manual for more information, especially how to support asian fonts.</seg></tuv>
      <tuv xml:lang="es"><seg>Para mas información vea el manual de ClibPDF, especialmente para cómo soportar las fuentes asiáticas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setgray_fill() function sets the current gray value to fill a path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setgray_fill() define el valor de gris actual para rellelanr un camino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_setrgbcolor_fill().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_setrgbcolor_fill().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setgray() function sets the current drawing and filling color to the given gray value.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setgray_stroke() pone el color de relleno y dibujo al color gris dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_setrgbcolor_stroke(), cpdf_setrgbcolor_fill().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_setrgbcolor_stroke(), cpdf_setrgbcolor_fill().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setgray_stroke() function sets the current drawing color to the given gray value.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setgray_stroke() pone el color de dibujo actual al valor de gris dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_setrgbcolor_stroke().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_setrgbcolor_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_horiz_scaling() function sets the horizontal scaling to scale percent.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_horiz_scaling() define la escala horizontal al scale por ciento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_keywords() function sets the keywords of a pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_keywords() define las palabras clave de un documento PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_title(), cpdf_set_creator(), cpdf_set_subject().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_title(), cpdf_set_creator(), cpdf_set_subject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_leading() function sets the distance between text lines.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_leading() La función cpdf_set_leading() define la distancia entre las líneas de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will be used if text is output by cpdf_continue_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Esto se usará si el texto es la salida de cpdf_continue_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_continue_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_continue_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setlinecap() function set the linecap parameter between a value of 0 and 2.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setlinecap() La función cpdf_setlinecap() define el parámetro linecap entre los valores 0 y 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 = butt end, 1 = round, 2 = projecting square.</seg></tuv>
      <tuv xml:lang="es"><seg>0 = empalmar al final, 1 = redondear, 2 = esquina proyectada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setlinejoin() function set the linejoin parameter between a value of 0 and 2.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setlinejoin() La función cpdf_setlinejoin() define el parámetro entre un valor de 0 y 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 = miter, 1 = round, 2 = bevel.</seg></tuv>
      <tuv xml:lang="es"><seg>0 = ingletes, 1 = redondear, 2 = ángulo oblícuo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setlinewidth() function set the line width to width.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setlinewidth() define la preofundidad de la línea a width.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setmiterlimit() function set the miter limit to a value greater or equal than 1.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setmiterlimit() define el límite del inglete a un valor mayor o igual a 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_page_animation() function set the transition between following pages.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_page_animation() define la transición entre páginas que se siguen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of transition can be</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de transition puede ser</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 for none,</seg></tuv>
      <tuv xml:lang="es"><seg>0 para ninguno,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 for two lines sweeping across the screen reveal the page,</seg></tuv>
      <tuv xml:lang="es"><seg>1 para dos líneas que se barren a través de la pantalla, revelen la página,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 for multiple lines sweeping across the screen reveal the page,</seg></tuv>
      <tuv xml:lang="es"><seg>2 para múltiples líneas,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3 for a box reveals the page,</seg></tuv>
      <tuv xml:lang="es"><seg>3 para que una caja revele la página,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>4 for a single line sweeping across the screen reveals the page,</seg></tuv>
      <tuv xml:lang="es"><seg>4 para una única línea,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>5 for the old page dissolves to reveal the page,</seg></tuv>
      <tuv xml:lang="es"><seg>5 para que la página naterior se disipe para revelar la pagina,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>6 for the dissolve effect moves from one screen edge to another,</seg></tuv>
      <tuv xml:lang="es"><seg>6 para que el efecto de disolución se mueva de un extremop de la página al otro,</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>7 for the old page is simply replaced by the new page (default)</seg></tuv>
      <tuv xml:lang="es"><seg>7 para que la página antígua simplemente sea reemplazada por la nueva página (default)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of duration is the number of seconds between page flipping.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de duration es el número de segundos entre las páginas que se pasan.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setrgbcolor_fill() function sets the current rgb color value to fill a path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setrgbcolor_fill() pone el color rgb actual para rellenar un camino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_setrgbcolor_stroke(), cpdf_setrgbcolor().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_setrgbcolor_stroke(), cpdf_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setrgbcolor() function sets the current drawing and filling color to the given rgb color value.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setrgbcolor_stroke() pone el color de relleno y dibujo actual al color rgb dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_setrgbcolor_stroke() function sets the current drawing color to the given rgb color value.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_setrgbcolor_stroke() pone el color de dibujo actual al valor de color rgb dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_setrgbcolor_fill(), cpdf_setrgbcolor().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_setrgbcolor_fill(), cpdf_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_subject() function sets the subject of a pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_subject() define el asunto de un documento PDF</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_title(), cpdf_set_creator(), cpdf_set_keywords().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_title(), cpdf_set_creator(), cpdf_set_keywords().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_text_matrix() function sets a matrix which describes a transformation applied on the current text font.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_text_matrix() define una matriz que describe una transformación aplicada a la fuente actual de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_text_pos() function sets the position of text for the next cpdf_show() function call.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_text_pos() define la posición del texto para la siguiente llamada a cpdf_show().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro opcional mode determina la longitud de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo, las coordenadas son medidas en puntos postscript, despreciando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_show(), cpdf_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_show(), cpdf_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_text_rendering() function determines how text is rendered.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_text_rendering() determina cómo es presentado el texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The possible values for mode are 0=fill text, 1=stroke text, 2=fill and stroke text, 3=invisible, 4=fill text and add it to clipping path, 5=stroke text and add it to clipping path, 6=fill and stroke text and add it to clipping path, 7=add it to clipping path.</seg></tuv>
      <tuv xml:lang="es"><seg>Los posibles valores para mode son 0=llenar texto, 1=poner texto, 2=llenar y poner texto, 3=invisible, 4=llenar texto y añadirlo al camino de corte, 5=poner texto y añadirlo al camino de corte, 6=llenar y poner texto y añadirlo al camino de corte, 7=añadirlo al camino de corte</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_text_rise() function sets the text rising to value units.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_text_rise() define la elevación del texto a value unidades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_title() function sets the title of a pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_title() define el título de un documento PDF</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_subject(), cpdf_set_creator(), cpdf_set_keywords().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_subject(), cpdf_set_creator(), cpdf_set_keywords().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_word_spacing() function sets the spacing between words.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_word_spacing() especifica el espacio entre palabras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_char_spacing(), cpdf_set_leading().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_char_spacing(), cpdf_set_leading().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_show() function outputs the string in text at the current position.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_show() muestra la cadena text en la posixción actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_text(), cpdf_begin_text(), cpdf_end_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_text(), cpdf_begin_text(), cpdf_end_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_show_xy() function outputs the string text at position with coordinates (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_show_xy() muestra la cadena text en la posición con coordenadas (x-coor, y-coor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas son medidas en puntos postscript, despreciando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function cpdf_show_xy() is identical to cpdf_text() without the optional parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_show_xy() es idéntica a cpdf_text() sin el parámetro opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_text().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_stringwidth() function returns the width of the string in text.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_stringwidth() devuelve la anchura de la cadena text.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It requires a font to be set before.</seg></tuv>
      <tuv xml:lang="es"><seg>Requiere haber definido antes una fuente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_set_font().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_set_font().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_stroke() function draws a line along current path.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_stroke() dibuja una línea a lo largo del camino actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_closepath(), cpdf_closepath_stroke().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_closepath(), cpdf_closepath_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_text() function outputs the string text at position with coordinates (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_text() muestra la cadena text en la posición de coordenadas (x-coor, y-coor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter mode determines the unit length.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámero opcional determina la longitud de la unidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas son medidas en puntos postscript despreciando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter orientation is the rotation of the text in degree.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional orientation es la rotación del texto en grados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter alignmode determines how the text is aligned.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional alignmode determina cómo está alineado el texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the ClibPDF documentation for possible values.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea la documentación de ClibPDF para los posibles valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cpdf_show_xy().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cpdf_show_xy().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_translate() function set the origin of coordinate system to the point (x-coor, y-coor).</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_translate() define el sistema origen de coordenadas en el punto (x-coor, y-coor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it 's 0 or omitted the default unit as specified for the page is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es 0 o se omite, se usa la unidad por defecto especificada en la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the coordinates are measured in postscript points disregarding the current unit.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo las coordenadas son medidas en puntos postscript, depreciando la unidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Genera el polinomio de comprobación de reduncancia cíclica de 32 bits de cad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Se suele utilizar para validad la integridad de los datos transmitidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $checksum = crc32( "The quick brown fox jumped over the lazy dog ."); printf("%u\n", $checksum);?</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: md5()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function process( $var1, $var2, $farr) {for ($f=0; $f count($farr); $f++) echo $farr[$f]($var1,$var2) ."\n";} / / create a bunch of math functions $f1 = 'if ($a =0) {return "b*a^2 = ".$b*sqrt($a);} else {return false ;}'; $f2 = "return \"min(b^2+a, a^2,b) = \".min(\$a*\$a+\$b,\$b*\$b+\$a) ;"; $f3 = 'if ($a 0 $b != 0) {return "ln(a) / b = ".log($a) / $b;} else {return false; }'; $farr = array (create_function('$x,$y', 'return "some trig: ".(sin($x) + $x*cos($y)) ;'), create_function('$x,$y', 'return "a hypotenuse: ".sqrt($x*$x + $y*$y) ;'), create_function('$a,$b', $f1), create_function('$a,$b', $f2), create_function('$a,$b', $f3)); echo "\nUsing the first array of anonymous functions\n"; echo "parameters:</seg></tuv>
      <tuv xml:lang="es"><seg>function process( $var1, $var2, $farr) {for ($f=0; $f count($farr); $f++) echo $farr[$f]($var1,$var2) ."\n";} / / create a bunch of math functions $f1 = 'if ($a =0) {return "b*a^2 = ".$b*sqrt($a);} else {return false ;}'; $f2 = "return \"min(b^2+a, a^2,b) = \".min(\$a*\$a+\$b,\$b*\$b+\$a) ;"; $f3 = 'if ($a 0 $b != 0) {return "ln(a) / b = ".log($a) / $b;} else {return false ;}'; $farr = array (create_function('$x,$y', 'return "some trig: ".(sin($x) + $x*cos($y)) ;'), create_function('$x,$y', 'return "a hypotenuse: ".sqrt($x*$x + $y*$y) ;'), create_function('$a,$b', $f1), create_function('$a,$b', $f2), create_function('$a,$b', $f3)); echo "\nUsing the first array of anonymous functions\n"; echo "parameters:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$av = array( "the ","a" ,"that ","this "); array_walk($av, create_function( '$v,$k' ,'$v = $v ."mango" ;')); print_r($av); / / for PHP 3 use var_dump() / / outputs: / / Array / / (/ / [0] = the mango / / [1] = a mango / / [2] = that mango / / [3] = this mango / /) / / an array of strings ordered from shorter to longer $sv = array("small" ,"larger" ,"a big string" ,"it is a string thing"); print_r($sv); / / outputs: / / Array / / (/ / [0] = small / / [1] = larger / / [2] = a big string / / [3] = it is a string thing / /) / / sort it from longer to shorter usort($sv, create_function('$a,$b' ,'return strlen($b) - strlen($a) ;')); print_r($sv); / / outputs: / / Array / / (/ / [0] = it is a string thing / / [1] = a big string / / [2] = larger / / [3] = small / /)</seg></tuv>
      <tuv xml:lang="es"><seg>$av = array( "the ","a" ,"that ","this "); array_walk($av, create_function( '$v,$k' ,'$v = $v ."mango" ;')); print_r($av); / / for PHP3 use var_dump() / / outputs: / / Array / / (/ / [0] = the mango / / [1] = a mango / / [2] = that mango / / [3] = this mango / /) / / an array of strings ordered from shorter to longer $sv = array("small" ,"larger" ,"a big string" ,"it is a string thing"); print_r($sv); / / outputs: / / Array / / (/ / [0] = small / / [1] = larger / / [2] = a big string / / [3] = it is a string thing / /) / / sort it from longer to shorter usort($sv, create_function('$a,$b' ,'return strlen($b) - strlen($a) ;')); print_r($sv); / / outputs: / / Array / / (/ / [0] = it is a string thing / / [1] = a big string / / [2] = larger / / [3] = small / /)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>crypt() will return an encrypted string using the standard Unix DES -based encryption algorithm or alternative algorithms that may be available on the system.</seg></tuv>
      <tuv xml:lang="es"><seg>crypt() encriptará una cadena utilizando el método estándar de encriptación del Unix DES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments are a string to be encrypted and an optional salt string to base the encryption on.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos son una cadena a encriptar y una cadena semilla de 2 caracteres en la que basar la encriptación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Unix man page for your crypt function for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea la página de manual de Unix sobre crypt para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the salt argument is not provided, one will be randomly generated by PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el argumento de semilla no se proporciona, será generado aleatoriamente por el PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some operating systems support more than one type of encryption.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunos sistemas operativos soportan más de un tipo de encriptación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The encryption type is triggered by the salt argument.</seg></tuv>
      <tuv xml:lang="es"><seg>De hecho, algunas veces la encriptación estándar DES es sustituída por un algoritmo de encriptación basado en MD5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At install time, PHP determines the capabilities of the crypt function and will accept salts for other encryption types.</seg></tuv>
      <tuv xml:lang="es"><seg>El tipo de encriptación es disparado por el argumento semilla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no salt is provided, PHP will auto-generate a standard two character salt by default, unless the default encryption type on the system is MD5, in which case a random MD5-compatible salt is generated.</seg></tuv>
      <tuv xml:lang="es"><seg>En tiempo de instalación, el PHP determina la capacidad de la función de encriptación y aceptará semillas para otros tipos de encriptación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using the supplied salt, you should be aware that the salt is generated once.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se proporciona la semilla, el PHP intentará generar una semilla estándar DES de 2 caraceres por defecto, excepto si el tipo de encriptación estándar del sistema es el MD5, en cuyo caso se generará una semilla aleatoria compatible con MD5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The standard DES-based encryption crypt() returns the salt as the first two characters of the output.</seg></tuv>
      <tuv xml:lang="es"><seg>El PHP fija una constante llamada CRYPT_SALT_LENGTH que le especifica si su sistema soporta una semilla de 2 caracteres o si se debe usar la semilla de 12 caracteres del NDS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also only uses the first eight characters of str, so longer strings that start with the same eight characters will generate the same result (when the same salt is used).</seg></tuv>
      <tuv xml:lang="es"><seg>La función estándar de encriptación crypt() contiene la semilla como los dos primeros caracteres de la salida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On systems where the crypt() function supports multiple encryption types, the following constants are set to 0 or 1 depending on whether the given type is available:</seg></tuv>
      <tuv xml:lang="es"><seg>En los sistemas en los que la función crypt() soporta múltiples tipos de encriptación, las siguienes constantes son fijadas a 0 ó 1 dependiendo de si está disponible el tipo dado:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_STD_DES - Standard DES-based encryption with a two character salt</seg></tuv>
      <tuv xml:lang="es"><seg>CRYPT_STD_DES - Encriptación DES estándar con semilla de 2 caracteres</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_EXT_DES - Extended DES-based encryption with a nine character salt</seg></tuv>
      <tuv xml:lang="es"><seg>CRYPT_EXT_DES - Encriptación DES extendida con semilla de 9 caracteres</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_MD5 - MD5 encryption with a twelve character salt starting with $1$</seg></tuv>
      <tuv xml:lang="es"><seg>CRYPT_MD5 - Encriptación MD5 con semilla de 12 caracteres y comenzando por $1$</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>CRYPT_BLOWFISH - Encriptación DES extendida con semilla de 16 caracteres y comenzando por $2$</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. crypt() examples</seg></tuv>
      <tuv xml:lang="es"><seg>No hay función de desencriptado porque crypt() utiliza un algoritmo de una sola vía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also md5() and the Mcrypt extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: md5().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Database (dbm-style) abstraction layer functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de la capa de abstraccion de bases de datos (dbm-style)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function closes a CURL session and frees all resources.</seg></tuv>
      <tuv xml:lang="es"><seg>This functions closes a CURL session and frees all ressources.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its purpose is simply to execute the predefined CURL session (given by the ch).</seg></tuv>
      <tuv xml:lang="es"><seg>This function is should be called after you initialize a CURL session and all the options for the session are set.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $ch = curl_init(); curl_setopt ($ch, CURLOPT_URL, "http: / /www.example.com / "); curl_setopt ($ch, CURLOPT_HEADER, 0); curl_exec ($ch); curl_close ($ch);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $ch = curl_init(); curl_setopt ($ch, CURLOPT_URL, "http: / /www.zend.com / "); curl_setopt ($ch, CURLOPT_HEADER, 0); curl_exec ($ch); curl_close ($ch);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set this option to a non-zero value if you don 't want PHP to display a progress meter for CURL transfers.</seg></tuv>
      <tuv xml:lang="es"><seg>Set this option to a non-zero value if you don 't want PHP to display a progress meter for CURL transfers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default behavior is to return the page normally, ignoring the code.</seg></tuv>
      <tuv xml:lang="es"><seg>The default behaviour is to return the page normally, ignoring the code.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This POST is a normal application / x-www-form-urlencoded kind, most commonly used by HTML forms.</seg></tuv>
      <tuv xml:lang="es"><seg>This POST is a normal application / x-www-from-urlencoded kind, most commonly used by HTML forms.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set this option to a non-zero value to HTTP PUT a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Set this option a non-zero value to HTTP PUT a file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pass a long as a parameter that contains the maximum time, in seconds, that you 'll allow the CURL functions to take.</seg></tuv>
      <tuv xml:lang="es"><seg>Pass a long as a parameter that contains the maximum time, in seconds, that you 'll allow the curl functions to take.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It should be in the "X-Y" format, where X or Y may be left out.</seg></tuv>
      <tuv xml:lang="es"><seg>Pass a string formatted in the [username] :[password] manner, for PHP to use for the connection. connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pass a string containing the value which will be used to get the IP address to use for the ftp "POST" instruction.</seg></tuv>
      <tuv xml:lang="es"><seg>The HTTP transfers also support several intervals, seperated with commas as in X-Y,N-M.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cookie file can be in Netscape format, or just plain HTTP-style headers dumped into a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Pass a string containing the which will be used to get the IP address to use for the ftp "PORT" instruction.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Anyone of the following strings (in order from least powerful, to most powerful): 'clear', 'safe', 'confidential', 'private '.</seg></tuv>
      <tuv xml:lang="es"><seg>Pass a string containing the name of the file containing the cookiee data.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pass an array of FTP commands to perform on the server prior to the FTP request.</seg></tuv>
      <tuv xml:lang="es"><seg>This is useful for doing DELETE or another, more obscure, HTTP request.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CURLOPT_POSTQUOTE:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cybercash payment functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de pago electrónico</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every array has an internal pointer to its "current" element, which is initialized to the first element inserted into the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada matriz tiene un puntero interno al elemento "actual", que se inicializa al primer elemento insertado en la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current() function simply returns the array element that's currently being pointed by the internal pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>La función current() simplemente devuelve el elemento de la tabla al que apunta el puntero interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not move the pointer in any way.</seg></tuv>
      <tuv xml:lang="es"><seg>No mueve el puntero de ninguna manera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the internal pointer points beyond the end of the elements list, current() returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el puntero interno apunta fuera del final de la lista de elementos, current() devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array contains empty elements (0 or "", the empty string) then this function will return FALSE for these elements as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la matriz contiene elementos vacíos (0 ó "", la cadena vacía) esta función devolverá FALSE también para dichos elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes it impossible to determine if you are really at the end of the list in such an array using current().</seg></tuv>
      <tuv xml:lang="es"><seg>Esto hace imposible determinar si se está realmente al final de la lista en tales matrices usando current().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To properly traverse an array that may contain empty elements, use the each() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para recorrer adecuadamente una matriz que pueda contener elementos vacíos, utilice la función each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function returns an associative array with the elements "errcode" and, if "errcode "is FALSE, "outbuff" (string), "outLth "(long) and "macbuff" (string).</seg></tuv>
      <tuv xml:lang="es"><seg>La función devuelve un array asociativo con los elementos "errcode" y, si "errcode "es FALSE, "outbuff" (string), "outLth "(long) y "macbuff" (string).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On windows this range is limited from 01-01-1970 to 19-01-2038.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena formateada de acuerdo con la cadena de formato dada, utilizando el valor de timestamp dado o la hora local actual si no hay parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, some databases have functions to convert their date formats into timestamps (such as MySQL's UNIX_TIMESTAMP function).</seg></tuv>
      <tuv xml:lang="es"><seg>Se reconocen los siguientes caracteres en la cadena de formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>format character</seg></tuv>
      <tuv xml:lang="es"><seg>a - "am" o "pm "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>01 to 31</seg></tuv>
      <tuv xml:lang="es"><seg>A - "AM" o "PM "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mon through Sun</seg></tuv>
      <tuv xml:lang="es"><seg>d - día del mes, dos dígitos con cero a la izquierda; es decir, de "01 "a "31"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>January through December</seg></tuv>
      <tuv xml:lang="es"><seg>D - día de la semana, en texto, con tres letras; por ejemplo, "Fri "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 through 12</seg></tuv>
      <tuv xml:lang="es"><seg>F - mes, en texto, completo; por ejemplo, "January "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 through 23</seg></tuv>
      <tuv xml:lang="es"><seg>h - hora, de "01" a "12 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>01 through 12</seg></tuv>
      <tuv xml:lang="es"><seg>H - hora, de "00" a "23 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>00 through 23</seg></tuv>
      <tuv xml:lang="es"><seg>g - hour, sin ceros, de "1" a "12 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 if Daylight Savings Time, 0 otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>G - hour, sin ceros; de "0 "a "23"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sunday through Saturday</seg></tuv>
      <tuv xml:lang="es"><seg>i - minutos; de "00 "a "59"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 if it is a leap year, 0 otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>j - día del mes sin cero inicial; de "1 "a "31"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>01 through 12</seg></tuv>
      <tuv xml:lang="es"><seg>l ('L 'minúscula) - día de la semana, en texto, completo; por ejemplo, "Friday "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Jan through Dec</seg></tuv>
      <tuv xml:lang="es"><seg>L - "1" or "0 ", según si el año es bisiesto o no</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 through 12</seg></tuv>
      <tuv xml:lang="es"><seg>m - mes; de "01 "a "12"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: +0200</seg></tuv>
      <tuv xml:lang="es"><seg>n - mes sin cero inicial; de "1 "a "12"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>st, nd, rd or th.</seg></tuv>
      <tuv xml:lang="es"><seg>M - mes, en texto, 3 letras; por ejemplo, "Jan "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also time()</seg></tuv>
      <tuv xml:lang="es"><seg>s - segundos; de "00 "a "59"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 (for Sunday) through 6 (for Saturday)</seg></tuv>
      <tuv xml:lang="es"><seg>S - sufijo ordinal en inglés, en texto, 2 caracteres; por ejemplo, "th", "nd "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example:</seg></tuv>
      <tuv xml:lang="es"><seg>t - número de días del mes dado; de "28 "a "31"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples:</seg></tuv>
      <tuv xml:lang="es"><seg>U - segundos desde el valor de 'epoch'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The offset for timezones west of UTC is always negative, and for those east of UTC is always positive.</seg></tuv>
      <tuv xml:lang="es"><seg>w - día de la semana, en número, de "0" (domingo) a "6 "(sábado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Z format will always return 0 when using gmdate().</seg></tuv>
      <tuv xml:lang="es"><seg>Y - año, cuatro cifras; por ejemplo, "1999 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Prints something like:</seg></tuv>
      <tuv xml:lang="es"><seg>y - año, dos cifras; por ejemplo, "99 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Wednesday 15th of January 2003 05:51:38 AM echo date ("l dS of F Y h:i:s A"); / / Prints:</seg></tuv>
      <tuv xml:lang="es"><seg>z - día del año; de "0 "a "365"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can prevent a recognized character in the format string from being expanded by escaping it with a preceding backslash.</seg></tuv>
      <tuv xml:lang="es"><seg>Z - diferencia horaria en segundos (de "-43200 "a "43200")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / prints something like:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de date()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is possible to use date() and mktime() together to find dates in the future or the past.</seg></tuv>
      <tuv xml:lang="es"><seg>print (date("l dS of F Y h:i:s A")); print ("July 1, 2000 is on a ". date("l", mktime(0,0,0,7,1,2000)));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $tomorrow = mktime (0,0,0,date("m") ,date("d")+1,date("Y")); $lastmonth = mktime (0,0,0,date("m")-1,date("d"), date("Y")); $nextyear = mktime (0,0,0,date("m"), date("d"), date("Y")+1);?</seg></tuv>
      <tuv xml:lang="es"><seg>Es posible usar date() y mktime() juntas para obtener fechas futuras o pasadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be more reliable than simply adding or subtracting the number of seconds in a day or month to a timestamp because of daylight savings time.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples of date() Some examples of date() formatting.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de date() y mktime()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When escaping, be sure to use single quotes to prevent characters like \n from becoming newlines.</seg></tuv>
      <tuv xml:lang="es"><seg>$tomorrow = mktime( 0,0,0,date("m") ,date("d")+1,date("Y")); $lastmonth = mktime(0,0,0,date("m")-1,date("d"), date("Y")); $nextyear = mktime(0,0,0,date("m"), date("d"), date("Y")+1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Assuming today is:</seg></tuv>
      <tuv xml:lang="es"><seg>Para dar formato a fechas en otros idiomas, se deben usar las funciones setlocale() y strftime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getlastmod(), gmdate(), mktime(), strftime() and time().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gmdate() y mktime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_close() closes the established database and frees all resources specified by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_close() cierra la conexion con una base de datos previamente abierta y libera todos los recursos especificados por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>handle is a database handle returned by dba_open().</seg></tuv>
      <tuv xml:lang="es"><seg>handle es un manejador (handle) de la base de datos devuelto por dba_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_close() does not return any value.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_close() no devuelve ningun valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_open() and dba_popen()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_open() dba_popen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_delete() deletes the entry specified by key from the database specified with handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_delete() borra la entrada especificada por key de la base de datos especificada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>key is the key of the entry which is deleted.</seg></tuv>
      <tuv xml:lang="es"><seg>key es la clave de la entrada que es borrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_delete() returns TRUE or FALSE, if the entry is deleted or not deleted, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_delete() devuelve TRUE o FALSE, si la entrada es borrada o no, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_exists(), dba_fetch(), dba_insert(), and dba_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_exists() dba_fetch() dba_insert() dba_replace()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_exists() checks whether the specified key exists in the database specified by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_exists() comprueba si la clave key existe en la base de datos especificada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Key is the key the check is performed for.</seg></tuv>
      <tuv xml:lang="es"><seg>key es la clave para la que se realiza la comprobacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handle is a database handle returned by dba_open().</seg></tuv>
      <tuv xml:lang="es"><seg>handle es un manejador (handle) de la base de datos devuelto por dba_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_exists() returns TRUE or FALSE, if the key is found or not found, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_exists() devuelve TRUE o FALSE, si la clave es hallada o no, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_fetch(), dba_delete(), dba_insert(), and dba_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_fetch() dba_delete() dba_insert() dba_replace()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Key is the key the data is specified by.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_fetch() extrae los datos especificados por la clave key de la base de datos determinada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Skip is the number of key-value pairs to ignore when using cdb databases.</seg></tuv>
      <tuv xml:lang="es"><seg>key es la clave de la entrada de los datos que queremos extraer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_exists(), dba_delete(), dba_insert(), and dba_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>dba_fetch() devuelve la cadena asociada o FALSE, si el par key / data es hallado o no, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The skip parameter is available since PHP 4.3 to support cdb 's capability of multiple keys having the same name.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_exists() dba_delete() dba_insert() dba_replace()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_firstkey() returns the first key of the database specified by handle and resets the internal key pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_firstkey() devuelve la primera clave de la base de datos especificada por handle y resetea el puntero interno de claves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This permits a linear search through the whole database.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto permite una busqueda lineal por toda la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_firstkey() returns the key or FALSE depending on whether it succeeds or fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_firstkey() devuelve la clave o FALSE en funcion de si tiene exito o falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_nextkey() and example 2 in the DBA examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_nextkey()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_insert() inserts the entry described with key and value into the database specified by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_insert() inserta la entrada descrita con key y value dentro de la base de datos especificada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It fails, if an entry with the same key already exists.</seg></tuv>
      <tuv xml:lang="es"><seg>Fallara si ya existe una entrada con el mismo parametro key.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>key is the key of the entry to be inserted.</seg></tuv>
      <tuv xml:lang="es"><seg>key es la clave de la entrada a ser insertada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>value is the value to be inserted.</seg></tuv>
      <tuv xml:lang="es"><seg>value es el valor a ser insertado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_insert() returns TRUE or FALSE, depending on whether it succeeds of fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_insert() devuelve TRUE o FALSE, en funcion de si tiene exito o falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_exists() dba_delete() dba_fetch() dba_replace()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_exists() dba_delete() dba_fetch() dba_replace()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_nextkey() returns the next key of the database specified by handle and advances the internal key pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_nextkey() devuelve la siguiente clave de la base de datos especificada por handle e incrementa el puntero de claves interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_nextkey() returns the key or FALSE depending on whether it succeeds or fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_nextkey() devuelve la clave o FALSE dependiendo de si tiene exito o falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_firstkey() and example 2 in the DBA examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_firstkey()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use "l" to lock the database with an .lck file or "d "to lock the databasefile itself.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_open() establece una instancia para path con mode usando handler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to test the access and do not want to wait for the lock you can add "t" as third character.</seg></tuv>
      <tuv xml:lang="es"><seg>path normalmente es el "path" en el sistema de ficheros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When none of "d", "l" or "-" is used dba will lock on the database file as it would with "d ".</seg></tuv>
      <tuv xml:lang="es"><seg>mode es "r" para acceso de lectura, "w "para lectura / escritura de una base de datos ya existente, "c" para lectura / escritura y creacion de una base datos si esta no existe, y "n "para crear, truncar y lectura / escritura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_open() returns a positive handle or FALSE, in the case the database was opened successfull or fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>handler es el nombre de el manejador (handler) que sera usado para el acceso al path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you use dba on a webserver and more than one request requires write operations they can only be done one after another.</seg></tuv>
      <tuv xml:lang="es"><seg>Es pasado como un parametro opcional a dba_open() y puede usarse en lugar de ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is important to know since in such cases locking is simply ignored on the resource and other solutions have to be found.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_open() devuelve un valor positivo de handler o FALSE, en el caso de que la apertura de la base de datos se realice o si falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP versions before PHP 4.3.0 you must use semaphores to guard against simultanious database access for any database handler with the exception of GDBM.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_popen() dba_close()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_optimize() optimizes the underlying database specified by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_optimize() optimiza la base de datos especificada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_optimize() returns TRUE or FALSE, if the optimization succeeds or fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_optimize() devuelve TRUE o FALSE, si la optimizacion tiene exito o falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_sync()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_sync()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_popen() establishes a persistent database instance for path with mode using handler.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_popen() establece una instancia persistente para path con mode usando handler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>path is commonly a regular path in your filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>path normalmente es el "path" en el sistema de ficheros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mode is "r" for read access, "w "for read / write access to an already existing database, "c" for read / write access and database creation if it doesn't currently exist, and "n "for create, truncate and read / write access.</seg></tuv>
      <tuv xml:lang="es"><seg>mode es "r" para acceso de lectura, "w "para lectura / escritura de una base de datos ya existente, "c" para lectura / escritura y creacion de una base datos si esta no existe, y "n "para crear, truncar y lectura / escritura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>handler is the name of the handler which shall be used for accessing path.</seg></tuv>
      <tuv xml:lang="es"><seg>handler es el nombre del manejador (handler) que sera usado para el acceso al path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is passed all optional parameters given to dba_popen() and can act on behalf of them.</seg></tuv>
      <tuv xml:lang="es"><seg>Es pasado como un parametro opcional a dba_popen() y puede usarse en lugar de ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_popen() returns a positive handle or FALSE, in the case the open is successful or fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_popen() devuelve un valor positivo de handler o FALSE, en el caso de que la apertura de la base de datos se realice o si falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_open() dba_close()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_open() dba_close()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_replace() replaces or inserts the entry described with key and value into the database specified by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_replace() reemplaza o inserta la entrada descrita con key y value dentro de la base de datos especificada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>key is the key of the entry to be inserted.</seg></tuv>
      <tuv xml:lang="es"><seg>key es la clave de la entrada a insertar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_replace() returns TRUE or FALSE, depending on whether it succeeds of fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_replace() devuelve TRUE o FALSE, dependiendo de si tiene exito o falla respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_exists(), dba_delete(), dba_fetch(), and dba_insert().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_exists() dba_delete() dba_fetch() dba_insert()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds the data in the record to the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Añade los datos de record a la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the number of items in the supplied record isn 't equal to the number of fields in the database, the operation will fail and FALSE will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el número de elementos del registro proporcionado no es igual al número de campos de la base de datos, la operación fallará y la función devolverá FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes the database associated with dbase_identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra el fichero asociado con dbase_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fields parameter is an array of arrays, each array describing the format of one field in the database.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro fields es un array de arrays, cada uno de los cuales describe el formato de un campo de la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each field consists of a name, a character indicating the field type, a length, and a precision.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada campo consiste de un nombre, un carácter que indica el tipo de campo, una longitud, y una precisión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The types of fields available are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los tipos de campos disponibles son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Boolean.</seg></tuv>
      <tuv xml:lang="es"><seg>Lógico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These do not have a length or precision.</seg></tuv>
      <tuv xml:lang="es"><seg>No tienen longitud ni precisión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Memo. (Note that these aren't supported by PHP.) These do not have a length or precision.</seg></tuv>
      <tuv xml:lang="es"><seg>Memo. (Sin soporte en PHP.) No tienen longitud ni precisión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date (stored as YYYYMMDD).</seg></tuv>
      <tuv xml:lang="es"><seg>Fecha (almacenada como AAAAMMDD).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number.</seg></tuv>
      <tuv xml:lang="es"><seg>Número.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These have both a length and a precision (the number of digits after the decimal point).</seg></tuv>
      <tuv xml:lang="es"><seg>Tienen longitud y precisión (número de cifras tras el punto decimal).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String.</seg></tuv>
      <tuv xml:lang="es"><seg>Cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the database is successfully created, a dbase_identifier is returned, otherwise FALSE is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la base de datos se crea con éxito, se devuelve un dbase_identifier; en caso contrario, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creating a dBase database file</seg></tuv>
      <tuv xml:lang="es"><seg>Crear un fichero dBase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Marks record to be deleted from the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Marca el registro record para ser borrado del fichero de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To actually remove the record from the database, you must also call dbase_pack().</seg></tuv>
      <tuv xml:lang="es"><seg>Para eliminar realmente el registro del fichero, debe llamarse a la función dbase_pack().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the data from record in an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve los datos del registro record en un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each field is converted to the appropriate PHP type, except:</seg></tuv>
      <tuv xml:lang="es"><seg>El array se indexa a partir de 0, e incluye un elemento con el índice asociativo 'deleted', que vale 1 si el registro ha sido marcado para borrar (ver dbase_delete_record().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Integers that would have caused an overflow (32 bits) are returned as strings</seg></tuv>
      <tuv xml:lang="es"><seg>Cada campo se convierte al tipo PHP apropiado. (Las fechas se guardan como cadenas.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the data from record in an associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve los datos del registro record en un array asociativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each field is converted to the appropriate PHP type, except:</seg></tuv>
      <tuv xml:lang="es"><seg>El array incluye también un elemento con índice 'deleted' que vale 1 si el registro ha sido marcado para borrar (ver dbase_delete_record().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Integers that would have caused an overflow (32 bits) are returned as strings</seg></tuv>
      <tuv xml:lang="es"><seg>Cada campo se convierte al tipo PHP apropiado. (Las fechas se transforman en cadenas.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of fields (columns) in the specified database.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de campos (columnas) en el fichero especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field numbers are between 0 and dbase_numfields( $db)-1, while record numbers are between 1 and dbase_numrecords($db).</seg></tuv>
      <tuv xml:lang="es"><seg>Los números de campo va de 0 a dbase_numfields( $db)-1, mientras los números de registros van de 1 a dbase_numrecords($db).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using dbase_numfields()</seg></tuv>
      <tuv xml:lang="es"><seg>Uso de dbase_numfields()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of records (rows) in the specified database.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de registros (filas) en el fichero especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Record numbers are between 1 and dbase_numrecords( $db), while field numbers are between 0 and dbase_numfields($db )-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Los números de registro van de 1 a dbase_numrecords( $db), mientras los números de campo van de 0 a dbase_numfields($db )-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The flags correspond to those for the open() system call. (Typically 0 means read-only, 1 means write-only, and 2 means read and write.)</seg></tuv>
      <tuv xml:lang="es"><seg>Los "flags" son los que utiliza la llamada al sistema open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente, 0 significa sólo lectura, 1 sólo escritura y 2 lectura y escritura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un dbase_identifier del fichero abierto, o FALSE si no pudo abrirse el fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Packs the specified database (permanently deleting all records marked for deletion using dbase_delete_record()).</seg></tuv>
      <tuv xml:lang="es"><seg>Empaqueta el fichero especificado, borrando definitivamente todos los registros marcados con la función dbase_delete_record().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Replaces the data associated with the record record_number with the data in the record in the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Reemplaza los datos asociados con el registro record_number con los datos de record en el fichero de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the number of items in the supplied record is not equal to the number of fields in the database, the operation will fail and FALSE will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el número de elementos del registro proporcionado no es igual al número de campos de la base de datos, la operación fallará y la función devolverá FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dbase_record_number is an integer which spans from 1 to the number of records in the database (as returned by dbase_numrecords()).</seg></tuv>
      <tuv xml:lang="es"><seg>dbase_record_number es un entero en el rango de 1 al número de registros en el fichero de datos (devuelto por la función dbase_numrecords()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DBM Functions [deprecated]</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones dbm</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_sync() synchronizes the database specified by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_sync() sincroniza la base de datos especificada por handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will probably trigger a physical write to disk, if supported.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto probablemente realice una escritura fisica en el disco, si es soportado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_sync() returns TRUE or FALSE, if the synchronization succeeds or fails, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>dba_sync() devuelve TRUE o FALSE, si la sincronizacion tiene exito o falla, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dba_optimize()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: dba_optimize()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>[marcus@zaphod marcus]$ php -r'echo dblist(); 'This is GDBM version 1.8.0, as of May 19, 1999.</seg></tuv>
      <tuv xml:lang="es"><seg>Descripción string dblist (void)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlocks and closes the specified database.</seg></tuv>
      <tuv xml:lang="es"><seg>Desbloquea y cierra la base de datos especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the value for key in the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Borra el valor para la clave en la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE if the key didn 't exist in the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si la clave no existía en la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if there is a value associated with the key.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si hay un valor asociado con la clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the value associated with key.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor asociado con la clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the first key in the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la primera clave de la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that no particular order is guaranteed since the database may be built using a hash-table, which doesn 't guarantee any ordering.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que no se garantiza ningún orden en particular, pues la base de datos se crea utilizando una tabla hash, que no garantiza ordenación alguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds the value to the database with the specified key.</seg></tuv>
      <tuv xml:lang="es"><seg>Añade el valor a la base de datos con la clave especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns -1 if the database was opened read-only, 0 if the insert was successful, and 1 if the specified key already exists. (To replace the value, use dbmreplace().)</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve -1 si la base de datos se abrío en modo sólo lectura, 0 si la inserción tuvo éxito y 1 si la clave ya existía (para sustituir el valor, utilice dbmreplace().)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next key after key.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la clave que sigue a clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By calling dbmfirstkey() followed by successive calls to dbmnextkey() it is possible to visit every key / value pair in the dbm database.</seg></tuv>
      <tuv xml:lang="es"><seg>Llamando a dbmfirstkey() seguida de llamadas sucesivas a dbmnextkey() se pueden visitar todos los pares clave / valor de la base de datos dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Visiting every key / value pair in a DBM database</seg></tuv>
      <tuv xml:lang="es"><seg>Visitanco cada par clave / valor en una base de datos dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$key = dbmfirstkey ($dbm_id); while ($key) {echo "$key = ". dbmfetch ($dbm_id, $key). "\n"; $key = dbmnextkey ($dbm_id, $key);}</seg></tuv>
      <tuv xml:lang="es"><seg>$clave = dbmfirstkey( $id_dbm); while ($clave) {echo "$clave = ". dbmfetch($id_dbm, $clave). "\n"; $clave = dbmnextkey($id_dbm, $clave);}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first argument is the full-path filename of the DBM file to be opened and the second is the file open mode which is one of "r", "n", "c" or "w "for read-only, new (implies read-write, and most likely will truncate an already-existing database of the same name), create (implies read-write, and will not truncate an already-existing database of the same name) and read-write respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer argumento es el nombre con sendero completo del archivo dbm que se va a abrir y el segundo es el modo de apertura, que puede ser "r", "n", "c" o "w", que significan sólo lectura, nuevo (implica lectura / escritura y suele truncar una base de datos si ya existía con ese nombre), crear (implica lectura / escritura, pero sin truncar la base de datos) y abrir para lectura / escritura, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an identifier to be passed to the other DBM functions on success, or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador que se pasa al resto de funciones dbm si tiene éxito, o FALSE si falla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GDBM only uses one file, as does the internal flat-file support, and Berkeley DB creates a filename.db file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se utiliza el soporte de ndbm, este creará los archivos fichero.dir y fichero.pag. gdbm sólo utiliza un archivo y lo mismo hace el soporte interno de archivos de texto, mientras que el db de Berkeley crea un archivo fichero.db.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP does not delete the .lck files it creates.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que el PHP hace su propio bloqueo de archivo sobre el que pudiera realizar la propia librería dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses these files simply as fixed inodes on which to do the file locking.</seg></tuv>
      <tuv xml:lang="es"><seg>El PHP no borra los archivos .lck que crea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on DBM files, see your Unix man pages, or obtain GNU 's GDBM.</seg></tuv>
      <tuv xml:lang="es"><seg>Los utiliza simplemente como i-nodos fijos en los que hacer el bloqueo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información sobre archivos dbm, vea las páginas man de su Unix o obtenga el gdbm de GNU desde ftp: / /prep.ai.mit.edu / pub / gnu.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Replaces the value for the specified key in the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Sustituye el valor para la clave especificada de la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will also add the key to the database if it didn 't already exist.</seg></tuv>
      <tuv xml:lang="es"><seg>También añadirá la clave a la base de datos si no existía antes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_close() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dbx_close() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_compare() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dbx_compare() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_connect() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dbx_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_error() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dbx_error() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_escape_string() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dbx_escape_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. lists each field 's name and type</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. lists each field 's name and type</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. outputs the content of data property into HTML table</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. outputs the content of data property into HTML table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_sort() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. dbx_sort() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function allows you to override the current domain for a single message lookup.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función permite omitir el dominio actual para una busqueda de un mensaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also allows you to specify a category.</seg></tuv>
      <tuv xml:lang="es"><seg>Además permite especificar una categoría.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. debug_backtrace() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. debug_backtrace() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available in PHP 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Deshabilita el depurador interno de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information see the appendix on Debugging PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>El depurador está aún en desarrollo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available in PHP 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Habilita el depurador interno de PHP, conectándolo a address.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information see the appendix on Debugging PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>El depurador esta aún en desarrollo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a binary representation of the given number argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena conteniendo la representación en binario de el número dado en el argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 4294967295 in decimal resulting to a string of 32 1 's.</seg></tuv>
      <tuv xml:lang="es"><seg>El número mayor que puede ser convertido es 2147483647 en decimal que resulta una cadena de 31 unos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: bindec().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la función bindec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dechex</seg></tuv>
      <tuv xml:lang="es"><seg>DecHex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a hexadecimal representation of the given number Returns a string containing a hexadecimal representation of the given number argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena conteniendo la representación hexadecimal del número dado en el argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 2147483647 in decimal resulting to "7fffffff".</seg></tuv>
      <tuv xml:lang="es"><seg>El mayor número que puede ser convertido es 2147483647 en decimal resultando "7fffffff".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hexdec().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la función hexdec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>decoct</seg></tuv>
      <tuv xml:lang="es"><seg>DecOct</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing an octal representation of the given number argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena conteniendo la representación octal del número dado en el argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 2147483647 in decimal resulting to "17777777777".</seg></tuv>
      <tuv xml:lang="es"><seg>El mayor número que puede ser ocnvertido es 2147483647 en decimal resultando "17777777777".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also octdec().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también octdec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si la constante con nombre dada en name (nombre) ha sido definida, FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also define(), constant(), get_defined_constants() and the section on Constants.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también define() y la sección Constantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defines a named constant.</seg></tuv>
      <tuv xml:lang="es"><seg>Define una constante con nombre, que es similar a una variable, excepto que:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the section on constants for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes no tienen un símbolo dólar '$' precediéndolas;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the constant is given by name; the value is given by value.</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes son accesibles desde cualquier lugar sin tener en cuenta las reglas de ámbito de las variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third parameter case_insensitive is also available.</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes sólo pueden evaluar valores escalares</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the value TRUE is given, then the constant will be defined case-insensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer parámetro opcional case_insensitive también se encuentra disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default behaviour is case-sensitive; i.e.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se da el valor 1, la constante se definirá no dintinguiendo mayúsculas / minusculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CONSTANT and Constant represent different values.</seg></tuv>
      <tuv xml:lang="es"><seg>El comportamiento por defecto es si distinguir; i.e.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>CONSTANT y Constant representan valores diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defining Constants</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php define ("CONSTANT", "Hello world ."); echo CONSTANT; / / outputs "Hello world. "echo Constant; / / outputs "Constant" and issues a notice. define ("GREETING", "Hello you .",TRUE); echo GREETING; / / outputs "Hello you. "echo Greeting; / / outputs "Hello you."?</seg></tuv>
      <tuv xml:lang="es"><seg>?php define( "CONSTANT", "Hello world ."); echo CONSTANT; / / outputs "Hello world. "?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>define() devuelve TRUE en caso de éxito y FALSE si ocurre un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also defined(), constant() and the section on Constants.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también defined() y la sección Constantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a dummy manual entry to satisfy those people who are looking for unlink() or unset() in the wrong place.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es una entrada manual inútil para satisfacer a esas personas que están buscando unlink() o unset() en el lugar equivocado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: unlink() to delete files, unset() to delete variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: unlink() para borrar ficheros, unset() para borrar variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The dgettext() function allows you to override the current domain for a single message lookup.</seg></tuv>
      <tuv xml:lang="es"><seg>La función dgettext() permite omitir el dominio actual para una única busqueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of exit().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta construcción del lenguaje envía a la salida un mensaje y finaliza la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows, both slash (/) and backslash (\) are used as path separator character.</seg></tuv>
      <tuv xml:lang="es"><seg>Dada una cadena (string) conteniendo el path a un fichero, esta función devolverá el nombre del directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dirname() example</seg></tuv>
      <tuv xml:lang="es"><seg>En Windows, tanto la barra (/) como la barra inversa (\) son usadas como separadores de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>En otros entornos, debe usarse la barra directa (/).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.0.3, dirname() was fixed to be POSIX-compliant.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Essentially, this means that if there are no slashes in path, a dot ('.') is returned, indicating the current directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de dirname()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this means that you will often get a slash or a dot back from dirname() in situations where the older functionality would have given you the empty string.</seg></tuv>
      <tuv xml:lang="es"><seg>$path = "/ etc / passwd"; $file = dirname($path); / / $file toma el valor" / etc "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: basename(), pathinfo(), and realpath().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: basename()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. disk_free_space() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. disk_free_space() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a deprecated alias of disk_free_space().</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use that function instead.</seg></tuv>
      <tuv xml:lang="es"><seg>$df = diskfreespace( "/ "); / / $df contiene el numero de bytes / / disponibles en" / "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. disk_total_space() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. disk_total_space() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor double (decimal en punto flotante) de var.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This alias is a left-over from a function-renaming.</seg></tuv>
      <tuv xml:lang="es"><seg>var puede ser cualquier tipo escalar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In older versions of PHP you' ll need to use this alias of the floatval() function, because floatval() wasn't yet available in that version.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también intval(), strval(), settype() y Type juggling.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current key and value pair from the array array and advances the array cursor.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el par clave / valor actual para la matriz y avanza el cursor de la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This pair is returned in a four-element array, with the keys 0, 1, key, and value.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta pareja se devuele en una matriz de 4 elementos, con las claves 0, 1, key, y value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Elements 0 and key contain the key name of the array element, and 1 and value contain the data.</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos 0 y key contienen el nombre de clave del elemento de la matriz, y 1 y value contienen los datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the internal pointer for the array points past the end of the array contents, each() returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el puntero interno para la matriz apunta pasado el final del contenido de la matriz, each() devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. each() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos de each()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$foo = array ("bob", "fred", "jussi", "jouni", "egon", "marliese"); $bar = each ($foo);</seg></tuv>
      <tuv xml:lang="es"><seg>$chorrada = array ("bob", "fred", "jussi", "jouni", "egon", "marliese"); $tonteria = each ($chorrada);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$bar now contains the following key / value pairs:</seg></tuv>
      <tuv xml:lang="es"><seg>$tonteria contiene ahora los siguientes pares clave / valor:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$foo = array ("Robert "= "Bob", "Seppo" = "Sepi"); $bar = each ($foo);</seg></tuv>
      <tuv xml:lang="es"><seg>$chorrada = array ("Robert "= "Bob", "Seppo" = "Sepi"); $tonteria = each ($chorrada);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>each() is typically used in conjunction with list() to traverse an array; for instance, $_POST:</seg></tuv>
      <tuv xml:lang="es"><seg>each() se usa normalmente de forma conjunta a list() para recorrer una matriz; por ejemplo, $HTTP_POST_VARS:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Traversing $_POST with each()</seg></tuv>
      <tuv xml:lang="es"><seg>Recorriendo $HTTP_POST_VARS con each()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo "Values submitted via POST method: br / \n"; reset ($_POST); while (list ($key, $val) = each ($_POST)) {echo "$key = $val br / \n";}</seg></tuv>
      <tuv xml:lang="es"><seg>echo "Valores enviados con el método POST: br"; reset ($HTTP_POST_VARS); while (list ($clave, $val) = each ($HTTP_POST_VARS)) {echo "$clave = $val br ";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You have to use reset() if you want to traverse the array again using each.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se ha ejecutado each(), el cursor de la matriz quedará en el siguiente elemento de la misma, o en el último si llega al final de ésta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also key(), list(), current(), reset(), next(), prev(), and foreach.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: key(), list(), current(), reset(), next(), y prev().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the UNIX timestamp corresponding to midnight on Easter of the given year.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la marca de tiempo UNIX que corresponde a la medianoche de Pascua del año dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.3.0, the year parameter is optional and defaults to the current year according to the localtime if ommited.</seg></tuv>
      <tuv xml:lang="es"><seg>A partir de PHP 4.3.0, el parametro anno es opcional y si se omite, usa por defecto el año en curso según "localtime".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning:</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will generate a warning if the year is outside of the range for UNIX timestamps (i.e. before 1970 or after 2037).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función generará un aviso si el año está fuera del rango para las marcas de tiempo del UNIX (es decir, antes de 1970 o después del 2037).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. easter_date() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo de easter_date()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox.</seg></tuv>
      <tuv xml:lang="es"><seg>La fecha del Día de Pascua fue definida por el Concilio de Nicea en el 325 D.C. como el domingo tras la primera luna llena que cayera en ó después del equinoccio de Primavera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday.</seg></tuv>
      <tuv xml:lang="es"><seg>El equinoccio se supone que siempre cae en el 21 de marzo, de modo que el cálculo se reduce a determinar la fecha de la luna llena y la del domingo siguiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The algorithm used here was introduced around the year 532 by Dionysius Exiguus.</seg></tuv>
      <tuv xml:lang="es"><seg>El algoritmo usado aquí fue introducido en el año 532 por Dionisio Exiguo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon.</seg></tuv>
      <tuv xml:lang="es"><seg>Bajo el Calendario Juliano (para años anteriores al 1753), se usa un ciclo simple de 19 años para calcular las fases de la luna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.</seg></tuv>
      <tuv xml:lang="es"><seg>Bajo el Calendario Gregoriano (años posteriores al 1753, diseñado por Clavio y Lilio, e introducido por el Papa Gregorio XIII en Octubre de 1582, y en Gran Bretaña y sus colonias en septiembre de 1752) se añaden dos factores de corrección para hacer el ciclo más preciso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(The code is based on a C program by Simon Kershaw, webmaster@ely.anglican.org)</seg></tuv>
      <tuv xml:lang="es"><seg>(El código se basa en un programa en C de Simon Kershaw, webmaster@ely.anglican.org)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See easter_days() for calculating Easter before 1970 or after 2037.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver easter_days() para calcular la Pascua antes del 1970 o después del 2037.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of days after March 21 on which Easter falls for a given year.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de días tras el 21 de marzo en que cae la Pascua en un año dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no year is specified, the current year is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica año, se asume el actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The method parameter was also introduced in PHP 4.3.0 and allows to calculate easter dates based on the Gregorian calendar during the years 1582 - 1752 when set to CAL_EASTER_ROMAN.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro metodo fue introducido en la version PHP 4.3.0 y permite calcular fechas de pascua basadas en el Calendario Gregoriano durante los años 1582 - 1752 si se le da el valor CAL_EASTER_ROMAN.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the calendar constants for more valid constants.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver las constantes de calendario para más información sobre estas constantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function can be used instead of easter_date() to calculate Easter for years which fall outside the range of UNIX timestamps (i.e. before 1970 or after 2037).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se puede usar en lugar de easter_date() para calcular la Pascua para años que se salen del rango de las marcas de fecha del UNIX (o sea, antes del 1970 o después del 2037).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. easter_days() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo de easter_date()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox.</seg></tuv>
      <tuv xml:lang="es"><seg>La fecha del Día de Pascua fue definida por el Concilio de Nicea en el 325 D.C. como el domingo tras la primera luna llena que cayera en o después del equinoccio de Primavera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also easter_date().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también easter_date().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo() is not actually a function (it is a language construct) so you are not required to use parentheses with it.</seg></tuv>
      <tuv xml:lang="es"><seg>Da salida a todos sus parámetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not possible to use echo() in a variable function context.</seg></tuv>
      <tuv xml:lang="es"><seg>echo() no es realmente una función (es una sentencia del lenguaje) de modo que no se requiere el uso de los paréntesis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. echo() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo "Hello World"; echo "This spans multiple lines.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de echo()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The newlines will be output as well"; echo "This spans\nmultiple lines.</seg></tuv>
      <tuv xml:lang="es"><seg>echo "Hola Mundo"; echo "Esto se extiende por varias líneas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!</seg></tuv>
      <tuv xml:lang="es"><seg>Los saltos de línea también se envían"; echo "Esto se extiende\npor varias líneas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo() also has a shortcut syntax, where you can immediately follow the opening tag with an equals sign.</seg></tuv>
      <tuv xml:lang="es"><seg>Los saltos de línea\ntambién se envían";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>I have ?=$foo? foo.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This short syntax only works with the short_open_tag configuration setting enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>De hecho, si desea pasar más de un parámetro a echo no debe encerrarlos entre paréntesis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also print(), printf(), and flush().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: print(), printf(), y flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See converting to boolean for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si var está definida y tiene un valor no-vacío o distinto de cero; en otro caso devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this is meaningless when used on anything which isn' t a variable; i.e. empty (addslashes ($name)) has no meaning since it would be checking whether something which isn't a variable is a variable with a FALSE value.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también isset() y unset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>end() avanza el puntero interno de la matriz al último elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), each(), next(), and reset().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: current(), each(), end(), next(), y reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches a string for matches to the regular expression given in pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca en string las coincidencias con la expresión regular pattern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si se encuentran coincidencias con subcadenas entre paréntesis de pattern y la función se ha llamado con el tercer argumento regs, las coincidencias se almacenarán en los elementos de regs. $regs[ 1] contendrá la subcadena que empieza en el primer paréntesis izquierdo; $regs[2] la que comienza en el segundo, etc. $regs[0] contendrá una copia de string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up to (and including) PHP 4.1.0 $regs will be filled with exactly ten elements, even though more or fewer than ten parenthesized substrings may actually have matched.</seg></tuv>
      <tuv xml:lang="es"><seg>La búsqueda diferencia mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no matches are found, $regs will not be altered by ereg().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un valor verdadero si se encontró alguna coincidencia, o falso in no se encontraron coincidencias u ocurrió algún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if a match for pattern was found in string, or FALSE if no matches were found or an error occurred.</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente fragmento de código toma una fecha en formato ISO (AAAA-MM-DD) y la imprime en formato DD.MM.AAAA:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following code snippet takes a date in ISO format (YYYY-MM-DD) and prints it in DD.MM.YYYY format:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ereg() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (ereg ("([0-9]{4}) -([0-9]{1,2}) -([0-9]{1,2})", $date, $regs)) {echo "$regs[3].$regs[2].$regs[1]";} else {echo "Invalid date format: $date";}</seg></tuv>
      <tuv xml:lang="es"><seg>if (ereg ("([0-9]{4}) -([0-9]{1,2}) -([0-9]{1,2})", $date, $regs)) {echo "$regs[3].$regs[2].$regs[1]";} else {echo "Invalid date format: $date";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also eregi(), ereg_replace(), eregi_replace(), and preg_match().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también eregi(), ereg_replace(), y eregi_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. eregi() example</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es idéntica a ereg(), excepto en que ignora la distinción entre mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), ereg_replace(), and eregi_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ereg(), ereg_replace(), y eregi_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is identical to ereg_replace() except that this ignores case distinction when matching alphabetic characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es idéntica a ereg_replace(), excepto en que ignora la distinción entre mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), eregi(), and ereg_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ereg(), eregi(), y ereg_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function scans string for matches to pattern, then replaces the matched text with replacement.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función examina string buscando coincidencias de pattern, y reemplaza el texto encontrado con replacement.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pattern contains parenthesized substrings, replacement may contain substrings of the form\\ digit, which will be replaced by the text matching the digit' th parenthesized substring; \\0 will produce the entire contents of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena modificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parentheses may be nested, in which case they are counted by the opening parenthesis.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay coincidencias que reemplazar, devuelve la cadena original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the following code snippet prints "This was a test" three times:</seg></tuv>
      <tuv xml:lang="es"><seg>Si pattern contiene subcadenas entre paréntesis, replacement puede contener subcadenas de la forma\\ cifra, que serán reemplazadas por el texto que coincide con la subcadena entre paréntesis que ocupa el lugar indicado por la cifra; \\0 produce el contenido total de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ereg_replace() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden usar hasta nueve subcadenas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$string = "This is a test"; echo ereg_replace (" is", "was", $string); echo ereg_replace (" ()is", "\\1was", $string); echo ereg_replace ("( ()is)", "\\2was", $string);</seg></tuv>
      <tuv xml:lang="es"><seg>Los paréntesis pueden anidarse; en este caso se cuentan los paréntesis de apertura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One thing to take note of is that if you use an integer value as the replacement One thing to take note of is that if you use an integer value as the replacement parameter, you may not get the results you expect.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se encuentran coincidencias en string, se devuelve string sin cambios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el siguiente fragmento de código imprime "This was a test" tres veces:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * This will not work as expected. * / $num = 4; $string = "This string has four words ."; $string = ereg_replace('four', $num, $string); echo $string; / * Output: 'This string has words. '* / / * This will work. * / $num = '4'; $string = "This string has four words ."; $string = ereg_replace('four', $num, $string); echo $string; / * Output: 'This string has 4 words.' * /?</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ereg_replace() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$text = ereg_replace( "[[:alpha :]]+: / /[^ [:space :]]+[[:alnum:] / ]", "a href=\"\\0\" \\0 / a ", $text);</seg></tuv>
      <tuv xml:lang="es"><seg>$string = "This is a test"; echo ereg_replace (" is", "was", $string); echo ereg_replace (" ()is", "\\1was", $string); echo ereg_replace ("( ()is)", "\\2was", $string);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), eregi(), eregi_replace(), str_replace(), and preg_match().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ereg(), eregi(), y eregi_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sends an error message to the web server 's error log, a TCP port or to a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Envía un mensaje de error al log de errores del servidor web, a un puerto TCP o a un fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first parameter, message, is the error message that should be logged.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer parámetro, message (mensaje), es el mensaje de error que debe ser registrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter, message_type says where the message should go:</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, message_type (tipo de mensaje) indica el lugar al que debe dirigirse:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. error_log() log types</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1. error_log() tipos de log</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>message is sent to PHP' s system logger, using the Operating System's system logging mechanism or a file, depending on what the error_log configuration directive is set to.</seg></tuv>
      <tuv xml:lang="es"><seg>message es enviado al registro de sistema de PHP, utilizando el mecanismo de registro de sistema del Sistema Operativo, o a un fichero, dependiendo del valor de la directiva de configuración error_log</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>message is sent by email to the address in the destination parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>message es enviado por correo electrónico a la dirección del parámetro destination (destino).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the only message type where the fourth parameter, extra_headers is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es el único tipo de mensaje donde se utiliza el cuarto parámetro, extra_headers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This message type uses the same internal function as mail() does.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de mensaje utiliza la misma funcionalidad interna que mail() realiza.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>message is sent through the PHP debugging connection.</seg></tuv>
      <tuv xml:lang="es"><seg>message es enviado a través de la conexión de depuración de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option is only available if remote debugging has been enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta opción está disponible sólo si la depuración remota ha sido activada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso el parámetro destination especifica el nombre de host o dirección IP y, opcionalmente, el número de puerto del socket que recibe la información de depuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remote debugging via TCP / IP is a PHP 3 feature that is not available in PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>message es añadido al fichero destination.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. error_log() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. error_log() ejemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / Send notification through the server log if we can not / / connect to the database. if (!Ora_Logon ($username, $password)) {error_log ("Oracle database not available !", 0);} / / Notify administrator by email if we run out of FOO if (!($foo = allocate_new_foo()) {error_log ("Big trouble, we're all out of FOOs !", 1, "operator@mydomain.com");} / / other ways of calling error_log(): error_log ("You messed up !", 2, "127.0.0.1:7000"); error_log ("You messed up !", 2, "loghost"); error_log ("You messed up !", 3, "/ var / tmp / my-errors.log");</seg></tuv>
      <tuv xml:lang="es"><seg>/ / Send notification through the server log if we can not / / connect to the database. if (!Ora_Logon($username, $password)) {error_log("Oracle database not available !", 0);} / / Notify administrator by email if we run out of FOO if (!($foo = allocate_new_foo()) {error_log("Big trouble, we're all out of FOOs !", 1, "operator@mydomain.com");} / / other ways of calling error_log(): error_log("You messed up !", 2, "127.0.0.1:7000"); error_log("You messed up !", 2, "loghost"); error_log("You messed up !", 3, "/ var / tmp / my-errors.log");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>error_reporting() sets PHP's error reporting level, and returns the old level.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el nivel de registro de los errores PHP y devuelve el nivel anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As error levels are added, the range of integers increases, so older integer-based error levels will not always behave as expected.</seg></tuv>
      <tuv xml:lang="es"><seg>El nivel de registro es una máscara de bits de los valores siguientes (siga los enlaces a los valores internos para obtener sus significados):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. error_reporting() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1. error_reporting() valores de bit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The available error level constants are listed below.</seg></tuv>
      <tuv xml:lang="es"><seg>valor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. error_reporting() level constants and bit values</seg></tuv>
      <tuv xml:lang="es"><seg>nombre interno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>escapeshellcmd() escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands.</seg></tuv>
      <tuv xml:lang="es"><seg>EscapeShellCmd() enmascara cualquier carácter en una cadena de caracteres que pueda usarse para introducir fraudulentamente una orden al intérprete de órdenes para que éste ejecute instrucciones arbitrarias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function should be used to make sure that any data coming from user input is escaped before this data is passed to the exec() or system() functions, or to the backtick operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se debería usar para asegurarse que cualquier dato que venga del usuario se enmascare antes de que éste se le pase a las funciones exec() o system(), o al operador ` (apóstrofe invertido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A standard use would be:</seg></tuv>
      <tuv xml:lang="es"><seg>Un uso habitual podría ser:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also escapeshellarg(), exec(), popen(), system(), and the backtick operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también exec(), popen(), system(), y el operador ` (apóstrofe invertido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, this can be useful for storing code in a database text field for later execution.</seg></tuv>
      <tuv xml:lang="es"><seg>eval() evalúa la cadena de carácteres dada en code_str eval() evalúa la cadena de carácteres dada en code_str como código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remember that the string passed must be valid PHP code, including things like terminating statements with a semicolon so the parser doesn' t die on the line after the eval(), and properly escaping things in code_str.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay algunos aspectos a tener en cuenta cuando se utiliza eval().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A return statement will terminate the evaluation of the string immediately.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde que la cadena de carácteres pasada debe ser código PHP válido, incluyendo aspectos como sentencias de terminación con un punto y coma para que el parser no finalice en la línea después de eval(), y secuencias de formato correctas en code_str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, eval() returns NULL unless return() is called in the evaluated code, in which case the value passed to return() In PHP 4, eval() returns NULL unless return() is called in the evaluated code, in which case the value passed to return() is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde también que las variables a las que se les da valor en eval() retendrán estos valores posteriormente en el script principal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, eval() does not return a value.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. eval() example - simple text merge</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo eval() - fusión en un único texo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will show:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $string = 'cup'; $name = 'coffee'; $str = 'This is a $string with my $name in it. br'; echo $str; eval ("\$str = \"$str\"; "); echo $str;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a $string with my $name in it.</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo anterior mostrará:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>exec() executes the given command, however it does not output anything.</seg></tuv>
      <tuv xml:lang="es"><seg>exec() ejecuta la orden indicada en command, sin embargo no produce ninguna salida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It simply returns the last line from the result of the command.</seg></tuv>
      <tuv xml:lang="es"><seg>Simplemente devuelve la última línea de la salida resultado de la orden.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array argument is present, then the specified array will be filled with every line of output from the command.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita ejecutar una orden y obtener directamente todos los datos devueltos por la orden sin ninguna interferencia, use la función PassThru().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that if the array already contains some elements, exec() will append to the end of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el parámetro array Si el parámetro array existe, entonces el array especificado se rellenará con cada una de las líneas de la salida producida por la orden.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you do not want the function to append elements, call unset() on the array before passing it to exec().</seg></tuv>
      <tuv xml:lang="es"><seg>Notar que si el array ya contiene algunos elementos, exec() los añadirá al final del array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Si no quiere que la función añada dichos elementos, haga un unset() sobre el array antes de pasárselo a exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are going to allow data coming from user input to be passed to this function, then you should be using escapeshellarg() or escapeshellcmd() to make sure that users cannot trick the system into executing arbitrary commands.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el parámetro return_var existe a la vez que el parámetro array, entonces el valor de retorno de la orden ejecutada se guardará en dicha variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you start a program using this function and want to leave it running in the background, you have to make sure that the output of that program is redirected to a file or some other output stream or else PHP will hang until the execution of the program ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Destacar que si usted va a permitir que se pasen datos provenientes de usuarios a esta función, entonces debería usar EscapeShellCmd() para asegurarse de que los usuarios no pueden engañar al sistema para ejecutar instrucciones arbitrarias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also system(), passthru(), popen(), escapeshellcmd(), and the backtick operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también system(), PassThru(), popen(), EscapeShellCmd(), y el operador ` (apóstrofe invertido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. exif_read_data() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. exif_read_data() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. exif_thumbnail() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. exif_thumbnail() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Exit statuses should be in the range 1 to 254, the exit status 255 is reserved by PHP and shall not be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta construcción del lenguaje finaliza la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = '/ path / to / data-file'; $file = fopen ($filename, 'r') or exit("unable to open file ($filename)");?</seg></tuv>
      <tuv xml:lang="es"><seg>No devuelve nada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns e raised to the power of arg.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número e elevado a la potencia de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pow().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también pow().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If limit is set, the returned array will contain a maximum of limit elements with the last element containing the rest of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz de cadenas, cada una de las cuales es una subcadena de cadena formada mediante su división en las fronteras marcadas por la cadena separador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If separator contains a value that is not contained in string, then explode() will return an array containing string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica limite, la matriz devuelta contendrá un máximo de limite elementos con el último conteniendo el resto de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The limit parameter was added in PHP 4.0.1</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. explode() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de explode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although implode() can for historical reasons accept its parameters in either order, explode() cannot.</seg></tuv>
      <tuv xml:lang="es"><seg>$pizza = "trozo1 trozo2 trozo3 trozo4 trozo5 trozo6"; $trozos = explode (" ", $pizza);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also preg_split(), spliti(), split(), and implode().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también split() e implode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (!extension_loaded('gd')) {if (!dl('gd.so')) {exit;}}</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si la extensión identificada por name (nombre) está cargada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$php -m [PHP Modules] xml tokenizer standard sockets session posix pcre overload mysql mbstring ctype [Zend Modules]</seg></tuv>
      <tuv xml:lang="es"><seg>Puede ver el nombre de varias extensiones utilizando phpinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most internal extension names are written in lower case but there may be extension available which also use uppercase letters.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también phpinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be warned that this function compares case sensitive!</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_loaded_extensions(), get_extension_funcs(), phpinfo() and dl().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes an associative array var_array and treats keys as variable names and values as variable values.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se utiliza para importar variables desde una matriz a la tabla de símbolos actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Toma la matriz asoiativa matriz_vars y trata las claves como nombres de variable y los valores como los valores de éstas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Para cada par clave / valor creará una variable en la tabla de símbolos actual, sujeto a los parámetros tipo_extraccion y prefijo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>extract() controla las colisiones con las variables que ya existen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also checks for collisions with existing variables in the symbol table.</seg></tuv>
      <tuv xml:lang="es"><seg>La forma de tratar éstas se determina por el tipo_extraccion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be one of the following values:</seg></tuv>
      <tuv xml:lang="es"><seg>Puede tener únicamente uno de los siguientes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is a collision, don 't overwrite the existing variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay colisión, sobreescribe la variable existente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prefix all variable names with prefix.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay colisión, no sobreescribas la variable existente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only prefix invalid / numeric variable names with prefix.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay una colisión, añade el prefijo a la nueva variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only overwrite the variable if it already exists in the current symbol table, otherwise do nothing.</seg></tuv>
      <tuv xml:lang="es"><seg>Añade el prefijo a todas las variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag was added in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica tipo_extraccion, se asume que vale EXTR_OVERWRITE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag was added in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que el prefijo sólo se necisita si tipo_extraccion vale EXTR_PREFIX_SAME o EXTR_PREFIX_ALL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This effectively means that the values of the imported variables are still referencing the values of the var_array parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>extract() comprueba si cada clave es un nombre válido de variable, y sólo lo importa si lo es.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use this flag on its own or combine it with any other flag by OR 'ing the extract_type.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>N.T.:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that prefix is only required if extract_type is EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, EXTR_PREFIX_INVALID or EXTR_PREFIX_IF_EXISTS.</seg></tuv>
      <tuv xml:lang="es"><seg>En el caso español, no valdría "año" como nombre variable (pero sí como clave en una matriz cualquiera).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>extract() returns the number of variables successfully imported into the symbol table.</seg></tuv>
      <tuv xml:lang="es"><seg>Un uso posible para extract sería importar en la tabla de símbolos las variables contenidas en la matriz asociativa que devuelve wddx_deserialize().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A possible use for extract() is to import into the symbol table variables contained in an associative array returned by wddx_deserialize().</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de extract()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Suppose that $var_array is an array returned from wddx_deserialize * / $size = "large"; $var_array = array ("color" = "blue", "size "= "medium", "shape" = "sphere"); extract ($var_array, EXTR_PREFIX_SAME, "wddx"); print "$color, $size, $shape, $wddx_size\n";?</seg></tuv>
      <tuv xml:lang="es"><seg>php? / * Suponemos que $matriz_var es una matriz devuelta por wddx_deserialize * / $tamano = "grande"; $matriz_var = array ("color" = "azul", "tamano "= "media", "forma" = "esfera"); extract ($matriz_var, EXTR_PREFIX_SAME, "wddx"); print "$color, $tamano, $forma, $wddx_tamano\n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>El programa anterior producirá:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blue, large, sphere, medium</seg></tuv>
      <tuv xml:lang="es"><seg>azul, grande, esfera, media</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If EXTR_SKIP was specified, then $wddx_size wouldn 't even have been created.</seg></tuv>
      <tuv xml:lang="es"><seg>La variable $tamano no fue sobreescrita porque especificamos EXTR_PREFIX_SAME, que provocó la creación de $wddx_tamano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>EXTR_OVERWRITE would have caused $size to have value "medium", and EXTR_PREFIX_ALL would result in new variables being named $wddx_color, $wddx_size, and $wddx_shape.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se hubiera especificado EXTR_SKIP, $wddx_tamano ni siquiera habría sido creada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also compact().</seg></tuv>
      <tuv xml:lang="es"><seg>EXTR_OVERWRITE habría provocado que $tamano tuviera el valor "media", y EXTR_PREFIX_ALL habría provocado que aparecieran nuevas variables llamadas $wddx_color, $wddx_tamano, y $wddx_forma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_close() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_close() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_connect() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_create_blob() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_create_blob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_create_clob() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_create_clob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_create_db() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_create_db() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_data_seek() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_data_seek() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_array() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_fetch_array() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_assoc() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_fetch_assoc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_field() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_fetch_field() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_object() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_fetch_object() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_field_name() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_field_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_field_type() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_field_type() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_list_dbs() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_list_dbs() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_list_fields() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_list_fields() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_next_result() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_next_result() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_num_rows() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_num_rows() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_query() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_query() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. fbsql_query() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. fbsql_query() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_read_blob() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_read_blob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_read_clob() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_read_clob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_tablename() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fbsql_tablename() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>filePro functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones filePro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Se cierra el fichero apuntado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito y FALSE en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = fopen( 'somefile.txt', 'r'); fclose($handle);?</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser válido y debe apuntarse a un fichero abierto con éxito con fopen() o con fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_close() function closes the FDF document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_close() cierra un documento FDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_create() creates a new FDF document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_create() crea un documento FDF nuevo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is needed if one would like to populate input fields in a PDF document with data.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se necesita si se desea rellenar los campos de entrada en un documento PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Populating a PDF document</seg></tuv>
      <tuv xml:lang="es"><seg>Rellenando un documento PDF</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $outfdf = fdf_create(); fdf_set_value($outfdf, "volume", $volume, 0); fdf_set_file($outfdf, "http: / testfdf / resultlabel.pdf"); fdf_save($outfdf, "outtest.fdf"); fdf_close($outfdf); Header("Content-type: application / vnd.fdf"); $fp = fopen("outtest.fdf", "r"); fpassthru($fp); unlink("outtest.fdf");?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $outfdf = fdf_create(); fdf_set_value($outfdf, "volumen", $volume, 0); fdf_set_file($outfdf, "http: / testfdf / resultlabel.pdf"); fdf_save($outfdf, "outtest.fdf"); fdf_close($outfdf); Header("Content-type: application / vnd.fdf"); $fp = fopen("outtest.fdf", "r"); fpassthru($fp); unlink("outtest.fdf");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_close(), fdf_save(), fdf_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_close(), fdf_save(), fdf_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_set_file() returns the value of the / F key.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_set_file() devuelve el valor de la clave / F.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_set_file().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_set_file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_get_status() returns the value of the / STATUS key.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_get_status() devuelve el valor de la clave / STATUS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_set_status().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_set_status().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For non-array fields the optional parameter which will be ignored.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_get_value() devuelve el valor de un campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_set_value().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_set_value().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_next_field_name() devuelve el nombre del campo tras el campo fieldname o el nombre del primer campo si el segundo parámetro es NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_enum_fields() and fdf_get_value().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_set_field(), fdf_get_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_open() function opens a file with form data.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_open() abre un archivo con datos de formulario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This file must contain the data as returned from a PDF form or created using fdf_create() and fdf_save().</seg></tuv>
      <tuv xml:lang="es"><seg>Este archivo debe contener los datos tal y como se devuelven en un formulario PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can process the results of a PDF form POST request by writing the data recieved in $HTTP_FDF_DATA to a file and open it using fdf_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente dicho archivo debe crearse "manualmente" usando la función fopen() y escribiendo en éste el contenido de HTTP_FDF_DATA usando fwrite().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.3 you can also use fdf_open_string() which handles temporary file creation and cleanup for you.</seg></tuv>
      <tuv xml:lang="es"><seg>No existe un mecanismo similar al de los formularios HTML donde se crea una variable para cada campo de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Accessing the form data</seg></tuv>
      <tuv xml:lang="es"><seg>Accediendo a los datos del formulario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Save the FDF data into a temp file $fdffp = fopen( "test.fdf", "w"); fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA)); fclose($fdffp); / / Open temp file and evaluate data $fdf = fdf_open("test.fdf");... fdf_close($fdf);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Guarda los datos FDF en un archivo temporal $fdffp = fopen( "test.fdf", "w"); fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA)); fclose($fdffp); / / Abre archivo temporal y evalúa los datos $fdf = fdf_open("test.fdf");... fdf_close($fdf);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_open_string(), fdf_close(), fdf_create() and fdf_save().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_save() function saves a FDF document.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_save() guarda un documento FDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting FDF will be written to filename.</seg></tuv>
      <tuv xml:lang="es"><seg>El kit de FDF proporciona una forma de volcar el documento a stdout si el parámetro filename es '. '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without a filename fdf_save() will write the FDF to the default PHP output stream.</seg></tuv>
      <tuv xml:lang="es"><seg>En tal caso se deberá escribir a un fichero y utilizar p. ej. fpassthru() para visualizarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_save_string(), fdf_create() and fdf_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_close() y el ejemplo para fdf_create().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_set_ap() function sets the appearance of a field (i.e. the value of the / AP key).</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_set_ap() ajusta la apariencia de un campo (p. ej. el valor de la clave / AP).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The possible values of face are FDFNormalAP, FDFRolloverAP and FDFDownAP.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores posibles de face son 1=FDFNormalAP, 2=FDFRolloverAP, 3=FDFDownAP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_set_file() selects a different PDF document to display the form results in then the form it originated from.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_set_file() fija el valor de la clave / F.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The frame to display the document in may be selected using the optional parameter target_frame or the function fdf_set_target_frame().</seg></tuv>
      <tuv xml:lang="es"><seg>La clave / F es simplemente una referencia a un formulario PDF que se va a rellenar con datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing FDF data to a second form</seg></tuv>
      <tuv xml:lang="es"><seg>En un entorno web es un URL (p.ej. http: / testfdf / resultlabel.pdf).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_get_file() and fdf_set_target_frame().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_get_file() y el ejemplo para fdf_create().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a client recieves a FDF with a status set it will present the value in an alert box.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_set_status() fija el valor de la clave / STATUS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fdf_get_status().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_get_status().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case all array elements will be stored as a value array.</seg></tuv>
      <tuv xml:lang="es"><seg>La función fdf_set_value() fija el valor de un campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value is no longer used in the current toolkit version 5.0.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro final determina si el valor del campo se deberá convertir a un Nombre PDF (isName = 1) o convertir en una Cadena PDF (isName = 0).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for value arrays was added in PHP 4.3.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también fdf_get_value().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the file pointer is at EOF or an error occurs; otherwise returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el apuntador del fichero está en EOF o si ocurre un error; en otro caso devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="es"><seg>The file pointer must be valid, and must point to a file El apuntador al fichero debe ser válido, y debe apuntar a un fichero abierto con éxito por fopen(), popen(), o fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a single character read from the file pointed to by handle.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena (string) conteniendo un simple caracter leido del fichero apuntado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on EOF.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE para EOF (como hace feof()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser valido, y debe apuntar a un fichero abierto con éxito por fopen(), popen(), o fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fopen(), popen(), fsockopen(), and fgets().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fread(), fopen(), popen(), fsockopen(), y fgets().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.</seg></tuv>
      <tuv xml:lang="es"><seg>Parecida a fgets() excepto que fgetcsv() parsea la línea que lee buscando campos en formato CSV y devuelve un array conteniendo los campos leidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional enclosure cannot be null, and is limited to one character.</seg></tuv>
      <tuv xml:lang="es"><seg>El delimitador de campo es una coma, a menos que se especifique otro delimitador con el tercer parámetro opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>fp debe ser un apuntador válido a un fichero abierto con éxito por fopen(), popen(), o fsockopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The handle parameter must be a valid file pointer to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="es"><seg>la longitud debe ser mayor que la línea más larga que pueda encontrarse en le fichero CSV (permitiendo arrastrar caracteres de fin de línea)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length parameter must be greater than the longest line to be found in the CSV file (allowing for trailing line-end characters).</seg></tuv>
      <tuv xml:lang="es"><seg>fgetcsv() devuelve FALSE en caso de error, incluyendo el fin de fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fgetcsv() returns FALSE on error, including end of file.</seg></tuv>
      <tuv xml:lang="es"><seg>NOTA:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A blank line in a CSV file will be returned as an array comprising a single null field, and will not be treated as an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Una línea en blanco en un fichero CSV se devuelve como un array que contiene un único campo nulo, y esto no será tratado como un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read and print the entire contents of a CSV file</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de fgetcsv() - Leer e imprimir el contenido completo de un fichero CSV</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), file(), and pack()</seg></tuv>
      <tuv xml:lang="es"><seg>$row = 1; $fp = fopen ("test.csv" ,"r"); while ($data = fgetcsv ($fp, 1000, ",")) {$num = count ($data); print" p $num fields in line $row: br "; $row++; for ($c=0; $c $num; $c++) {print $data[$c]." br ";}} fclose ($fp);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no length is specified, the length defaults to 1k, or 1024 bytes.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena de como mucho length - 1 bytes leidos del fichero apuntado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="es"><seg>La lectura acaba cuando son leidos length - 1 bytes, cuando se llega a una nueva línea (el caracter de nueva línea se incluye en el valor devuelto), o cuando se llega a un EOF (lo que ocurra primero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading a file line by line</seg></tuv>
      <tuv xml:lang="es"><seg>Fallos Comunes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Los que hayan usado la semantica de 'C' de la función fgets deben darse cuenta de la diferencia que hay en como el EOF es devuelto por esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3, omitting length will keep reading from the stream until it reaches the end of the line.</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser válido, y debe apuntar a un fichero abierto con éxito con fopen(), popen(), o fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the majority of the lines in the file are all larger than 8KB, it is more resource efficient for your script to specify the maximum line length.</seg></tuv>
      <tuv xml:lang="es"><seg>A continuación un ejemplo sencillo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is binary safe as of PHP 4.3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Leyendo un fichero línea por línea</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are having problems with PHP not recognizing the line endings when reading files either on or created by a Macintosh computer, you might want to enable the auto_detect_line_endings run-time configuration option.</seg></tuv>
      <tuv xml:lang="es"><seg>$fd = fopen ("/ tmp / inputfile.txt", "r"); while (!feof($fd)) {$buffer = fgets($fd, 4096); echo $buffer;} fclose ($fd);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fopen(), popen(), fgetc(), fsockopen(), and socket_set_timeout().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fread(), fopen(), popen(), fgetc(), y fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional third parameter to specify tags which should not be stripped.</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a fgets(), excepto que fgetss trata de quitar cualquier etiqueta HTML y PHP del texto que lee.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are having problems with PHP not recognizing the line endings when reading files either on or created by a Macintosh computer, you might want to enable the auto_detect_line_endings run-time configuration option.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede utilizar el tercer parámetro opcional para especificar etiquetas que no deben de quitarse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fgets(), fopen(), fsockopen(), popen(), and strip_tags().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fgets(), fopen(), fsockopen(), popen(), y strip_tags().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be costly performancewise when an application regularly accesses a very large number of files or directories.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la fecha a la que el fichero fue accedido por última vez, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some Unix filesystems can be mounted with atime updates disabled to increase the performance of such applications; USENET news spools are a common example.</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados de esta función son cacheados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also filemtime() (which is what you want to use when you want to create "Last Modified "footers on web pages) and fileatime().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el momento en el que el fichero fue cambiado por última vez, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is wrong.</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados de esta función son cacheados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el fichero especificado por filename existe; y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On windows, use / /computername / share / filename or \\\\computername\share\filename to check files on network shares.</seg></tuv>
      <tuv xml:lang="es"><seg>El resultado de esta función es cacheado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_readable(), is_writable(), is_file() and file().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is binary-safe.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es segura bináriamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador (ID) de grupo del propietario del fichero, o FALSE en caso de un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>El ID del grupo es devuelto en formato numérico, usar posix_getgrgid() para obtener el nombre del grupo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a readfile(), excepto que file() devuelve el fichero en un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.3.0 file() became binary safe.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada elemento del array corresponde a una línea del fichero, con el caracter de nueva línea incluido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede utilizar el segundo parámetro opcional y ponerle el valor "1", si también se quiere buscar el fichero en el include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also readfile(), fopen(), fsockopen(), popen(), file_get_contents(), and include().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también readfile(), fopen(), y popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the inode number of the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de inode del fichero, o FALSE en caso de un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el momento en el que el fichero fue modificado por última vez, o FALSE en caso de un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. filemtime() example</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados de esta función son cacheados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also filectime(), stat(), touch(), and getlastmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the user ID of the owner of the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador (ID) de usuario del propietario del fichero, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="es"><seg>El ID de usuario se devuelve en formato numérico, usar posix_getpwuid() para obtener el nombre del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the permissions on the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve los permisos del fichero, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of fields (columns) in the opened filePro database.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el numero de campos (columnas) existentes en la base de datos filePro abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also filepro().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien filepro().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the name of the field corresponding to field_number.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre del campo correspondiente a field_number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the edit type of the field corresponding to field_number.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el tipo de campo del campo correspondiente a field_number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the width of the field corresponding to field_number.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la anchura de el campo correspondiente a field_number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No locking is done, so you should avoid modifying your filePro database while it may be opened in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Lee y verifica el fichero de mapeo, guardando la relacion de campos e informacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Ningun bloqueo es realizado, por ello, no se deberia modificar la base de datos filePro cuando puede ser abierta con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la informacion de la base de datos contenida en la localizacion especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el numero de filas (entradas) existentes en la base de datos filePro abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the size of the file in bytes, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el tamaño del fichero, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible values are fifo, char, dir, block, link, file, and unknown.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el tipo de fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE if an error occurs. filetype() will also produce an E_NOTICE message if the stat call fails or if the file type is unknown.</seg></tuv>
      <tuv xml:lang="es"><seg>Valores posibles son fifo, char, dir, block, link, file, y unknown.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si ocurre un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: is_dir(), is_file(), is_link(), file_exists(), and stat().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To acquire a shared lock (reader), set operation to LOCK_SH (set to 1 prior to PHP 4.0.1).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta un método portable de bloquear ficheros completos de manera asesorada (lo que significa que todos los programas que acceden tienen que usar el mismo modo de bloqueo o éste no funcionará).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To release a lock (shared or exclusive), set operation to LOCK_UN (set to 3 prior to PHP 4.0.1).</seg></tuv>
      <tuv xml:lang="es"><seg>flock() opera sobre fp el cual debe ser un apuntador a un fichero abierto. operation toma uno de los siguientes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flock() allows you to perform a simple reader / writer model which can be used on virtually every platform (including most Unix derivatives and even Windows).</seg></tuv>
      <tuv xml:lang="es"><seg>Para que adquiera un bloqueo compartido (lectura), fija operation a 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Para adquirir un bloqueo exclusivo (escritura), fija operation a 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Para liberar un bloqueo (compartido o exclusivo), fija operation a 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Check your operating system documentation for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no quieres que flock() bloquee mientras está activado, suma 4 al valor de operation.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using a multithreaded server API like ISAPI you may not be able to rely on flock() to protect files against other PHP scripts running in parallel threads of the same server instance!</seg></tuv>
      <tuv xml:lang="es"><seg>flock() permite establece un modelo simple de lectura / escritura el cual puede usarse en prácticamente cualquier plataforma (incluyendo la mayoria de sistemas Unix e incluso Windows).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flock() is not supported on antiquated filesystems like FAT and its derivates and will therefore always return FALSE under this environments (this is especially true for Windows 98 users).</seg></tuv>
      <tuv xml:lang="es"><seg>flock() devuelve TRUE en caso de éxito y FALSE en caso de error (ej. cuando no se puede establecer un bloqueo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next lowest integer value by rounding down value if necessary.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor entero inferior más cercano a number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value of floor() is still of type float because the value range of float is usually bigger than that of integer.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de floor() con enteros es una perdida de tiempo absoluta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. floor() example</seg></tuv>
      <tuv xml:lang="es"><seg>Use: $new = (double)floor($number); para tener el comportamiento antiguo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ceil() and round().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ceil() y round().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Netscape, for example, buffers text until it receives an end-of-line or the beginning of a tag, and it won 't render tables until the / table tag of the outermost table is seen.</seg></tuv>
      <tuv xml:lang="es"><seg>Flushes the output buffers of PHP and whatever backend PHP is using (CGI, a web server, etc.) This effectively tries to push all the output so far to the user 's browser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If filename is of the form "scheme: / /.. .", it is assumed to be a URL and PHP will search for a protocol handler (also known as a wrapper) for that scheme.</seg></tuv>
      <tuv xml:lang="es"><seg>Si filename comienza con "http: / /" (no es sensible a mayúsculas), se abre una conexión HTTP 1.0 hacia el servidor especificado y se devuelve un apuntador de fichero al comienzo del texto de respuesta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no wrappers for that protocol are registered, PHP will emit a notice to help you track potential problems in your script and then continue as though filename specifies a regular file.</seg></tuv>
      <tuv xml:lang="es"><seg>No maneja redirecciones HTTP, por eso se debe incluir una barra final cuando se trata de directorios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file must be accessible to PHP, so you need to ensure that the file access permissions allow this access.</seg></tuv>
      <tuv xml:lang="es"><seg>Si filename comienza con "ftp: / /" (no es sensible a mayúsculas), se abre una conexión ftp hacia el servidor especificado y se devuelve un apuntador al fichero requerido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have enabled safe_mode, or open_basedir further restrictions may apply.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el servidor no soporta ftp en modo pasivo, esto fallará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP has decided that filename specifies a registered protocol, and that protocol is registered as a network URL, PHP will check to make sure that allow_url_fopen If PHP has decided that filename specifies a registered protocol, and that protocol is registered as a network URL, PHP will check to make sure that allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Si filename no comienza con nada de lo anterior, el fichero se abre del sistema de ficheros, y se devuelve un apuntador al fichero abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si el abrir el fichero falla, la función devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The list of supported protocols can be found in Appendix I.</seg></tuv>
      <tuv xml:lang="es"><seg>mode puede ser cualquiera de lo siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may be any of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>'r' - Abre para sólo lectura; sitúa el apuntador del fichero al comienzo del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>'r' - Open for reading only; place the file pointer at the beginning of the file.</seg></tuv>
      <tuv xml:lang="es"><seg>'r+' - Abre para lectura y escritura; situa el apuntador del fichero al comienzo del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>'w' - Open for writing only; place the file pointer at the beginning of the file and truncate the file to zero length.</seg></tuv>
      <tuv xml:lang="es"><seg>'w' - Abre para sólo escritura; sitúa el apuntador del fichero al comienzo del fichero y trunca el fichero con longitud cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file does not exist, attempt to create it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el fichero no existe, trata de crearlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file does not exist, attempt to create it.</seg></tuv>
      <tuv xml:lang="es"><seg>'w+' - Abre el fichero para lectura y escritura; sitúa el apuntador del fichero al comienzo del fichero y trunca el fichero con longitud cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>'a' - Open for writing only; place the file pointer at the end of the file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el fichero no existe, trata de crearlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>'a+' - Open for reading and writing; place the file pointer at the end of the file.</seg></tuv>
      <tuv xml:lang="es"><seg>'a' - Abre sólo para escribir (añadir); sitúa el apuntador del fichero al final del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si el fichero no existe, trata de crearlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful only on systems which differentiate between binary and text files (i.e.</seg></tuv>
      <tuv xml:lang="es"><seg>'a+' - Abre para lectura y escritura (añadiendo); sitúa el apuntador del fichero al final del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s useless on Unix).</seg></tuv>
      <tuv xml:lang="es"><seg>Si el fichero no existe, trata de crearlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You are encouraged to include the 'b' flag in order to make your scripts more portable.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usarse el tercer parámetro opcional y fijarlo a "1", si también se quiere buscar el fichero en el include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third use_include_path parameter can be set to '1' or TRUE if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de fopen( )()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the open fails, the function returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>$fp = fopen( "/ home / rasmus / file.txt", "r"); $fp = fopen("http: / /www.php.net /", "r"); $fp = fopen("ftp: / /user:password@example.com / ", "w");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = fopen ("/ home / rasmus / file.txt", "r"); $handle = fopen (" / home / rasmus / file.gif", "wb"); $handle = fopen ("http: / /www.example.com /", "r"); $handle = fopen ("ftp: / /user:password@example.com / somefile.txt", "w");?</seg></tuv>
      <tuv xml:lang="es"><seg>Si experimentas problemas a la hora de leer y escribir a ficheros y estas usando la version de PHP como módulo para el servidor, recuerda que debes asegurar que los ficheros y directorios que estas usando son accesibles al proceso servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On the Windows platform, be careful to escape any backslashes used in the path to the file, or use forward slashes.</seg></tuv>
      <tuv xml:lang="es"><seg>En la plataforma Windows, ten cuidado de escribir correctamente las barras invertidas en el path del fichero (poniéndolas dobles), o usa barras directas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = fopen ("c:\\data\\info.txt", "r");?</seg></tuv>
      <tuv xml:lang="es"><seg>$fp = fopen( "c:\\data\\info.txt", "r");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also Appendix I, fclose(), fgets(), fsockopen(), file(), file_exists(), is_readable(), socket_set_timeout(), and popen().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fclose(), fsockopen(), y popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, fpassthru() returns the number of characters read from handle and passed through to the output.</seg></tuv>
      <tuv xml:lang="es"><seg>Lee hasta el EOF del fichero apuntado y escribe los resultados a la salida estándar (stdout).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, fpassthru() devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file is closed when fpassthru() is done reading it (leaving handle useless).</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser válido, y debe apuntar a un fichero abierto con éxito por fopen(), popen(), o fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>El fichero se cierra cuando fpassthru() termina de leerlo (dejando fp sin ninguna utilidad).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You are encouraged to use the b flag when dealing with binary files, even if your system does not require it, so that your scripts will be more portable.</seg></tuv>
      <tuv xml:lang="es"><seg>Si sólo quieres volcar el contenido de un fichero a stdout puedes If you just want to dump the contents of a file to stdout you may usar la función readfile(), la cual te libra de la llamada a fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also readfile(), fopen(), popen(), and fsockopen()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también readfile(), fopen(), popen(), y fsockopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sprintf(): zero-padded integers</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. sprintf(): zero-padded integers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. sprintf(): formatting currency</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. sprintf(): formatting currency</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fputs() is an alias to fwrite(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>fputs() es un alias de fwrite(), y es idéntico a él en todo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the length parameter is optional and if not specified the entire string will be written.</seg></tuv>
      <tuv xml:lang="es"><seg>Notar que el parámetro length es opcional y si no se pone la cadena entera será escrita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading stops when length bytes have been read or EOF (end of file) reached, whichever comes first.</seg></tuv>
      <tuv xml:lang="es"><seg>fread() lee hasta length bytes del apuntador de fichero referenciado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>La lectura acaba cuando length bytes se han leido o se alcanza EOF, lo que ocurra primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows) the file must be opened with'b 'included in fopen() mode parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>/ / Mete el contenido de un fichero en una cadena $filename = "/ usr / local / something.txt"; $fd = fopen ($filename, "r"); $contents = fread ($fd, filesize ($filename)); fclose ($fd);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fwrite(), fopen(), fsockopen(), popen(), fgets(), fgetss(), fscanf(), file(), and fpassthru().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fwrite(), fopen(), fsockopen(), popen(), fgets(), fgetss(), file(), y fpassthru().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts a date from the French Republican Calendar to a Julian Day Count.</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una fecha del Calendario Republicano Francés a la Cuenta de Días Juliana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These routines only convert dates in years 1 through 14 (Gregorian dates 22 September 1792 through 22 September 1806).</seg></tuv>
      <tuv xml:lang="es"><seg>Estas rutinas sólo convierten fechas entre los años 1 y 14 (fechas Gregorianas del 22 de septiembre de 1792 al 22 de septiembre de 1806).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This more than covers the period when the calendar was in use.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto cubre ampliamente el periodo en el que estuvo en uso este calendario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FTP functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones FTP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fscanf() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. fscanf() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. users.txt</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. users.txt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the file position indicator for the file referenced by handle .The new position, measured in bytes from the beginning of the file, is obtained by adding offset to the position specified by whence, whose values are defined as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>Fija el indicador de posición del fichero referenciado por fp a tantos bytes como indica offset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SEEK_CUR - Set position to current location plus offset.</seg></tuv>
      <tuv xml:lang="es"><seg>Es equivalente a la llamada (en C) fseek(fp, offset, SEEK_SET).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If whence is not specified, it is assumed to be SEEK_SET.</seg></tuv>
      <tuv xml:lang="es"><seg>Si va bien, devuelve 0; en otro caso, devuelve -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that seeking past EOF is not considered an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Tener en cuenta que situarse más alla de EOF no se considera un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>No puede usarse sobre apuntadores de ficheros devueltos por fopen() si usan los formatos "http: / / "or "ftp: / /".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ftell() and rewind().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ftell() y rewind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Initiates a stream connection in the Internet (AF_INET, using TCP or UDP) or Unix (AF_UNIX) domain.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicia una conexión de dominio Internet (AF_INET) o Unix (AF_UNIX).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For UDP connections, you need to explicitly specify the protocol by prefixing hostname with 'udp: / /'.</seg></tuv>
      <tuv xml:lang="es"><seg>Para el domino Internet, abrirá una conexión TCP hacia el ordenador hostname en el puerto port.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional timeout can be used to set a timeout in seconds for the connect system call.</seg></tuv>
      <tuv xml:lang="es"><seg>Para el dominio Unix, hostname se usará como ruta al socket, port debe ser 0 para este caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to set a timeout for reading / writing data over the socket, use socket_set_timeout(), as the timeout parameter to fsockopen() only applies while connecting the socket.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional timeout se puede usar para especificar un timeout en segundos para establecer la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fsockopen() returns a file pointer which may be used together with the other file functions (such as fgets(), fgetss(), fputs(), fclose(), and feof()).</seg></tuv>
      <tuv xml:lang="es"><seg>fsockopen() devuelve un puntero a fichero, el cual se puede usar junto con las otras funciones de ficheros (como fgets(), fgetss(), fputs(), fclose(), feof()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the value returned in errno is 0 and the function returned FALSE, it is an indication that the error occurred before the connect() call.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la llamada falla, esta devolverá falso y si los parámetros opcionales errno y errstr están presentes, indicarán el error del sistema que ocurrió en la llamada connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the errno and errstr arguments will always be passed by reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Si errno es 0 y la función devolviá falso, nos indica que el error ocurrió antes de la llamada connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The socket will by default be opened in blocking mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es debido principalmente a problemas inicializando el socket.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fsockopen() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Observe que los argumentos errno y errstr deben ser pasados por referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Dependiendo del entorno, el dominio Unix o el parámetro opcional, timeout puede no estar disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $fp = fsockopen( "udp: / /127.0.0.1", 13, $errno, $errstr); if (!$fp) {echo "ERROR: $errno - $errstr br \n";} else {fwrite($fp ,"\n"); echo fread($fp, 26); fclose($fp);}?</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, el socket será abierto en modo de bloqueo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UDP sockets will sometimes appear to have opened without an error, even if the remote host is unreachable.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede cambiarlo a modo de no bloqueo usando set_socket_blocking().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error will only become apparent when you read or write data to / from the socket.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo con fsockopen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>$fp = fsockopen( "www.php.net", 80, $errno, $errstr, 30); if(!$fp) {echo "$errstr ($errno) br \n";} else {fputs($fp ,"GET / HTTP / 1.0\n\n"); while(!feof($fp)) {echo fgets($fp,128);} fclose($fp);}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the position of the file pointer referenced by handle; i.e., its offset into the file stream.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la posición del apuntador de fichero referenciado por fp; es decir, la distancia en la secuencia del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen() or popen().</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser válido, y debe referirse a The file pointer must be valid, and must point to a file un fichero abierto con éxito por fopen() o popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fopen(), popen(), fseek(), and rewind().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fopen(), popen(), fseek() y rewind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changes to the parent directory.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Cambia al directorio padre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changes to the specified directory.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Cambia al directorio especificado por el parámetro directory.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_connect() opens an FTP connection to the specified host.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene éxito, devuelve un flujo FTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The port The port parameter specifies an alternate port to connect to.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The timeout parameter specifies the timeout for all subsequent network operations.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_connect() establece una conexión FTP al host ftp_connect() establece una conexión FTP al host especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The timeout can be changed and queried at any time with ftp_set_option() and ftp_get_option().</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro port especifica un puerto alternativo al que conectar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The timeout parameter became available in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se omite o es cero, se usa el puerto FTP por defecto, 21.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_delete() deletes the file specified by path from the FTP server.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_delete() borra el fichero especificado por el parámetro path del servidor FTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, fp.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene éxito, devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The transfer mode specified must be either FTP_ASCII or FTP_BINARY.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resumepos parameter was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_fget() baja el fichero remote_file del servidor FTP, y lo escribe en el puntero a fichero fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ftp_get().</seg></tuv>
      <tuv xml:lang="es"><seg>El modo de transferencia especificado por el parámetro mode debe ser FTP_ASCII o bien FTP_BINARY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_fput() uploads the data from the file pointer fp until the end of the file is reached.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results are stored in remote_file on the FTP server.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_fput() sube los datos apuntados por el puntero a fichero fp hasta alcanzar el final del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados se guardan en el fichero remote_file del FTP remoto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>El modo de transferencia especificado por el parámetro mode debe ser FTP_ASCII o bien FTP_BINARY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_get() retrieves remote_file from the FTP server, and saves it to local_file ftp_get() retrieves remote_file from the FTP server, and saves it to local_file locally.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene éxito, devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resumepos parameter was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_get() baja el fichero remote_file del servidor FTP, y lo guarda localmente como local_file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ftp_fget() and ftp_async_get().</seg></tuv>
      <tuv xml:lang="es"><seg>El modo de transferencia especificado por el parámetro mode debe ser FTP_ASCII o bien FTP_BINARY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_get_option() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ftp_get_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Logs in to the given FTP stream.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicia una sesion (envía identificador de usuario y contraseña) en el flujo FTP especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_mdtm() checks the last modified time for a file, and returns it as a UNIX timestamp.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, or the file does not exist, -1 is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_mdtm() comprueba la fecha de última modificación de un fichero, y la devuelve como una marca de tiempo UNIX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a UNIX timestamp on success, or -1 on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se produce algún error, o el fichero no existe, devuelve -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all servers support this feature!</seg></tuv>
      <tuv xml:lang="es"><seg>Tenga en cuenta que no todos los servidores soportan esta característica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates the specified directory.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the newly created directory name on success or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Crea el directorio especificado por el parámetro directory.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_nb_get() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ftp_nb_get() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_nb_put() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ftp_nb_put() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of filenames from the specified directory on success or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It turns off passive mode if pasv is FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene éxito, devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In passive mode, data connections are initiated by the client, rather than by the server.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_pasv() activa el modo pasivo si el parámetro pasv es TRUE (desactiva el modo pasivo si pasv es FALSE.) En modo pasivo, las conexiones de datos son iniciadas por el cliente, en lugar de ser iniciadas por el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_put() stores local_file on the FTP server, as remote_file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene éxito, devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_put() sube el fichero local local_file al servidor FTP y lo guarda como remote_file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$upload = ftp_put( $conn_id, $destination_file, $source_file, FTP_ASCII);</seg></tuv>
      <tuv xml:lang="es"><seg>El modo de transferencia especificado por el parámetro mode debe ser FTP_ASCII o bien FTP_BINARY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current directory or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el directorio actual, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_quit() is an alias for ftp_close().</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_connect() cierra el flujo FTP ftp_stream.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_rawlist() executes the FTP LIST command, and returns the result as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_rawlist() ejecuta el comando FTP LIST, y devuelve el resultado como un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each array element corresponds to one line of text.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada elemento del array corresponde a una línea de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output is not parsed in any way.</seg></tuv>
      <tuv xml:lang="es"><seg>La salida no se procesa de ninguna forma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The system type identifier returned by ftp_systype() can be used to determine how the results should be interpreted.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede utilizar el identificador de tipo de sistema devuelto por ftp_systype() para determinar cómo se deben interpretar los resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_rename() renames the file or directory that is currently named from to the new name to, using the FTP stream ftp_stream.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>ftp_rename() renombra el fichero especificado por el parámetro from con el nuevo nombre to</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Removes the specified directory.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Borra el directorio especificado por el parámetro directory.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_set_option() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ftp_set_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, of if the file does not exist, -1 is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene éxito devuelve el tamaño del fichero, o -1 en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the file size on success, or -1 on error.</seg></tuv>
      <tuv xml:lang="es"><seg>No todos los servidores soportan esta característica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the remote system type, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el tipo de sistema remoto, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the argument which is at the arg_num 'th offset into a user-defined function's argument list.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el argumento que está en la posición arg_num en la lista de argumentos de una función definida por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function arguments are counted starting from zero. func_get_arg() will generate a warning if called from outside of a function definition.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos de la función se cuentan comenzando por la posición cero. func_get_arg() generará un aviso si se llama desde fuera de la definición de la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If arg_num is greater than the number of arguments actually passed, a warning will be generated and func_get_arg() will return FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si arg_num es mayor que el número de argumentos pasados realmente, se generará un aviso y func_get_arg() devolverá FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {$numargs = func_num_args(); echo "Number of arguments: $numargs br \n"; if ($numargs = 2) {echo "Second argument is: ". func_get_arg (1)." br \n";}} foo (1, 2, 3);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php function foo() {$numargs = func_num_args(); echo "Number of arguments: $numargs br \n"; if ($numargs = 2) {echo "Second argument is: ". func_get_arg (1)." br \n";}} foo (1, 2, 3);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>func_get_arg() may be used in conjunction with func_num_args() and func_get_args() to allow user-defined functions to accept variable-length argument lists.</seg></tuv>
      <tuv xml:lang="es"><seg>func_get_arg() puede utilizarse conjuntamente con func_num_args() y func_get_args() para permitir a las funciones definidas por el usuario que acepten listas de argumentos de longitud variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was added in PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array in which each element is the corresponding member of the current user-defined function' s argument list. func_get_args() will generate a warning if called from outside of a function definition.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array en el que cada elemento es el miembro correspondiente de la lista de argumentos de la función definida por el usuario actual. func_get_args() generará un aviso si es llamada desde fuera de la definición de la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {$numargs = func_num_args(); echo "Number of arguments: $numargs br \n"; if ($numargs = 2) {echo "Second argument is: ". func_get_arg (1)." br \n";} $arg_list = func_get_args(); for ($i = 0; $i $numargs; $i++) {echo "Argument $i is: ". $arg_list[$i]." br \n";}} foo (1, 2, 3);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php function foo() {$numargs = func_num_args(); echo "Number of arguments: $numargs br \n"; if ($numargs = 2) {echo "Second argument is: ". func_get_arg (1)." br \n";} $arg_list = func_get_args(); for ($i = 0; $i $numargs; $i+ +) {echo "Argument $i is: ". $arg_list[$i]." br \n";}} foo (1, 2, 3);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>func_get_args() may be used in conjunction with func_num_args() and func_get_arg() to allow user-defined functions to accept variable-length argument lists.</seg></tuv>
      <tuv xml:lang="es"><seg>func_get_args() puede utilizarse conjuntamente con func_num_args() y func_get_arg() para permitir a las funciones definidas por el usuario que acepten listas de argumentos de longitud variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of arguments passed into the current user-defined function. func_num_args() will generate a warning if called from outside of a user-defined function.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de argumentos pasados a la función actual definida por el usuario. func_num_args() generará un aviso si es llamada desde fuera de la definición de la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {$numargs = func_num_args(); echo "Number of arguments: $numargs\n";} foo (1, 2, 3); / / Prints'Number of arguments:</seg></tuv>
      <tuv xml:lang="es"><seg>?php function foo() {$numargs = func_num_args(); echo "Number of arguments: $numargs\n";} foo (1, 2, 3); / / Prints 'Number of arguments:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>func_num_args() may be used in conjunction with func_get_arg() and func_get_args() to allow user-defined functions to accept variable-length argument lists.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulta la lista de funciones definidas buscando function_name (nombre de función).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also method_exists() and get_defined_functions().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si encuentra el nombre de función dado, FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fwrite() returns the number of bytes written, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>fwrite() escribe el contenido de string al fichero apuntado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si se da el argumento length, la escritura acaba antes de que length bytes sean escritos o se alcance el final de string, lo que ocurra primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows) the file must be opened with'b 'included in fopen() mode parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Tener en cuenta que si se da el argumento length, entonces la opción de configuración magic_quotes_runtime será ignorada y los caracteres de barra no se quitarán de la cadena string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fopen(), fsockopen(), popen(), and fputs().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fread(), fopen(), fsockopen(), popen(), y fputs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getallheaders() is an alias for apache_request_headers().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve asociados en un vector todas las cabeceras de la actual petición HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read the apache_request_headers() documentation for more information on how this function works.</seg></tuv>
      <tuv xml:lang="es"><seg>También puedes obtener los valores de las variables de los CGIs mediante variables de entorno, que funcionan, esté o no el PHP funcionando como módulo del Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.3.0, getallheaders() became an alias for apache_request_headers().</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Essentially, it was renamed.</seg></tuv>
      <tuv xml:lang="es"><seg>ObtenerTodaslasCabeceras() Ejemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is because this function only works when PHP is compiled as an Apache Module.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also apache_request_headers().</seg></tuv>
      <tuv xml:lang="es"><seg>ObtenerTodaslasCabeceras() actualmente solo funcionará si el PHP es cargado como módulo del Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>get_browser() attempts to determine the capabilities of the user's browser.</seg></tuv>
      <tuv xml:lang="es"><seg>get_browser() intenta determinar las características del navegador del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done by looking up the browser 's information in the browscap.ini file.</seg></tuv>
      <tuv xml:lang="es"><seg>Para ello consulta el fichero de información del navegador, browscap.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, the value of HTTP_USER_AGENT is used; however, you can alter this (i.e., look up another browser's info) by passing the optional user_agent parameter to get_browser().</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, se utiliza el valor de $HTTP_USER_AGENT; sin embargo, puede alterar ésto (i.e., consultando otra información del navegador) pasando el parámetro opcional user_agent a get_browser().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The information is returned in an object, which will contain various data elements representing, for instance, the browser' s major and minor version numbers and ID string; TRUE / FALSE values for features such as frames, JavaScript, and cookies; and so forth.</seg></tuv>
      <tuv xml:lang="es"><seg>La información se devuelve en un objto, que contendrá varios elementos de datos que representan, por ejemplo, los números de versión (mayor y menor) del navegador y la cadena ID; valores TRUE / false para características como los marcos, JavaScript, y cookies; etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While browscap.ini contains information on many browsers, it relies on user updates to keep the database current.</seg></tuv>
      <tuv xml:lang="es"><seg>browscap.ini contiene información de muchos navegadores, depende de las actualizaciones del usuario para mantener la base de datos actualizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format of the file is fairly self-explanatory.</seg></tuv>
      <tuv xml:lang="es"><seg>El formato del fichero es claramente auto-explicativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example shows how one might list all available information retrieved about the user 's browser.</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo siguiente muestra como se puede listar toda la información disponible recuperada del navegador del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_browser() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo get_browser()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo $_SERVER[ 'HTTP_USER_AGENT']. "hr / \n"; $browser = get_browser(); foreach ($browser as $name = $value) {print" b $name / b $value br / \n";}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php function list_array( $array) {while (list ($key, $value) = each ($array)) {$str .= "b $key: / b $value br \n";} return $str;} echo "$HTTP_USER_AGENT hr \n"; $browser = get_browser(); echo list_array ((array) $browser);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output of the above script would look something like this:</seg></tuv>
      <tuv xml:lang="es"><seg>La salida del script anterior debería paracerse a ésto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586) hr / b browser_name_pattern: / b Mozilla / 4\.5.* br / b parent: / b Netscape 4.0 br / b platform: / b Linux br / b majorver: / b 4 br / b minorver: / b 5 br / b browser: / b Netscape br / b version: / b 4 br / b frames: / b 1 br / b tables: / b 1 br / b cookies: / b 1 br / b backgroundsounds: / b br / b vbscript: / b br / b javascript: / b 1 br / b javaapplets: / b 1 br / b activexcontrols: / b br / b beta: / b br / b crawler: / b br / b authenticodeupdate: / b br / b msn: / b br /</seg></tuv>
      <tuv xml:lang="es"><seg>Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586) hr b browser_name_pattern: / b Mozilla / 4\.5.* br b parent: / b Netscape 4.0 br b platform: / b Unknown br b majorver: / b 4 br b minorver: / b 5 br b browser: / b Netscape br b version: / b 4 br b frames: / b 1 br b tables: / b 1 br b cookies: / b 1 br b backgroundsounds: / b br b vbscript: / b br b javascript: / b 1 br b javaapplets: / b 1 br b activexcontrols: / b br b beta: / b br b crawler: / b br b authenticodeupdate: / b br b msn: / b br</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, the browscap directive is commented out.</seg></tuv>
      <tuv xml:lang="es"><seg>Para conseguir ésto, su opción de fichero de configuración browscap debe apuntar a la correcta localización del fichero browscap.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The only way to test if cookies are accepted is to set one with setcookie(), reload, and check for the value.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información (incluyendo localizaciones desde las que puede obtener un fichero browscap.ini), consulte las FAQ sobre PHP en http: / /www.php.net / FAQ.html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case, you will pass in $HTTP_SERVER_VARS[ 'HTTP_USER_AGENT'].</seg></tuv>
      <tuv xml:lang="es"><seg>Nota: el soporte para browscap fue añadido en la versión 3.0b2 de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current value of the PHP configuration variable specified by varname, or FALSE if an error occurs.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor actual de una variable de configuración de PHP especificada en varname, o FALSE si ocurre un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will not return configuration information set when the PHP was compiled, or read from an Apache configuration file (using the php3_configuration_option directives).</seg></tuv>
      <tuv xml:lang="es"><seg>No devolverá información de la configuracion cuando el PHP fue compilado, o leído desde un fichero de configuración Apache (utilizando las directivas php3_configuration_option directives).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To check whether the system is using a configuration file, try retrieving the value of the cfg_file_path configuration setting.</seg></tuv>
      <tuv xml:lang="es"><seg>Para comprobar si el sistema está utilizando un fichero de configuración, intente recuperar el valor de cfg_file_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ini_get().</seg></tuv>
      <tuv xml:lang="es"><seg>Si está disponible, se está utilizando un fichero de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array of method names defined for the class specified by class_name.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un vector con los nombres de los métodos definidos en la clase especificada como class_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.0.6, you can specify the object itself instead of class_name.</seg></tuv>
      <tuv xml:lang="es"><seg>A partir de PHP 4.0.6, se puede especificar el objeto a sí mismo en vez de class_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_class_methods() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. get_class_methods() ejemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>Producira:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class_vars() and get_object_vars().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también get_class_vars() y get_object_vars().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return an associative array of default properties of the class.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un vector con las propiedades que han sido inicializadas por defecto en la clase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting array elements are in the form of varname = value.</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos de este vector están estan organizados de la forma varname = value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.2.0, Uninitialized class variables will not be reported by get_class_vars().</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables de la clase que no estén inicializadas, no será presentadas por get_class_vars().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_class_vars() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. get_class_vars() ejemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / Before PHP 4.2.0 var2: xyz var3:</seg></tuv>
      <tuv xml:lang="es"><seg>var2: xyz var3:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class_methods(), get_object_vars()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también get_class_methods(), get_object_vars()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the name of the owner of the current PHP script.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre del propietario del script PHP actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getmyuid(), getmygid(), getmypid(), getmyinode(), and getlastmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también getmyuid(), getmypid(), getmyinode(), y getlastmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array containing the date information of the timestamp, or the current local time if no timestamp is given, as the following array elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array asociativo que contiene la información de fecha del valor timestamp como los siguientes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"seconds" - seconds</seg></tuv>
      <tuv xml:lang="es"><seg>"seconds" - segundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"minutes" - minutes</seg></tuv>
      <tuv xml:lang="es"><seg>"minutes" - minutos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"hours" - hours</seg></tuv>
      <tuv xml:lang="es"><seg>"hours" - horas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"mday" - day of the month</seg></tuv>
      <tuv xml:lang="es"><seg>"mday" - día del mes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"wday" - day of the week, numeric: from 0 as Sunday up to 6 as Saturday</seg></tuv>
      <tuv xml:lang="es"><seg>"wday" - día de la semana, en número</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"year" - year, numeric</seg></tuv>
      <tuv xml:lang="es"><seg>"mon" - mes, en número</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"yday" - day of the year, numeric; i.e. "299 "</seg></tuv>
      <tuv xml:lang="es"><seg>"year" - año, en número</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"weekday" - day of the week, textual, full; i.e. "Friday "</seg></tuv>
      <tuv xml:lang="es"><seg>"yday" - día del año, en número; por ejemplo, "299 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. getdate() example</seg></tuv>
      <tuv xml:lang="es"><seg>"weekday" - día de la semana, en texto, completo; por ejemplo, "Friday "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$today = getdate(); $month = $today['month']; $mday = $today['mday']; $year = $today['year']; echo "$month $mday, $year";</seg></tuv>
      <tuv xml:lang="es"><seg>"month" - mes, en texto, completo; por ejemplo, "January "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$ip = getenv ("REMOTE_ADDR"); / / get the ip number of the user</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor de la variable de entorno varname, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can see a list of all the environmental variables by using phpinfo().</seg></tuv>
      <tuv xml:lang="es"><seg>$ip = getenv( "REMOTE_ADDR"); / / get the ip number of the user</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Puede ver una lista de todas las variables de entorno utilizando phpinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also putenv().</seg></tuv>
      <tuv xml:lang="es"><seg>Puede encontrar el significado de la mayoría echando un vistazo en CGI specification (especificación CGI), especialmente en page on environmental variables (página de variables de entorno).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the host name of the Internet host specified by ip_address or a string containing the unmodified ip_address on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve ip_address.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gethostbyname().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gethostbyname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the IP address of the Internet host specified by hostname or a string containing the unmodified hostname on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la dirección IP de una máquina conectada a Internet especificada por hostname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gethostbyaddr().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gethostbyaddr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a list of IP addresses to which the Internet host specified by hostname resolves.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve una lista de direcciones IP pertenecientes a ordenadores especificados por hostname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gethostbyname(), gethostbyaddr(), checkdnsrr(), getmxrr(), and the named(8) manual page.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gethostbyname(), gethostbyaddr(), checkdnsrr(), getmxrr(), y named(8) en las páginas del manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>get_html_translation_table() will return the translation table that is used internally for htmlspecialchars() and htmlentities().</seg></tuv>
      <tuv xml:lang="es"><seg>get_html_translation_table() devolverá la tabla de traducción que se usa internamente para htmlspecialchars() y htmlentities().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And as in the htmlspecialchars() and htmlentities() functions you can optionally specify the quote_style you are working with.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is ENT_COMPAT mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de Tabla de Traducción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>$trad = get_html_translation_table (HTML_ENTITIES); $cad = "Hallo Frau Krämer"; $codif = strtr ($cad, $trad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$trans = get_html_translation_table( HTML_ENTITIES); $str = "Hallo Frau Krämer"; $encoded = strtr($str, $trans);</seg></tuv>
      <tuv xml:lang="es"><seg>Lo interesante es usar la función array_flip() para cambiar la dirección de la traducción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cool thing is using array_flip() to change the direction of the translation.</seg></tuv>
      <tuv xml:lang="es"><seg>$trad = array_flip ($trad); $original = strtr ($cad, $trad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$trans = array_flip( $trans); $original = strtr($encoded, $trans);</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also htmlspecialchars(), htmlentities(), strtr(), and array_flip().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: htmlspecialchars(), htmlentities(), strtr(), y array_flip().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array with 4 elements.</seg></tuv>
      <tuv xml:lang="es"><seg>La función GetImageSize() determinará el tamaño de cualquier fichero de imagen GIF, JPG o PNG y devolverá sus dimensiones junto al tipo de fichero en una cadena de texto que pueda ser usada en una marca HTML IMG normal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Index 1 contains the height.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz con 4 elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 = GIF, 2 = JPG, 3 = PNG, 4 = SWF, 5 = PSD, 6 = BMP, 7 = TIFF( intel byte order), 8 = TIFF(motorola byte order), 9 = JPC, 10 = JP2, 11 = JPX, 12 = JB2, 13 = SWC, 14 = IFF.</seg></tuv>
      <tuv xml:lang="es"><seg>El índice 0 contiene la anchura de la imagen en pixels.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These values correspond to the IMAGETYPE constants that were added in PHP 4.3.</seg></tuv>
      <tuv xml:lang="es"><seg>El índice 1 contiene la altura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. getimagesize (file)</seg></tuv>
      <tuv xml:lang="es"><seg>El índice 2 es una marca indicando el tipo de imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. getimagesize (URL)</seg></tuv>
      <tuv xml:lang="es"><seg>1 = GIF, 2 = JPG, 3 = PNG.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With JPG images, two extra indexes are returned: channels and bits. channels will be 3 for RGB pictures and 4 for CMYK pictures. bits is the number of bits for each color.</seg></tuv>
      <tuv xml:lang="es"><seg>El índice 3 es una cadena de texto con el string correcto "height=xxx width=xxx" para ser usado directamente en una marca IMG.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Beginning with PHP 4.3, bits and channels are present for other image types, too.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, the presence of these values can be a bit confusing.</seg></tuv>
      <tuv xml:lang="es"><seg>GetImageSize</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some formats may contain no image or may contain multiple images.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $size = GetImageSize( "img / flag.jpg");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In these cases, getimagesize() might not be able to properly determine the image size. getimagesize() will return zero for width and height in these cases.</seg></tuv>
      <tuv xml:lang="es"><seg>IMG SRC=" img / flag.jpg "?php echo $size[3];?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This information can be used to deliver images with correct HTTP Content-type headers:</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional imageinfo permite extraer información adicional del fichero de imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $size = getimagesize ($filename); $fp=fopen($filename, "rb"); if ($size $fp) {header("Content-type: {$size['mime']}"); fpassthru($fp); exit;} else {/ / error}?</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente esto devolverá las diferentes marcas APP de los JPG en una matriz asociada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If accessing the filename image is impossible, or if it isn' t a valid picture, getimagesize() will return FALSE and generate a warning.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunos programas usan estas marcas APP para incluir información textual en las imagenes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, this will return the different JPG APP markers as an associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>Uno bastante común incluye información IPTC http: / /www.iptc.org / en la marca APP13.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A very common one is to embed IPTC http: / /www.iptc.org / A very common one is to embed IPTC http: / /www.iptc.org / information in the APP13 marker.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar la función iptcparse() para convertir la marca binaria APP13 en algo leible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the iptcparse() function to parse the binary APP13 marker into something readable.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. getimagesize() returning IPTC</seg></tuv>
      <tuv xml:lang="es"><seg>GetImageSize devolviendo IPTC</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $size = GetImageSize( "testimg.jpg", $info); if (isset($info["APP13"])) {$iptc = iptcparse($info["APP13"]); var_dump($iptc);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not require the GD image library.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>URL support was added in PHP 4.0.5.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no requiere la libreria de imagenes GD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_included_files() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. get_included_files() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the time of the last modification of the current page.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la fecha / hora de la última modificación de la página actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor devuelto está en formato de fecha / hora Unix, adecuado para que sirva a date().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. getlastmod() example</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / outputs e.g. 'Last modified:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo getlastmod()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>March 04 1998 20:43:59 .' echo "Last modified: ". date ("F d Y H:i:s .", getlastmod());?</seg></tuv>
      <tuv xml:lang="es"><seg>/ / outputs e.g. 'Last modified:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you' re interested in getting the last modification time of a different file, consider using filemtime().</seg></tuv>
      <tuv xml:lang="es"><seg>March 04 1998 20:43:59 .' echo "Last modified: ".date ("F d Y H:i:s .", getlastmod());</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date(), getmyuid(), getmygid(), get_current_user(), getmyinode(), getmypid(), and filemtime().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también date(), getmyuid(), get_current_user(), getmyinode(), y getmypid().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So even when get_magic_quotes() returns TRUE neither double quotes, backslashes or NUL's will be escaped.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor de la configuración activa actual de magic_quotes_gpc. (0 desactivado, 1 activado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addslashes(), stripslashes(), get_magic_quotes_runtime(), and ini_get().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también get_magic_quotes_runtime(), set_magic_quotes_runtime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current active configuration setting of magic_quotes_runtime (0 for off, 1 for on).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor de la configuración activa actual de magic_quotes_runtime. (0 desactivado, 1 activado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_magic_quotes_gpc() and set_magic_quotes_runtime().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también get_magic_quotes_gpc(), set_magic_quotes_runtime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting use_include_path to 1 will result in PHP trying to open the file along the standard include path as per the include_path directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Setting use_include_path to 1 will result in PHP trying to open the file along the standard include path as per the include_path Setting use_include_path to 1 will result in PHP trying to open the file along the standard include path as per the include_path directive.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches DNS for MX records corresponding to hostname.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca DNS de registros MX correspondientes a hostname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A list of the MX records found is placed into the array mxhosts.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si encuentra alg£n registro; devuelve falso si no encuentra ninguno o se produce un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the weight array is given, it will be filled with the weight information gathered.</seg></tuv>
      <tuv xml:lang="es"><seg>La lista de registros MX encontrados se colocan en el array mxhosts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not implemented on Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se proporciona el array weight, se rellenará con la información obtenida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also checkdnsrr(), gethostbyname(), gethostbynamel(), gethostbyaddr(), and the named(8) manual page.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también checkdnsrr(), gethostbyname(), gethostbynamel(), gethostbyaddr(), y named(8) de las páginas del manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getmygid(), getmyuid(), get_current_user(), getmypid(), and getlastmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el inodo del script actual, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not implemented on Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también getmyuid(), get_current_user(), getmypid(), y getlastmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current PHP process ID, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el ID del proceso PHP actual, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We recommend against relying on pids in security-dependent contexts.</seg></tuv>
      <tuv xml:lang="es"><seg>Advierta que cuando se ejecuta como un módulo de servidor, diferentes llamadas del script no garantizan que tengan distintos pids.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getmygid(), getmyuid(), get_current_user(), getmyinode(), and getlastmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también getmyuid(), get_current_user(), getmyinode(), y getlastmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the user ID of the current script, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el ID de usuario del script actual, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getmygid(), getmypid(), get_current_user(), getmyinode(), and getlastmod().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también getmypid(), get_current_user(), getmyinode(), y getlastmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un vector con las propiedades definidas en el objecto especificado como obj.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions after PHP 4.2.0, the key will be assigned with a NULL value.</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables declaradas en la clase a la que pertenece obj, que no les ha sido asignado un valor, no serán devueltas en el vector.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of get_object_vars()</seg></tuv>
      <tuv xml:lang="es"><seg>Uso de get_object_vars()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([x] = 1.233 [y] = 3.445 [label] =) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)</seg></tuv>
      <tuv xml:lang="es"><seg>Array ([x] = 1.233 [y] = 3.445) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class_methods() and get_class_vars()!</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien get_class_methods() y get_class_vars()!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getprotobyname() returns the protocol number associated with the protocol name as per / etc / protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>getprotobyname() devuelve el n£mero asociado al nombre del protocolo name del fichero / etc / protocols.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: getprotobynumber().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también getprotobynumber().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getprotobynumber() returns the protocol name associated with protocol number as per / etc / protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>getprotobynumber() devuelve el nombre del protocolo asociado al number del protocolo en el fichero / etc / protocols.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: getprotobyname().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también getprotobyname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the maximum value that can be returned by a call to rand().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor máximo que puede devolver una llamada a rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rand(), srand() and mt_getrandmax().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también rand(), srand() mt_rand(), mt_srand() y mt_getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hexdec</seg></tuv>
      <tuv xml:lang="es"><seg>HexDec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an interface to getrusage( 2).</seg></tuv>
      <tuv xml:lang="es"><seg>Es un interface a getrusage( 2).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an associative array containing the data returned from the system call.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array asociativo que contiene los datos devueltos de la llamada del sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If who is 1, getrusage will be called with RUSAGE_CHILDREN.</seg></tuv>
      <tuv xml:lang="es"><seg>Si who (quien) es 1, getrusage debería llamarse con RUSAGE_CHILDREN.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All entries are accessible by using their documented field names.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las entradas son accesibles utilizando sus nombres de campo documentados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getrusage Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo Getrusage</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getservbyname() returns the Internet port which corresponds to service for the specified protocol as per / etc / services. protocol is either "tcp "or "udp" (in lowercase).</seg></tuv>
      <tuv xml:lang="es"><seg>getservbyname() devuelve el puerto que corresponde al service especificado por el protocol en / etc / services. protocol puede ser tcp o udp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: getservbyport().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también getservbyport().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getservbyport() returns the Internet service associated with port for the specified protocol as per / etc / services. protocol is either "tcp "or "udp" (in lowercase).</seg></tuv>
      <tuv xml:lang="es"><seg>getservbyport() delvuelve el servicio Internet asociado al port para el protocol especificado en / etc / services. protocol puede ser tcp o udp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: getservbyname().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también getservbyname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a translated string if one is found in the translation table, or the submitted message if not found.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve la traducción de la cadena si encuentra una en la tabla de traducciones, o el mensaje enviado si no se encuentra ninguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may use the underscore character '_' as an alias to this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar un carácter de subrayado como un alias para esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gettext() -check</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. gettext() -check</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Set language to German setlocale( LC_ALL, 'de'); / / Specify location of translation tables bindtextdomain("myPHPApp", ". / locale"); / / Choose domain textdomain("myPHPApp"); / / Print a test message print gettext("Welcome to My PHP Application"); / / Or use the alias _() for gettext() print _("Have a nice day");?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Establece el idioma en alemán putenv ("LANG=de"); / / Especifica la localización de las tablas de traducción bindtextdomain ("myPHPApp", ". / locale"); / / Elige un dominio textdomain ("myPHPApp"); / / Imprime un mensaje de prueba print (gettext ("Welcome to My PHP Application"));?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an interface to gettimeofday( 2).</seg></tuv>
      <tuv xml:lang="es"><seg>Es un interfaz para gettimeofday( 2).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an associative array containing the data returned from the system call.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array asociativo que contiene los datos devueltos por esta llamada al sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"sec" - seconds</seg></tuv>
      <tuv xml:lang="es"><seg>"sec" - segundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"usec" - microseconds</seg></tuv>
      <tuv xml:lang="es"><seg>"usec" - microsegundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"minuteswest" - minutes west of Greenwich</seg></tuv>
      <tuv xml:lang="es"><seg>"minuteswest" - minutos al oeste de Greenwich</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"dsttime" - type of dst correction</seg></tuv>
      <tuv xml:lang="es"><seg>"dsttime" - tipo de corrección dst</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Never use gettype() to test for a certain type, since the returned string may be subject to change in a future version.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el tipo de la variable PHP var.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use the is_* functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores posibles de la cadena devuelta son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"double" (for historical reasons "double "is returned in case of a float, and not simply "float")</seg></tuv>
      <tuv xml:lang="es"><seg>"double"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also settype(), is_array(), is_bool(), is_float(), is_integer(), is_null(), is_numeric(), is_object(), is_resource(), is_scalar(), and is_string().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también settype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to the date() function except that the time returned is Greenwich Mean Time (GMT).</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a la función data() Idéntica a la función data() excepto en que la hora devuelta es la de Greenwich (GMT).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, when run in Finland (GMT +0200), the first line below prints "Jan 01 1998 00:00:00", while the second prints "Dec 31 1997 22:00:00 ".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si se utiliza en Finlandia (GMT +0200), la primera línea del ejemplo devuelve "Jan 01 1998 00:00:00", mientras la segunda imprime "Dec 31 1997 22:00:00 ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gmdate() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de gmdate()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo date ("M d Y H:i:s", mktime (0,0,0,1,1,1998)); echo gmdate ("M d Y H:i:s", mktime (0,0,0,1,1,1998));</seg></tuv>
      <tuv xml:lang="es"><seg>echo date( "M d Y H:i:s",mktime(0,0,0,1,1,1998)); echo gmdate ("M d Y H:i:s",mktime(0,0,0,1,1,1998));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date(), mktime(), gmmktime() and strftime().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también date(), mktime() y gmmktime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to mktime() except the passed parameters represents a GMT date.</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a mktime(), excepto en que los parámetros representan una fecha GMT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The result will be a GMP number representing the sum of the arguments.</seg></tuv>
      <tuv xml:lang="es"><seg>The result will be GMP number representing the sum of the arguments.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive value if a b, zero if a = b and negative value if a b.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns positive value if a b, zero if a = b and negative value if a b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates g, s, and t, such that a*s + b*t = g = gcd( a,b), where gcd is the greatest common divisor.</seg></tuv>
      <tuv xml:lang="es"><seg>Calculates g, s, and t, such that a*s + b*t = g = gcd( a,b), where gcd is gretest common divisor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array with respective elements g, s and t.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns array with respective elements g, s and t.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The result is always positive even if either of, or both, input operands are negative.</seg></tuv>
      <tuv xml:lang="es"><seg>The result is always positive even if either of or both input operands are negative.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the hamming distance between a and b.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns the hamming distance between a and a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates a GMP number from an integer or string.</seg></tuv>
      <tuv xml:lang="es"><seg>Creates a GMP number from integer or string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a useful result only if the number actually fits the PHP integer (i.e., signed long type).</seg></tuv>
      <tuv xml:lang="es"><seg>This function returns useful result only if the number actually fits the PHP integer (i.e., signed long type).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if a is a perfect square, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns TRUE if a is a prefect square, FALSE otherwise.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number will be between limiter and zero in value.</seg></tuv>
      <tuv xml:lang="es"><seg>The number will be up to limiter words long.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting a GMP number to a string</seg></tuv>
      <tuv xml:lang="es"><seg>Converting GMP number to string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subtracts b from a and returns the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Subtract b from a and returns the result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HTTP functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones HTTP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Behaves the same as strftime() except that the time returned is Greenwich Mean Time (GMT).</seg></tuv>
      <tuv xml:lang="es"><seg>Se comporta como strftime(), excepto en que la hora devuelta es la de Greenwich (GMT).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, when run in Eastern Standard Time (GMT -0500), the first line below prints "Dec 31 1998 20:00:00", while the second prints "Jan 01 1999 01:00:00 ".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si se utiliza en la zona horaria EST (GMT -0500), la primera línea del ejemplo imprime "Dec 31 1998 20:00:00", mientras la segunda imprime "Jan 01 1999 01:00:00 ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gmstrftime() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de gmstrftime()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>setlocale (LC_TIME, 'en_US'); echo strftime ("%b %d %Y %H:%M:%S", mktime (20,0,0,12,31,98)) ."\n"; echo gmstrftime ("%b %d %Y %H:%M:%S", mktime (20,0,0,12,31,98)) ."\n";</seg></tuv>
      <tuv xml:lang="es"><seg>setlocale ('LC_TIME' ,'en_US'); echo strftime ("%b %d %Y %H:%M:%S",mktime(20,0,0,12,31,98)) ."\n"; echo gmstrftime ("%b %d %Y %H:%M:%S",mktime(20,0,0,12,31,98)) ."\n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strftime().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también strftime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid Range for Gregorian Calendar 4714 B.C. to 9999 A.D.</seg></tuv>
      <tuv xml:lang="es"><seg>El rango válido para el Calendario Gregoriano es desde el 4714 A.C. hasta el 9999 D.C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although this function can handle dates all the way back to 4714 B.C., such use may not be meaningful.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque este programa puede manejar fechas tan lejanas como el 4714 A.C., usarlo no tendría sentido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Gregorian calendar was not instituted until October 15, 1582 (or October 5, 1582 in the Julian calendar).</seg></tuv>
      <tuv xml:lang="es"><seg>El calendario Gregoriano fue instituído el 15 de octubre de 1582 (o el 5 de octubre de 1582 en el calendario Juliano).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some countries did not accept it until much later.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunos países no lo aceptaron hasta mucho después.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, Britain converted in 1752, The USSR in 1918 and Greece in 1923.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, Gran Bretaña se convirtió en 1752, la URSS en 1918 y Grecia en 1923.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most European countries used the Julian calendar prior to the Gregorian.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchos países europeos usaron el calendario Juliano antes que el Gregoriano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The gz-file pointed to by zp is closed.</seg></tuv>
      <tuv xml:lang="es"><seg>El archivo-gz al que apunta zp se cierra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE (verdadero) si fue exitoso, si hubo errores devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The gz-file pointer must be valid, and must point to a file successfully opened by gzopen().</seg></tuv>
      <tuv xml:lang="es"><seg>El puntero al archivo-gz debe ser válido y debe apuntar a un archivo correctamente abierto con gzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the gz-file pointer is at EOF or an error occurs; otherwise returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to readgzfile(), except that gzfile() returns the file in an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Identico a readgzfile(), solo que gzfile() devuelve el fichero en un arreglo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional second parameter and set it to "1", if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede usar el segundo parámetro opcional poniéndolo a "1", si se quiere que la función busque también el archivo en la trayectoria definida como include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also readgzfile(), and gzopen().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también readgzfile(), y gzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a single (uncompressed) character read from the file pointed to by zp.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena conteniendo un caracter en particular (sin comprimir) leído del archivo al que apunta zp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on EOF (as does gzeof()).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE cuando está al final del archivo (al igual que gzeof()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzopen(), and gzgets().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también gzopen(), y gzgets().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a (uncompressed) string of up to length - 1 bytes read from the file pointed to by fp.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena (descomprimida) con longitud - 1 bytes de largo, leída del archivo apuntado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading ends when length - 1 bytes have been read, on a newline, or on EOF (whichever comes first).</seg></tuv>
      <tuv xml:lang="es"><seg>La lectura finaliza cuando se han leído longitud - 1 bytes, ante un salto de linea o un fin-de-archivo (lo que ocurra primero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by gzopen().</seg></tuv>
      <tuv xml:lang="es"><seg>El puntero al archivo-gz debe ser válido y debe apuntar a un archivo correctamente abierto con gzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzopen(), gzgetc(), and fgets().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también gzopen(), gzgetc(), y fgets().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to gzgets(), except that gzgetss() attempts to strip any HTML and PHP tags from the text it reads.</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a gzgets(), excepto que gzgetss intenta quitar cualquier "tag "HTML o PHP del texto que lee.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede usar el tercer parámetro para indicar qué parametros no deben ser extraídos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzgets(), gzopen(), and strip_tags().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también gzgets(), gzopen(), y strip_tags().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a gzip (.gz) file for reading or writing.</seg></tuv>
      <tuv xml:lang="es"><seg>Abre un archivo gzip (.gz) para lectura o escritura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mode parameter is as in fopen() ("rb "or "wb") but can also include a compression level ("wb9") or a strategy: 'f 'for filtered data as in "wb6f", 'h' for Huffman only compression as in "wb1h". (See the description of deflateInit2 in zlib.h for more information about the strategy parameter.)</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro modo es, como en fopen() ("rb "o "wb") pero puede incluir tambien el nivel de compresión ("wb9") o la estrategia: 'f 'para filtrado de datos como en "wb6f", 'h' para comprimir solo por Huffman igual que en "wb1h". (Ver la descripción de deflateInit2 en zlib.h para más información sobre el parámetro de estrategia.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gzopen() can be used to read a file which is not in gzip format; in this case gzread() will directly read from the file without decompression.</seg></tuv>
      <tuv xml:lang="es"><seg>Gzopen puede usarse para leer o escribir un fichero que no esté en formato gzip; en ese caso gzread() leerá el archivo directamente, sin descomprimirlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gzopen() returns a file pointer to the file opened, after that, everything you read from this file descriptor will be transparently decompressed and what you write gets compressed.</seg></tuv>
      <tuv xml:lang="es"><seg>Gzopen devuelve un puntero al archivo abierto y luego, cualquier proceso de lectura o escritura relacionado con ese descriptor de archivo, será transparente: se comprimirá o descomprimirá los datos según la necesidad, de manera automática.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the open fails, the function returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la apertura fallase, se devolverá falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional third parameter and set it to "1", if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede usar el tercer parámetro opcional, poniéndolo a "1", si se quiere buscar también el fichero en la trayectoria include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gzopen() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo de gzopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fp = gzopen ("/ tmp / file.gz", "r");</seg></tuv>
      <tuv xml:lang="es"><seg>$fp = gzopen( "/ tmp / file.gz", "r");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzclose().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también gzclose().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads to EOF on the given gz-file pointer and writes the (uncompressed) results to standard output.</seg></tuv>
      <tuv xml:lang="es"><seg>Lee hasta el Fin-De-Archivo del archivo gz dado, y escribe los resultados (descomprimidos) en la salida standard.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve Falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The gz-file is closed when gzpassthru() is done reading it (leaving zp useless).</seg></tuv>
      <tuv xml:lang="es"><seg>El archivo-gz es cerrado cuando gzpassthru() termina de leerlo (dejando zp sin utilidad).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gzputs() is an alias to gzwrite(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>gzputs() es un alias a gzwrite(), y es absolutamente idéntico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gzread() reads up to length bytes from the gz-file pointer referenced by zp.</seg></tuv>
      <tuv xml:lang="es"><seg>gzread() lee hasta longitud bytes del archivo-gz apuntado por el parámetro zp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading stops when length (uncompressed) bytes have been read or EOF is reached, whichever comes first.</seg></tuv>
      <tuv xml:lang="es"><seg>La lectura termina cuando se han leído longitud bytes (descomprimidos) o se alcanza el fin-de-archivo, lo que sucediera primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / get contents of a gz-file into a string $filename = "/ usr / local / something.txt.gz"; $zd = gzopen ($filename, "r"); $contents = gzread ($zd, 10000); gzclose ($zd);</seg></tuv>
      <tuv xml:lang="es"><seg>/ / Pone los contenidos del gz, a una cadena $filename = "/ usr / local / algo.txt.gz"; $zd = gzopen ($filename, "r"); $contents = gzread ($zd, 10000); gzclose ($zd);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzwrite(), gzopen(), gzgets(), gzgetss(), gzfile(), and gzpassthru().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gzwrite(), gzopen(), gzgets(), gzgetss(), gzfile(), y gzpassthru().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the file position indicator for zp to the beginning of the file stream.</seg></tuv>
      <tuv xml:lang="es"><seg>Reubica el indicador de posición del archivo, al comienzo del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns 0.</seg></tuv>
      <tuv xml:lang="es"><seg>si surge un error, devuelve 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzseek() and gztell().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: gzseek() y gztell().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the file position indicator for the file referenced by zp to offset bytes into the file stream.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca la posición dentro del archivo zp, indicada en bytes por el parametro de desplazamiento offset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Equivalent to calling (in C) gzseek (zp, offset, SEEK_SET).</seg></tuv>
      <tuv xml:lang="es"><seg>Es equivalente a llamar (en C) gzseek (zp, offset, SEEK_SET).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file is opened for reading, this function is emulated but can be extremely slow.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el archivo se abre para lectura, la función será emulada, pero puede ponerse extremadamente lenta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file is opened for writing, only forward seeks are supported; gzseek then compresses a sequence of zeroes up to the new starting position.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se trata de escritura, solo está soportada la búsqueda hacia adelante; gzseek comprime entonces una secuencia de ceros hasta que alcanza la nueva ubicación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon success, returns 0; otherwise, returns -1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se completa el pedido con éxito, devuelve 0; de lo contrario, devuelve -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that seeking past EOF is not considered an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Note que la busqueda más allá del fin-de-archivo no se considera un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gztell() and gzrewind().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también gztell() y gzrewind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the position of the file pointer referenced by zp; i.e., its offset into the file stream.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la posición dentro del fichero referido por zp; p.e., su desplazamiento en el cuerpo del archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay algún error, devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzopen(), gzseek() and gzrewind().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gzopen(), gzseek() y gzrewind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gzwrite() writes the contents of string to the gz-file stream pointed to by zp.</seg></tuv>
      <tuv xml:lang="es"><seg>gzwrite() escribe el contenido de cadena al fichero gz referido por zp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gzwrite() returns the number of (uncompressed) bytes written to the gz-file stream pointed to by zp.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el parámetro largo está presente, se detendrá la escritura luego de escribir largo bytes (descomprimidos) o al llegar el final de la cadena, lo que ocurriese primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that if the length argument is given, then the magic_quotes_runtime configuration option will be ignored and no slashes will be stripped from string.</seg></tuv>
      <tuv xml:lang="es"><seg>Note que si se pasa el argumento largo, la opcion magic_quotes_runtime será ignorada y no se quitarán barras de la cadena en cuestión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzread(), gzopen(), and gzputs().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gzread(), gzopen(), y gzputs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default it will replace, but if you pass in FALSE as the second argument you can force multiple headers of the same type.</seg></tuv>
      <tuv xml:lang="es"><seg>La función header() se utiliza al comienzo de un fichero HTML para enviar las cadenas de texto de la cabecera HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two special-case header calls.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulte la Especificación HTTP 1.1 para obtener más información sobre las cabeceras http.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, if you have configured Apache to use a PHP script to handle requests for missing files (using the ErrorDocument directive), you may want to make sure that your script generates the proper status code.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The status may be overridden by calling header() with a new status line at any time unless the HTTP headers have already been sent.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde que la función header() debe llamarse antes de que se genere salida alguna, bien con etiquetas HTML normales o con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can achieve the same effect using the Status header.</seg></tuv>
      <tuv xml:lang="es"><seg>Un error muy frecuente consiste en leer código con include() o con auto_prepend, y que dicho código inserte espacios o líneas en blanco antes de llamar a header().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second special case is the "Location:" header.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos casos especiales de llamadas a header.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php header( "Location: http: / /www.example.com / "); / * Redirect browser * / exit; / * Make sure that code below does not get executed when we redirect. * /?</seg></tuv>
      <tuv xml:lang="es"><seg>La primera es la cabecera "Location".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can usually use $_SERVER[ 'HTTP_HOST'], $_SERVER['PHP_SELF'] and dirname() to make an absolute URI from a relative one yourself:</seg></tuv>
      <tuv xml:lang="es"><seg>No sólo envía esta cabecera al navegador, sino que también devuelve un código de estado REDIRECT a Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP scripts often generate dynamic content that must not be cached by the client browser or any proxy caches between the server and the client browser.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde el punto de vista del programador de scripts esto no debería ser importante, pero para la gente que comprende las interioridades de Apache sí puede serlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are a number of options that users may be able to set for their browser that change its default caching behavior.</seg></tuv>
      <tuv xml:lang="es"><seg>header( "Location: http: / /www.php.net"); / * Redirect browser to PHP web site * / exit; / * Make sure that code below does not get executed when we redirect. * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, session_cache_limiter() and the session.cache_limiter configuration setting can be used to automatically generate the correct caching-related headers when sessions are being used.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo caso especial se produce con cualquier cabecera que comience con la cadena, "HTTP /" (las mayúsculas no son significativas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is a very common error to read code with include(), or require(), functions, or another file access function, and have spaces or empty lines that are output before header() is called.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si tiene la directiva ErrorDocument 404 de Apache apuntando a un script PHP, es una buena idea asegurarse de que su script de PHP genera realmente un 404.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>html ?php / / This will give an error.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera cosa que debe hacer en su script sería:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>header( "http / 1.0 404 Not Found");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can do this by calling ob_start() and ob_end_flush() in your script, or setting the output_buffering configuration directive on in your php.ini or server configuration files.</seg></tuv>
      <tuv xml:lang="es"><seg>Los scripts de PHP a menudo generan HTML dinámico que no debe almacenarse en la caché del navegador cliente o en la caché de cualquier proxy situado entre el servidor y el navegador cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / We' ll be outputting a PDF header("Content-type: application / pdf"); / / It will be called downloaded.pdf header("Content-Disposition: attachment; filename=downloaded.pdf"); / / The PDF source is in original.pdf readfile('original.pdf');?</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede obligar a muchos proxies y clientes a que deshabiliten el almacenamiento en caché con</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is also a bug in Microsoft Internet Explorer 5.5 that interferes with this, which can be resolved by upgrading to Service Pack 2 or later.</seg></tuv>
      <tuv xml:lang="es"><seg>header( "Expires:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also headers_sent(), setcookie(), and the section on HTTP authentication.</seg></tuv>
      <tuv xml:lang="es"><seg>Mon, 26 Jul 1997 05:00:00 GMT"); / / Date in the past header("Last-Modified: ". gmdate("D, d M Y H:i:s")." GMT"); / / always modified header("Cache-Control: no-cache, must-revalidate"); / / HTTP / 1.1 header("Pragma: no-cache"); / / HTTP / 1.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is similar to hebrev() This function is similar to hebrev() with the difference that it converts newlines (\n) to "br \n".</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion es similar a hebrev() Esta funcion es similar a hebrev() con la diferencia que convierte las nuevas líneas (\n) a "br \n".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter max_chars_per_line indicates maximum number of characters per line will be output.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional max_cars_por_linea indica el máximo número de caracteres que se emitirán por línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function tries to avoid breaking words.</seg></tuv>
      <tuv xml:lang="es"><seg>La función intenta evitar cortar palabras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hebrev()</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hebrev()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hebrevc()</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hebrevc()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the decimal equivalent of the hexadecimal number represented by the hex_string argument. hexdec() converts a hexadecimal string to a decimal number.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el equivalente decimal de el número hexadecimal representado por el argumento hex_string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hexdec() will replace of any non-hexadecimal characters it encounters by 0.</seg></tuv>
      <tuv xml:lang="es"><seg>HexDec convierte una cadena hexadecimal en un número decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. hexdec() example</seg></tuv>
      <tuv xml:lang="es"><seg>El número mayor que puede ser convertido es 7fffffff o 2147483647 en decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also dechex().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la función dechex().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like htmlspecialchars(), it takes an optional third argument which defines character set used in conversion.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es del todo idéntica a htmlspecialchars(), excepto que traduce todos los caracteres que tienen equivalente como entidad HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Presently, the ISO-8859-1 character set is used as the default.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente se utiliza el juego de caracteres ISO-8859-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also html_entity_decode(), get_html_translation_table(), htmlspecialchars(), nl2br(), and urlencode().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también htmlspecialchars() y nl2br().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a string with some of these conversions made; the translations made are those most useful for everyday web programming.</seg></tuv>
      <tuv xml:lang="es"><seg>Ciertos caracteres tienen significados especiales en HTML, y deben ser representados por entidades HTML si se desea preservar su significado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is useful in preventing user-supplied text from containing HTML markup, such as in a message board or guest book application.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve una cadena con dichas conversiones realizadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default mode, ENT_COMPAT, is the backwards compatible mode which only translates the double-quote character and leaves the single-quote untranslated.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es útil para evitar que el texo entrado por el usuario contenga marcas HTML, como ocurre en aplicaciones de foros o libros de visita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The translations performed are:</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente, las traducciones hechas son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>'"' (double quote) becomes' quot; 'when ENT_NOQUOTES is not set.</seg></tuv>
      <tuv xml:lang="es"><seg>'' (ampersand) se convierte en 'amp;'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>'' (less than) becomes' lt; '</seg></tuv>
      <tuv xml:lang="es"><seg>'"' (doble comilla) se convierte en 'quot;'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. htmlspecialchars() example</seg></tuv>
      <tuv xml:lang="es"><seg>'' (menor que) se convierte en 'lt;'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this function does not translate anything beyond what is listed above.</seg></tuv>
      <tuv xml:lang="es"><seg>'' (mayor que) se convierte en 'gt;'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for the optional second argument was added in PHP 3.0.17 and PHP 4.0.3.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que esta función no traduce nada más que lo mostrado más arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default character set is ISO-8859-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Para una traducción de entidades completa, vea htmlentities().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_html_translation_table(), htmlentities() and nl2br().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también htmlentities() y nl2br().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts an object_array into an object record.</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una tabla_objetos en un registro de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiple attributes like 'Title' in different languages are treated properly.</seg></tuv>
      <tuv xml:lang="es"><seg>Los atributos múltiples como 'Título' en distintos idiomas son tratados correctamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_objrec2array().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_objrec2array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object ids.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de id de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each id belongs to a child of the collection with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno de ellos pertenece a un hijo de la colección cuyo ID es IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array contains all children both documents and collections.</seg></tuv>
      <tuv xml:lang="es"><seg>La tabla contiene tanto los documentos como las colecciones hijas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object records.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each object record belongs to a child of the collection with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno de ellos pertenece a un hijo de la colección cuyo ID es IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE if connection is not a valid connection index, otherwise TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si la conexión no es un índice válido de conexión, y TRUE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes down the connection to a Hyperwave server with the given connection index.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra la conexión dada con el servidor de Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a connection to a Hyperwave server and returns a connection index on success, or FALSE if the connection could not be made.</seg></tuv>
      <tuv xml:lang="es"><seg>Abre una conexión con un servidor Hyperwave y devuelve un índice de conexión si hay éxito, o FALSE si la conexión no se pudo realizar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of the arguments should be a quoted string, except for the port number.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada argumento debe ser una cadena entrecomillada salvo el número de puerto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The username and password arguments are optional and can be left out.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos de usuario y clave Los argumentos de usuario y clave son opcionales y pueden omitirse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In such a case no identification with the server will be done.</seg></tuv>
      <tuv xml:lang="es"><seg>En tal caso no se realizará identificación alguna con el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is similar to identify as user anonymous.</seg></tuv>
      <tuv xml:lang="es"><seg>Es similar a identificarse como el usuario 'anonymous'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a connection index that is needed by other Hyperwave functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un índice de conexión que se necesita para otras funciones Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can have multiple connections open at once.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede tener varias conexiones abiertas a la vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keep in mind, that the password is not encrypted.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde que la clave no está encriptada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_pConnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Copies the objects with object ids as specified in the second parameter to the collection with the id destination id.</seg></tuv>
      <tuv xml:lang="es"><seg>Copia los objetos cuyos id se especifican en el segundo parámetro a la colección identificada como id destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value return is the number of copied objects.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor devuelto es el número de objetos copiados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_mv().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_mv().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the object with the given object id in the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Borra el objeto con el id dado como segundo parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will delete all instances of the object.</seg></tuv>
      <tuv xml:lang="es"><seg>Borrará todas las instancias del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if no error occurs otherwise FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si no hay error o FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an th object id of the document to which anchorID belongs.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el id de objeto del documento al que pertenece el IDenlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an th object record of the document to which anchorID belongs.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el registro de objeto del documento al que pertenece el IDenlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uploads the text document to the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Envía el documento de texto al servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object record of the document may not be modified while the document is edited.</seg></tuv>
      <tuv xml:lang="es"><seg>El registro de objeto del documento no puede ser modificado mientras el documento es editado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will only works for pure text documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función sólo funcionará para objetos puros de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will not open a special data connection and therefore blocks the control connection during the transfer.</seg></tuv>
      <tuv xml:lang="es"><seg>No abrirá ninguna conexión especial de datos y por tanto bloquea la conexión de control durante la transferencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_pipedocument(), hw_free_document(), hw_document_bodytag(), hw_document_size(), hw_output_document(), hw_gettext().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_PipeDocument(), hw_FreeDocument(), hw_DocumentBodyTag(), hw_DocumentSize(), hw_OutputDocument(), hw_GetText().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the last error number.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el último número de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the return value is 0 no error has occurred.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el valor devuelto es 0 no ha habido errores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error relates to the last command.</seg></tuv>
      <tuv xml:lang="es"><seg>El error está relacionado con el último comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing the last error message or 'No Error'.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena que contiene el último mensaje de error o 'No Error'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If FALSE is returned, this function failed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si devuelve FALSE es que la función fracasó.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The message relates to the last command.</seg></tuv>
      <tuv xml:lang="es"><seg>El mensaje está relacionado con el último comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Frees the memory occupied by the Hyperwave document.</seg></tuv>
      <tuv xml:lang="es"><seg>Libera la memoria ocupada por el documento Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object ids with anchors of the document with object ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de id de objeto con los enlaces del documento cuyo ID es IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object records with anchors of the document with object ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de registros de objeto con los enlaces del documento cuyo ID es IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the object record for the object with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el registro de objeto para el objeto con ID IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will also lock the object, so other users cannot access it until it is unlocked.</seg></tuv>
      <tuv xml:lang="es"><seg>También bloqueará el objeto, de modo que otros usuarios no podrán acceder al mismo hasta que sea desbloqueado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_unlock(), and hw_getobject().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_Unlock(), hw_GetObject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each object ID belongs to a child collection of the collection with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada ID de objeto pertenece a una colección hija de la colección con ID IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function will not return child documents.</seg></tuv>
      <tuv xml:lang="es"><seg>La función no devolverá documentos hijos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_children(), and hw_getchilddoccoll().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetChildren(), hw_GetChildDocColl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each object records belongs to a child collection of the collection with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno de ellos pertenece a una colección hija de la colección con ID IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_childrenobj(), and hw_getchilddoccollobj().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_ChildrenObj(), hw_GetChildDocCollObj().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns array of object ids for child documents of a collection.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de id de objeto para los documentos hijos de una colección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_children(), and hw_getchildcoll().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetChildren(), hw_GetChildColl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object records for child documents of a collection.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de registros de objeto para los documentos hijos de una colección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_childrenobj(), and hw_getchildcollobj().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_ChildrenObj(), hw_GetChildCollObj().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches for objects in collection with ID objectID and returns an array of object ids.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca objetos en la colección cuyo ID es IDobjeto y devuelve una tabla de ID de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of matches is limited to max_hits.</seg></tuv>
      <tuv xml:lang="es"><seg>El número máximo de resultados será max_resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If max_hits is set to -1 the maximum number of matches is unlimited.</seg></tuv>
      <tuv xml:lang="es"><seg>Si max_resultados vale -1, el número máximo de resultados es ilimitado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The query will only work with indexed attributes.</seg></tuv>
      <tuv xml:lang="es"><seg>La consulta funcionará sólo con atributos indizados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getobjectbyquerycollobj().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetObjectByQueryCollObj().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches for objects in collection with ID objectID and returns an array of object records.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca objetos en la colección cuyo ID es IDobjeto y devuelve una tabla de registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getobjectbyquerycoll().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetObjectByQueryColl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches for objects on the whole server and returns an array of object ids.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca objetos en todo el servidor y devuelve una tabla de id de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getobjectbyqueryobj().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetObjectByQueryObj().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches for objects on the whole server and returns an array of object records.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca objetos en todo el servidor y devuelve una tabla de registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getobjectbyquery().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetObjectByQuery().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the object record for the object with ID objectID if the second parameter is an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el registro de objeto para el objeto cuyo ID es IDobjeto si el segundo parámetro es un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second parameter is an array of integer the function will return an array of object records.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es una tabla la función devolverá una tabla de registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In such a case the last parameter is also evaluated which is a query string.</seg></tuv>
      <tuv xml:lang="es"><seg>En tal caso, el último parámetro, que es una cadena de consulta, también es evaluado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The query string has the following syntax:</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena de consulta tiene la sintáxis siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"!" expr _BAR_ / * NOT * /</seg></tuv>
      <tuv xml:lang="es"><seg>"!" expr _BAR_ / * NO * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>expr "_BAR__BAR_" expr _BAR_ / * OR * /</seg></tuv>
      <tuv xml:lang="es"><seg>expr "_BAR__BAR_" expr _BAR_ / * O * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>expr "" expr _BAR_ / * AND * /</seg></tuv>
      <tuv xml:lang="es"><seg>expr "" expr _BAR_ / * Y * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>attribute operator value</seg></tuv>
      <tuv xml:lang="es"><seg>atributo operador valor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>attribute ::= / * any attribute name (Title, Author, DocumentType...) * /</seg></tuv>
      <tuv xml:lang="es"><seg>atributo ::= / * cualquier atributo (Título, Autor, TipoDocumento...) * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>operator ::= "=" _BAR_ / * equal * /</seg></tuv>
      <tuv xml:lang="es"><seg>operador ::= "=" _BAR_ / * igual * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"" _BAR_ / * less than (string compare) * /</seg></tuv>
      <tuv xml:lang="es"><seg>"" _BAR_ / * menor que (comparación de cadenas) * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"" _BAR_ / * greater than (string compare) * /</seg></tuv>
      <tuv xml:lang="es"><seg>"" _BAR_ / * mayor que (comparación de cadenas) * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"~" / * regular expression matching * /</seg></tuv>
      <tuv xml:lang="es"><seg>"~" / * expresión regular * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The query allows to further select certain objects from the list of given objects.</seg></tuv>
      <tuv xml:lang="es"><seg>La consulta permite seleccionar elementos de la lista de objetos dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike the other query functions, this query may use not indexed attributes.</seg></tuv>
      <tuv xml:lang="es"><seg>Al contrario de otras funciones de búsqueda, esta consulta no puede utilizar atributos indizados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How many object records are returned depends on the query and if access to the object is allowed.</seg></tuv>
      <tuv xml:lang="es"><seg>El número de registros de objeto devueltos depende de la consulta y de si está permitido el acceso al objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getandlock(), and hw_getobjectbyquery().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetAndLock(), hw_GetObjectByQuery().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an indexed array of object ids.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla indizada de id de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each object id belongs to a parent of the object with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada una pertenece a un padre del objeto con ID IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an indexed array of object records plus an associated array with statistical information about the object records.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla indizada de registros de objeto junto a una tabla asociativa con información estadística sobre estos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The associated array is the last entry of the returned array.</seg></tuv>
      <tuv xml:lang="es"><seg>La tabla asociativa es el último elemento de la tabla devuelta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each object record belongs to a parent of the object with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada registro de objeto pertenece a un padre del objeto con ID IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the children of a remote document.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el hijo de un documento remoto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Children of a remote document are remote documents itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Los hijos de documentos remotos son en sí mismos documentos remotos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes sense if a database query has to be narrowed and is explained in Hyperwave Programmers' Guide.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto tiene sentido cuando se afina una consulta de bases de datos y se explica en la Guía de Programación de Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the number of children is 1 the function will return the document itself formated by the Hyperwave Gateway Interface (HGI).</seg></tuv>
      <tuv xml:lang="es"><seg>Si el número de hijos es 1 la función devolverá el documento en sí mismo formateado con la Interfaz de Pasarela de Hyperwave (HGI).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the number of children is greater than 1 it will return an array of object record with each maybe the input value for another call to hw_getremotechildren().</seg></tuv>
      <tuv xml:lang="es"><seg>Si el número de hijos es mayor de 1 devolverá una tabla de registros de objeto, con cada uno posible candidato para otra llamada a hw_GetRemoteChildren().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those object records are virtual and do not exist in the Hyperwave server, therefore they do not have a valid object ID.</seg></tuv>
      <tuv xml:lang="es"><seg>Dichos registros de objeto son virtuales y no existen en el servidor Hyperwave, y por lo tanto no poseen un ID de objeto válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How exactely such an object record looks like is up to the HGI.</seg></tuv>
      <tuv xml:lang="es"><seg>La apariencia exacta de dicho registro de objeto depende del HGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to use this function you should be very familiar with HGIs.</seg></tuv>
      <tuv xml:lang="es"><seg>Si desea usar esta función deberá estar muy familiarizado con los HGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should also consider to use PHP instead of Hyperwave to access external sources.</seg></tuv>
      <tuv xml:lang="es"><seg>También debería considerar el uso del PHP en lugar de Hyperwave para acceder a fuentes externas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding database support by a Hyperwave gateway should be more difficult than doing it in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Añadir soporte de bases de datos a través de una pasarela de Hyperwave resulta más difícil que hacerlo en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getremote().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetRemote().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a remote document.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un documento remoto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remote documents in Hyperwave notation are documents retrieved from an external source.</seg></tuv>
      <tuv xml:lang="es"><seg>Los documentos remotos en la notación de Hyperwave son los obtenidos de una fuente externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Common remote documents are for example external web pages or queries in a database.</seg></tuv>
      <tuv xml:lang="es"><seg>Los documentos remotos típicos son páginas web externas o consultas a bases de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to be able to access external sources throught remote documents Hyperwave introduces the HGI (Hyperwave Gateway Interface) which is similar to the CGI.</seg></tuv>
      <tuv xml:lang="es"><seg>Para poder acceder a las fuentes externas a través de documentos remotos, el Hyperwave presenta el HGI (Hyperwave Gateway Interface - Interfaz de Pasarela de Hyperwave) que es similar al CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, only ftp, http-servers and some databases can be accessed by the HGI.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente, sólo se puede acceder a servidores ftp y http y a algunas bases de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling hw_getremote() returns the document from the external source.</seg></tuv>
      <tuv xml:lang="es"><seg>Llamar a hw_GetRemote() devuelve el documento de la fuente externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to use this function you should be very familiar with HGIs.</seg></tuv>
      <tuv xml:lang="es"><seg>Si desea usar esta función debe familiarizarse con los HGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should also consider to use PHP instead of Hyperwave to access external sources.</seg></tuv>
      <tuv xml:lang="es"><seg>Debería considerar el usar PHP en lugar del Hyperwave para acceder a fuentes externas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding database support by a Hyperwave gateway should be more difficult than doing it in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Añadir soporte de bases de datos a través de una pasarela Hyperwave sería más difícil que hacerlo en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getremotechildren().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetRemoteChildren().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the object records of all anchors pointing to the object with ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve los registros de objeto de todos los enlaces que apuntan al objeto con ID IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object can either be a document or an anchor of type destination.</seg></tuv>
      <tuv xml:lang="es"><seg>El objeto puede ser tanto un documento como un enlace de tipo destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getanchors().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetAnchors().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the document with object ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el documento con ID de objeto IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the document has anchors which can be inserted, they will be inserted already.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el documento tiene enlaces que pueden ser insertados, serán insertados ahora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter rootID / prefix can be a string or an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional IDraiz / prefijo puede ser una cadena o un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is an integer it determines how links are inserted into the document.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es un entero determina la forma en que los enlaces se insertan en el documento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is 0 and will result in links that are constructed from the name of the link 's destination object.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es 0 y los enlaces se crean a partir del nombre del objeto de destino de los mismos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful for web applications.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es útil para aplicaciones web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a link points to an object with name 'internet_movie' the HTML link will be A HREF=" / internet_movie ".</seg></tuv>
      <tuv xml:lang="es"><seg>Si un enlace apunta a un objeto con nombre 'pelicula_internet' el enlace HTML será A HREF=" / pelicula_internet ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The actual location of the source and destination object in the document hierachy is disregarded.</seg></tuv>
      <tuv xml:lang="es"><seg>La posición actual del objeto de destino en la jerarquía de documentos es despreciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will have to set up your web browser, to rewrite that URL to for example '/ my_script.php3 / internet_movie'. 'my_script.php3' will have to evaluate $PATH_INFO and retrieve the document.</seg></tuv>
      <tuv xml:lang="es"><seg>Tendrá que ajustar su navegador web para que reescriba dicho URL a, por ejemplo, '/ mi_script.php3 / pelicula_internet'. 'mi_script.php3' deberá evaluar $PATH_INFO y recuperar el documento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All links will have the prefix '/ my_script.php3 /'.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los enlaces tendrán el prefijo '/ mi_script.php3'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you do not want this you can set the optional parameter rootID / prefix to any prefix which is used instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no desea este efecto puede fijar el parámetro opcional IDraiz / prefijo al prefijo que desee en su lugar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Is this case it has to be a string.</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso deberá ser una cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If rootID / prefix is an integer and unequal to 0 the link is constructed from all the names starting at the object with the id rootID / prefix separated by a slash relative to the current object.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el IDraiz / prefijo es un entero distinto de 0, el enlace se construye con todos los nombres de objeto comenzando con el objeto de id IDraiz / prefijo, separado por una barra relativa al objeto actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If for example the above document 'internet_movie' is located at'a-b-c-internet_movie 'with' - 'being the seperator between hierachy levels on the Hyperwave server and the source document is located at'a-b-d-source' the resulting HTML link would be:</seg></tuv>
      <tuv xml:lang="es"><seg>Si por ejemplo el documento anterior 'pelicula_internet' está situado en 'a-b-c-pelicula_internet 'donde' - 'es el separador entre niveles jerárquicos en el servidor Hyperwave y el documento fuente está situado en 'a-b-d-fuente', el enlace HTML resultante sería:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A HREF=".. / c/internet_movie ".</seg></tuv>
      <tuv xml:lang="es"><seg>A HREF=".. / c/pelicula_internet ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful if you want to download the whole server content onto disk and map the document hierachy onto the file system.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es útil cuando desea bajarse el contenido completo del servidor al disco y mapear la jerarquía de documentos en el sistema de archivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will only work for pure text documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función sólo trabajará en documentos de texto puros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will not open a special data connection and therefore blocks the control connection during the transfer.</seg></tuv>
      <tuv xml:lang="es"><seg>No se abrirá una conexión de datos especial y por tanto bloqueará la conexión de control durante la transferencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_pipedocument(), hw_free_document(), hw_document_bodytag(), hw_document_size(), and hw_output_document().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_PipeDocument(), hw_FreeDocument(), hw_DocumentBodyTag(), hw_DocumentSize(), hw_OutputDocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hw_getusername</seg></tuv>
      <tuv xml:lang="es"><seg>hw_Username</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>(no version information, might be only in CVS)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the username of the connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre de usuario de la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identifies as user with username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>Le identifica como el usuario nombre y clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identification is only valid for the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>La identificación sólo es válida para la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>I do not thing this function will be needed very often.</seg></tuv>
      <tuv xml:lang="es"><seg>No pienso que esta función sea necesaria con mucha frecuancia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In most cases it will be easier to identify with the opening of the connection.</seg></tuv>
      <tuv xml:lang="es"><seg>En muchos casos será más fácil identificarse al abrir la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_Connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks whether a set of objects (documents or collections) specified by the object_id_array is part of the collections listed in collection_id_array.</seg></tuv>
      <tuv xml:lang="es"><seg>Comprueba si el conjunto de objetos (documentos o colecciones) especificado por el parámetro tabla_id_objeto es parte de las colecciones enumeradas en tabla_id_colecciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the fourth parameter return_collections is 0, the subset of object ids that is part of the collections (i.e., the documents or collections that are children of one or more collections of collection ids or their subcollections, recursively) is returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el cuarto parámetro colecciones_devueltas es 0, el subconjunto de id de objeto que es parte de las colecciones (es decir, los documentos o colecciones hijos de una o más colecciones de id de colecciones o de sus subcolecciones, recursivamente) es devuelto en forma de tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the fourth parameter is 1, however, the set of collections that have one or more objects of this subset as children are returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el cuarto parámetro es 1, sin embargo, el conjunto de colecciones que tienen uno o más objetos de este subconjunto como hijos es devuelto como tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option allows a client to, e.g., highlight the part of the collection hierarchy that contains the matches of a previous query, in a graphical overview.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta opción permite a un cliente, p. ej., remarcar en una visualización gráfica la parte de la jerarquía de colecciones que contiene las coincidencias de una consulta previa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns information about the current connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve información sobre la conexión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned string has the following format:</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena devuelta tiene el siguiente formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Serverstring, Host, Port, Username, Port of Client, Byte swapping</seg></tuv>
      <tuv xml:lang="es"><seg>Cadenaservidor, Anfitrión, Puerto, Usuario, Puerto del Usuario, Intercambio de bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inserts a new collection with attributes as in object_array into collection with object ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta una nueva colección con los atributos de la tabla_objetos en la colección cuyo ID de objeto es IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inserts a new document with attributes as in object_record into collection with object ID parentID.</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta un nuevo documento con los atributos del registro_de_objeto en la colección cuyo ID de objeto es IDpadre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to insert a general document of any kind use hw_insertdocument() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función inserta tanto un registro de objeto sólo como un registro de objeto y el texto puro en ASCII dado en texto si este es especificado. si desea insertar un documento general de cualquier tipo, utilice en su lugar hw_insertdocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_insertdocument(), and hw_inscoll().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_InsertDocument(), hw_InsColl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uploads a document into the collection with parent_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Sube un documento a la colección dada por id_padre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The document has to be created before with hw_new_document().</seg></tuv>
      <tuv xml:lang="es"><seg>El documento debe ser creado antes con la función hw_NewDocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure that the object record of the new document contains at least the attributes:</seg></tuv>
      <tuv xml:lang="es"><seg>Asegúrese que el registro de objeto del nuevo documento contenga al menos los atributos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type, DocumentType, Title and Name.</seg></tuv>
      <tuv xml:lang="es"><seg>Type, DocumentType, Title y Name (así, en inglés).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possibly you also want to set the MimeType.</seg></tuv>
      <tuv xml:lang="es"><seg>Posiblemente desee fijar también el MimeType.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions returns the object id of the new document or FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>La función devuelve la id de objeto del nuevo documento, o FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_pipedocument().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_PipeDocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inserts an object into the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta un objeto en el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object can be any valid hyperwave object.</seg></tuv>
      <tuv xml:lang="es"><seg>Este puede consistir en cualquier objeto hyperwave válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the HG-CSP documentation for a detailed information on how the parameters have to be.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea la documentación sobre el HG-CSP si desea información detallada sobre cuáles tienen que ser los parámetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to insert an Anchor, the attribute Position has always been set either to a start / end value or to 'invisible'.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se desea insertar un enlace, el atributo Position siempre se fijará a un valor comienzo / final o a 'invisible'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Invisible positions are needed if the annotation has no correspondig link in the annotation text.</seg></tuv>
      <tuv xml:lang="es"><seg>Las posiciones invisibles se necesitan si la anotación no tiene enlace correspondiente en el texto anotado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_pipedocument(), hw_insertdocument(), hw_insdoc(), and hw_inscoll().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_PipeDocument(), hw_InsertDocument(), hw_InsDoc(), hw_InsColl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Maps a global object id on any hyperwave server, even those you did not connect to with hw_connect(), onto a virtual object id.</seg></tuv>
      <tuv xml:lang="es"><seg>Mapea un id de objeto global en un servidor hyperwave, incluso con aquellos a los que no se ha conectado con hw_connect(), sobre un id virtual de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This virtual object id can then be used as any other object id, e.g. to obtain the object record with hw_getobject().</seg></tuv>
      <tuv xml:lang="es"><seg>Este id virtual se puede utilizar como cualquier otro id de objeto, p. ej. para obtener el registro de objeto por medio de hw_getobject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The server id is the first part of the global object id (GOid) of the object which is actually the IP number as an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>El id de servidor es la primera parte del id global de objeto (GOid) de aquel que es realmene el número IP expresado como entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use this function you will have to set the F_DISTRIBUTED flag, which can currently only be set at compile time in hg_comm.c.</seg></tuv>
      <tuv xml:lang="es"><seg>Para usar esta función deberá activar el indicador F_DISTRIBUTED, que actualmenes sólo se puede fijar en tiempo de compilación desde hg_comm.c.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not set by default.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto está inactivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read the comment at the beginning of hg_comm.c</seg></tuv>
      <tuv xml:lang="es"><seg>Lea el comentario al principio de hg_comm.c</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This command allows to remove, add, or modify individual attributes of an object record.</seg></tuv>
      <tuv xml:lang="es"><seg>Este comando permite eliminar, añadir, o modificar atributos individuales de un registro de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object is specified by the Object ID object_to_change.</seg></tuv>
      <tuv xml:lang="es"><seg>El objeto está especificado por el ID de objeto objeto_a_cambiar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first array remove is a list of attributes to remove.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera tabla, eliminar, es la lista de atributos a eliminar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second array add is a list of attributes to add.</seg></tuv>
      <tuv xml:lang="es"><seg>La segunda tabla, añadir, es la lista de atributos a añadir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to modify an attribute one will have to remove the old one and add a new one. hw_modifyobject() will always remove the attributes before it adds attributes unless the value of the attribute to remove is not a string or array.</seg></tuv>
      <tuv xml:lang="es"><seg>Para modificar un atributo, hay que borrar el antiguo y añadir uno nuevo. hw_modifyobject() siempre eliminará los atributos antes de añadir los nuevos excepto si el valor del atributo a eliminar no es una cadena o una tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last parameter determines if the modification is performed recursively.</seg></tuv>
      <tuv xml:lang="es"><seg>El último parámetro determina si la modificación se realiza de manera recursiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 means recurive modification.</seg></tuv>
      <tuv xml:lang="es"><seg>1 quiere decir que sea recursiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If some of the objects cannot be modified they will be skiped without notice. hw_error() may not indicate an error though some of the objects could not be modified.</seg></tuv>
      <tuv xml:lang="es"><seg>Incluso hw_error() podría no indicar un error aunque alguno de los objetos no pueda ser modificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys of both arrays are the attributes name.</seg></tuv>
      <tuv xml:lang="es"><seg>Las claves de ambas tablas son los nombres de los atributos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of each array element can either be an array, a string or anything else.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de cada elemento de la tabla puede ser una tabla, una cadena o cualquier otra cosa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is an array each attribute value is constructed by the key of each element plus a colon and the value of each element.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es una tabla, cada valor de atributo se construye como la clave de cada elemento más dos puntos y el valor de cada elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is a string it is taken as the attribute value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es una cadena se toma como valor del atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An empty string will result in a complete removal of that attribute.</seg></tuv>
      <tuv xml:lang="es"><seg>Una cadena vacía producirá la supresión completa del atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the value is neither a string nor an array but something else, e.g. an integer, no operation at all will be performed on the attribute.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el valor no es ni cadena ni tabla, sino otra cosa, p. ej. un entero, no se realizará operación alguna en el atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is neccessary if you want to to add a completely new attribute not just a new value for an existing attribute.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es necesario se desea añadir un atributo completamente nuevo, no solamente un nuevo valor para un atributo existente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the remove array contained an empty string for that attribute, the attribute would be tried to be removed which would fail since it doesn 't exist.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la tabla eliminar contuviera una cadena vacía para dicho atributo, este se intentaría suprimir, lo que fallaría porque este no existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following addition of a new value for that attribute would also fail.</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente adición de un nuevo valor para dicho atributo también fallará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 would not even try to remove it and the addition will work.</seg></tuv>
      <tuv xml:lang="es"><seg>Fijando el valor para dicho atributo p. ej. a 0 hará que ni siquiera se intente eliminar, pero funcionará la adición del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to change the attribute 'Name' with the current value'books' into'articles' you will have to create two arrays and call hw_modifyobject().</seg></tuv>
      <tuv xml:lang="es"><seg>Si desea cambiar el atributo 'Nombre' con el valor actual 'libros 'por el de 'artículos' deberá crear dos tablas y llamar a hw_modifyobject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. modifying an attribute</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. modificando un atributo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / $connect is an existing connection to the Hyperwave server / / $objid is the ID of the object to modify $remarr = array( "Name "= "books"); $addarr = array("Name" = "articles"); $hw_modifyobject($connect, $objid, $remarr, $addarr);</seg></tuv>
      <tuv xml:lang="es"><seg>/ / $conexion es una conexión con el servidor Hyperwave / / $idobj es la ID del objeto a modificar $tablasupr = array( "Nombre "= "libros"); $tablaanad = array("Nombre" = "artículos"); $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. adding a completely new attribute</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. añadiendo un atributo completamente nuevo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / $connect is an existing connection to the Hyperwave server / / $objid is the ID of the object to modify $remarr = array( "Name "= 0); $addarr = array("Name" = "articles"); $hw_modifyobject($connect, $objid, $remarr, $addarr);</seg></tuv>
      <tuv xml:lang="es"><seg>/ / $conexion es una conexión con el servidor Hyperwave / / $idobj es la ID del objeto a modificar $tablasupr = array( "Nombre "= 0); $tablaanad = array("Nombre" = "artículos"); $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multilingual attributes, e.g. 'Title', can be modified in two ways.</seg></tuv>
      <tuv xml:lang="es"><seg>Los atributos plurilingües, p. ej. 'Título', se pueden modificar de dos maneras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Either by providing the attributes value in its native form 'language' :'title' or by providing an array with elements for each language as described above.</seg></tuv>
      <tuv xml:lang="es"><seg>O bien proporcionando los valores de los atributos en su forma nativa 'lenguaje' :'título', bien proporcionando una tabla con los elementos para cada lenguaje según se describe más arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would than be:</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo anterior podría quedar entonces:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. modifying Title attribute</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. modificando el atributo Título</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$remarr = array( "Title "= "en:Books"); $addarr = array("Title" = "en:Articles"); $hw_modifyobject($connect, $objid, $remarr, $addarr);</seg></tuv>
      <tuv xml:lang="es"><seg>$tablasupr = array( "Título "= "es:Libros"); $tablaanad = array("Título" = "es:Artículos"); $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. modifying Title attribute</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 4. modificando el atributo Título</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$remarr = array( "Title "= array("en" = "Books")); $addarr = array("Title "= array("en" = "Articles", "ge"= "Artikel")); $hw_modifyobject($connect, $objid, $remarr, $addarr);</seg></tuv>
      <tuv xml:lang="es"><seg>$tablasupr = array( "Título "= array("es" = "Libros")); $tablaanad = array("Título "= array("es" = "Artículos", "ge"= "Artikel")); $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. removing attribute</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 5. eliminando atributos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$remarr = array( "Title "= ""); $addarr = array("Title" = "en:Articles"); $hw_modifyobject($connect, $objid, $remarr, $addarr);</seg></tuv>
      <tuv xml:lang="es"><seg>$tablasupr = array( "Título "= ""); $tablaanad = array("Tñitulo" = "es:Artículos"); $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will remove all attributes with the name 'Title' and adds a new'Title 'attribute.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto eliminará todos los atributos con el nombre 'Título' y añadirá un nuevo atributo 'Título '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This comes in handy if you want to remove attributes recursively.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es útil cuando se desea eliminar atributos de forma recursiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to delete all attributes with a certain name you will have to pass an empty string as the attribute value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita eliminar todos los atributos con un cierto nombre tendrá que pasar una cadena vacía como el valor del atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the attributes' Title', 'Description 'and'Keyword' will properly handle the language prefix.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo los atributos 'Title', 'Description' y 'Keyword '(así, en inglés) manejarán de forma apropiada el prefijo de idioma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If those attributes don' t carry a language prefix, the prefix'xx 'will be assigned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si estos atributos no llevaran prefijo de idioma, se les asignariá el prefijo 'xx'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The 'Name' attribute is somewhat special.</seg></tuv>
      <tuv xml:lang="es"><seg>El atributo 'Name' es bastante especial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In some cases it cannot be complete removed.</seg></tuv>
      <tuv xml:lang="es"><seg>En algunos casos no puede ser completamente eliminado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will get an error message 'Change of base attribute' (not clear when this happens).</seg></tuv>
      <tuv xml:lang="es"><seg>Obtendrá un mensaje de error 'Change of base attribute' ('Cambio de atributo base', no está muy claro cuando ocurre).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore you will always have to add a new Name first and than remove the old one.</seg></tuv>
      <tuv xml:lang="es"><seg>Por tanto, tendrá siempre que añadir un nuevo atributo Name primero y luego eliminar el anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may not suround this function by calls to hw_getandlock() and hw_unlock(). hw_modifyobject() does this internally.</seg></tuv>
      <tuv xml:lang="es"><seg>No debe rodear esta función de llamadas a hw_getandlock() ni a hw_unlock(). hw_modifyobject() ya lo hace internamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Moves the objects with object ids as specified in the second parameter from the collection with id source id to the collection with the id destination id.</seg></tuv>
      <tuv xml:lang="es"><seg>Mueve los objetos cuyas id se especifican en el segundo parámetro desde la colección con id id origen hasta la colección con el id id destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the destination id is 0 the objects will be unlinked from the source collection.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el id de destino es 0, los objetos serán disociados de la colección origen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this is the last instance of that object it will be deleted.</seg></tuv>
      <tuv xml:lang="es"><seg>Si esta fuese la última instancia del objeto, este sería borrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to delete all instances at once, use hw_deleteobject().</seg></tuv>
      <tuv xml:lang="es"><seg>Si desea borrar todas las instancias de una vez, utilice hw_deleteobject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value return is the number of moved objects.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor devuelto es el número de objetos movidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_cp(), and hw_deleteobject().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_cp(), hw_deleteobject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a new Hyperwave document with document data set to document_data and object record set to object_record.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un nuevo documento Hyperwave en el que los datos del documento están fijados a datos_documento y el registro de objeto a registro_de_objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length of the document_data has to passed in document_size This function does not insert the document into the Hyperwave server.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no inserta el documento en el servidor Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_free_document(), hw_document_size(), hw_document_bodytag(), hw_output_document(), and hw_insertdocument().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_FreeDocument(), hw_DocumentSize(), hw_DocumentBodyTag(), hw_OutputDocument(), hw_InsertDocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys of the resulting array are the attributes names.</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte un registro_de_objeto en una tabla de objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multi-value attributes like 'Title' in different languages form its own array.</seg></tuv>
      <tuv xml:lang="es"><seg>Las claves de la tabla resultante son los nombres de los atributos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys of this array are the left part to the colon of the attribute value.</seg></tuv>
      <tuv xml:lang="es"><seg>Los atributos múltiples como 'Título' en distintos idiomas forman su propia tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other multi-value attributes without a prefix form an indexed array.</seg></tuv>
      <tuv xml:lang="es"><seg>Las claves de esta tabla son las partes a la izquierda de los dos puntos del valor del atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional parameter is missing the attributes' Title', 'Description 'and'Keyword' are treated as language attributes and the attributes'Group', 'Parent 'and'HtmlAttr' as non-prefixed multi-value attributes.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente, sólo los atributos 'Title', 'Description' y 'Keyword '(así, en inglés) son correctamente tratados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By passing an array holding the type for each attribute you can alter this behaviour.</seg></tuv>
      <tuv xml:lang="es"><seg>Otros atributos múltiples generan una tabla indizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array is an associated array with the attribute name as its key and the value being one of HW_ATTR_LANG or HW_ATTR_NONE</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente, sólo el atributo 'Group' es tratado correctamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_array2objrec().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_array2objrec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a connection index on success, or FALSE if the connection could not be made.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un índice de conexión si hay éxito, o FALSE si la conexión no puede hacerse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a persistent connection to a Hyperwave server.</seg></tuv>
      <tuv xml:lang="es"><seg>Abre una conexión permanente a un servidor Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of the arguments should be a quoted string, except for the port number.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno de los argumentos debe ser una cadena entrecomillada excepto el número de puerto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The username and password arguments are optional and can be left out.</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento usuario y la clave son opcionales y pueden omitirse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In such a case no identification with the server will be done.</seg></tuv>
      <tuv xml:lang="es"><seg>En tal caso no se realizará ninguna identificación con el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is similar to identify as user anonymous.</seg></tuv>
      <tuv xml:lang="es"><seg>Es similar a la identificación anónima del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a connection index that is needed by other Hyperwave functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un índice de conexión que se necesita para otras funciones de Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can have multiple persistent connections open at once.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden tener varias conexiones permanentes abiertas a la vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Hyperwave document with object ID objectID.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el documento Hyperwave cuyo ID de objeto es IDobjeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the document has anchors which can be inserted, they will have been inserted already.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el documento tiene enlaces que pueden ser insertados, deberán haberse insertado ya.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The document will be transfered via a special data connection which does not block the control connection.</seg></tuv>
      <tuv xml:lang="es"><seg>El documento será transferido a través de una conexión de datos especial que no bloquea la conexión de control.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_gettext() for more on link insertion, hw_free_document(), hw_document_size(), hw_document_bodytag(), and hw_output_document().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetText() para saber más sobre inserción de enlaces, hw_FreeDocument(), hw_DocumentSize(), hw_DocumentBodyTag(), hw_OutputDocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the object ID of the hyperroot collection.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la ID de objeto de la colección hiper-raíz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently this is always 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente siempre vale 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The child collection of the hyperroot is the root collection of the connected server.</seg></tuv>
      <tuv xml:lang="es"><seg>La colección hija de la hiper-raíz es la colección raíz del servidor al que se ha conectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlocks a document, so other users regain access.</seg></tuv>
      <tuv xml:lang="es"><seg>Desbloquea un documento para que otros usuarios puedan acceder al mismo de nuevo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hw_getandlock().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también hw_GetAndLock().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of users currently logged into the Hyperwave server.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una tabla de los usuarios actualmente conectados al servidor Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each entry in this array is an array itself containing the elements id, name, system, onSinceDate, onSinceTime, TotalTime and self. 'self' is 1 if this entry belongs to the user who initianted the request.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada elemento de esta tabla contiene en sí mismo los elementos ID, nombre, sistema, onSinceDate (conectadoDesdeFecha), onSinceTime (conectadoDesdeHora), TotalTime (TiempoTotal) y self (propio). 'self 'es 1 si esta línea corresponde al usuario que realizó la petición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Manual</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. iconv_get_encoding() example:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. iconv_get_encoding() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. iconv() example:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. iconv() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si todo fue bien, FALSE en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. iconv_set_encoding() example:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. iconv_set_encoding() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_id is a valid result id returned by ifx_query() or ifx_prepare().</seg></tuv>
      <tuv xml:lang="es"><seg>result_id es un identificador válido del resultado de ifx_query() o ifx_prepare().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of rows affected by a query associated with result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de filas procesadas por una consulta representada por un result_id (identificador de resultado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For selects it is an estimate (sqlerrd[0]).</seg></tuv>
      <tuv xml:lang="es"><seg>Para inserciones, actualizaciones y borrados el número es exactamente los registros procesados (sqlerrd[2]).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The database server can never return the actual number of rows that will be returned by a SELECT because it has not even begun fetching them at this stage (just after the "PREPARE "when the optimizer has determined the query plan).</seg></tuv>
      <tuv xml:lang="es"><seg>No confíes en él.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Useful after ifx_prepare() to limit queries to reasonable result sets.</seg></tuv>
      <tuv xml:lang="es"><seg>Es útil llamarla después de ejecutar ifx_prepare() pues así podemos limitar las consultas a número razonable de registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_num_rows()</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_num_rows()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Informix affected rows</seg></tuv>
      <tuv xml:lang="es"><seg>Número de registros procesados por una consulta</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$rid = ifx_prepare ("select * from emp where name like ". $name, $connid); if (! $rid) {... error...} $rowcount = ifx_affected_rows ($rid); if ($rowcount 1000) {printf ("Too many rows in result set (%d)\n br", $rowcount); die ("Please restrict your query br \n");}</seg></tuv>
      <tuv xml:lang="es"><seg>$rid = ifx_prepare ("select * from emp where name like ". $name, $connid); if (! $rid) {... error...} $rowcount = ifx_affected_rows ($rid); if ($rowcount 1000) {printf ("Too many rows in result set (%d)\n br", $rowcount); / / Demasiados registros en el resultado die ("Please restrict your query br \n"); / / Por favor, restringe tu consulta}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Informix functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones para Informix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the default blob mode for all select queries.</seg></tuv>
      <tuv xml:lang="es"><seg>Define el modo por defecto para los blob en todas las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mode "0" means save Byte-Blobs in memory, and mode "1 "means save Byte-Blobs in a file.</seg></tuv>
      <tuv xml:lang="es"><seg>El modo (mode) "0 "quiere decir que guarda en memoria los blobs de tipo BYTE y modo "1" significa guardarlos en un archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the default byte mode for all select-queries.</seg></tuv>
      <tuv xml:lang="es"><seg>Define el modo por defecto para los campos de tipo byte en todas las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mode "0" will return a blob id, and mode "1 "will return a varchar with text content.</seg></tuv>
      <tuv xml:lang="es"><seg>Modo (mode) "0 "devolverá un identificador de blob y "1" dará el contenido en un campo de tipo varchar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns: always TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE siempre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_close() closes the link to an Informix database that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_close() cierra un enlace a una base de datos Informix que esté asociado con el identificador de enlace (link_identifier).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el identificador de enlace no es especificado, el último enlace abierto es asumido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this isn' t usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Observa que esto no es necesario habitualmente ya que las conexiones no permanentes son cerradas automáticamente al finalizar el guión (script).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_close() will not close persistent links generated by ifx_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_close() no cerrará enlaces persistentes generados por ifx_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_connect(), and ifx_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_connect(), y ifx_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closing a Informix connection</seg></tuv>
      <tuv xml:lang="es"><seg>Cierre de una conexión a Informix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$conn_id = ifx_connect ("mydb@ol_srv", "itsme", "mypassword");... some queries and stuff... ifx_close($conn_id);</seg></tuv>
      <tuv xml:lang="es"><seg>$conn_id = ifx_connect (mydb@ol_srv, "itsme", "mypassword");... algunas consultas y código... ifx_close($conn_id);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a connection identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tuvo éxito, devuelve un identificador de conexión en otro caso FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_connect() establishes a connection to an Informix server.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_connect() establece una conexión con un servidor INFORMIX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All of the arguments are optional, and if they' re missing, defaults are taken from values supplied in configuration file (ifx.default_host for the host (Informix libraries will use INFORMIXSERVER environment value if not defined), ifx.default_user for user, ifx.default_password for the password (none if not defined).</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los argumentos son opcionales, y si no se pasan, se toman los valores del fichero de configuración (ifx.default_host para el ordenador donde se encuentra el servidor (si no es definida, las librerías de Infomix usarán la variable de entorno INFORMIXSERVER), ifx.default_user para el usuario (userid), ifx.default_password para la contraseña (password) (ninguna, si no es definida).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case a second call is made to ifx_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Para una segunda llamada a ifx_connect() con los mismos argumentos, no se establecerá una nueva conexión, en vez de eso, el identificador de enlace de la conexión abierta será devuelto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it' s closed earlier by explicitly calling ifx_close().</seg></tuv>
      <tuv xml:lang="es"><seg>La conexión con el servidor será cerrada tan pronto como la ejecución del guión (script) finalice, a menos que anteriormente se haya llamando a ifx_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ifx_pconnect(), and ifx_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también ifx_pconnect(), y ifx_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Connect to a Informix database</seg></tuv>
      <tuv xml:lang="es"><seg>Conexión a una base de datos Informix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$conn_id = ifx_connect ("mydb@ol_srv1", "imyself", "mypassword");</seg></tuv>
      <tuv xml:lang="es"><seg>$conn_id = ifx_pconnect (mydb@ol_srv1, "imyself", "mypassword");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Duplicates the given blob object. bid is the ID of the blob object.</seg></tuv>
      <tuv xml:lang="es"><seg>Duplica el objeto blob dado. bid es el identificador del objeto blob a copiar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error otherwise the new blob object-id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, en otro caso el identificador del nuevo objeto blob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates an blob object.</seg></tuv>
      <tuv xml:lang="es"><seg>Crea un objeto blob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type:</seg></tuv>
      <tuv xml:lang="es"><seg>type (tipo):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mode:</seg></tuv>
      <tuv xml:lang="es"><seg>mode (modo):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 = blob-object holds the content in memory, 1 = blob-object holds the content in file.</seg></tuv>
      <tuv xml:lang="es"><seg>0 = el contenido del objeto blob es conservado en memoria, 1 = el contenido del objeto blob es mantenido en un archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>param: if mode = 0: pointer to the content, if mode = 1: pointer to the filestring.</seg></tuv>
      <tuv xml:lang="es"><seg>param: si mode = 0: apunta al contenido en memoria, si mode = 1: contiene el nombre del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return FALSE on error, otherwise the new blob object-id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, en otro caso el identificador del nuevo objeto blob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates an char object. param should be the char content.</seg></tuv>
      <tuv xml:lang="es"><seg>Crea un objeto char. param será el contenido del char.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si se realizó, FALSE si hubo algún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Executes a previously prepared query or opens a cursor for it.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejecuta una consulta preparada anteriormente o abre un cursor para ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Does NOT free result_id on error.</seg></tuv>
      <tuv xml:lang="es"><seg>No libera result_id si hubo un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also sets the real number of ifx_affected_rows() for non-select statements for retrieval by ifx_affected_rows()</seg></tuv>
      <tuv xml:lang="es"><seg>También define el número real de registros procesados para consultas que no sean de selección y se puede obtener mediante ifx_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_prepare().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_prepare() (hay un ejemplo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Informix error codes (SQLSTATE SQLCODE) formatted as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>Los códigos de error de Informix (SQLSTATE SQLCODE) son representados como se especifica a continuación:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>where x = space: no error</seg></tuv>
      <tuv xml:lang="es"><seg>donde x = un espacio: no hubo error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>E: error</seg></tuv>
      <tuv xml:lang="es"><seg>E: hubo error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>N: no more data</seg></tuv>
      <tuv xml:lang="es"><seg>N: no hay más datos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>W: warning</seg></tuv>
      <tuv xml:lang="es"><seg>W: aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?: undefined</seg></tuv>
      <tuv xml:lang="es"><seg>?: no definido</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the "x" character is anything other than space, SQLSTATE and SQLCODE describe the error in more detail.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el carácter "x" es cualquier otra cosa diferente a un espacio, SQLSTATE y SQLCODE describen el error con mayor detalle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Informix manual for the description of SQLSTATE and SQLCODE</seg></tuv>
      <tuv xml:lang="es"><seg>Examina el manual de Informix para el significado de SQLSTATE y SQLCODE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns in a string one character describing the general results of a statement and both SQLSTATE and SQLCODE associated with the most recent SQL statement executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve en una cadena un caracter describiendo el resultado de una sentencia y los valores SQLSTATE y SQLCODE asociados con la última sentencia SQL ejecutada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format of the string is "(char) [SQLSTATE=(two digits) (three digits) SQLCODE=(one digit)]".</seg></tuv>
      <tuv xml:lang="es"><seg>El formato de la cadena es "(char) [SQLSTATE=(dos dígitos) (tres dígitos) SQLCODE=(un dígitos)]".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first character can be '' (space) (success), 'W' (the statement caused some warning), 'E' (an error happened when executing the statement) or 'N' (the statement didn't return any data).</seg></tuv>
      <tuv xml:lang="es"><seg>El primer carácter puede ser '' (un espacio) (no hubo error), 'W' (la sentencia provocó un aviso), 'E' (la consulta produjo un error) o 'N' (la sentencia no devolvió ningún dato).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_errormsg()</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_errormsg()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Informix error message associated with the most recent Informix error, or, when the optional "errorcode" param is present, the error message corresponding to "errorcode".</seg></tuv>
      <tuv xml:lang="es"><seg>Si definismos el parámetro opcional "errorcode" (código de error), nos dará el mensaje de error correspondiente a ese código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_error()</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_error()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>printf( "%s\n lt;br ", ifx_errormsg(-201));</seg></tuv>
      <tuv xml:lang="es"><seg>printf( "%s\n br ", ifx_errormsg(-201));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array (vector) correspondiente a la fila leída o FALSE si no hay más registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Blob columns are returned as integer blob id values for use in ifx_get_blob() unless you have used ifx_textasvarchar(1) or ifx_byteasvarchar(1), in which case blobs are returned as string values.</seg></tuv>
      <tuv xml:lang="es"><seg>Las columnas blob son devueltas como identificadores de blob enteros (integer) para usarlos con ifx_get_blob() a menos que hayas usado ifx_textasvarchar(1) o ifx_byteasvarchar(1), en cuyo caso los blobs son devueltos como cadenas de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!).</seg></tuv>
      <tuv xml:lang="es"><seg>result_id es un identificador válido del resultado de ifx_query() o ifx_prepare() (sólo para consultas de selección).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>position is an optional parameter for a "fetch" operation on "scroll "cursors: "NEXT", "PREVIOUS", "CURRENT", "FIRST", "LAST" or a number.</seg></tuv>
      <tuv xml:lang="es"><seg>position es un parámetro opcional para una operación de lectura sobre un cursor de tipo "scroll": "NEXT" (siguiente), "PREVIOUS "(anterior), "CURRENT" (actual), "FIRST "(primero), "LAST" (último) o un número.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you specify a number, an "absolute" row fetch is executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica un número, un registro concreto es leído.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This parameter is optional, and only valid for SCROLL cursors.</seg></tuv>
      <tuv xml:lang="es"><seg>Este parámetro opcional es sólo válido para cursores de tipo scroll.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_fetch_row() fetches one row of data from the result associated with the specified result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_fetch_row() lee el contenido de un registro de la consulta representada por el identificador de resultado indicado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row is returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>La fila (registro) es devuelta en un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0, with the column name as key.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada columna es guarda en un array, empezando éste desde cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent calls to ifx_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Las llamadas posteriores a ifx_fetch_row() devolverán el registro siguiente en el resultado de la consulta, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Informix fetch rows</seg></tuv>
      <tuv xml:lang="es"><seg>Leer registros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$rid = ifx_prepare ("select * from emp where name like ". $name, $connid, IFX_SCROLL); if (! $rid) {... error...} $rowcount = ifx_affected_rows($rid); if ($rowcount 1000) {printf ("Too many rows in result set (%d)\n br", $rowcount); die ("Please restrict your query br \n");} if (! ifx_do ($rid)) {... error...} $row = ifx_fetch_row ($rid, "NEXT"); while (is_array($row)) {for(reset($row); $fieldname=key($row); next($row)) {$fieldvalue = $row[$fieldname]; printf ("%s = %s ,", $fieldname, $fieldvalue);} printf("\n br "); $row = ifx_fetch_row ($rid, "NEXT");} ifx_free_result ($rid);</seg></tuv>
      <tuv xml:lang="es"><seg>$rid = ifx_prepare ("select * from emp where name like ". $name, $connid, IFX_SCROLL); if (! $rid) {... error...} $rowcount = ifx_affected_rows($rid); if ($rowcount 1000) {printf ("Too many rows in result set (%d)\n br", $rowcount); / / Demasiados registros en el resultado die ("Please restrict your query br \n"); / / Por favor, restringe tu consulta} if (! ifx_do ($rid)) {... error...} $row = ifx_fetch_row ($rid, "NEXT"); while (is_array($row)) {for(reset($row); $fieldname=key($row); next($row)) {$fieldvalue = $row[$fieldname]; printf ("%s = %s ,", $fieldname, $fieldvalue);} printf("\n br "); $row = ifx_fetch_row ($rid, "NEXT");} ifx_free_result ($rid);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array with fieldnames as key and the SQL fieldproperties as data for a query with result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Dada una consulta representada por result_id devuelve un array con los nombres de campo como llaves y las propiedades como datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>FALSE es devuelto si hubo error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Informix SQL fieldproperties of every field in the query as an associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve las propiedades SQL de cada campo como un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Properties are encoded as: "SQLTYPE;length;precision;scale;ISNULLABLE" where SQLTYPE = the Informix type like "SQLVCHAR "etc. and ISNULLABLE = "Y" or "N ".</seg></tuv>
      <tuv xml:lang="es"><seg>Las propiedades son codificadas así: "SQLTYPE;longitud;precisión;escala;ISNULLABLE" siendo SQLTYPE el tipo de dato definido en Informix como puede ser "SQLVCHAR "etc. e ISNULLABLE (puede ser nulo) igual a "Y" sí o "N "no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Informix SQL fieldproperties</seg></tuv>
      <tuv xml:lang="es"><seg>Propiedades de los campos de una consulta SQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$properties = ifx_fieldproperties ($resultid); if (! isset($properties)) {... error...} for ($i = 0; $i count($properties); $i++) {$fname = key ($properties); printf ("%s:\t type = %s\n", $fname, $properties[$fname]); next ($properties);}</seg></tuv>
      <tuv xml:lang="es"><seg>$properties = ifx_fieldtypes ($resultid); if (! isset($properties)) {... error...} for ($i = 0; $i count($properties); $i++) {$fname = key ($properties); printf ("%s:\t type = %s\n", $fname, $properties[$fname]); next ($properties);}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array with fieldnames as key and the SQL fieldtypes as data for query with result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Dada una consulta representada por result_id devuelve un array con los nombres de campo como llaves y los tipos como datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no tuvo éxito da FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fieldnames and SQL fieldtypes</seg></tuv>
      <tuv xml:lang="es"><seg>Nombres y tipos de campos de una consulta SQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the blobobject for the given blob object-id bid.</seg></tuv>
      <tuv xml:lang="es"><seg>Elimina el objeto blob representado por el identificador bid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si se produjo error, en otro caso TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the charobject for the given char object-id bid.</seg></tuv>
      <tuv xml:lang="es"><seg>Borra el objeto char representado por el identificador del char bid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si se produjo un error, en otro caso TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Releases resources for the query associated with result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Libera los recursos representados por el identificador result_id de una consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the content of the blob object for the given blob object-id bid.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el contenido de un objeto blob representado por su identificador bid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the content of the char object for the given char object-id bid.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el contenido de un objeto char representado por su identificador bid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a pseudo-row (associative array) with sqlca.sqlerrd[0]... sqlca.sqlerrd[5] after the query associated with result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una seudo fila (array asociativo) con los valores de sqlca.sqlerrd[0] a sqlca.sqlerrd[5] de una consulta ejecutada, representada ésta con un identificador de resultado result_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For inserts, updates and deletes the values returned are those as set by the server after executing the query.</seg></tuv>
      <tuv xml:lang="es"><seg>Para inserciones, actualizaciones y borrados los valores devueltos son aquellos definidos por el servidor después de que la consulta sea ejecutada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This gives access to the number of affected rows and the serial insert value.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto da acceso al número de registros procesados y al valor de una columna de tipo serial en una consulta de inserción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For SELECTs the values are those saved after the PREPARE statement.</seg></tuv>
      <tuv xml:lang="es"><seg>Para consultas de selección, los valores son guardados cuando se prepara la sentencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This gives access to the *estimated* number of affected rows.</seg></tuv>
      <tuv xml:lang="es"><seg>También permite conocer el número estimado de registros procesados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The use of this function saves the overhead of executing a "select dbinfo('sqlca.sqlerrdx')" query, as it retrieves the values that were saved by the ifx driver at the appropriate moment.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de esta función evita el sobrecoste de ejecutar la consulta "select dbinfo('sqlca.sqlerrdx')", como obtener los valores guardados por el conector para Informix en el momento apropiado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Retrieve Informix sqlca.sqlerrd[ x] values</seg></tuv>
      <tuv xml:lang="es"><seg>Obtener los valores sqlca.sqlerrd[ x]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* assume the first column of 'sometable' is a serial * / $qid = ifx_query("insert into sometable values (0, '2nd column', 'another column') ", $connid); if (! $qid) {... error...} $sqlca = ifx_getsqlca ($qid); $serial_value = $sqlca["sqlerrd1"]; echo "The serial value of the inserted row is:". $serial_value br \n";</seg></tuv>
      <tuv xml:lang="es"><seg>/* suponiendo que la primera columna de la tabla 'sometable' es de tipo serial * / $qid = ifx_query("insert into sometable values(0, '2nd column', 'another column '", $connid); if (! $qid) {... error...} $sqlca = ifx_getsqlca ($qid); $serial_value = $sqlca["sqlerrd1"]; echo "The serial value of the inserted row is:". $serial_value br \n"; / / El valor de tipo serial del registro insertado es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of rows fetched or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de registros leídos o FALSE si hubo error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Formats all rows of the result_id query into a html table.</seg></tuv>
      <tuv xml:lang="es"><seg>Muestra todas las filas de la consulta result_id dentro de una tabla html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional second argument is a string of table tag options</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento segundo, opcional, es una cadena de parámetros del tag table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Informix results as HTML table</seg></tuv>
      <tuv xml:lang="es"><seg>Mostrar resultado como una tabla HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$rid = ifx_prepare ("select * from emp where name like ". $name, $connid, IFX_SCROLL); if (! $rid) {... error...} $rowcount = ifx_affected_rows ($rid); if ($rowcount 1000) {printf ("Too many rows in result set (%d)\n br", $rowcount); die ("Please restrict your query br \n");} if (! ifx_do($rid) {... error...} ifx_htmltbl_result ($rid, "border=\"2\""); ifx_free_result($rid);</seg></tuv>
      <tuv xml:lang="es"><seg>$rid = ifx_prepare ("select * from emp where name like ". $name, $connid, IFX_SCROLL); if (! $rid) {... error...} $rowcount = ifx_affected_rows ($rid); if ($rowcount 1000) {printf ("Too many rows in result set (%d)\n br", $rowcount); / / Demasiados registros en el resultado die ("Please restrict your query br \n"); / / Por favor, restringe tu consulta} if (! ifx_do($rid) {... error...} ifx_htmltbl_result ($rid, "border=\"2\""); ifx_free_result($rid);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the default return value of a NULL-value on a fetch row.</seg></tuv>
      <tuv xml:lang="es"><seg>Define el valor por defecto cuando se leen valores nulos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mode "0" returns "", and mode "1 "returns" NULL ".</seg></tuv>
      <tuv xml:lang="es"><seg>Modo (mode) "0 "devuelve "", y modo "1" devuelve "NULL".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of columns in query for result_id or FALSE on error</seg></tuv>
      <tuv xml:lang="es"><seg>Dada una consulta representada por result_id devuelve el número de columnas o FALSE si se produjo un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After preparing or executing a query, this call gives you the number of columns in the query.</seg></tuv>
      <tuv xml:lang="es"><seg>Después de preparar o ejecutar una consulta, una llamada a esta función te da el número de columnas en la consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gives the number of rows fetched so far for a query with result_id after a ifx_query() or ifx_do() query.</seg></tuv>
      <tuv xml:lang="es"><seg>Da el número de registros ya leídos de una consulta representada por un result_id después de llamar a ifx_query() o ifx_do().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive Informix persistent link identifier on success, or FALSE on error</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador positivo de enlace persistente si hubo conexión, o FALSE si se produjo un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_pconnect() acts very much like ifx_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_pconnect() actúa muy parecido a ifx_connect() con dos principales diferencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function behaves exactly like ifx_connect() when PHP is not running as an Apache module.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se comporta exactamente igual que ifx_connect() cuando PHP no es ejecutado como un módulo de Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera diferencia es cuando se conecta, la función intentará encontrar un enlace (persistente) que exista con el mismo servidor, usuario y contraseña.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one is found, an identifier for it will be returned instead of opening a new connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es hallado, el identificador del enlace será devuelto en vez de abrir una nueva conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Segundo, la conexión al servidor no se cerrará cuando la ejecución del guión (script) finalice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, the link will remain open for future use (ifx_close() will not close links established by ifx_pconnect()).</seg></tuv>
      <tuv xml:lang="es"><seg>En vez de esto, la conexión permanecerá abierta para usos futuros (ifx_close() no cerrará el enlace creado por ifx_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of links is therefore called 'persistent'.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de enlace es, por tanto, llamado 'persistente'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a integer result_id for use by ifx_do().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un entero (integer) result_id para usarlo con ifx_do().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets affected_rows for retrieval by the ifx_affected_rows() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Es definido "affected_rows" (registros procesados) y se puede obtener mediante la función ifx_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prepares query on connection conn_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Prepara una consulta (query) sobre una conexión (link_identifier).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For "select-type" queries a cursor is declared and opened.</seg></tuv>
      <tuv xml:lang="es"><seg>Un cursor es definido y abierto para las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional cursor_type The optional cursor_type parameter allows you to make this a "scroll" and / or "hold "cursor.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional tipo de cursor (cursor_type) te permite que sea un cursor de tipo "scroll "y / o "hold".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s a bitmask and can be either IFX_SCROLL, IFX_HOLD, or both or'ed together.</seg></tuv>
      <tuv xml:lang="es"><seg>Es una máscara y puede ser IFX_SCROLL, IFX_HOLD o ambos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For either query type the estimated number of affected rows is saved for retrieval by ifx_affected_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Para cualquier tipo de consulta el número estimado de registros afectados (procesados) es guardado y puede ser obtenido mediante ifx_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have BLOB (BYTE or TEXT) columns in the query, you can add a blobidarray parameter containing the corresponding "blob ids", and you should replace those columns with a "?" in the query text.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tienes columnas BLOB (BYTE o TEXT) en una consulta, puedes añadir un parámetro blobidarray conteniendo los identificadores de blob y sustituir los valores de esas columnas por una "?" en el texto de la consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the contents of the TEXT (or BYTE) column allow it, you can also use "ifx_textasvarchar(1) "and "ifx_byteasvarchar(1)".</seg></tuv>
      <tuv xml:lang="es"><seg>Si el contenido de la columna de tipo TEXT (o BYTE) lo permite, puedes también usar "ifx_textasvarchar(1) "y "ifx_byteasvarchar(1)".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This allows you to treat TEXT (or BYTE) columns just as if they were ordinary (but long) VARCHAR columns for select queries, and you don't need to bother with blob id's.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto supone manejar columnas de tipo TEXT (o BYTE) como si fueran columnas normales de tipo VARCHAR (pero teniendo en cuenta que tendrán un mayor tamaño que el habitual), para consultas de selección y no necesitas preocuparte por los identificadores de blob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With ifx_textasvarchar( 0) or ifx_byteasvarchar(0) (the default situation), select queries will return BLOB columns as blob id's (integer value).</seg></tuv>
      <tuv xml:lang="es"><seg>La opción por defecto ifx_textasvarchar( 0) o ifx_byteasvarchar(0) devuelve identificadores de blob (valores enteros) para las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can get the value of the blob as a string or file with the blob functions (see below).</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes obtener el contenido del blob como una cadena o un fichero con las funciones para blob (ver más adelante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: ifx_do().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también: ifx_do().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive Informix result identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador positivo de resultado si tuvo éxito, FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A "result_id" resource used by other functions to retrieve the query results.</seg></tuv>
      <tuv xml:lang="es"><seg>Un entero (integer) "result_id "usado por otras funciones para obtener el resultado de la consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets "affected_rows" for retrieval by the ifx_affected_rows() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Es definido "affected_rows" (registros procesados) y se puede obtener mediante la función ifx_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_query() sends a query to the currently active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el identificador no es definido, el último enlace abierto es asumido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For "select-type" queries a cursor is declared and opened.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejecuta una consulta (query) sobre una conexión (link_identifier).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional cursor_type The optional cursor_type parameter allows you to make this a "scroll" and / or "hold "cursor.</seg></tuv>
      <tuv xml:lang="es"><seg>Un cursor es definido y abierto para las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Non-select queries are "execute immediate".</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional tipo de cursor (cursor_type) te permite que sea un cursor de tipo "scroll "y / o "hold".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>IFX_SCROLL and IFX_HOLD are symbolic constants and as such shouldn 't be between quotes.</seg></tuv>
      <tuv xml:lang="es"><seg>Es una máscara y puede ser IFX_SCROLL, IFX_HOLD o ambos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>I you omit this parameter the cursor is a normal sequential cursor.</seg></tuv>
      <tuv xml:lang="es"><seg>Las consultas que no son de selección son ejecutadas inmediatamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For either query type the number of (estimated or real) affected rows is saved for retrieval by ifx_affected_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Para cualquier tipo de consulta el número (estimado o real) de registros procesados es guardo y se puede obtener mediante ifx_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have BLOB (BYTE or TEXT) columns in an update query, you can add a blobidarray parameter containing the corresponding "blob ids", and you should replace those columns with a "?" in the query text.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tienes columnas BLOB (BYTE o TEXT) en una consulta de actualización, puedes añadir un parámetro blobidarray conteniendo los identificadores de blob y sustituir los valores de esas columnas por una "?" en el texto de la consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the contents of the TEXT (or BYTE) column allow it, you can also use "ifx_textasvarchar(1) "and "ifx_byteasvarchar(1)".</seg></tuv>
      <tuv xml:lang="es"><seg>Si el contenido de la columna de tipo TEXT (o BYTE) lo permite, también puedes usar "ifx_textasvarchar(1) "y "ifx_byteasvarchar(1)".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Show all rows of the "orders" table as a html table</seg></tuv>
      <tuv xml:lang="es"><seg>Mostrar todos los registros de la tabla "orders" como una tabla html</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_textasvarchar( 1); / / use "text mode "for blobs $res_id = ifx_query("select * from orders", $conn_id); if (! $res_id) {printf("Can't select orders: %s\n br %s br \n", ifx_error()); ifx_errormsg(); die;} ifx_htmltbl_result($res_id, "border=\"1\""); ifx_free_result($res_id);</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_textasvarchar( 1); / / usa "modo texto "para blobs $res_id = ifx_query("select * from orders", $conn_id); if (! $res_id) {printf("Can't select orders: %s\n br %s br \n", ifx_error()); ifx_errormsg(); die;} ifx_htmltbl_result($res_id, "border=\"1\""); ifx_free_result($res_id);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Insert some values into the "catalog" table</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta valores en la tabla "catalog"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / create blob id' s for a byte and text column $textid = ifx_create_blob(0, 0, "Text column in memory"); $byteid = ifx_create_blob(1, 0, "Byte column in memory"); / / store blob id's in a blobid array $blobidarray[] = $textid; $blobidarray[] = $byteid; / / launch query $query = "insert into catalog (stock_num, manu_code, ". "cat_descr,cat_picture) values(1 ,'HRO',?, ?)"; $res_id = ifx_query($query, $conn_id, $blobidarray); if (! $res_id) {... error...} / / free result id ifx_free_result($res_id);</seg></tuv>
      <tuv xml:lang="es"><seg>/ / crea identificadores de blob para una columna de tipo byte y otra text $textid = ifx_create_blob( 0, 0, "Text column in memory"); $byteid = ifx_create_blob(1, 0, "Byte column in memory"); / / almacena los identificadores de blob en un array llamado blobid $blobidarray[] = $textid; $blobidarray[] = $byteid; / / lanza la consulta $query = "insert into catalog (stock_num, manu_code, ". "cat_descr,cat_picture) values(1 ,'HRO',?, ?)"; $res_id = ifx_query($query, $conn_id, $blobidarray); if (! $res_id) {... error...} / / libera el resultado ifx_free_result($res_id);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the default text mode for all select-queries.</seg></tuv>
      <tuv xml:lang="es"><seg>Define el modo por defecto para los campos de tipo text en todas las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Updates the content of the blob object for the given blob object bid. content is a string with new data.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualiza el contenido de un objeto blob representado por su identificador bid. content es una cadena con el nuevo contenido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, en otro caso TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Updates the content of the char object for the given char object bid. content is a string with new data.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualiza el contenido de un objeto char representado por su identificador bid. content es una cadena con la información nueva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the slob object on the given slob object-id bid.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra un objeto slob representado por su identificador de slob bid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, TRUE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates an slob object and opens it.</seg></tuv>
      <tuv xml:lang="es"><seg>Crea un objeto slob y lo abre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Modes:</seg></tuv>
      <tuv xml:lang="es"><seg>Modos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 = LO_RDONLY, 2 = LO_WRONLY, 4 = LO_APPEND, 8 = LO_RDWR, 16 = LO_BUFFER, 32 = LO_NOBUFFER - or-mask.</seg></tuv>
      <tuv xml:lang="es"><seg>1 = LO_RDONLY, 2 = LO_WRONLY, 4 = LO_APPEND, 8 = LO_RDWR, 16 = LO_BUFFER, 32 = LO_NOBUFFER o una combinación de ellos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use constants named IFX_LO_RDONLY, IFX_LO_WRONLY etc.</seg></tuv>
      <tuv xml:lang="es"><seg>También puedes usar nombres de constantes IFX_LO_RDONLY, IFX_LO_WRONLY, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return FALSE on error otherwise the new slob object-id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, en otro caso el identificador del nuevo objeto slob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifxus_free_slob</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_free_slob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>(no version information, might be only in CVS)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the slob object. bid is the Id of the slob object.</seg></tuv>
      <tuv xml:lang="es"><seg>Borra un objeto slob. bid es el identificador del objeto slob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens an slob object. bid should be an existing slob id.</seg></tuv>
      <tuv xml:lang="es"><seg>Abre un objeto slob. bid será un identificador de slob que válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error otherwise the new slob object-id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, en otro caso el identificador del nuevo objeto slob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads nbytes of the slob object. bid is a existing slob id and nbytes is the number of bytes read.</seg></tuv>
      <tuv xml:lang="es"><seg>Lee un número de bytes (nbytes) de un objeto slob. bid es un identificador de slob válido y nbytes es el número de bytes a leer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return FALSE on error otherwise the string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, sino la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the current file or seek position of an open slob object. bid should be an existing slob id.</seg></tuv>
      <tuv xml:lang="es"><seg>Define el fichero o posición en memoria de un objeto slob abierto, bid será un identificador de slob válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Modes:</seg></tuv>
      <tuv xml:lang="es"><seg>Modos (mode):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 = LO_SEEK_SET, 1 = LO_SEEK_CUR, 2 = LO_SEEK_END and offset is an byte offset.</seg></tuv>
      <tuv xml:lang="es"><seg>0 = LO_SEEK_SET, 1 = LO_SEEK_CUR, 2 = LO_SEEK_END y offset es el desplazamiento en bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return FALSE on error otherwise the seek position.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hubo error entonces da FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current file or seek position of an open slob object bid should be an existing slob id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el fichero actual o la posición en memoria de un objeto slob abierto, bid Devuelve el fichero actual o la posición en memoria de un objeto slob abierto, bid será un identificador de slob válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writes a string into the slob object. bid is a existing slob id and content the content to write.</seg></tuv>
      <tuv xml:lang="es"><seg>Escribe una cadena en un objeto slob. bid es un identificador de slob válido y content el contenido a escribir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return FALSE on error otherwise bytes written.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si hubo error, sino el número de bytes escritos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>InterBase functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones InterBase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sets whether a client disconnect should cause a script to be aborted.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función establece si la desconexión de un cliente debe provocar la suspensión del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will return the previous setting and can be called without an argument to not change the current setting and only return the current setting.</seg></tuv>
      <tuv xml:lang="es"><seg>Devolverá el valor previo y puede ser llamada sin argumentos para devolver el valor actual y no cambiarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Connection Handling section in the Features chapter for a complete description of connection handling in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase la sección sobre la Gestión de la Conexión en el capítulo Características para una descripción completa de la gestión de la conexión en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagearc</seg></tuv>
      <tuv xml:lang="es"><seg>ImageArc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0° is located at the three-o 'clock position, and the arc is drawn counter-clockwise.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageArc dibuja una elipse parcial centrada en cx, cy (la esquina superior izquierda es 0,0) en la imagen que representa im. w y h especifican la anchura y altura respectivamente mientras que los puntos de inicio y final vienen indicados por los parámetros s y e en grados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagechar</seg></tuv>
      <tuv xml:lang="es"><seg>ImageChar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagechar() draws the first character of c in the image identified by id with its upper-left at x, y (top left is 0, 0) with the color col.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageChar dibuja el primer carácter de c en la imagen identificada como id con su esquina superior izquierda en x, y (arriba izquierda es 0,0) con el color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If font is 1, 2, 3, 4 or 5, a built-in font is used (with higher numbers corresponding to larger fonts).</seg></tuv>
      <tuv xml:lang="es"><seg>Si la fuente es 1, 2, 3, 4 o 5 se usa una fuente predefinida (números mayores corresponden con tamaños mayores).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imageloadfont().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imageloadfont().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecharup</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCharUp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecharup() draws the character c vertically in the image identified by image at coordinates x, y (top left is 0, 0) with the color col.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCharUp dibuja el caracter c verticalmente en la imagen identificado como im en las coordenadas x, y (arriba izquierda es 0,0) con el color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If font is 1, 2, 3, 4 or 5, a built-in font is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la fuente es 1, 2, 3, 4 o 5 se usa una fuente predefinida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorallocate</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorAllocate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorat</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorAt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorallocate() returns a color identifier representing the color composed of the given RGB components.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorAllocate devuelve un identificador del color representado por la mezcla de los componentes RGB dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The im argument is the return from the imagecreate() function. red, green and blue are the values of the red, green and blue component of the requested color respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro im es el resultado de la función imagecreate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These parameters are integers between 0 and 255. imagecolorallocate() must be called to create each color that is to be used in the image represented by image.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorAlocate tiene que ser invocada para crear cada color que va a ser usado por la imagen que representa im.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns -1 if the allocation failed.</seg></tuv>
      <tuv xml:lang="es"><seg>$white = ImageColorAllocate( $im, 255,255,255); $black = ImageColorAllocate($im, 0,0,0);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use bitshifting and masking to access the distinct red, green and blue component values:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el índice del color del pixel especificado en la posición de la imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecolorset() and imagecolorsforindex().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecolorset() y imagecolorsforindex().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorclosest</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorClosest</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the index of the color in the palette of the image which is "closest" to the specified RGB value.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el índice del color de la paleta de la imagen que sea más "cercano" al valor RGB especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The "distance" between the desired color and each color in the palette is calculated as if the RGB values represented points in three-dimensional space.</seg></tuv>
      <tuv xml:lang="es"><seg>La "distancia" entre el color deseado y cada color de la paleta es calculada como si los valores RGB representasen puntos en un espacio tridimensional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecolorexact().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecolorexact().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is currently not documented; only the argument list is available.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no está documentada actualmente, solamente se encuentra disponible la lista de parametros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorexact</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorExact</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorresolve</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorResolve</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the index of the specified color in the palette of the image.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el índice del color especificado de la paleta de la imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the color does not exist in the image 's palette, -1 is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el color no existe en la paleta de la imagen, se devuelve el valor -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecolorclosest().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecolorclosest().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorset</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorSet</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función garantiza el resultado de un índice de color para un color solicitado, ya sea el color exacto o su alternativa más cercana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This sets the specified index in the palette to the specified color.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el índice especificado de la paleta con el color introduciod.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful for creating flood-fill-like effects in paletted images without the overhead of performing the actual flood-fill.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es útil para crear efectos de rellenado en imagenes con paletas sin la sobrecarga de tener que realizar el rellenado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecolorat().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecolorat().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorsforindex</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorsForIndex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This returns an associative array with red, green, and blue keys that contain the appropriate values for the specified color index.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz asociativa con las claves red, green y blue que contienen los valores apropiados para el color especificado en el índice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecolorat() and imagecolorexact().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecolorat() y imagecolorexact().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolorstotal</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorsTotal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This returns the number of colors in the specified image 's palette.</seg></tuv>
      <tuv xml:lang="es"><seg>Encuentra el número de colores de la paleta de una imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecolorat() and imagecolorsforindex().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecolorat() y imagecolorsforindex().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecolortransparent</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorTransparent</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>ImageColorTransparent establece como color transparente a col en la imagen im. im es el identificador de imagen devuelto por imagecreate() y col es el identificador de color devuelto por imagecolorallocate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The identifier of the new (or current, if none is specified) transparent color is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve el identificador del color transparente (o el actual, si no se especifica ninguno).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dst_im is the destination image, src_im is the source image identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecopyresampled() copia una porción rectangular de una imagen sobre otra, suavizando los valores de los píxeles mediante interpolación, de forma que al reducir el tamaño de una imagen aún mantiene una buena claridad. img_dst es la imagen de destino, img_org imagecopyresampled() copia una porción rectangular de una imagen sobre otra, suavizando los valores de los píxeles mediante interpolación, de forma que al reducir el tamaño de una imagen aún mantiene una buena claridad. img_dst es la imagen de destino, img_org es el identificador de la imagen de origen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si las coordenadas de origen y destino y ancho y alto son diferentes, se encogerá o agrandará el fragmento de imagen según sea necesario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The coordinates refer to the upper left corner.</seg></tuv>
      <tuv xml:lang="es"><seg>Las coordenadas son relativas a la esquina superior izquierda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function can be used to copy regions within the same image (if dst_im is the same as src_im) but if the regions overlap the results will be unpredictable.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se puede usar para copiar regiones dentro de la misma imagen (si img_dst es la misma que img_org) pero si las regiones se superponen, los resultados serán impredecibles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With a palette image we try to allocate a new color, if that failed, we choose the closest (in theory) computed color.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecopyresized().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecopyresized().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en PHP 4.0.6 y requiere GD 2.0.1 o superior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecopyresized</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCopyResized</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCopyResize copia una porción rectangular de una imagen hacia otra imagen. dst_im es la imagen de destino, src_im es el identificador de la imagen origen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function can be used to copy regions within the same image (if dst_im is the same as src_im) but if the regions overlap the results will be unpredictable.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la altura y anchura de las coordenadas de origen y destino difieren se realizará un estrechamiento o un estiramiento apropiado del fragmento de la imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With a palette image we try to allocate a new color, if that failed, we choose the closest (in theory) computed color.</seg></tuv>
      <tuv xml:lang="es"><seg>Las coordenadas van localizadas sobre la esquina superior izquierda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To skip this problem, please use a truecolor image as a destination image, such as one created by imagecreatetruecolor().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se puede usar para copiar regiones dentro de la misma imagen (si dst_im es igual que src_im) pero si las regiones se solapan los resultados seran impredecibles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecreate</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCreate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip:</seg></tuv>
      <tuv xml:lang="es"><seg>Sugerencia:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use a URL as a filename with this function if the fopen wrappers have been enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar una URL como nombre de archivo con esta función si los "fopen wrappers" han sido activados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulte fopen() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>La versión actual de PHP para Windows, no soporta el acceso remoto a ficheros en esta función, no funcionará incluso activando allow_url_fopen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecreatefromgif</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCreateFromGif</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecreatefromgif() returns an empty string on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatefromgif() devuelve un identificador de imagen representando la imagen obtenida del nombre del fichero dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also outputs an error message, which unfortunately displays as a broken link in a browser.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatefromgif() devuelve una cadena vacia si hay algun fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Además muestra un mensaje de error, que desafortunadamente se representa como un link roto en un navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example to handle an error during creation (courtesy vic@zymsys.com)</seg></tuv>
      <tuv xml:lang="es"><seg>Para depurarlo fácilmente el siguiente ejemplo producirá un error de GIF:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de control de un error durante la creación (cortesía vic@zymsys.com)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>function LoadGif( $imgname) {$im = @imagecreatefromgif($imgname); / * Attempt to open * / if ($im == "") {/ * See if it failed * / $im = ImageCreate(150,30); / * Create a blank image * / $bgc = ImageColorAllocate($im,255,255,255); $tc = ImageColorAllocate($im,0,0,0); ImageFilledRectangle($im,0,0,150,30,$bgc); ImageString($im,1,5,5 ,"Error loading $imgname",$tc); / * Output an errmsg * /} return $im;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde que todo el soporte a GIFs ha sido eliminado en la libreria GD a partir de la versión 1.6, esta función no está disponible si está usando esa versión de la libreria GD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecreatefromjpeg() returns an empty string on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatefromjpeg() devuelve un identificador de imagen que representa a la imagen obtenida a partir del nombre de archivo indicado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also outputs an error message, which unfortunately displays as a broken link in a browser.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatefromjpeg() devuelve una cadena vacía si ha fallado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>También escribe un mensaje de error, que desafortunadamente se muestra en el navegador como un enlace roto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example to handle an error during creation (courtesy vic@zymsys.com)</seg></tuv>
      <tuv xml:lang="es"><seg>Para depurar con mayor comodidad, el ejemplo siguiente producirá un JPEG erróneo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de cómo manipular un error durante la creación (cortesía de vic@zymsys.com)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>function CargarJpeg ($nombreimg) {$im = @imagecreatefromjpeg ($nombreimg); / * Intento de apertura * / if (!$im) {/ * Comprobar si ha fallado * / $im = imagecreate (150, 30); / * Crear una imagen en blanco * / $bgc = imagecolorallocate ($im, 255, 255, 255); $tc = imagecolorallocate ($im, 0, 0, 0); imagefilledrectangle ($im, 0, 0, 150, 30, $bgc); / * Mostrar un mensaje de error * / imagestring ($im, 1, 5, 5, "Error cargando $nombreimg", $tc);} return $im;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagecreatefrompng() returns an empty string on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatefrompng() devuelve un identificador de imagen que representa a la imagen obtenida a partir del nombre de archivo indicado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also outputs an error message, which unfortunately displays as a broken link in a browser.</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatefrompng() devuelve una cadena vacía si ha fallado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>function CargarJpeg ($nombreimg) {$im = @imagecreatefrompng ($nombreimg); / * Intento de apertura * / if (!$im) {/ * Comprobar si ha fallado * / $im = imagecreate (150, 30); / * Crear una imagen en blanco * / $bgc = imagecolorallocate ($im, 255, 255, 255); $tc = imagecolorallocate ($im, 0, 0, 0); imagefilledrectangle ($im, 0, 0, 150, 30, $bgc); / * Mostrar un mensaje de error * / imagestring ($im, 1, 5, 5, "Error cargando $nombreimg", $tc);} return $im;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We recommend the use of imagecreatetruecolor().</seg></tuv>
      <tuv xml:lang="es"><seg>ImageCreate devuelve un identificador de imagen representando una imagen en blanco de tamaño x_size por y_size.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>imagecreatetruecolor() devuelve un identificador de imagen representando una imagen en blanco de tamaño anchura por altura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was added in PHP 4.0.6 and requires GD 2.0.1 or later</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work with GIF file formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en PHP 4.0.6 y requiere GD 2.0.1 o superior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagedashedline</seg></tuv>
      <tuv xml:lang="es"><seg>ImageDashedLine</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use combination of imagesetstyle() and imageline() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imageline().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagedestroy</seg></tuv>
      <tuv xml:lang="es"><seg>ImageDestroy</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagedestroy() frees any memory associated with image image. image is the image identifier returned by the imagecreate() function.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageDestroy libera la memoria asociada a la imagen im. im es la imagen devuelta por la función imagecreate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefill</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefilledpolygon</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFilledPolygon</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefilledpolygon() creates a filled polygon in image image. points is a PHP array containing the polygon's vertices, ie. points[0] = x0, points[1] = y0, points[2] = x1, points[3] = y1, etc. num_points is the total number of vertices.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFilledPolygon crea un polígono relleno en la imagen im, points es una matriz PHP conteniendo los vértices del poligono, por ejemplo. points[ 0] = x0, points[1] = y0, points[2] = x1, points[3] = y1, etc. num_points es el número total de vértices.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefilledrectangle</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFilledRectangle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefilledrectangle() creates a filled rectangle of color col in image image starting at upper left coordinates x1, y1 and ending at bottom right coordinates x2, y2.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFilledRectangle crea un rectángulo relleno con color col en la imagen im comenzando con las coordenadas superiores izquierdas x1, y1 y finalizando en las coordenadas inferiores derechas x2, y2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0, 0 is the top left corner of the image.</seg></tuv>
      <tuv xml:lang="es"><seg>0,0 es la esquina superior izquierda de la imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefilltoborder</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFillToBorder</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefill() performs a flood fill starting at coordinate x, y (top left is 0, 0) with color col in the image image.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFill realiza un relleno empezando en la coordenada x,y (arriba izquierda es 0,0) con el color col en la imagen im.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefilltoborder() performs a flood fill whose border color is defined by border.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFillToBorder realiza un relleno hasta el color del borde que está definido por border.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The starting point for the fill is x, y (top left is 0, 0) and the region is filled with color col.</seg></tuv>
      <tuv xml:lang="es"><seg>El punto de inicio para el relleno es x,y (arriba izquierda es 0,0) y la región se rellena con el color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefontheight</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFontHeight</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the pixel height of a character in the specified font.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la altura en pixels de un carácter en un fuente específica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagefontwidth() and imageloadfont().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagefontwidth() y imageloadfont().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagefontwidth</seg></tuv>
      <tuv xml:lang="es"><seg>ImageFontWidth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the pixel width of a character in font.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la anchura en pixels de un carácter en un fuente específica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagefontheight() and imageloadfont().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagefontheight() y imageloadfont().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagegif</seg></tuv>
      <tuv xml:lang="es"><seg>ImageGif</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The image argument is the return from the imagecreate() function.</seg></tuv>
      <tuv xml:lang="es"><seg>imagegif() crea el fichero GIF en filename a partir de la imagen im.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The image format will be GIF87a unless the image has been made transparent with imagecolortransparent(), in which case the image format will be GIF89a.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro im es el resultado de usar la función imagecreate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By sending an image / gif content-type using header(), you can create a PHP script that outputs GIF images directly.</seg></tuv>
      <tuv xml:lang="es"><seg>El formato de la imagen será GIF87a a menos que la imagen se halla hecho transparente con imagecolortransparent(), en cuyo caso el formato de la imagen será GIF89a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since all GIF support was removed from the GD library in version 1.6, this function is not available if you are using that version of the GD library.</seg></tuv>
      <tuv xml:lang="es"><seg>El parametro del nombre del fuichero es opcional, y si se deja en blanco, la imagen será mostrada directamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following code snippet allows you to write more portable PHP applications by auto-detecting the type of GD support which is available.</seg></tuv>
      <tuv xml:lang="es"><seg>Enviando un tipo de imagen / gif usando la función header(), puede crear un script PHP que muestre imagenes GIF directamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if (function_exists("imagegif")) {header ("Content-type: image / gif"); imagegif ($im);} elseif (function_exists("imagejpeg")) {header ("Content-type: image / jpeg"); imagejpeg ($im, "", 0.5);} elseif (function_exists("imagepng")) {header ("Content-type: image / png"); imagepng ($im);} elseif (function_exists("imagewbmp")) {header ("Content-type: image / vnd.wap.wbmp"); imagewbmp ($im);} else die("No image support in this PHP server");?</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (imagetypes() IMG_GIF) {header ("Content-type: image / gif"); imagegif ($im);} elseif (imagetypes() IMG_JPG) {... etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde que todo el soporte a GIFs ha sido eliminado en la libreria GD a partir de la versión 1.6, esta función no está disponible si está usando esa versión de la libreria GD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageinterlace</seg></tuv>
      <tuv xml:lang="es"><seg>ImageInterlace</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageinterlace() turns the interlace bit on or off.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageInterlace() activa o desactiva el bit de entrelazado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If interlace is 1 the image will be interlaced, and if interlace is 0 the interlace bit is turned off.</seg></tuv>
      <tuv xml:lang="es"><seg>Si interlace es 1 la imagen im será entrelazada, y si interlace es 0 el bit de entrelazado se desactiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns whether the interlace bit is set for the image.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve como ha cambiado el estado del bit de entralazado de la imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageline</seg></tuv>
      <tuv xml:lang="es"><seg>ImageLine</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageline() draws a line from x1, y1 to x2, y2 (top left is 0, 0) in image im of color col.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageLine dibuja una línea desde x1,y1 hasta x2,y2 (arriba izquierda es 0,0) en la imagen im con el color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecreate() and imagecolorallocate().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecreate() y imagecolorallocate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageloadfont</seg></tuv>
      <tuv xml:lang="es"><seg>ImageLoadFont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageloadfont() loads a user-defined bitmap font and returns an identifier for the font (that is always greater than 5, so it will not conflict with the built-in fonts).</seg></tuv>
      <tuv xml:lang="es"><seg>ImageLoadFont carga una fuente de bitmaps definida por el usuario y devuelve un identificador para esa fuente (que siempre es mayor de 5, de forma que no pueda entrar en conflicto con las fuentes predefinidas)..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The font file format is currently binary and architecture dependent.</seg></tuv>
      <tuv xml:lang="es"><seg>El formato del fichero de la fuente es actualmente binario y dependiente de la arquitectura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means you should generate the font files on the same type of CPU as the machine you are running PHP on.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que tiene que generar los ficheros de las fuentes en el mismo tipo de CPU que la que tiene la máquina que está ejecutando PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Font file format</seg></tuv>
      <tuv xml:lang="es"><seg>Formato del fichero de fuentes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>byte position</seg></tuv>
      <tuv xml:lang="es"><seg>Posición en bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>C data type</seg></tuv>
      <tuv xml:lang="es"><seg>tipo de datos C</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>description</seg></tuv>
      <tuv xml:lang="es"><seg>Descripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number of characters in the font</seg></tuv>
      <tuv xml:lang="es"><seg>número de carácteres en la fuente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>value of first character in the font (often 32 for space)</seg></tuv>
      <tuv xml:lang="es"><seg>valor del primer carácter de la fuente (normalmente 32 para el espacio)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pixel width of each character</seg></tuv>
      <tuv xml:lang="es"><seg>Anchura en pixels de cada carácter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pixel height of each character</seg></tuv>
      <tuv xml:lang="es"><seg>Altura en pixels de cada carácter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array with character data, one byte per pixel in each character, for a total of (nchars*width*height) bytes.</seg></tuv>
      <tuv xml:lang="es"><seg>matriz con los datos del carácter, un byte por pixel en cada carácter, haciendo un total de (número carácteres* altura*anchura) bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagefontwidth() and imagefontheight().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ImageFontWidth() y ImageFontHeight().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepolygon</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePolygon</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepolygon() creates a polygon in image id. points is a PHP array containing the polygon's vertices, ie. points[0] = x0, points[1] = y0, points[2] = x1, points[3] = y1, etc. num_points is the total number of points (vertices).</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePolygon crea un polígono en la imagen id. points es un array PHP conteniendo los vértices del polígono. de la siguiente forma points[ 0] = x0, points1 = y0, points[2] = x1, points[3] = y1, etc. num_points es el número total de vértices.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecreate() and imagecreatetruecolor().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecreate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepsbbox</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePSBBox</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Size is expressed in pixels.</seg></tuv>
      <tuv xml:lang="es"><seg>size representa pixels.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Space allows you to change the default value of a space in a font.</seg></tuv>
      <tuv xml:lang="es"><seg>space perimte cambiar el valor por defecto de un espacio en una fuentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This amount is added to the normal value and can also be negative.</seg></tuv>
      <tuv xml:lang="es"><seg>Este valor es añadido al valor normal y puede ser negativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tightness allows you to control the amount of white space between characters.</seg></tuv>
      <tuv xml:lang="es"><seg>tightness permite controlar la cantidad de espacio en blanco entre carácteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This amount is added to the normal character width and can also be negative.</seg></tuv>
      <tuv xml:lang="es"><seg>Este valor se añade a la anchura normal del carácter y puede ser negativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Angle is in degrees.</seg></tuv>
      <tuv xml:lang="es"><seg>angle viene dado en grados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameters space and tightness are expressed in character space units, where 1 unit is 1 / 1000th of an em-square.</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros space y tightness vienen expresados en unidades de espacio de carácteres, donde una unidad es 1 / 1000 el borde de una M.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameters space, tightness, and angle are optional.</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros space, tightness y angle son opcionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The bounding box is calculated using information available from character metrics, and unfortunately tends to differ slightly from the results achieved by actually rasterizing the text.</seg></tuv>
      <tuv xml:lang="es"><seg>El borde es calculado usando la información disponible de las métricas del carácter, y desafortunadamente tiende a diferir ligeramente de los resultados obtenidos de digitalizar el texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the angle is 0 degrees, you can expect the text to need 1 pixel more to every direction.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el ángulo es de 0 grados, puede esperar que el texto necesite un pixel más en cada dirección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array containing the following elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un array conteniuendo los siguientes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lower left x-coordinate</seg></tuv>
      <tuv xml:lang="es"><seg>coordenada x inferior izquierda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lower left y-coordinate</seg></tuv>
      <tuv xml:lang="es"><seg>coordenada y inferior izquierda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>upper right x-coordinate</seg></tuv>
      <tuv xml:lang="es"><seg>coordenada x superior derecha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>upper right y-coordinate</seg></tuv>
      <tuv xml:lang="es"><seg>coordenada y superior derecha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagepstext().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagepstext().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepscopyfont</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePSCopyFont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this function if you need make further modifications to the font, for example extending / condensing, slanting it or changing it 's character encoding vector, but need to keep the original along as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Use esta función si necesita hacer modificaciones en la fuente, por ejemplo expander / condensar, inclinarla o cambiar su vector de codificación de caracteres, pero también necesita mantener la fuente original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the font you want to copy must be one obtained using imagepsloadfont(), not a font that is itself a copied one.</seg></tuv>
      <tuv xml:lang="es"><seg>Note que la fuente que quiera copiar debe haber sido obtenida usando imagepsloadfont(), no una fuente que sea una copia de otra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can although make modifications to it before copying.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque puede hacer modificaciones antes de copiarla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use this function, you must free the fonts obtained this way yourself and in reverse order.</seg></tuv>
      <tuv xml:lang="es"><seg>Si usa esta función, debe liberar las fuentes obtenidas de esta manera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise your script will hang.</seg></tuv>
      <tuv xml:lang="es"><seg>De otra forma su script se colgará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the case everything went right, a valid font index will be returned and can be used for further purposes.</seg></tuv>
      <tuv xml:lang="es"><seg>En el caso de que todo vaya bien, devolverá un índice de fuente válido que puede ser usado para futuos propósitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the function returns FALSE and prints a message describing what went wrong.</seg></tuv>
      <tuv xml:lang="es"><seg>De otra forma la función devolverá FALSE e imprimirá un mensaje indicando que es lo que ha ido mal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagepsloadfont().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imageploadpsfont().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepsencodefont</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePSEncodeFont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Loads a character encoding vector from from a file and changes the fonts encoding vector to it.</seg></tuv>
      <tuv xml:lang="es"><seg>Carga un vector de codificación de caracteres desde un archivo y cambia el vector de codificación de las fuentes a él.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The exact format of this file is described in T1libs documentation.</seg></tuv>
      <tuv xml:lang="es"><seg>En las fuentes PostScript normalmente faltan muchos caracteres por encima de 127, seguramente quiera cambiar esto si emplea u idioma distinto del inglés.El formato exacto de este archivo está descrito en la documentación de T1libs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>T1lib comes with two ready-to-use files, IsoLatin1.enc and IsoLatin2.enc.</seg></tuv>
      <tuv xml:lang="es"><seg>T1lib viene con dos archivos listos para usar, IsoLatin1.enc y IsoLatin2.enc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you find yourself using this function all the time, a much better way to define the encoding is to set ps.default_encoding in the configuration file to point to the right encoding file and all fonts you load will automatically have the right encoding.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se encuentra usando esta función todo el tiempo, una forma mucho mejor de definir la codificación es establecer ps.default_encoding en el archivo de configuración para que apunte al archivo de codificación correcto y todas las fuentes que cargue tendrán de forma automática la codificación correcta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepsfreefont</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePSFreeFont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagepsloadfont().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagepsloadfont().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepsloadfont</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePSLoadFont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the case everything went right, a valid font index will be returned and can be used for further purposes.</seg></tuv>
      <tuv xml:lang="es"><seg>En el caso de que todo vaya bien, tiene que devolver un índice de fuente correcto que puede ser usado para futuras operaciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise the function returns FALSE and prints a message describing what went wrong, which you cannot read directly, while the output type is image.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso contrario la función devuelve FALSE e imprime un mensaje describiendo donde ha fallado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It worked !", $font, 32, $white, $black, 32, 32); imagepsfreefont ($font); imagejpeg ($im, "", 100); / /for best quality...your mileage may vary imagedestroy ($im);?</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagepsfreefont().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagepstext</seg></tuv>
      <tuv xml:lang="es"><seg>ImagePSText</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Size is expressed in pixels.</seg></tuv>
      <tuv xml:lang="es"><seg>size viene expresado en pixels.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Background is the color to which the text will try to fade in with antialiasing.</seg></tuv>
      <tuv xml:lang="es"><seg>foreground es el color en el cual el texto será pintado. background es el color en el que el texto tratará de resaltar con antialiaing.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No pixels with the color background are actually painted, so the background image does not need to be of solid color.</seg></tuv>
      <tuv xml:lang="es"><seg>Los pixels con el color background no se pintan, de forma que la imagen de fondo no necesita ser de un color sólido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The coordinates given by x, y will define the origin (or reference point) of the first character (roughly the lower-left corner of the character).</seg></tuv>
      <tuv xml:lang="es"><seg>Las coordenadas dadas por x, y definirán el origen (o punto de referencia) del primer carácter (la esquina superior izquierda del carácter).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is different from the imagestring(), where x, y define the upper-right corner of the first character.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es diferente de la función ImageString(), donde x, y definen la esquina superiro derecha del primer carácter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to PostScipt documentation about fonts and their measuring system if you have trouble understanding how this works.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulte la documentación de PostScript sobre fuentes y su sistema de medidas si tiene algún problema entendiendo como funcion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Space allows you to change the default value of a space in a font.</seg></tuv>
      <tuv xml:lang="es"><seg>space permite cambiar el valor por defecto de un espacio en la fuente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This amount is added to the normal value and can also be negative.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta cantidad es sumada al valor normal y puede ser negativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tightness allows you to control the amount of white space between characters.</seg></tuv>
      <tuv xml:lang="es"><seg>tightness permite controlar la cantidad de espacio en blanco entre caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This amount is added to the normal character width and can also be negative.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta cantidad es sumada al valor normal y puede ser negativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Angle is in degrees.</seg></tuv>
      <tuv xml:lang="es"><seg>angle viene en grados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Antialias_steps allows you to control the number of colours used for antialiasing text.</seg></tuv>
      <tuv xml:lang="es"><seg>antialias_steps antialias_steps permite controlar el número de colores usados para el antialising del texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Allowed values are 4 and 16.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores permitidos son 4 y 16.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The higher value is recommended for text sizes lower than 20, where the effect in text quality is quite visible.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor superior está recomendado para textos con tamaños inferiores a 20, donde el efecto en la calidad del texto es bastante visible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With bigger sizes, use 4.</seg></tuv>
      <tuv xml:lang="es"><seg>Con tamaños superiores use 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It 's less computationally intensive.</seg></tuv>
      <tuv xml:lang="es"><seg>Hace un menor uso de cálculo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameters space and tightness are expressed in character space units, where 1 unit is 1 / 1000th of an em-square.</seg></tuv>
      <tuv xml:lang="es"><seg>Parameters space y tightness están expresados en unidades de espacio de caracteres, donde 1 unidad es 1 / 1000 de una M mayúscula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameters space, tightness, angle and antialias are optional.</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros space, tightness, angle y antialias son opcionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array containing the following elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve una matriz conteniendo los siguientes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagepsbbox().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagepsbbox().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagerectangle</seg></tuv>
      <tuv xml:lang="es"><seg>ImageRectangle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagerectangle() creates a rectangle of color col in image image starting at upper left coordinate x1, y1 and ending at bottom right coordinate x2, y2.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageRectangle crea un rectángulo de color col en la imagen im comenzando en la coordenada superior izquierda x1,y1 y finalizando en la coordenada inferior derecha x2,y2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagesetpixel</seg></tuv>
      <tuv xml:lang="es"><seg>ImageSetPixel</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagesetpixel() draws a pixel at x, y (top left is 0, 0) in image image of color col.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageSetPixel dibuja un pixel x,y (arriba izquierda 0,0) en la imagen im con color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imagesetstyle() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imagesetstyle() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagestring</seg></tuv>
      <tuv xml:lang="es"><seg>ImageString</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagestring() draws the string s in the image identified by image at coordinates x, y (top left is 0, 0) in color col.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageString dibuja la cadena s en la imagen identificada por im en las coordenadas x,y (arriba izquierda es 0,0) en el color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If font is 1, 2, 3, 4 or 5, a built-in font is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la fuente es 1, 2, 3, 4 o 5, se emplea una fuente interna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagestringup</seg></tuv>
      <tuv xml:lang="es"><seg>ImageStringUp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagestringup() draws the string s vertically in the image identified by image at coordinates x, y (top left is 0, 0) in color col.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageStringUp dibuja la cadena s verticalmente en la imagen identificada por im en las coordenadas x,y (arriba izquierda es 0,0) en el color col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If font is 1, 2, 3, 4 or 5, a built-in font is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la fuente es 1, 2, 3, 4 o 5, se usa una fuente interna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagesx</seg></tuv>
      <tuv xml:lang="es"><seg>ImageSX</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagesx() returns the width of the image identified by image.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageSX devuelva la anchura de la imagen identificado por im.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecreate() and imagesy().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecreate() y imagesy().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagesy</seg></tuv>
      <tuv xml:lang="es"><seg>ImageSY</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagesy() returns the height of the image identified by image.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageSY devuelve la altura de la imagen identificada por im.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagecreate() and imagesx().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también imagecreate() y imagesx().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagettfbbox</seg></tuv>
      <tuv xml:lang="es"><seg>ImageTTFBBox</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function calculates and returns the bounding box in pixels for a TrueType text.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función calcula y devuelve un rectángulo en pixels que encierra un texto con TrueType.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The string to be measured.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena que ha de ser medida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The font size in pixels.</seg></tuv>
      <tuv xml:lang="es"><seg>El tamaño de la fuente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the TrueType font file. (Can also be an URL.) Depending on which version of the GD library that PHP is using, it may attempt to search for files that do not begin with a leading '/' by appending '.ttf 'to the filename and searching along a library-defined font path.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre del archivo de fuente TrueType. (Puede ser también una URL.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Angle in degrees in which text will be measured.</seg></tuv>
      <tuv xml:lang="es"><seg>Ángulo en grados en el text que va a ser medido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lower left corner, X position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina inferior izquierda, posición X</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lower left corner, Y position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina inferior izquierda, posición Y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lower right corner, X position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina inferior derecha, posición X</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lower right corner, Y position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina inferior derecha, posición Y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>upper right corner, X position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina superior derecha, posición X</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>upper right corner, Y position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina superior derecha, posición Y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>upper left corner, X position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina superior izquierda, posición X</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>upper left corner, Y position</seg></tuv>
      <tuv xml:lang="es"><seg>esquina superior izquierda, posición Y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function requires both the GD library and the FreeType library.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función requiere tanto la libreria GD como la libreria Freetype.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagettftext().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ImageTTFText().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imagettftext</seg></tuv>
      <tuv xml:lang="es"><seg>ImageTTFText</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Depending on which version of the GD library that PHP is using, when fontfile does not begin with a leading '/', '.ttf 'will be appended to the filename and the library will attempt to search for that filename along a library-defined font path.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageTTFText escribe la cadena text en la imagen identificada por im, comenzando en las coordenadas x,y (arriba izquierda es 0,0), con un ángulo de angle en el color col, usando el ficheor de fuente TrueType identificado por fontfile.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The coordinates given by x, y will define the basepoint of the first character (roughly the lower-left corner of the character).</seg></tuv>
      <tuv xml:lang="es"><seg>Las coordenadas dadas por x, y definirán el punto base del primer carácter. (la esquina inferior izquierda del carácter).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is different from the imagestring(), where x, y define the upper-right corner of the first character.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es diferente de la función ImageString(), donde x,y definen la esquina superior derecha del primer carácter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>angle is in degrees, with 0 degrees being left-to-right reading text (3 o'clock direction), and higher values representing a counter-clockwise rotation. (i.e., a value of 90 would result in bottom-to-top reading text).</seg></tuv>
      <tuv xml:lang="es"><seg>El angle viene dado en grados, donde 0 grados representa el texto de izquierda a derecha (dirección las 3 en punto), y valores superiores representan una rotación en el sentido de las agujas de un reloj. (ej. un valor de 90 representaría un texto que fuese de abajo hacia arriba).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fontfile is the path to the TrueType font you wish to use.</seg></tuv>
      <tuv xml:lang="es"><seg>fontfile es la ruta hacia la fuente TrueType que desee usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>text is the text string which may include UTF-8 character sequences (of the form: #123;) to access characters in a font beyond the first 255.</seg></tuv>
      <tuv xml:lang="es"><seg>123;) para acceder a caracteres de la fuente más allá de los primeros 255.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Col is the color index.</seg></tuv>
      <tuv xml:lang="es"><seg>col es el índice de color.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the negative of a color index has the effect of turning off antialiasing.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de un índice de color negativo tiene el efecto de desactivar el antialiasing.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The order of the points is lower left, lower right, upper right, upper left.</seg></tuv>
      <tuv xml:lang="es"><seg>ImageTTFText() devuelve una matriz con 8 elementos representando cuatro puntos que hace una caja que cubre el texto.El orden de los puntos en arriba izquierda, arriba derecha, abajo derecha, abajo izquierda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The points are relative to the text regardless of the angle, so "upper left" means in the top left-hand corner when you see the text horizontallty.</seg></tuv>
      <tuv xml:lang="es"><seg>Los puntos son relativos al texto a pesar del ángulo, por lo que "arriba izquierda" significa en la esquina superior izquierda cuando ve el texto horizontalmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example script will produce a black GIF 400x30 pixels, with the words "Testing..." in white in the font Arial.</seg></tuv>
      <tuv xml:lang="es"><seg>Este script de ejemplo producirá un GIF negro de 400x30 pixels, con las palabras "Testing..." en blanco con la fuente Arial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imagettftext() example</seg></tuv>
      <tuv xml:lang="es"><seg>ImageTTFText</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php header( "Content-type: image / jpeg"); $im = imagecreate(400,30); $white = imagecolorallocate($im, 255,255,255); $black = imagecolorallocate($im, 0,0,0); / / Replace path by your own font path imagettftext($im, 20, 0, 10, 20, $black, "/ path / arial.ttf", "Testing...</seg></tuv>
      <tuv xml:lang="es"><seg>?php Header( "Content-type: image / gif"); $im = imagecreate(400,30); $black = ImageColorAllocate($im, 0,0,0); $white = ImageColorAllocate($im, 255,255,255); ImageTTFText($im, 20, 0, 10, 20, $white, "/ path / arial.ttf", "Testing...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Omega: amp; #937 ;"); imagejpeg($im); imagedestroy($im);?</seg></tuv>
      <tuv xml:lang="es"><seg>Omega: #937; "); ImageGif($im); ImageDestroy($im);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function requires both the GD library and the FreeType library.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función requiere la libreria GD y la libreria FreeType.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imagettfbbox().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ImageTTFBBox().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imagetypes</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imagetypes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. image_type_to_mime_type (file)</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. image_type_to_mime_type (file)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getimagesize</seg></tuv>
      <tuv xml:lang="es"><seg>GetImageSize</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Convert an 8bit string to a quoted-printable string (according to RFC2045, section 6.7).</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una cadena de 8bit a una cadena quoted-printable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_qprint().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena quoted-printable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>IMAP, POP3 and NNTP functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones IMAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array of all of the IMAP alert messages generated since the last imap_alerts() call, or the beginning of the page.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un array con todos los mensajes de alerta IMAP generados desde la última llamada a imap_alerts(), o el comienzo de la pagina.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When imap_alerts() is called, the alert stack is subsequently cleared.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se llama a imap_alerts(), la pila de alerta es inicializada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The IMAP specification requires that these messages be passed to the user.</seg></tuv>
      <tuv xml:lang="es"><seg>La especificación IMAP requiere que estos mensajes sean pasados al usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on sucess, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_append() appends a string message to the specified mailbox mbox.</seg></tuv>
      <tuv xml:lang="es"><seg>imap_append() agrega una cadena de mensaje al buzón especificado mbox.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional options is specified, writes the options to that mailbox also.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica el parámetro flags, escribe las opciones o condiciones establecidas en el parámetro flags al buzón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_append() example</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando conecte con el servidor Cyrus IMAP, debe usar "\r\n" como finalizador de linea en vez de "\n "o la operación fallará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_base64() function decodes BASE-64 encoded text (see RFC2045, Section 6.8).</seg></tuv>
      <tuv xml:lang="es"><seg>imap_base64() decodifica texto codificado en BASE-64.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_binary().</seg></tuv>
      <tuv xml:lang="es"><seg>El mensaje decodificado es devuelto como una cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Convert an 8bit string to a base64 string (according to RFC2045, Section 6.8).</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una cadena de 8bit a una cadena base64.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_base64().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve una cadena base64.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional flags are a bit mask with one or more of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>imap_body() devuelve el cuerpo del mensaje, numerado msg_number del buzón actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FT_PEEK - Do not set the \Seen flag if not already set</seg></tuv>
      <tuv xml:lang="es"><seg>Los flags opcionales son una máscara de bit con una o mas de las siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FT_INTERNAL - The return string is in internal format, will not canonicalize to CRLF.</seg></tuv>
      <tuv xml:lang="es"><seg>FT_UID - El msgno es un UID</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_body() will only return a verbatim copy of the message body.</seg></tuv>
      <tuv xml:lang="es"><seg>FT_PEEK - No activar \Seen flag si no está ya activa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To extract single parts of a multipart MIME-encoded message you have to use imap_fetchstructure() to analyze its structure and imap_fetchbody() to extract a copy of a single body component.</seg></tuv>
      <tuv xml:lang="es"><seg>FT_INTERNAL - La cadena devuelta está en formato interno, no canoniza a CRLF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The imap_check() function checks the current mailbox status on the server and returns the information in an object with following properties:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve información acerca del buzón actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Driver - protocol used to access this mailbox:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si falla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mailbox - the mailbox name</seg></tuv>
      <tuv xml:lang="es"><seg>La función imap_check() comprueba el estado del buzón actual en el servidor y devuelve la información en un objeto con las siguientes propiedades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recent - number of recent messages in the mailbox</seg></tuv>
      <tuv xml:lang="es"><seg>Date: fecha del mensaje Driver: controlador Mailbox: nombre del buzón Nmsgs: número de mensajes Recent: número de mensajes recientes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The flags which you can unset are "\\Seen", "\\Answered", "\\Flagged", "\\Deleted", and "\\Draft" (as defined by RFC2060).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion elimina el flag especificado del conjunto de flags activos para los mensajes en la secuencia especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The options are a bit mask with one or more of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones son una máscara de bit con uno o más de los siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ST_UID The sequence argument contains UIDs instead of sequence numbers</seg></tuv>
      <tuv xml:lang="es"><seg>ST_UID El argumento sequence contiene UIDs en vez de nÃºmeros secuenciales</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close the imap stream.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra una sesión imap.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Takes an optional flag CL_EXPUNGE, which will silently expunge the mailbox before closing, removing all messages marked for deletion.</seg></tuv>
      <tuv xml:lang="es"><seg>Toma un parámetro flag opcional, CL_EXPUNGE, el cual purgará el buzón de forma trasparente antes de cerrarla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Names containing international characters should be encoded by imap_utf7_encode()</seg></tuv>
      <tuv xml:lang="es"><seg>imap_createmailbox() crea un buzón nuevo especificado por mbox (ver imap_open() para el formato del parámetro mbox).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_renamemailbox(), imap_deletemailbox() and imap_open() for the format of mbox names.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$mbox = imap_open( "{your.imap.host}" ,"username" ,"password",OP_HALFOPEN) or die("can't connect: ".imap_last_error()); $name1 = "phpnewbox"; $name2 = imap_utf7_encode("phpnewb ouml;x"); $newname = $name1; echo "Newname will be '$name1 'br \n"; # we will now create a new mailbox "phptestbox "in your inbox folder, # check its status after creation and finaly remove it to restore # your inbox to its initial state if(@imap_createmailbox($mbox,imap_utf7_encode("{your.imap.host}INBOX.$newname"))) {$status = @imap_status($mbox ,"{your.imap.host}INBOX.$newname",SA_ALL); if($status) {print("your new mailbox '$name1' has the following status: br \n"); print("Messages:". $status - messages). "br \n"; print("Recent:". $status - recent). "br \n"; print("Unseen:". $status - unseen). "br \n"; print("UIDnext:". $status - uidnext). "br \n"; print("UIDvalidity :". $status - uidvalidity)." br \n"; if(imap_renamemailbox($mbox ,"{your.imap.host}INBOX.$newname" ,"{your.imap.host}INBOX.$name2")) {echo "renamed new mailbox from '$name1 'to '$name2' br \n"; $newname=$name2;} else {print "imap_renamemailbox on new mailbox failed: ".imap_last_error(). "br \n";}} else {print "imap_status on new mailbox failed: ".imap_last_error()." br \n";} if(@imap_deletemailbox($mbox ,"{your.imap.host}INBOX.$newname")) {print "new mailbox removed to restore initial state br \n";} else {print "imap_deletemailbox on new mailbox failed: ".implode( "br \n",imap_errors())." br \n";}} else {print "could not create new mailbox: ".implode( "br \n",imap_errors())." br \n";} imap_close($mbox);</seg></tuv>
      <tuv xml:lang="es"><seg>Ver También imap_renamemailbox() y imap_deletemailbox().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_delete() marks messages listed in msg_number for deletion.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Messages marked for deletion will stay in the mailbox until either imap_expunge() is called or imap_close() is called with the optional parameter CL_EXPUNGE.</seg></tuv>
      <tuv xml:lang="es"><seg>La función imap_delete() marca el mensaje referenciado por msg_number para su eliminación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_delete() Beispiel</seg></tuv>
      <tuv xml:lang="es"><seg>El borrado físico de los mensajes es realizado por imap_expunge().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_deletemailbox() deletes the specified mailbox (see imap_open() for the format of mbox names).</seg></tuv>
      <tuv xml:lang="es"><seg>imap_deletemailbox() elimina el buzón especificado (ver imap_open() para el formato del mbox).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_createmailbox(), imap_renamemailbox(), and imap_open() for the format of mbox.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver También imap_createmailbox() y imap_reanmemailbox().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array of all of the IMAP error messages generated since the last imap_errors() call, or the beginning of the page.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un array de todos los mensajes de error IMAP generados desde la última llamada a imap_errors(), o el principio de la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When imap_errors() is called, the error stack is subsequently cleared.</seg></tuv>
      <tuv xml:lang="es"><seg>ATENCIàN: esta función no esta disponible aún en PHP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_expunge() deletes all the messages marked for deletion by imap_delete(), imap_mail_move(), or imap_setflag_full().</seg></tuv>
      <tuv xml:lang="es"><seg>imap_expunge() elimina todos los mensajes marcados por la función imap_delete().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function causes a fetch of a particular section of the body of the specified messages as a text string and returns that text string.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función busca una sección particular en el cuerpo de los mensajes especificados, como una cadena de texto y devuleve esa cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The section specification is a string of integers delimited by period which index into a body part list as per the IMAP4 specification.</seg></tuv>
      <tuv xml:lang="es"><seg>La especificación de la sección es una cadena de enteros delimitados por comas,los cuales indexan las partes del cuerpo como indica la especificación IMAP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Body parts are not decoded by this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Partes del cuerpo no son decodificadas por esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The options for imap_fetchbody() is a bitmask with one or more of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones para imap_fetchbody () son una máscara de bit con una o más de las siguientes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FT_UID - The msg_number is a UID</seg></tuv>
      <tuv xml:lang="es"><seg>FT_UID - El msgono es un UID</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FT_PEEK - Do not set the \Seen flag if not already set</seg></tuv>
      <tuv xml:lang="es"><seg>FT_PEEK - No activar \Seen flag si no esta ya activa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: imap_fetchstructure().</seg></tuv>
      <tuv xml:lang="es"><seg>FT_INTERNAL - La cadena devuelta está en formato "interno", sin ningún intento por canonizar CRLF</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function causes a fetch of the complete, unfiltered RFC2822 format header of the specified message as a text string and returns that text string.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función localiza el formato de la cabecera RFC 822 del mensaje especificado como una cadena de texto y devuelve esa cadena de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FT_UID The msgno argument is a UID FT_INTERNAL The return string is in "internal" format, without any attempt to canonicalize to CRLF newlines FT_PREFETCHTEXT The RFC822.TEXT should be pre-fetched at theFT_UID The msgno argument is a UID FT_INTERNAL The return string is in "internal "format, without any attempt to canonicalize to CRLF newlines FT_PREFETCHTEXT The RFC822.TEXT should be pre-fetched at the same time.</seg></tuv>
      <tuv xml:lang="es"><seg>FT_UID El argumento msgno es un UID FT_INTERNAL La cadena devuelta esta en formato "interno", sin ningún intento de canonizar CRLF FT_PREFETCHTEXT The RFC822.TEXT should be pre-fetched at theFT_UID El argumento msgno es un UID FT_INTERNAL La cadena devuelta esta en formato "interno", sin ningún intento de canonizar CRLF FT_PREFETCHTEXT The RFC822.TEXT should be pre-fetched at the same time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This avoids an extra RTT on an IMAP connection if a full message text is desired (e.g. in a "save to local file "operation)</seg></tuv>
      <tuv xml:lang="es"><seg>Esto evita un extra RTT en una conexión IMAP si se desea un mensaje completo de texto (e.g. en una operación de "guardar a un fichero local")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_fetch_overview() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_fetch_overview() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function fetches all the structured information for a given message.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función busca toda la información estructurada en el mensaje especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional flags parameter only has a single option, FT_UID, which tells the function to treat the msg_number argument as a UID.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional flags sólo tiene una opcion, FT_UID, la cual indica a la función que trate el argumento msg_number como un UID.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned object includes the envelope, internal date, size, flags and body structure along with a similar object for each mime attachement.</seg></tuv>
      <tuv xml:lang="es"><seg>El objeto devuelto incluye el sobre, la fecha interna, el tama¤o, flags y la estructura del cuerpo con un objeto similar por cada mime adjunto al mensaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The structure of the returned objects is as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>La estructura de los objetos devueltos es como sigue:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returned Objects for imap_fetchstructure()</seg></tuv>
      <tuv xml:lang="es"><seg>Objetos Devueltos para imap_fetchstructure()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Primary body type</seg></tuv>
      <tuv xml:lang="es"><seg>Tipo primario del cuerpo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if there is a subtype string</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si hay una cadena de subtipo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifdescription</seg></tuv>
      <tuv xml:lang="es"><seg>ifDescripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if there is a description string</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si hay una cadena de Descripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>description</seg></tuv>
      <tuv xml:lang="es"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Content description string</seg></tuv>
      <tuv xml:lang="es"><seg>Conenido de la cadena de Descripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if there is an identification string</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si hay una cadena de identificación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identification string</seg></tuv>
      <tuv xml:lang="es"><seg>Cadena de Identificación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of lines</seg></tuv>
      <tuv xml:lang="es"><seg>Número de lineas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of bytes</seg></tuv>
      <tuv xml:lang="es"><seg>Número de bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if there is a disposition string</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si hay una cadena de configuración</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Disposition string</seg></tuv>
      <tuv xml:lang="es"><seg>Cadena de configuración</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if the dparameters array exists</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si el array dparameters existe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dparameters</seg></tuv>
      <tuv xml:lang="es"><seg>dparameters [a]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array of objects where each object has an "attribute" and a "value "property corresponding to the parameters on the Content-disposition MIME header.</seg></tuv>
      <tuv xml:lang="es"><seg>Array de parametro de configuración</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifparameters</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si el array de parámetros existe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if the parameters array exists</seg></tuv>
      <tuv xml:lang="es"><seg>parameters [b]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>parameters</seg></tuv>
      <tuv xml:lang="es"><seg>MIME parameters array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array of objects where each object has an "attribute" and a "value "property.</seg></tuv>
      <tuv xml:lang="es"><seg>Array de objetos describiendo cada parte del mensaje</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array of objects identical in structure to the top-level object, each of which corresponds to a MIME body part.</seg></tuv>
      <tuv xml:lang="es"><seg>Notas: a. dparameters es un array de objetos donde cada objeto tiene un "atributo" y una propiedad "valor". b. parameter es un array de objetos donde cada objetor tiene un "atributo "y una propiedad "valor". c. parts es un array de objetos identico en estructura al objeto del primer nivel, con la limitación de que este no puede contener más objetos 'parts '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>text</seg></tuv>
      <tuv xml:lang="es"><seg>texto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>multipart</seg></tuv>
      <tuv xml:lang="es"><seg>multiparte</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>message</seg></tuv>
      <tuv xml:lang="es"><seg>mensaje</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>application</seg></tuv>
      <tuv xml:lang="es"><seg>aplicación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>image</seg></tuv>
      <tuv xml:lang="es"><seg>imagen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>other</seg></tuv>
      <tuv xml:lang="es"><seg>otro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Transfer encodings</seg></tuv>
      <tuv xml:lang="es"><seg>Codificacion para tranferencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: imap_fetchbody().</seg></tuv>
      <tuv xml:lang="es"><seg>OTRO</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of objects containing mailbox information.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array de objetos coneniendo información del buzón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attributes is a bitmask that can be tested against:</seg></tuv>
      <tuv xml:lang="es"><seg>Cada objeto tiene los atributos name, especificando el nombre completo del buzón; delimiter, que es el delimitador jerárquico para la parte de la jerarquía dónde está este buzón; y attributes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LATT_NOINFERIORS - This mailbox has no "children" (there are no mailboxes below this one).</seg></tuv>
      <tuv xml:lang="es"><seg>Attributes es una máscara de bits contra la que se puede probar:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LATT_NOSELECT - This is only a container, not a mailbox - you cannot open it.</seg></tuv>
      <tuv xml:lang="es"><seg>LATT_NOINFERIORS - Este buzón no tiene "hijos" (No ha buzones por debajo de él)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only used by UW-IMAPD.</seg></tuv>
      <tuv xml:lang="es"><seg>LATT_NOSELECT - Esto es sólo un contenedor, no un buzón - No puede abrirlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LATT_UNMARKED - This mailbox is not marked.</seg></tuv>
      <tuv xml:lang="es"><seg>LATT_MARKED - Este buzón está marcado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only used by UW-IMAPD.</seg></tuv>
      <tuv xml:lang="es"><seg>Unicamente usado por UW-IMAPD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mailbox names containing international Characters outside the printable ASCII range will be encoded and may be decoded by imap_utf7_decode().</seg></tuv>
      <tuv xml:lang="es"><seg>Unicamente usado por UW-IMAPD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want all mailboxes, pass' * 'for pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>ref normalmente debería ser solo el servidor IMAP, de la forma: {imap_server:imap_port}, y pattern especifica, dónde en la estructura jerárquica del buzón, para comenzar a buscar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two special characters you can pass as part of the pattern: '*' and '%'. '* 'means to return all mailboxes.</seg></tuv>
      <tuv xml:lang="es"><seg>Si quiere todo los buzones, pase el parámetro pattern como una cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_getmailboxes() example</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos caracteres especiales que puede pasar como parte del parámetro pattern: '*' and '%'. '* 'significa que devuelva todos los buzones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_getsubscribed().</seg></tuv>
      <tuv xml:lang="es"><seg>Pasar '%' en el parámetro pattern devolverá sólo el nivel más alto de los buzones; '~ / mail /% 'en UW_IMAPD devolverá cada buzón del directorio ~ / mail, pero ninguno de los subdirectorios de ese directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_get_quota() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_get_quota() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. imap_get_quota() 4.3 or greater example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. imap_get_quota() 4.3 or greater example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_get_quotaroot() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_get_quotaroot() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is identical to imap_getmailboxes(), except that it only returns mailboxes that the user is subscribed to.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es idéntica a imap_getmailboxes(), excepto que esta sólo devuelve los buzones a los que está subscrito el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>remail, date, Date, subject, Subject, in_reply_to, message_id, newsgroups, followup_to, references message flags:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias to imap_headerinfo() and is identical to it in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>Si quiere conocer si un mensaje es Unseen, debe comprobarlo asi Unseen == 'U' _BAR_ _BAR_ Recent == 'N 'toaddress (la linea to: al completo, hasta 1024 caracteres) to[] (devuelve un array de objetos a partir de la linea To, conteniendo:) personal adl mailbox host fromaddress (la linea from: al completo, hasta 1024 caracteres) from[] (devuelve un array de objetos a partir de la linea From, conteniendo:) personal adl mailbox host ccaddress (la linea cc: al completo, hasta 1024 caracteres) cc[] (devuelve un array de objetos a partir de la linea Cc:, conteniendo:) personal adl mailbox host bccaddress (la linea bcc al completo, hasta 1024 caracteres) bcc[] (devuelve un array de objetos a partir de la linea Bcc, conteniendo:) personal adl mailbox host reply_toaddress (la linea reply_to: al completo, hasta 1024 caracteres) reply_to[] (devuelve un array de objetos a partir de la linea Reply_to, conteniendo:) personal adl mailbox host senderaddress (la linea sender: al completo, hasta 1024 caracteres) sender[] (devuelve un array de objetos a partir de la linea sender, conteniendo:) personal adl mailbox host return_path (la linea return-path: al completo, hasta 1024 caracteres) return_path[] (devuelve un array de objetos a partir de la linea return_path, conteniendo:) personal adl mailbox host udate (fecha del mensaje en formato unix) fetchfrom (la linea from formateada hasta ajustarse a los caracteres indicados en fromlength) fetchsubject (la linea subject formateada hasta ajustarse a los caracteres indicados en subjectlength)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of string formatted with header info.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array de cadenas formateadas con informacion de la cabecera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One element per mail message.</seg></tuv>
      <tuv xml:lang="es"><seg>Un elemento por mensaje de correo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the full text of the last IMAP error message that occurred on the current page.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve el texto completo del último error IMAP que ocurrió en la pagina actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error stack is untouched; calling imap_last_error() subsequently, with no intervening errors, will return the same error.</seg></tuv>
      <tuv xml:lang="es"><seg>ATENCIàN: esta función no esta disponible aún en PHP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_list() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_list() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias to imap_list() and is identical to it in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array que contiene los nombres de los buzones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias to imap_lsub() and is identical to it in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros ref y pattern especifican la localización desde donde comenzará a buscar y el patrón que el nombre del buzón debe encontrar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve información acerca del buzón actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The imap_mailboxmsginfo() The imap_mailboxmsginfo() function checks the current mailbox status on the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the information in an object with following properties.</seg></tuv>
      <tuv xml:lang="es"><seg>La función imap_mailboxmsginfo() comprueba el estado del buzón actual en el servidor y devuelve la información en un objeto con las siguientes propiedades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $mbox = imap_open( "{your.imap.host}INBOX" ,"username", "password") or die("can't connect: ".imap_last_error()); $check = imap_mailboxmsginfo($mbox); if($check) {print "Date: ". $check - Date." br \n "; print "Driver:". $check - Driver. "br \n"; print "Mailbox: ". $check - Mailbox." br \n "; print "Messages:". $check - Nmsgs. "br \n"; print "Recent: ". $check - Recent." br \n "; print "Unread:". $check - Unread. "br \n"; print "Deleted: ". $check - Deleted." br \n "; print "Size:". $check - Size. "br \n";} else {print "imap_check() failed: ".imap_last_error(). "br \n";} imap_close($mbox);?</seg></tuv>
      <tuv xml:lang="es"><seg>Date: fecha del mensaje Driver: driver Mailbox: nombre del buzón Nmsgs: número de mensajes Recent: número de los mensajes recientes Unread: número de los mensajes no leidos Size: tama¤o del buzon</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_mail_compose() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_mail_compose() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Copies mail messages specified by msglist to specified mailbox. msglist is a range not just message numbers (as described in RFC2060).</seg></tuv>
      <tuv xml:lang="es"><seg>Copia los mensajes especificados por msglist a un buzón especificado. msglist es un rango no números de mensajes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Flags is a bitmask of one or more of</seg></tuv>
      <tuv xml:lang="es"><seg>Flags es una máscara de bit de uno o más</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CP_UID - the sequence numbers contain UIDS</seg></tuv>
      <tuv xml:lang="es"><seg>CP_UID - los números de secuencia contienen UIDS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CP_MOVE - Delete the messages from the current mailbox after copying</seg></tuv>
      <tuv xml:lang="es"><seg>CP_MOVE - Elimina los mensajes del buzon actual despues de copiarlos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Moves mail messages specified by msglist to specified mailbox. msglist is a range not just message numbers (as described in RFC2060).</seg></tuv>
      <tuv xml:lang="es"><seg>Mueve los mensajes especificados por msglist al buzón especicifado. msglist es un rango no números de mensajes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CP_UID - the sequence numbers contain UIDS</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_mime_header_decode() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_mime_header_decode() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the message sequence number for the given UID.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve el número de secuencia del mensaje para el UID dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is the inverse of imap_uid().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es la inversa a imap_uid().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: imap_num_recent() and imap_status().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de mensajes en el buzón actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: imap_num_msg() and imap_status().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve el número de mensajes recientes en el buzón actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function can also be used to open streams to POP3 and NNTP servers, but some functions and features are only available on IMAP servers.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve la sesion IMAP si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The special name INBOX stands for the current users personal mailbox.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función también puede ser usada para abrir sesiones con servidores POP3 y NNTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The server part is mandatory in all mailbox parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Para conectarse a un servidor IMAP escuchando por el puerto 143 en una máquina local, haga lo siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mailbox names that contain international characters besides those in the printable ASCII space have to be encoded with imap_utf7_encode().</seg></tuv>
      <tuv xml:lang="es"><seg>$mbox = imap_open( "{localhost:143}INBOX" ,"user_id" ,"password");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OP_READONLY - Open mailbox read-only</seg></tuv>
      <tuv xml:lang="es"><seg>$mbox = imap_open( "{localhost / pop3:110}INBOX" ,"user_id" ,"password");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OP_ANONYMOUS - Dont use or update a .newsrc for news (NNTP only)</seg></tuv>
      <tuv xml:lang="es"><seg>$nntp = imap_open( "{localhost / nntp:119}comp.test" ,"" ,"");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CL_EXPUNGE - Expunge mailbox automatically upon mailbox close</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones son una máscara de bit con una o más de los siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To connect to an IMAP server running on port 143 on the local machine, do the following:</seg></tuv>
      <tuv xml:lang="es"><seg>OP_READONLY - Abre el buzón en modo de sólo lectura</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$mbox = imap_open ("{localhost:110 / pop3}INBOX", "user_id", "password");</seg></tuv>
      <tuv xml:lang="es"><seg>OP_ANONYMOUS - No usa o actualiza un .newsrc para las noticias</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$mbox = imap_open ("{localhost:995 / pop3 / ssl / novalidate-cert}", "user_id", "password");</seg></tuv>
      <tuv xml:lang="es"><seg>OP_HALFOPEN - Para nombres IMAP y NNTP, abre una conexión pero no abre un buzón</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_open() example</seg></tuv>
      <tuv xml:lang="es"><seg>CL_EXPUNGE - Purga automaticamente el buzón antes de cerrar la sesión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the stream is still alive, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si la sesión está activa, FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imap_ping() function pings the stream to see it is still active.</seg></tuv>
      <tuv xml:lang="es"><seg>La función imap_ping() pings the stream to see it is still active.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may discover new mail; this is the preferred method for a periodic "new mail check "as well as a "keep alive" for servers which have inactivity timeout. (As PHP scripts do not tend to run that long, i can hardly imagine that this function will be usefull to anyone.)</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede descubrir que hay correo nuevo; este es el método preferido para hacer una comprobación periodica del buzón, asi como para mantener activa sesiones en servidores que tienen inactivity timeout.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Convert a quoted-printable string to an 8 bit string (according to RFC2045, section 6.7).</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una cadena quoted-printable a una cadena de 8 bit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_8bit().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena de 8 bit (binary)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function renames on old mailbox to new mailbox (see imap_open() for the format of mbox names).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función renombra un buzon (ver imap_open() para el formato del parámetro mbox).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_createmailbox(), imap_deletemailbox(), and imap_open() for the format of mbox.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver También imap_createmailbox() and imap_deletemailbox().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function reopens the specified stream to a new mailbox on an IMAP or NNTP server.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The options are a bit mask with one or more of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funció reabre la sesión especificada con un nuevo buzón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OP_READONLY - Open mailbox read-only</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones son máscaras de bit con una o más de las siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OP_ANONYMOUS - Dont use or update a .newsrc for news (NNTP only)</seg></tuv>
      <tuv xml:lang="es"><seg>OP_READONLY - Abre el buzón en modo de sólo lectura</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OP_HALFOPEN - For IMAP and NNTP names, open a connection but dont open a mailbox.</seg></tuv>
      <tuv xml:lang="es"><seg>OP_ANONYMOUS - No usa o actualiza .newsrc para noticias</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CL_EXPUNGE - Expunge mailbox automatically upon mailbox close (see also imap_delete() and imap_expunge())</seg></tuv>
      <tuv xml:lang="es"><seg>OP_HALFOPEN - Para nombres IMAP y NNTP, abre una conexión pero no abre el buzon.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>CL_EXPUNGE - Expurga automaticamente el buzon antes de cerra la sesión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mailbox - the mailbox name (username)</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función examina la cadena dirección y para cada dirección, devuelve un array de objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>personal - the personal name</seg></tuv>
      <tuv xml:lang="es"><seg>Los 4 objetos son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_rfc822_parse_adrlist() example</seg></tuv>
      <tuv xml:lang="es"><seg>mailbox - el nombre del buzón (username) host - el nombre del ordenador personal - el nombre personal adl - ruta del dominio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>print imap_rfc822_write_address( "hartmut" ,"cvs.php.net" ,"Hartmut Holzgraefe") ."\n";</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una dirección de correo correctamente formateada, dado el buzón, host, e información personal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias to imap_listscan() and is identical to it in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array que contiene los nombres de los buzones que tienen el parámetro string en el texto del buzón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function performs a search on the mailbox currently opened in the given imap stream. criteria is a string, delimited by spaces, in which the following keywords are allowed.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función realiza una busqueda en el buzón actualmente abierto indicado por imap_stream. criteria es una cadena, delimitada por espacios, en la cual las siguientes palabras claves son permitidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any multi-word arguments (eg.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier argumento múltiple (ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FROM "joey smith") must be quoted.</seg></tuv>
      <tuv xml:lang="es"><seg>FROM "joey smith") debe estar entre comillas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ALL - return all messages matching the rest of the criteria</seg></tuv>
      <tuv xml:lang="es"><seg>ALL - devuelve todos los mensajes que coinciden con el resto del criterio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ANSWERED - match messages with the \\ANSWERED flag set</seg></tuv>
      <tuv xml:lang="es"><seg>ANSWERED - busca mensajes con el flag \\ANSWERED activado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BCC "string" - match messages with "string "in the Bcc: field</seg></tuv>
      <tuv xml:lang="es"><seg>BCC "string" - busca mensajes con "cadena "en el campo Bcc:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BEFORE "date" - match messages with Date: before "date "</seg></tuv>
      <tuv xml:lang="es"><seg>BEFORE "date" - busca mensajes con Date: antes de "date "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BODY "string" - match messages with "string "in the body of the message</seg></tuv>
      <tuv xml:lang="es"><seg>BODY "string" - busca mensajes con "cadena "en el cuerpo del mensaje</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CC "string" - match messages with "string "in the Cc: field</seg></tuv>
      <tuv xml:lang="es"><seg>CC "string" - busca mensajes con "cadena "en el campo Cc:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DELETED - match deleted messages</seg></tuv>
      <tuv xml:lang="es"><seg>DELETED - busca mensajes eliminados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FLAGGED - match messages with the \\FLAGGED (sometimes referred to as Important or Urgent) flag set</seg></tuv>
      <tuv xml:lang="es"><seg>FLAGGED - busca mensajes con el flag \\FLAGGED (sometimes referred to as Important or Urgent) activado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FROM "string" - match messages with "string "in the From: field</seg></tuv>
      <tuv xml:lang="es"><seg>FROM "string" - busca mensajes con "cadena "en el campo From:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>KEYWORD "string" - match messages with "string "as a keyword</seg></tuv>
      <tuv xml:lang="es"><seg>KEYWORD "string" - busca mensajes con "cadena "como una palabra clave</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NEW - match new messages</seg></tuv>
      <tuv xml:lang="es"><seg>NEW - busca mensajes nuevos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OLD - match old messages</seg></tuv>
      <tuv xml:lang="es"><seg>OLD - busca mensajes viejos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ON "date" - match messages with Date: matching "date "</seg></tuv>
      <tuv xml:lang="es"><seg>ON "date" - busca mensajes con "date "igual a Date:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RECENT - match messages with the \\RECENT flag set</seg></tuv>
      <tuv xml:lang="es"><seg>RECENT - busca mensajes con el flag \\RECENT activado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SEEN - match messages that have been read (the \\SEEN flag is set)</seg></tuv>
      <tuv xml:lang="es"><seg>SEEN - busca mensajes que han sido leidos (la opcion \\SEEN activada)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SINCE "date" - match messages with Date: after "date "</seg></tuv>
      <tuv xml:lang="es"><seg>SINCE "date" - busca mensajes conwith Date: after "date "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SUBJECT "string" - match messages with "string "in the Subject:</seg></tuv>
      <tuv xml:lang="es"><seg>SUBJECT "string" - busca mensajes con "string "en el campo Subject:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TEXT "string" - match messages with text "string "</seg></tuv>
      <tuv xml:lang="es"><seg>TEXT "string" - busca mensajes con el texto "string "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TO "string" - match messages with "string "in the To:</seg></tuv>
      <tuv xml:lang="es"><seg>TO "string" - busca mensajes con "string "en el campo To:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UNANSWERED - match messages that have not been answered</seg></tuv>
      <tuv xml:lang="es"><seg>UNANSWERED - busca mensajes que no han sido respondidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UNDELETED - match messages that are not deleted</seg></tuv>
      <tuv xml:lang="es"><seg>UNDELETED - busca mensajes que no han sido eliminados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UNFLAGGED - match messages that are not flagged</seg></tuv>
      <tuv xml:lang="es"><seg>UNFLAGGED - busca mensajes que no estan flagged</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UNKEYWORD "string" - match messages that do not have the keyword "string "</seg></tuv>
      <tuv xml:lang="es"><seg>UNKEYWORD "string" - busca mensajes que no coinciden con la palabra clave "string "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UNSEEN - match messages which have not been read yet</seg></tuv>
      <tuv xml:lang="es"><seg>UNSEEN - busca mensajes que no han sido leidos aún</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, to match all unanswered messages sent by Mom, you' d use: "UNANSWERED FROM mom ".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, para buscar todos los mensajes no contestados enviados por Mamá, usaría: "UNANSWERED FROM mamá".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches appear to be case insensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>La busqueda parece ser no sensitiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This list of criteria is from a reading of the UW c-client source code and may be uncomplete or inaccurate (see also RFC2060, section 6.4.4).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta lista de criterios está tomada del codigo fuente del UW c-client y puede que este incompleta o sea inexacta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid values for flags are SE_UID, which causes the returned array to contain UIDs instead of messages sequence numbers.</seg></tuv>
      <tuv xml:lang="es"><seg>Valores validos para los flags son SE_UID, que provoca que el array devuelto contenga UIDs en vez de los numeros de secuencia de los mensajes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function causes a store to add the specified flag to the flags set for the messages in the specified sequence.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función a¤ade el flag especificado al conjunto de flags activos para los mensajes en la secuencia especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The options are a bit mask with one or more of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Los flags que puede seleccionar son "\\Seen", "\\Answered", "\\Flagged", "\\Deleted", "\\Draft", y "\\Recent" (definidos en el RFC2060)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_setflag_full() example</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones son una máscara de bit con uno o más de los siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$mbox = imap_open( "{your.imap.host:143}" ,"username" ,"password") or die("can't connect: ".imap_last_error()); $status = imap_setflag_full($mbox ,"2,5" ,"\\Seen \\Flagged"); print gettype($status) ."\n"; print $status ."\n"; imap_close($mbox);</seg></tuv>
      <tuv xml:lang="es"><seg>ST_UID El argumento sequence contiene UIDs en vez de nÃºmeros secuenciales</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_set_quota() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. imap_set_quota() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of message numbers sorted by the given parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array de números de mensajes ordenados por los parametros dados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reverse is 1 for reverse-sorting.</seg></tuv>
      <tuv xml:lang="es"><seg>Rev es 1 para una ordenación inversa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Criteria can be one (and only one) of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Criteria puede ser uno (y sólo uno) de los siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORTDATE message Date SORTARRIVAL arrival date SORTFROM mailbox in first From address SORTSUBJECT message Subject SORTTO mailbox in first To address SORTCC mailbox in first cc address SORTSIZE size of message in octets</seg></tuv>
      <tuv xml:lang="es"><seg>SORTDATE Fecha del mensaje SORTARRIVAL Fecha de llegada SORTFROM mailbox in first From address SORTSUBJECT Asunto del mensaje SORTTO mailbox in first To address SORTCC mailbox in first cc address SORTSIZE tamaÂ¤o del mensaje en bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The flags are a bitmask of one or more of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones son una máscara de bit con uno o más de los siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SE_UID Return UIDs instead of sequence numbers SE_NOPREFETCH Don 't prefetch searched messages.</seg></tuv>
      <tuv xml:lang="es"><seg>SE_UID Devuelve UIDs en vez de números secuenciales SE_NOPREFETCH No preselecciona los mensajes buscados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an object containing status information.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un objeto que contiene información de estado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid flags are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones válidas son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SA_MESSAGES - set status - messages to the number of messages in the mailbox</seg></tuv>
      <tuv xml:lang="es"><seg>SA_MESSAGES - activa status - messages con el número de mensajes en el buzon</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SA_RECENT - set status - recent to the number of recent messages in the mailbox</seg></tuv>
      <tuv xml:lang="es"><seg>SA_RECENT - activa status - recent con el número de mensajes recientes en el buzón</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SA_UNSEEN - set status - unseen to the number of unseen (new) messages in the mailbox</seg></tuv>
      <tuv xml:lang="es"><seg>SA_UNSEEN - activa status - unseen con el número de mesajes no leidos (nuevos) en el buzón</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SA_UIDNEXT - set status - uidnext to the next uid to be used in the mailbox</seg></tuv>
      <tuv xml:lang="es"><seg>SA_UIDNEXT - activa status - uidnext con el próximo uid a usar en el bizón</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SA_UIDVALIDITY - set status - uidvalidity to a constant that changes when uids for the mailbox may no longer be valid</seg></tuv>
      <tuv xml:lang="es"><seg>SA_UIDVALIDITY - activa status - uidvalidity con una constante que cambia cuando los uids del buzon ya no son válidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SA_ALL - set all of the above</seg></tuv>
      <tuv xml:lang="es"><seg>SA_ALL - activa todos los de arriba</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_status() example</seg></tuv>
      <tuv xml:lang="es"><seg>status - flags contienen una máscara de bits la cual puede ser comprobada contra cualquiera de las propiedades de arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subscribe to a new mailbox.</seg></tuv>
      <tuv xml:lang="es"><seg>Da de alta un nuevo buzón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve TRUE si no hay error y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is the inverse of imap_msgno().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve el UID del número de secuencia del mensaje dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not supported by POP3 mailboxes.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es la inversa a imap_msgno().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function removes the deletion flag for a specified message, which is set by imap_delete() or imap_mail_move().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion elimina la marca de borrado de un mensaje especifico, puesta por la función imap_delete().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unsubscribe from a specified mailbox.</seg></tuv>
      <tuv xml:lang="es"><seg>Da de baja el buzón especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. implode() example</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena que contiene una representación de todos los elementos de la matriz en el mismo orden, pero con la cadena cola en medio de los mismos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $array = array( 'lastname', 'email', 'phone'); $comma_separated = implode(" ,", $array); print $comma_separated; / / lastname,email,phone?</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de implode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For consistency with explode(), however, it may be less confusing to use the documented order of arguments.</seg></tuv>
      <tuv xml:lang="es"><seg>$separada_dospuntos = implode (":", $matrizay);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), and split().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también explode(), join(), y split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Busca la aguja en el pajar, y devuelve TRUE si se encuentra y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. in_array() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de in_array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second condition fails because in_array() is case-sensitive, so the program above will display:</seg></tuv>
      <tuv xml:lang="es"><seg>$os = array ("Mac", "NT", "Irix", "Linux"); if (in_array ("Irix", $os)) print "Encontrado Irix";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. in_array() with strict example</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will display:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 12.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 12.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Control Structures</seg></tuv>
      <tuv xml:lang="es"><seg>Estructuras de Control</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The include() statement includes and evaluates the specified file.</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia include() incluye y evalúa el archivo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The two constructs are identical in every way except how they handle failure. include() produces a Warning while require() results in a Fatal Error.</seg></tuv>
      <tuv xml:lang="es"><seg>Si "URL fopen wrappers" esta activada en PHP (como está en la configuración inicial), se puede especificar el fichero que se va a incluir usando una URL en vez de un fichero local (con su Path) Ver Ficheros remotos y fopen() para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be sure to have an appropriate include_path setting as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Un punto importante sobre su funcionamiento es que cuando un archivo se incluye con include() o se requiere con require(), el intérprete sale del modo PHP y entra en modo HTML al principio del archivo referenciado, y vuelve de nuevo al modo PHP al final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a file is included, the code it contains inherits the variable scope of the line on which the include occurs.</seg></tuv>
      <tuv xml:lang="es"><seg>Por esta razón, cualquier código dentro del archivo referenciado que debiera ser ejecutado como código PHP debe ser encerrado dentro de etiquetas válidas de comienzo y fin de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto sucede cada vez que se encuentra la sentencia include(), así que se puede usar una sentencia include() dentro de una estructura de bucle para incluir un número de archivos diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic include() example</seg></tuv>
      <tuv xml:lang="es"><seg>include() difiere de require() en que la sentencia include se re-evalúa cada vez que se encuentra (y sólo cuando está siendo ejecutada), mientras que la sentencia require() se reemplaza por el archivo referenciado cuando se encuentra por primera vez, se vaya a evaluar el contenido del archivo o no (por ejemplo, si está dentro de una sentencia if cuya condición evaluada es falsa).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>vars.php ?php $color = 'green'; $fruit = 'apple';? test.php ?php echo "A $color $fruit"; / / A include'vars.php'; echo "A $color $fruit"; / / A green apple?</seg></tuv>
      <tuv xml:lang="es"><seg>Debido a que include() es una construcción especial del lenguaje, se debe encerrar dentro de un bloque de sentencias si está dentro de un bloque condicional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the include occurs inside a function within the calling file, then all of the code contained in the called file will behave as though it had been defined inside that function.</seg></tuv>
      <tuv xml:lang="es"><seg>/* Esto es ERRÓNEO y no funcionará como se desea. * / if ($condicion) include($archivo); else include($otro); / * Esto es CORRECTO. * / if ($condicion) {include($archivo);} else {include($otro);}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-4.</seg></tuv>
      <tuv xml:lang="es"><seg>En ambos, PHP3 y PHP4, es posible ejecutar una sentencia return dentro de un archivo incluido con include(), para terminar el procesado de ese archivo y volver al archivo de comandos que lo llamó.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {global $color; include'vars.php'; echo "A $color $fruit";} / * vars.php is in the scope of foo() so * * $fruit is NOT available outside of this * * scope. $color is because we declared it * * as global. * / foo(); / / A green apple echo "A $color $fruit"; / / A green?</seg></tuv>
      <tuv xml:lang="es"><seg>La primera es que en PHP3, return no puede aparecer dentro de un bloque a menos que sea un bloque de función, en el cual return se aplica a esa función y no al archivo completo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a file is included, parsing drops out of PHP mode and into HTML mode at the beginning of the target file, and resumes again at the end.</seg></tuv>
      <tuv xml:lang="es"><seg>También, PHP4 permite devolver valores desde archivos incluidos con include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For this reason, any code inside the target file which should be executed as PHP code must be enclosed within valid PHP start and end tags.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto genera un error de intérprete en PHP3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If "URL fopen wrappers" are enabled in PHP (which they are in the default configuration), you can specify the file to be included using an URL (via HTTP or other supported wrapper - see Appendix I for a list of protocols) instead of a local pathname.</seg></tuv>
      <tuv xml:lang="es"><seg>Asumamos la existencia del siguiente archivo (llamado test.inc) en el mismo directorio que el archivo principal:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the target server interprets the target file as PHP code, variables may be passed to the included file using an URL request string as used with HTTP GET.</seg></tuv>
      <tuv xml:lang="es"><seg>Asumamos que el archivo principal (main.html) contiene lo siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not strictly speaking the same thing as including the file and having it inherit the parent file' s variable scope; the script is actually being run on the remote server and the result is then being included into the local script.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se llama a main.html en PHP3, generará un error del intérprete en la linea 2; no se puede capturar el valor de un include() en PHP3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP4, no obstante, el resultado será:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Ahora, asumamos que se ha modificado main.html para que contenga lo siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-5. include() through HTTP</seg></tuv>
      <tuv xml:lang="es"><seg>?php include( 'test.inc '); echo "De vuelta en main.html br \n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * This example assumes that www.example.com is configured to parse .php * * files and not .txt files.</seg></tuv>
      <tuv xml:lang="es"><seg>Antes del return De vuelta en main.html</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, 'Works' here means that the variables * * $foo and $bar are available within the included file. * / / / Won't work; file.txt wasn't handled by www.example.com as PHP include'http: / /www.example.com / file.txt?foo=1 bar=2'; / / Won't work; looks for a file named'file.php?foo=1 bar=2 'on the / / local filesystem. include'file.php?foo=1 bar=2'; / / Works. include'http: / /www.example.com / file.php?foo=1 bar=2'; $foo = 1; $bar = 2; include'file.txt'; / / Works. include'file.php'; / / Works.?</seg></tuv>
      <tuv xml:lang="es"><seg>El error del intérprete es resultado del hecho de que la sentencia return está encerrada en un bloque de no-función dentro de test.inc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because include() and require() are special language constructs, you must enclose them within a statement block if it's inside a conditional block.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el return se mueve fuera del bloque, la salida es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-6. include() and conditional blocks</seg></tuv>
      <tuv xml:lang="es"><seg>Antes del return 27De vuelta en main.html</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / This is WRONG and will not work as desired. if ($condition) include $file; else include $other; / / This is CORRECT. if ($condition) {include $file;} else {include $other;}?</seg></tuv>
      <tuv xml:lang="es"><seg>El '27' espúreo se debe al hecho de que PHP3 no soporta devolver valores con return desde archivos como ese.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is possible to execute a return() It is possible to execute a return() statement inside an included file in order to terminate processing in that file and return to the script which called it.</seg></tuv>
      <tuv xml:lang="es"><seg>When a file is include() ed, the code it contains inherits the variable scope of the line on which the include() When a file is include() ed, the code it contains inherits the variable scope of the line on which the include() occurs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, it 's possible to return values from included files.</seg></tuv>
      <tuv xml:lang="es"><seg>Any variables available at that line in the calling file will be available within the called file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>If the include() occurs inside a function within the calling file, then all of the code contained in the called file will behave as though it had been defined inside that function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-7. include() and the return() statement</seg></tuv>
      <tuv xml:lang="es"><seg>If the include() ed file is called via HTTP using the fopen wrappers, and if the target server interprets the target file as PHP code, variables may be passed to the include() ed file using an URL request string as used with HTTP GET.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return.php ?php $var = 'PHP'; return $var;? noreturn.php ?php $var = 'PHP';? testreturns.php ?php $foo = include'return.php'; echo $foo; / / prints'PHP' $bar = include'noreturn.php'; echo $bar; / / prints 1?</seg></tuv>
      <tuv xml:lang="es"><seg>This is not strictly speaking the same thing as include() ing the file and having it inherit the parent file's variable scope; the script is actually being run on the remote server and the result is then being included into the local script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice the difference between the above examples.</seg></tuv>
      <tuv xml:lang="es"><seg>/* This example assumes that someserver is configured to parse .php * files and not .txt files.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A few other ways to "include" files into variables are with fopen(), file() or by using include() along with Output Control Functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Also, 'works' here means that the variables * $varone and $vartwo are available within the include()ed file. * / / * Won't work; file.txt wasn't handled by someserver. * / include ("http: / /someserver / file.txt?varone=1 vartwo=2"); / * Won't work; looks for a file named 'file.php?varone=1 vartwo=2 '* on the local filesystem. * / include ("file.php?varone=1 vartwo=2"); / * Works. * / include ("http: / /someserver / file.php?varone=1 vartwo=2"); $varone = 1; $vartwo = 2; include ("file.txt"); / * Works. * / include ("file.php"); / * Works. * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also require(), require_once(), include_once(), readfile(), virtual(), and include_path.</seg></tuv>
      <tuv xml:lang="es"><seg>See also require(), require_once(), include_once(), readfile(), and virtual().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As the name suggests, it will be included just once.</seg></tuv>
      <tuv xml:lang="es"><seg>This is a behavior similar to the include() statement, with the important difference that if the code from a file has already been included, it will not be included again.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.</seg></tuv>
      <tuv xml:lang="es"><seg>As mentioned in the require_once() description, the include_once() should be used in the cases in which the same file might be included and evaluated more than once during a particular execution of a script, and you want to be sure that it is included exactly once to avoid problems with function redefinitions, variable value reassignments, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also include(), require(), require_once(), get_required_files(), get_included_files(), readfile(), and virtual().</seg></tuv>
      <tuv xml:lang="es"><seg>See also: require(), include(), require_once(), get_required_files(), get_included_files(), readfile(), and virtual().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>ingres_autocommit() is called before opening a transaction (before the first call to ingres_query() or just after a call to ingres_rollback() or ingres_autocommit()) to switch the "autocommit "mode of the server on or off (when the script begins the autocommit mode is off).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_query(), ingres_rollback(), and ingres_commit().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_query(), ingres_rollback() and ingres_commit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_connect() and ingres_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_connect(), and ingres_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_query(), ingres_rollback(), and ingres_autocommit().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_query(), ingres_rollback() and ingres_autocommit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ingres_connect() opens a connection with the Ingres database designated by database, which follows the syntax [node_id: :]dbname[ / svr_class].</seg></tuv>
      <tuv xml:lang="es"><seg>If some parameters are missing, ingres_connect() uses the values in php.ini for ingres.default_database, ingres.default_user and ingres.default_password.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_connect() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ingres_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. ingres_connect() example using default link</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. ingres_connect() example using default link</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_pconnect() and ingres_close().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_pconnect(), and ingres_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_type can be INGRES_NUM for enumerated array, INGRES_ASSOC for associative array, or INGRES_BOTH (default).</seg></tuv>
      <tuv xml:lang="es"><seg>result_type can be II_NUM for enumerated array, II_ASSOC for associative array, or II_BOTH (default).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_fetch_array() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ingres_fetch_array() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_query(), ingres_num_fields(), ingres_field_name(), ingres_fetch_object(), and ingres_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_query(), ingres_num_fields(), ingres_field_name(), ingres_fetch_object() and ingres_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>INGRES_ASSOC, INGRES_NUM, and INGRES_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>II_ASSOC, II_NUM, and II_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_fetch_object() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ingres_fetch_object() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_query(), ingres_num_fields(), ingres_field_name(), ingres_fetch_array(), and ingres_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_query(), ingres_num_fields(), ingres_field_name(), ingres_fetch_array() and ingres_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_fetch_row() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ingres_fetch_row() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_num_fields(), ingres_query(), ingres_fetch_array(), and ingres_fetch_object().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_num_fields(), ingres_query(), ingres_fetch_array() and ingres_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_query(), ingres_fetch_array(), ingres_fetch_object(), and ingres_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_query(), ingres_fetch_array(), ingres_fetch_object() and ingres_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For delete, insert or update queries, ingres_num_rows() returns the number of rows affected by the query.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_connect() and ingres_close().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_connect(), and ingres_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>close (see ingres_close())</seg></tuv>
      <tuv xml:lang="es"><seg>close (see ingres_close()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>commit (see ingres_commit())</seg></tuv>
      <tuv xml:lang="es"><seg>commit (see ingres_commit()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>connect (see ingres_connect())</seg></tuv>
      <tuv xml:lang="es"><seg>connect (see ingres_connect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>disconnect (see ingres_close())</seg></tuv>
      <tuv xml:lang="es"><seg>disconnect (see ingres_close()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>rollback (see ingres_rollback())</seg></tuv>
      <tuv xml:lang="es"><seg>rollback (see ingres_rollback()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>set autocommit (see ingres_autocommit())</seg></tuv>
      <tuv xml:lang="es"><seg>set autocommit (see ingres_autocommit()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_query() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ingres_query() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_fetch_array(), ingres_fetch_object(), ingres_fetch_row(), ingres_commit(), ingres_rollback(), and ingres_autocommit().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_fetch_array(), ingres_fetch_object(), ingres_fetch_row(), ingres_commit(), ingres_rollback() and ingres_autocommit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>ingres_rollback() rolls back the currently open transaction, actualy canceling all changes made to the database during the transaction.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ingres_query(), ingres_commit(), and ingres_autocommit().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ingres_query(), ingres_commit() and ingres_autocommit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>var may be any scalar type.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor entero de var, usando la base de conversión especificada (por defecto es base 10).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>var puede ser cualquier tipo escalar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base argument for intval() has no effect unless the var argument is a string.</seg></tuv>
      <tuv xml:lang="es"><seg>No se puede usar intval() sobre arrays u objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also floatval(), strval(), settype() and Type juggling.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también doubleval(), strval(), settype() y Type juggling.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ip2long() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ip2long() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ircg_fetch_error_msg() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ircg_fetch_error_msg() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is an array, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si var es un array, y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_float(), is_int(), is_integer(), is_string(), and is_object().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_double(), is_float(), is_int(), is_integer(), is_real(), is_string(), is_long(), y is_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If filename is a relative filename, it will be checked relative to the current working directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el nombre del fichero existe y es un directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados de esta función son cacheados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chdir(), dir, opendir(), is_file() and is_link().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_file() y is_link().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_float().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_array(), is_float(), is_int(), is_integer(), is_real(), is_string(), is_long(), y is_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el fichero indicado existe y es ejecutable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados de esta función son cacheados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not available on Win32.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_file() and is_link().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_file() y is_link().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el fichero nombrado existe y es un fichero regular.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir() and is_link().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_dir() y is_link().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es un alias de is_double().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_bool(), is_int(), is_integer(), is_numeric(), is_string(), is_array(), and is_object(),</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_double(), is_real(), is_int(), is_integer(), is_string(), is_object(), is_array(), y is_long().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_int().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_double(), is_float(), is_int(), is_string(), is_real(), is_object(), is_array(), y is_long().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es un alias de is_long().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_bool(), is_float(), is_integer(), is_numeric(), is_string(), is_array(), and is_object().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_double(), is_float(), is_integer(), is_string(), is_real(), is_object(), is_array(), y is_long().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el fichero indicado existe y es un enlace simbólico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir(), is_file(), and readlink().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_dir() y is_file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_int().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_double(), is_float(), is_int(), is_real(), is_string(), is_object(), is_array(), y is_integer().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is an object, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si var es un objeto, y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_bool(), is_int(), is_integer(), is_float(), is_string(), and is_array().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_long(), is_int(), is_integer(), is_float(), is_double(), is_real(), is_string(), y is_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is readable.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el fichero indicado existe y se puede leer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Safe mode limitations are not taken into account.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerda que PHP puede acceder al fichero con el identificador de usuario con el que el servidor web se ejecuta (a menudo 'nobody').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>No se tienen en cuenta las limitaciones de modos seguros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_writable().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_writeable().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_float().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_long(), is_int(), is_integer(), is_float(), is_double(), is_object(), is_string(), y is_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the documentation on the resource -type for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>See the documentation on the resource-type for more information.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a variable has been unset with unset(), it will no longer be isset(). isset() will return FALSE if testing a variable that has been set to NULL.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si var existe; y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For checking if constants are set use the defined() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si una variable ha sido destruida con unset(), ya no estará definida (no será isset()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This also work for elements in arrays:</seg></tuv>
      <tuv xml:lang="es"><seg>$a = "test"; echo isset($a); / / true unset($a); echo isset($a); / / false</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also empty(), unset(), defined(), array_key_exists() and the error control @ operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también empty() y unset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is a string, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si var es una cadena, y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_bool(), is_int(), is_integer(), is_float(), is_real(), is_object(), and is_array().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también is_long(), is_int(), is_integer(), is_float(), is_double(), is_real(), is_object(), y is_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento filename puede ser el nombre de un directorio, lo que permite verificar si un directorio tiene permiso de escritura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for is_writable()</seg></tuv>
      <tuv xml:lang="es"><seg>No se tienen en cuenta las limitaciones de modos seguros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is EXPERIMENTAL.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo es EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que el comportamineto de estas funciones, nombre de funciones y en definitiva TODO lo documentado aqui, puede cambiar en una futura version de PHP SIN AVISO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this function at your own risk.</seg></tuv>
      <tuv xml:lang="es"><seg>Quedas avisado, y utilizar este módulo es tu responsabiliad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LDAP functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones LDAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the day of the week.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el día de la semana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Can return a string or an integer depending on the mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Dependiendo del modo, devuelve un entero ó una cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calendar week modes</seg></tuv>
      <tuv xml:lang="es"><seg>Modos para el día de la semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mode</seg></tuv>
      <tuv xml:lang="es"><seg>Modo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Meaning</seg></tuv>
      <tuv xml:lang="es"><seg>Significado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the day number as an int (0=sunday, 1=monday, etc)</seg></tuv>
      <tuv xml:lang="es"><seg>devuelve el día de la semana como entero (0=domingo, 1=lunes, etc)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string containing the day of week (english-gregorian)</seg></tuv>
      <tuv xml:lang="es"><seg>devuelve una cadena con el día de la semana (inglés, gregoriano)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing the abbreviated day of week (english-gregorian)</seg></tuv>
      <tuv xml:lang="es"><seg>devuelve una cadena con el día de la semana abreviado (inglés, gregoriano)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a month name. mode tells this function which calendar to convert the Julian Day Count to, and what type of month names are to be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena que contiene el nombre del mes. modo le dice a esta función a qué calendario debe convertir la Cuenta de Días Juliana, y qué tipo de nombres de mes debe devolver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calendar modes</seg></tuv>
      <tuv xml:lang="es"><seg>Modos de calendario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Values</seg></tuv>
      <tuv xml:lang="es"><seg>Valores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gregorian - abbreviated</seg></tuv>
      <tuv xml:lang="es"><seg>Gregoriano - abreviado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gregorian</seg></tuv>
      <tuv xml:lang="es"><seg>Gregoriano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>January, February, March, April, May, June, July, August, September, October, November, December</seg></tuv>
      <tuv xml:lang="es"><seg>January, February, March, April, May, June, July, August, September, October, Novemb er, December</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Julian - abbreviated</seg></tuv>
      <tuv xml:lang="es"><seg>Juliano - abreviado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Julian</seg></tuv>
      <tuv xml:lang="es"><seg>Juliano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Jewish</seg></tuv>
      <tuv xml:lang="es"><seg>Judío</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>French Republican</seg></tuv>
      <tuv xml:lang="es"><seg>Republicano Francés</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prairial, Messidor, Thermidor, Fructidor, Extra</seg></tuv>
      <tuv xml:lang="es"><seg>Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prair ial, Messidor, Thermidor, Fructidor, Extra</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts a Julian Day Count to the French Republican Calendar.</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una Cuenta de Días Juliana al Calendario Republicano Francés.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts Julian Day Count to a string containing the Gregorian date in the format of "month / day / year".</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte de Cuenta de Días Juliana a una cadena que contiene la fecha Gregoriana en formato "mes / día / año"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts a Julian Day Count the the Jewish Calendar.</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una Cuenta de Días Juliana al Calendario Judío.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts Julian Day Count to a string containing the Julian Calendar Date in the format of "month / day / year".</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte una Cuenta de Días Juliana a una cadena que contiene la fecha del Calendario Juliano en formato "mes / día / año".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return a UNIX timestamp corresponding to the Julian Day given in jday or FALSE if jday is not inside the UNIX epoch (Gregorian years between 1970 and 2037 or 2440588 = jday = 2465342).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funció devuelve el "UNIX timestamp" correspondiante a el dia Juliano definido en jday ó falso (FALSE) si jday no se encuentra en la época UNIX (años entre 1970 y 2037 ó 2440588 = jday = 2465342).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The time returned is localtime (and not GMT).</seg></tuv>
      <tuv xml:lang="es"><seg>El tiempo devuelto es localtime (y no GMT).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also unixtojd().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también unixtojd().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although this function can handle dates all the way back to the year 1 (3761 B.C.), such use may not be meaningful.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque este programa puede manejar fechas tan lejanas como el año 1 (3761 A.C.), usarlo no tendría sentido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Jewish calendar has been in use for several thousand years, but in the early days there was no formula to determine the start of a month.</seg></tuv>
      <tuv xml:lang="es"><seg>El Calendario Judío ha estado en uso miles de años, pero en los días primeros no había una fórmula que calculara el comienzo de un mes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A new month was started when the new moon was first observed.</seg></tuv>
      <tuv xml:lang="es"><seg>Un mes comenzaba cuando se veía por primera vez la luna nueva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>join() is an alias to implode(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>join() es un alias para implode(), y es idéntica en todo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), implode(), and split().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también explode(), implode(), y split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid Range for Julian Calendar 4713 B.C. to 9999 A.D.</seg></tuv>
      <tuv xml:lang="es"><seg>Rango válido para el Calendario Juliano: del 4713 A.C al 9999 D.C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although this function can handle dates all the way back to 4713 B.C., such use may not be meaningful.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque este programa puede manejar fechas tan lejanas como el 4713 A.C., usarlo no tendría sentido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The calendar was created in 46 B.C., but the details did not stabilize until at least 8 A.D., and perhaps as late at the 4th century.</seg></tuv>
      <tuv xml:lang="es"><seg>El calendario se creó en el 46 A.C., pero sus detalles no se estabilizaron hasta al menos el 8 D.C., y quizás no lo hiciera hasta el siglo IV.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, the beginning of a year varied from one culture to another - not all accepted January as the first month.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, el comienzo de un año variaba de una a otra cultura: no todas aceptaban enero como el primer mes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Caution</seg></tuv>
      <tuv xml:lang="es"><seg>Atención</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remember, the current calendar system being used worldwide is the Gregorian calendar. gregoriantojd() can be used to convert such dates to their Julian Day count.</seg></tuv>
      <tuv xml:lang="es"><seg>Recordar que el actual sistema de calendario en uso en todo el mundo es el calendario Gregoriano. gregoriantojd() puede ser usada para convertir los dias del calendario Gregoriano a Cuenta de Días Juliana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>key() returns the index element of the current array position.</seg></tuv>
      <tuv xml:lang="es"><seg>key() devuelve el elemento índice de la posición actual en la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current() and next().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: current(), next()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful mainly for associative arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>Ordena una matriz por clave en orden inverso, manteniendo las correlaciones clave a dato.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array ("d"= "lemon", "a"= "orange", "b"= "banana", "c"= "apple"); krsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de krsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("d"= "limón", "a"= "naranja", "b"= "plátano", "c"= "manzana"); krsort ($frutas); for (reset ($frutas); $clave = key ($frutas); next ($frutas)) {echo "frutas[$clave] = ".$frutas[$clave] ."\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asort(), arsort(), ksort(), sort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: asort(), arsort(), ksort() sort(), y rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful mainly for associative arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>Ordena una matriz por clave, manteniendo las correlaciones clave a dato.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array ("d"= "lemon", "a"= "orange", "b"= "banana", "c"= "apple"); ksort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es útil principalmente en matrices asociativas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>a = orange b = banana c = apple d = lemon</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de ksort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asort(), arsort(), krsort(), uksort(), sort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("d"= "limón", "a"= "naranja", "b"= "plátano", "c"= "manzana"); ksort ($frutas); for (reset ($frutas); $clave = key ($frutas); next ($frutas)) {echo "frutas[$clave] = ".$frutas[$clave] ."\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter was added in PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: asort(), arsort(), sort(), y rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero cuando finaliza correctamente y falso se produce un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ldap_add() function is used to add entries in the LDAP directory.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_add() se usa para añadir entradas o registros a un directorio LDAP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The DN of the entry to be added is specified by dn.</seg></tuv>
      <tuv xml:lang="es"><seg>El DN ("distinguished name", nombre distinguible, la referencia de cualquier entrada LDAP) es especificado por dn.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array entry Array entry specifies the information about the entry.</seg></tuv>
      <tuv xml:lang="es"><seg>El array entrada especifica la información que quiere añadirse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The values in the entries are indexed by individual attributes.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores del array son indexados por sus propios atributos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case of multiple values for an attribute, they are indexed using integers starting with 0.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de valores múltiples para un mismo atributo, son indexados usando enteros empezando con 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>entry[ "attribute1"] = value entry["attribute2"][0] = value1 entry["attribute2"][1] = value2</seg></tuv>
      <tuv xml:lang="es"><seg>entry[ "atributo1"] = valor entry["atributo2"][0] = valor1 entry["atributo2"][1] = valor2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Complete example with authenticated bind</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo completo con login atentificado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $ds=ldap_connect( "localhost"); / / assuming the LDAP server is on this host if ($ds) {/ / bind with appropriate dn to give update access $r=ldap_bind($ds ,"cn=root, o=My Company, c=US", "secret"); / / prepare data $info["cn"]="John Jones"; $info["sn"]="Jones"; $info["mail"]="jonj@here.and.now"; $info["objectclass"]="person"; / / add data to directory $r=ldap_add($ds, "cn=John Jones, o=My Company, c=US", $info); ldap_close($ds);} else {echo "Unable to connect to LDAP server";}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $ds=ldap_connect( "localhost"); / / Asumimos que el servidor LDAP está en el / / servidor local if ($ds) {/ / autentificarse con el dn apropiado para tener permisos de modificación $r=ldap_bind($ds ,"cn=root, o=Mi Compañia, c=ES", "secreto"); / / prepare data $info["cn"]="Pedro Pérez"; $info["sn"]="Pedro"; $info["mail"]="pedro.p@algun.sitio"; $info["objectclass"]="persona"; / / add data to directory $r=ldap_add($ds, "cn=Pedro Pérez, o=Mi Compañia, c=ES", $info); ldap_close($ds);} else {echo "Ha sido imposible conectar al servidor LDAP";}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Se conecta a un directorio LDAP con un RDN y su contraseña.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not specified, anonymous bind is attempted.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero cuando finaliza correctamente y falso se produce un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using LDAP Bind</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_bind() se conecta al directorio con un determinado usuario. rdn_de_usuario y contraseña son opcionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using LDAP Bind Anonymously</seg></tuv>
      <tuv xml:lang="es"><seg>Si no son especificados, se intenta el acceso anónimo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This call is internally identical to ldap_unbind().</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_close() cierra la conexión con el servidor LDAP asociada con el identificador_de_conexion especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The LDAP API uses the call ldap_unbind(), so perhaps you should use this in preference to ldap_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta llamada es idéntica internamente a ldap_unbind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of ldap_unbind().</seg></tuv>
      <tuv xml:lang="es"><seg>La API LDAP usa la llamada ldap_unbind(), y por lo tanto quizás deba usar esta llamada en lugar de ldap_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both the arguments are optional.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador de conexión positivo en caso de éxito, ó falso si ocurre algún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If only hostname is specified, then the port defaults to 389.</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_connect() establece una conexión con el servidor LDAP especificado en nombre_host y puerto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using OpenLDAP 2.x.x you can specify a URL instead of the hostname.</seg></tuv>
      <tuv xml:lang="es"><seg>Ambos argumentos son opcionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The port parameter is not used when using URLs.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifican, el identificador de la conexión LDAP actualmente abierta es devuelto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example of connecting securely to LDAP server.</seg></tuv>
      <tuv xml:lang="es"><seg>Si sólo es especificado nombre_host el puerto tomado por defecto es el 389.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns number of entries in the result or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de entradas del resultado o falso si ha ocurrido algún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_count_entries() returns the number of entries stored in the result of previous search operations. result_identifier identifies the internal ldap result.</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_count_entries() devuelce el número de entradas almacenadas en el resultado de operaciones de búsqueda previas. identificador_de_resultado identifica el resultado ldap interno al que hacemos referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_delete() function delete a particular entry in LDAP directory specified by dn.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_delete() borra la entrada particular dn del directorio LDAP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_dn2ufn() function is used to turn a DN, specified by dn, into a more user-friendly form, stripping off type names.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_dn2ufn() es usada para convertir un DN en un formato más amigable para el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string error message.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena con el mensaje de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the string error message explaining the error number errno.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve una cadena con el mensaje de error explicativo del código numérico de error numerr.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque los códigos de error LDAP están estandarizados, diferentes librerías devuelven mensajes textuales de error diferentes o incluso localizados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Never check for a specific error message text, but always use an error number to check.</seg></tuv>
      <tuv xml:lang="es"><seg>Nunca se debe comprobar la existencia de un error específico por el mensaje textual, sino por el código numérico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_errno() and ldap_error().</seg></tuv>
      <tuv xml:lang="es"><seg>Var también ldap_errno() y ldap_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enumerating all LDAP error messages</seg></tuv>
      <tuv xml:lang="es"><seg>Enumerando todos los mensajes de error LDAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php for( $i=0; $i 100; $i++) {printf("Error $i: %s br \n", ldap_err2str($i));}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php for( $i=0; $i 100; $i++) {printf("Error $i: %s br \n", ldap_str2err($i));}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the LDAP error number of the last LDAP command for this link.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el código de error del último comando LDAP para la conexión especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the standardized error number returned by the last LDAP command for the given link_identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve el código numérico de error, que está estandarizado, producido por el último comando LDAP y en la conexión especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This number can be converted into a textual error message using ldap_err2str().</seg></tuv>
      <tuv xml:lang="es"><seg>Este número puede ser convertido en un mensaje textual de error usando ldap_err2str().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unless you lower your warning level in your php.ini sufficiently or prefix your LDAP commands with @ (at) characters to suppress warning output, the errors generated will also show up in your HTML output.</seg></tuv>
      <tuv xml:lang="es"><seg>A menos que decremente el nivel de alerta en su fichero php3.ini (ó php.ini) o anteponga a los comandos LDAP en símbolo @ (arroba) para suprimir las alertas y warnings, los errores producidos serán mostrados automáticamente en el código HTML generado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Generating and catching an error</seg></tuv>
      <tuv xml:lang="es"><seg>Generando y capturando un error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / This example contains an error, which we will catch. $ld = ldap_connect( "localhost"); $bind = ldap_bind($ld); / / syntax error in filter expression (errno 87), / / must be "objectclass=* "to work. $res = @ldap_search($ld, "o=Myorg, c=DE", "objectclass"); if (!$res) {printf("LDAP-Errno: %s br \n", ldap_errno($ld)); printf("LDAP-Error: %s br \n", ldap_error($ld)); die("Argh! br \n");} $info = ldap_get_entries($ld, $res); printf("%d matching entries. br \n", $info["count"]);?</seg></tuv>
      <tuv xml:lang="es"><seg>Debería ser "objectclass=*". $res = @ldap_search($ld, "o=Mi Compañía, c=ES", "objectclass"); if (!$res) {printf("LDAP-Código Error: %s br \n", ldap_errno($ld)); printf("LDAP-Mensaje Error: %s br \n", ldap_error($ld)); die("Argh! br \n");} $info = ldap_get_entries($ld, $res); printf("%d entradas encontradas. br \n", $info["count"]);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_err2str() and ldap_error().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_err2str() y ldap_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the string error message explaining the error generated by the last LDAP command for the given link_identifier This function returns the string error message explaining the error generated by the last LDAP command for the given link_identifier While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque los códigos de error LDAP están estandarizados, diferentes librerías devuelven mensajes textuales de error diferentes o incluso localizados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_err2str() and ldap_errno().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_err2str() y ldap_errno().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_explode_dn() function is used to split the DN returned by ldap_get_dn() and breaks it up into its component parts.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_explode_dn() es usada para dividir un DN devuelto por ldap_get_dn() en las partes que le componen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each part is known as Relative Distinguished Name, or RDN. ldap_explode_dn() returns an array of all those components. with_attrib is used to request if the RDNs are returned with only values or their attributes as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada parte es conocida como Relative Distinguished Name (Nombre Relativo Distinguible) abreviado como RDN. ldap_explode_dn() devuelve un array con todos esos componentes. con_atributos sirve para especificar si los RDN se devuelven sólo como valores o con sus atributos también (es decir, en un formato atributo=valor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get RDNs with the attributes (i.e. in attribute=value format) set with_attrib to 0 and to get only values set it to 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que poner with_attrib a 0 para obtener también los atributos y a 1 para obtener sólo los valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the first attribute in the entry on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelte el primer atributo en la entrada o falso si ocurre algún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remaining attributes are retrieved by calling ldap_next_attribute() successively. ber_identifier is the identifier to internal memory location pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro indetificador_ber es el identificador del puntero interno a memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is passed by reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Es pasado por referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The same ber_identifier is passed to the ldap_next_attribute() function, which modifies that pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>El mismo indetificador_ber es pasado a la función ldap_next_attribute() que modifica dicho puntero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_get_attributes()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_get_attributes()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the result entry identifier for the first entry on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador de la primera entrada del resultado ó falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Entries in the LDAP result are read sequentially using the ldap_first_entry() and ldap_next_entry() functions. ldap_first_entry() returns the entry identifier for first entry in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Las entradas en un resultado LDAP son leidas secuencialmente usando las funciones ldap_first_entry() y ldap_next_entry(). ldap_first_entry() devuelve el identificador de la primera entrada del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This entry identifier is then supplied to ldap_next_entry() routine to get successive entries from the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Este identificador es entonces suministrado a la rutina lap_next_entry() pata obtener sucesivas entradas del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_get_entries().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_get_entries().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_free_result() frees up the memory allocated internally to store the result and pointed by the result_identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_free_result() libera la memoria reservada internamente para almacenar el resultado de búsquedas LDAP asociada al identificador identificador_de_resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All result memory will be automatically freed when the script terminates.</seg></tuv>
      <tuv xml:lang="es"><seg>Toda la memoria de resultados es automáticamente liberada al finalizarse la ejecución de un script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Typically all the memory allocated for the ldap result gets freed at the end of the script.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente la memoria reservada para resultados ldap se libera al final del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case the script is making successive searches which return large result sets, ldap_free_result() could be called to keep the runtime memory usage by the script low.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de que el script realice sucesivas búsquedas que devuelvan conjuntos de resultados grandes, puede utilizarse ldap_free_result() para mantener bajo el uso de memoria del script durante su ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a complete entry information in a multi-dimensional array on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una completa información de la entrada en un array multidimensional o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_get_attributes() function is used to simplify reading the attributes and values from an entry in the search result.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_get_attributes() La función ldap_get_attributes() es usada para simplificar el leer atributos y valores de una entrada de un resultado de búsqueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value is a multi-dimensional array of attributes and values.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de retorno es un array multidimensional de atributos y sus valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Having located a specific entry in the directory, you can find out what information is held for that entry by using this call.</seg></tuv>
      <tuv xml:lang="es"><seg>Teniendo localizado una entrada específica en el directorio se puede conseguir la información que contiene dicha entrada usando esta llamada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You would use this call for an application which "browses" directory entries and / or where you do not know the structure of the directory entries.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar esta función para aplicaciones que naveguen por las entradas del directorio y / o cuando no se conoce la estructura de las entradas del directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In many applications you will be searching for a specific attribute such as an email address or a surname, and won 't care what other data is held.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras aplicaciones se busca un atributo específico, como la dirección de email o los apellidos y no importa el resto de información contenida..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return_value[ "count"] = number of attributes in the entry return_value[0] = first attribute return_value[n] = nth attribute return_value["attribute"]["count"] = number of values for attribute return_value["attribute"][0] = first value of the attribute return_value["attribute"][i] = (i+1 )th value of the attribute</seg></tuv>
      <tuv xml:lang="es"><seg>valor_devuelto[ "count"] = número de atributos en la entrada valor_devuelto[0] = primer atributo valor_devuelto[n] = enésimo atributo valor_devuelto["atributo"]["count"] = número de vaslores del atributo valor_devuelto["atributo"][0] = primer valor del atributo valor_devuelto["atributo"][i] = iésimo valor del atributo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Show the list of attributes held for a particular directory entry</seg></tuv>
      <tuv xml:lang="es"><seg>Mostrar la lista de atributos contenida en una entrada específica de un directorio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / $ds is the link identifier for the directory / / $sr is a valid search result from a prior call to / / one of the ldap directory search calls $entry = ldap_first_entry( $ds, $sr); $attrs = ldap_get_attributes($ds, $entry); echo $attrs["count"]. "attributes held for this entry: p"; for ($i=0; $i $attrs["count"]; $i++) echo $attrs[$i]. "br";</seg></tuv>
      <tuv xml:lang="es"><seg>/ / $ds es un identificador de conexión al directorio / / $sr es un resultado de búsqueda válido de una llamada / / anterior a una de las funciones de búsqueda en directorios / / ldap. $entrada = ldap_first_entry( $ds, $sr); $atributos = ldap_get_attributes($ds, $entrada); echo $atributos["count"]. "atributos contenidos en esta entrada: p"; for ($i=0; $i $atributos["count"]; $i++) echo $atributos[$i]. "br";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_first_attribute() and ldap_next_attribute()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_first_attribute() y ldap_next_attribute()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the DN of the result entry and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el DN de la entrada del resultado o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_get_dn() function is used to find out the DN of an entry in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_get_dn() se utiliza para obtener el DN de una entrada de un resultado de búsqueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a complete result information in a multi-dimenasional array on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una completa información de un resultado de búsqueda en un array multidimensional o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_get_entries() function is used to simplify reading multiple entries from the result, specified with result_identifier, and then reading the attributes and multiple values.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_get_entries() es usada para simplificar el leer múltiples entradas de de un resultado y después leer sus atributos y multiples valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The entire information is returned by one function call in a multi-dimensional array.</seg></tuv>
      <tuv xml:lang="es"><seg>Toda la información es devuelta por una llamada a una función en forma de array multidimensional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The structure of the array is as follows.</seg></tuv>
      <tuv xml:lang="es"><seg>La estructura del array es como se muestra más abajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The attribute index is converted to lowercase. (Attributes are case-insensitive for directory servers, but not when used as array indices.)</seg></tuv>
      <tuv xml:lang="es"><seg>Los indices de atributos son convertidos a minúsculas. (Los atributos de servidores de directorios son indiferentes a las mayusculas / minusculas, pero no cuando son usados como indices de arrays)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return_value[ "count"] = number of entries in the result return_value[0]: refers to the details of first entry return_value[i]["dn"] = DN of the ith entry in the result return_value[i]["count"] = number of attributes in ith entry return_value[i][j] = jth attribute in the ith entry in the result return_value[i]["attribute"]["count"] = number of values for attribute in ith entry return_value[i]["attribute"][j] = jth value of attribute in ith entry</seg></tuv>
      <tuv xml:lang="es"><seg>valor_devuelto[ "count"] = número de entradas del resultado valor_devuelto[0]: contiene los detalles de la primera entrada valor_devuelto[i]["dn"] = DN de la entrada iésima del resultado valor_devuelto[i]["count"] = número de atributos de la entrada iésima valor_devuelto[i][j] = jésimo atributo de la iésima entrada del resultado valor_devuelto[i]["atributo"]["count"] = número de valores para "atributo "en la entrada iésima valor_devuelto[i]["atributo"][j] = jésimo valor de "atributo" en la entrada iésima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_first_entry() and ldap_next_entry()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_first_entry() y ldap_next_entry()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of values for the attribute on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array de valores del atributo o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_get_values() function is used to read all the values of the attribute in the entry in the result. entry is specified by the result_entry_identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>La entrada del resultado es especificada por el identificador_de_entrada_de_resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of values can be found by indexing "count" in the resultant array.</seg></tuv>
      <tuv xml:lang="es"><seg>El número de valores se almacena en el índice "count" del array devuelto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Individual values are accessed by integer index in the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores individuales se almacenan con índices enteros en el array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first index is 0.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer índice es 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This call needs a result_entry_identifier, so needs to be preceded by one of the ldap search calls and one of the calls to get an individual entry.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta llamada necesita un identificador_de_entrada_de_resultado, por lo que necesita ser precedida por una de las llamadas de búsqueda ldap y una llamada para obtener una entrada en particular del resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You application will either be hard coded to look for certain attributes (such as "surname "or "mail") or you will have to use the ldap_get_attributes() call to work out what attributes exist for a given entry.</seg></tuv>
      <tuv xml:lang="es"><seg>La aplicación debe ser o bien programada específicamente para buscar ciertos atributos (como apellidos o email) o bien utilizar la función ldap_get_attributes() para averiguar que atributos existen para una entrada dada, antes de llamar a ldap_get_values().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LDAP allows more than one entry for an attribute, so it can, for example, store a number of email addresses for one person' s directory entry all labeled with the attribute "mail "</seg></tuv>
      <tuv xml:lang="es"><seg>LDAP permite mas de un valor para cada atributo, por lo que se puede, por ejemplo, almacenar varias direcciones de email para una persona en el directorio y nombrar a ese atributo como "email"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return_value[ "count"] = number of values for attribute return_value[0] = first value of attribute return_value[i] = ith value of attribute</seg></tuv>
      <tuv xml:lang="es"><seg>valor_devuelto[ "count"] = número de valores del atributo valor_devuelto[0] = primer valor del atributo valor_devuelto[i] = iésimo valor del atributo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List all values of the "mail" attribute for a directory entry</seg></tuv>
      <tuv xml:lang="es"><seg>Listar todos los valores del atributo "email" de una entrada de un directorio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / $ds is a valid link identifier for a directory server / / $sr is a valid search result from a prior call to / / one of the ldap directory search calls / / $entry is a valid entry identifier from a prior call to / / one of the calls that returns a directory entry $values = ldap_get_values( $ds, $entry ,"mail"); echo $values["count"]. "email addresses for this entry. p"; for ($i=0; $i $values["count"]; $i++) echo $values[$i]. "br";</seg></tuv>
      <tuv xml:lang="es"><seg>/ / $ds es un identificador de conexión al directorio / / $sr es un resultado de búsqueda válido de una llamada / / anterior a una de las funciones de búsqueda en directorios / / ldap. / / $entrada es un identificador de entrada válido de una llamada / / anterior a una de las funciones que devuelven una entrada de / / directorio $valores = ldap_get_values( $ds, $entrada ,"email"); echo $valores["count"]. "direcciones de email para esta entrada. p"; for ($i=0; $i $valores["count"]; $i++) echo $valores[$i]. "br";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_get_values_len() function is used to read all the values of the attribute in the entry in the result. entry is specified by the result_entry_identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_get_values_len() La función ldap_get_values_len() se utiliza para obtener todos los valores de un atributo de una entrada de un resultado de búsqueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of values can be found by indexing "count" in the resultant array.</seg></tuv>
      <tuv xml:lang="es"><seg>La entrada es especificada por el indentificador_de_entrada_de_resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first index is 0.</seg></tuv>
      <tuv xml:lang="es"><seg>El número de valores se almacena en el índice "count" del array devuelto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is used exactly like ldap_get_values() except that it handles binary data and not string data.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer índice es 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was added in 4.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se utiliza exactamente como ldap_get_values() salvo que permite manejar datos binarios y no cadenas de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a search result identifier or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador de resultado de búsqueda o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_list() performs the search for a specified filter on the directory with the scope LDAP_SCOPE_ONELEVEL.</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_list() realiza la búsqueda según el filtro especificado en el directorio con el alcance LDAP_SCOPE_ONELEVEL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This call takes 5 optional parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>LDAP_SCOPE_ONELEVEL significa que la búsqueda solo devuelve información que se encuentre en el nivel inmediatamente inferior al dn_base especificado en la llamada a la función. (Equivalente a ejecutar "ls "en un unix y obtener un listado de ficheros y carpetas en el directorio de trabajo actual.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta llamada toma un cuarto parámetro opcional, que es un array de los atributos requeridos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These optional parameters were added in 4.0.2: attrsonly, sizelimit, timelimit, deref.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulte las notas de la función ldap_search().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Produce a list of all organizational units of an organization</seg></tuv>
      <tuv xml:lang="es"><seg>Produce una lista de todas las unidades organizativas de una compañía</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>/ / $ds es un identificador de conexión válido. $dnbase = "o=Mi Compañía, c=ES"; $solonecesito = array("ou"); $sr=ldap_list($ds, $dnbase, "ou=*", $solonecesito); $info = ldap_get_entries($ds, $sr); for ($i=0; $i $info["count"]; $i++) echo $info[$i]["ou"][0];</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function adds attribute( s) to the specified dn.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función añadir uno o varios atributos al dn especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It performs the modification at the attribute level as opposed to the object level.</seg></tuv>
      <tuv xml:lang="es"><seg>Realiza la modificación al nivel de atributos, en vez de hacerlo al nivel de objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Object-level additions are done by the ldap_add() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Las modificaciones a nivel de objeto son propocionadas por la función ldap_add().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>returns TRUE on success and FALSE on error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function removes attribute( s) from the specified dn.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función elimina atributos del dn especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It performs the modification at the attribute level as opposed to the object level.</seg></tuv>
      <tuv xml:lang="es"><seg>Realiza la modificación a nivel de atributos, en vez de hacerlo a nivel de objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Object-level deletions are done by the ldap_delete() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Las modificaciones a nivel de objeto son proporcionadas por la función ldap_del().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_modify() function is used to modify the existing entries in the LDAP directory.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_modify() se utiliza para modificar entradas existentes en un directorio LDAP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The structure of the entry is same as in ldap_add().</seg></tuv>
      <tuv xml:lang="es"><seg>La estructura de la entrada es igual a la de ldap_add().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function replaces attribute( s) from the specified dn.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función reemplaza atributos del dn especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Object-level modifications are done by the ldap_modify() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Las modificaciones a nivel de objeto son proporcionadas por la función ldap_modify().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next attribute in an entry on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el siguiente atributo de una entrada o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_next_attribute() is called to retrieve the attributes in an entry.</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_next_attribute() es llamado para recuperar los atributos de una entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is passed by reference to the function.</seg></tuv>
      <tuv xml:lang="es"><seg>El estado interno del puntero es mantenido por el identificador_ber, que es pasado por referencia a la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first call to ldap_next_attribute() is made with the result_entry_identifier returned from ldap_first_attribute().</seg></tuv>
      <tuv xml:lang="es"><seg>La primera llamada a ldap_next_attribute() es realizada con el identificador_de_entrada_de_resultado devuelto por la función ldap_first_attribute().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns entry identifier for the next entry in the result whose entries are being read starting with ldap_first_entry().</seg></tuv>
      <tuv xml:lang="es"><seg>Las entradas deben haber sido leidas al principio con ldap_first_entry().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are no more entries in the result then it returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay más entradas en el resultado devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_next_entry() function is used to retrieve the entries stored in the result.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_next_entry() se utiliza para obtener las entradas almacenadas en un resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Successive calls to the ldap_next_entry() return entries one by one till there are no more entries.</seg></tuv>
      <tuv xml:lang="es"><seg>Llamadas sucesivas a la función ldap_next_entry() devuelven las entradas una a una hasta que ya no queden más entradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first call to ldap_next_entry() is made after the call to ldap_first_entry() with the result_entry_identifier as returned from the ldap_first_entry().</seg></tuv>
      <tuv xml:lang="es"><seg>La primera llamada a ldap_next_entry() se realiza después de llamar a ldap_first_entry().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ldap_get_entries()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también ldap_get_entries()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So it is equivalent to reading an entry from the directory.</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_read() realiza la búsqueda según el filtro especificado con alcance LDAP_SCOPE_BASE, por lo que es equivalente a leer cualquier entrada del directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An empty filter is not allowed.</seg></tuv>
      <tuv xml:lang="es"><seg>No se permiten filtros vacios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to retrieve absolutely all information for this entry, use a filter of "objectClass=*".</seg></tuv>
      <tuv xml:lang="es"><seg>Si se pretende obtener absolutamente toda la información, se debe usar un filtro del tipo "objectClass=*".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This call takes 5 optional parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Si conoce que tipos de entradas son usadas en el servidor de directorio es conveniente usar el filtro apropiado, como por ejemplo "objectClass=inetOrgPerson".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These optional parameters were added in 4.0.2: attrsonly, sizelimit, timelimit, deref.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta llamada toma un cuarto parámetro opcional que es un array de los atributos requeridos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See ldap_search() for details.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulte las notas de la función ldap_search().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is equivalent to searching the entire directory. base_dn specifies the base DN for the directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador de resultado de búsqueda o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is much more efficient than the default action (which is to return all attributes and their associated values).</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_search() realiza la búsqueda según el filtro especificado con alcance LDAP_SCOPE_SUBTREE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fourth parameter is a standard PHP string array of the required attributes, eg array( "mail" ,"sn" ,"cn") Note that the "dn "is always returned irrespective of which attributes types are requested.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es equivalente a buscar en el directorio entero. dn_base especifica el DN base para el directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this occurs, the server will indicate that it has only returned a partial results set.</seg></tuv>
      <tuv xml:lang="es"><seg>Existe un cuarto parámetro opcional que puede ser añadido para restringir los atributos y valores devueltos por el servidor a sólo los requeridos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fifth parameter attrsonly should be set to 1 if only attribute types are wanted.</seg></tuv>
      <tuv xml:lang="es"><seg>Es mucho más eficiente que la acción por defecto (que devolverá todos los atributos y sus valores asociados).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With the sixth parameter sizelimit it is possible to limit the count of entries fetched.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso del cuarto parámetro debe ser por tanto considerado una práctica recomendable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting this to 0 means no limit.</seg></tuv>
      <tuv xml:lang="es"><seg>El cuerto parámetro es un array estándar de PHP con los atributos requeridos, por ejemplo array( "email" ,"sn" ,"cn").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be one of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Nota: "dn" siempre es devuelto independientemente de que tipos de atributos sean solicitados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LDAP_DEREF_SEARCHING - aliases should be dereferenced during the search but not when locating the base object of the search.</seg></tuv>
      <tuv xml:lang="es"><seg>También es necesario resaltar que algunos servidores de directorio están configurados para devolver un cierto número de entradas como máximo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LDAP_DEREF_ALWAYS - aliases should be dereferenced always.</seg></tuv>
      <tuv xml:lang="es"><seg>Si esto ocurre, el servidor indicará que solo devuelve un conjunto de resultados parcial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The search filter can be simple or advanced, using boolean operators in the format described in the LDAP doumentation (see the Netscape Directory SDK for full information on filters).</seg></tuv>
      <tuv xml:lang="es"><seg>El filtro de búsqueda puede ser simple o avanzado, usando operadores booleanos en el formato descrito en la documentación sobre LDAP (Consulte el Netscape Directory SDK para obtener completa información sobre filtros).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example uses a boolean filter to tell the server to look for information in more than one attribute.</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo de abajo recupera la unidad organizativa (ou), apellidos nombre común y dirección de email para todas las personas de "Mi Compañía "donde los apellidos o el nombre común contiene la subcadena $persona.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do this you use an array of link identifiers, rather than a single identifier, as the first argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo usa un filtro booleano para indicar al servidor que busque la información en más de un atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don 't want the same base DN and the same filter for all the searches, you can also use an array of base DNs and / or an array of filters.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When doing parallel searches an array of search result identifiers is returned, except in case of error, then the entry corresponding to the search will be FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Búsqueda LDAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are some rare cases where the normal search returns FALSE while the parallel search returns an identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>/ / $ds es un identificador de conexión válido / / $persona es todo o parte del nombre de una persona, por ejemplo "Pe" $dn = "o=Mi Compañía, c=ES"; $filtro="(_BAR_(sn=$persona*)(givenname=$persona*))"; $solonecesito = array ("ou", "sn", "givenname", "mail"); $sr=ldap_search($ds, $dn, $filtro, $solonecesito); $info = ldap_get_entries($ds, $sr); print $info["count"]. "entradas devueltas p";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure. on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si todo fue bien, FALSE en caso de fallo. on error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_unbind() function unbinds from the LDAP directory.</seg></tuv>
      <tuv xml:lang="es"><seg>La función ldap_unbind() hace logout, desautentifica de un directorio LDAP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mail functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Correo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In its simplest form the function will take only the two strings as parameter and will calculate just the number of insert, replace and delete operations needed to transform str1 into str2.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve la distancia Levenshtein entre las dos cadenas argumento, ó -1 si alguna de las cadenas tiene más de 255 caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is more general and adaptive than variant one, but not as efficient.</seg></tuv>
      <tuv xml:lang="es"><seg>La distancia Levenshtein se define como el mínimo número de caracteres que se tienen que sustituir, insertar o borrar para transformar cad1 en cad2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will call a user-supplied function that will determine the cost for every possible operation.</seg></tuv>
      <tuv xml:lang="es"><seg>La complejidad del algoritmo es O( m*n), donde n y m son las longitudes de cad1 y cad2 (bastante bueno si se la compara con similar_text(), que es O(max(n,m)**3), pero aún es cara).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>operation to apply: 'I', 'R' or'D '</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también soundex(), similar_text() y metaphone().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>link() creates a hard link.</seg></tuv>
      <tuv xml:lang="es"><seg>link() crea un enlace fuerte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the symlink() to create soft links, and readlink() along with linkinfo().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también symlink() para crear enlaces débiles, y readlink() junto con linkinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>linkinfo() returns the st_dev field of the UNIX C stat structure returned by the lstat system call.</seg></tuv>
      <tuv xml:lang="es"><seg>linkinfo() da el campo st_dev de la extructura stat de UNIX C devuelto por la llamada al sistema lstat.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is used to verify if a link (pointed to by path) really exists (using the same method as the S_ISLNK macro defined in stat.h).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se usa para verificar si un enlace (apuntado por path) existe realmente (usando el mismo método que la macro S_ISLNK definida en stat.h).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns 0 or FALSE in case of error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve 0 o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also symlink(), link(), and readlink().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también symlink(), link(), y readlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. list() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Como array(), esta no es realmente una función, sino una construcción del lenguaje. list() se usa para asignar una lista de variables en una sola operación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example use of list()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>list() assigns the values starting with the right-most parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de list()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But if you are using arrays with indices you usually expect the order of the indices in the array the same you wrote in the list() from left to right; which it isn't.</seg></tuv>
      <tuv xml:lang="es"><seg>table tr th Nombre empleado / th th Sueldo / th / tr ?php $resultado = mysql( $conn, "SELECT id, nombre, salario FROM empleados"); while (list($id, $nombre, $salario) = mysql_fetch_row($resultado)) {print( "tr \n"." td a href=\"info.php3?id=$id\ "$nombre / a / td \n"." td $salario / td \n". "/ tr \n");}? / table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array( 3) {[2]= string(8) "caffeine "[1]= string(5) "brown" [0]= string(6) "coffee "}</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: each(), array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. localeconv() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. localeconv() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The localtime() function returns an array identical to that of the structure returned by the C function call.</seg></tuv>
      <tuv xml:lang="es"><seg>La función localtime() devuelve un vector idético al de la estructura devuelta en C por la llamada a la misma función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first argument to localtime() is the timestamp, if this is not given the current time is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se proporciona, se utilizará la hora actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second argument to the localtime() is the is_associative, if this is set to 0 or not supplied than the array is returned as a regular, numerically indexed array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si está a 0 o no es proporcionado, el vector se devuelve como un vector normal, indizado numéricamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the argument is set to 1 then localtime() is an associative array containing all the different elements of the structure returned by the C function call to localtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el argumento está a 1, el vector devuelto es un vector asociativo conteniendo los diferentes elementos de la estructura devuelta por C al llamar a la función localtime.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The names of the different keys of the associative array are as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres de las diferentes claves del vector asociativo se encuentran a continuación:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_sec" - seconds</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_sec" - segundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_min" - minutes</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_min" - minutos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_hour" - hour</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_hour" - horas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_mday" - day of the month</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_mday" - día del mes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_mon" - month of the year, starting with 0 for January</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_mon" - mes del año, empezando en 0 que es Enero</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_year" - Years since 1900</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_year" - Años que hacen desde 1900</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_wday" - Day of the week</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_wday" - Día de la semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_yday" - Day of the year</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_yday" - Día del año</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"tm_isdst" - Is daylight savings time in effect</seg></tuv>
      <tuv xml:lang="es"><seg>"tm_isdst" - Si el cambio de hora para el ahorro energético tiene efecto o no</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the base-10 logarithm of arg.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el logaritmo en base-10 de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As always you can calculate the logarithm in base b of a number n, but using the mathematical identity: log b (n) = log(n) / log(b), where log is the neperian (or natural) logarithm.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el logaritmo de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gathers the statistics of the file or symbolic link named by filename.</seg></tuv>
      <tuv xml:lang="es"><seg>Reúne los datos del fichero o enlace simbólico indicado por filename.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is identical to the stat() function except that if the filename parameter is a symbolic link, the status of the symbolic link is returned, not the status of the file pointed to by the symbolic link.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es idéntica a la función stat() excepto que si el nombre en el parámetro filename es un enlace simbólico, son devueltos los datos (status) del enlace simbólico, y no los del fichero al que apunta el enlace simbólico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array with the statistics of the file with the following elements:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array conteniendo los datos del fichero con los siguientes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>inode</seg></tuv>
      <tuv xml:lang="es"><seg>dispositivo (device)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number of links</seg></tuv>
      <tuv xml:lang="es"><seg>número de enlaces</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>user id of owner</seg></tuv>
      <tuv xml:lang="es"><seg>id de usuario del propietario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>group id owner</seg></tuv>
      <tuv xml:lang="es"><seg>id de grupo del propietario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>size in bytes</seg></tuv>
      <tuv xml:lang="es"><seg>tipo de disposivo si es un inode device *</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last access</seg></tuv>
      <tuv xml:lang="es"><seg>tamaño en bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last modification</seg></tuv>
      <tuv xml:lang="es"><seg>fecha del último acceso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last change</seg></tuv>
      <tuv xml:lang="es"><seg>fecha de la última modificación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blocksize for filesystem I / O *</seg></tuv>
      <tuv xml:lang="es"><seg>fecha del último cambio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number of blocks allocated</seg></tuv>
      <tuv xml:lang="es"><seg>tamaño de bloque para el sistema I / O *</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lstat() cannot be used on remote files.</seg></tuv>
      <tuv xml:lang="es"><seg>número de bloques ocupados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados de esta función son cacheados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver clearstatcache() para más detalles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the second parameter, ltrim() will strip these characters:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función elimina el espacio en blanco del principio de una cadena y devuelve la cadena resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also specify the characters you want to strip, by means of the charlist You can also specify the characters you want to strip, by means of the charlist parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Los caracteres de espacio que elimina realmente son: "\n", "\r", "\t", "\v", "\0", y el espacio en sí.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With.. you can specify a range of characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también chop() y trim().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is accomplished via MIME-encoding - for more information, see this Zend article or the PEAR Mime Classes.</seg></tuv>
      <tuv xml:lang="es"><seg>mail() envía automáticamente el mensaje especificado en mensage al destinatario especificado en para.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mail() returns TRUE if the mail was successfully accepted for delivery, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Para especificar múltiples destinatarios se puede hacer incluyendo una coma entre las direcciones en para.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Windows implementation of mail() differs in many ways from the Unix implementation.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the custom headers like From:, Cc:, Bcc: and Date: are not interpreted by the MTA in the first place, but are parsed by PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Enviando correo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP = 4.3 supports all the mentioned header elements and is no longer case-sensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>mail( "pepito@loquesea.es", "Sobre este tema", "Linea 1\nLinea 2\nLinea 3");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a fourth string argument is passed, this string is inserted at the end of the header.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se añadiera una cadena como cuarto argumento, esta cadena sería enviada al final de la cabecera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto se usa normalmente para enviar cabeceras extra en los mensajes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mail( "nobody@example.com", "the subject", $message, "From: webmaster@$SERVER_NAME\r\n "."Reply-To: webmaster@$SERVER_NAME\r\n". "X-Mailer:</seg></tuv>
      <tuv xml:lang="es"><seg>Si se desea enviar varias cabeceras extra el mecanismo será el mismo separándolas una linea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may need to add the user that your web server runs as to your sendmail configuration to prevent a 'X-Warning' header from being added to the message when you set the envelope sender using this method.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mail( "nobody@example.com", "the subject", $message, "From: webmaster@$SERVER_NAME", "-fwebmaster@$SERVER_NAME");</seg></tuv>
      <tuv xml:lang="es"><seg>Enviando correo con varias cabeceras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use simple string building techniques to build complex email messages.</seg></tuv>
      <tuv xml:lang="es"><seg>mail( "pepito@loquesea.es", "El tema", $message, "From: webmaster@$SERVER_NAME\nReply-To: webmaster@$SERVER_NAME\nX-Mailer:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max() returns the numerically highest of the parameter values.</seg></tuv>
      <tuv xml:lang="es"><seg>max() devuelve el número mayor de los valores de los parámetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the first parameter is an array, max() returns the highest value in that array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el primer parámetro es un array, max() devuelve el mayor valor en ese array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the first parameter is an integer, string or float, you need at least two parameters and max() If the first parameter is an integer, string or float, you need at least two parameters and max() returns the biggest of these values.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el primer parámetro es un entero, string o double, necesita al menos dos parámetros y max() devuelve el mayor número de estos valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can compare an unlimited number of values.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede comparar un número ilimitado de valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one or more of the values is a float, all the values will be treated as floats, and a float is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si uno o más de los valores es un double, todos los valores serán tratados como doubles, y devolverá un double.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also min().</seg></tuv>
      <tuv xml:lang="es"><seg>Si ninguno de los valores es un double, todos ellos serán tratados como enteros, y se devolverá un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_case() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_convert_case() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_encoding() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_convert_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_kana() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_convert_kana() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_variables() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_convert_variables() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. convmap example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. convmap example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_detect_encoding() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_detect_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mb_detect_order() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. mb_detect_order() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mb_encode_numericentity() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. mb_encode_numericentity() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_internal_encoding() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_internal_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_output_handler() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_output_handler() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_preferred_mime_string() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_preferred_mime_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_strimwidth() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_strimwidth() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_strtolower() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_strtolower() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_strtoupper() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_strtoupper() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_substitute_character() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_substitute_character() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_substr_count() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mb_substr_count() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the id of the newly inserted event.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns the uid of the newly inserted event.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_date_compare() Compares the two given dates, returns 0, 0, 0 if a b, a==b, a b respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_date_compare() Compares the two given dates, returns 0, 0, 0 if a b, a==b, a b respectively</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible return values range from 0 for Sunday through 6 for Saturday.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_day_of_week() returns the day of the week of the given date</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_day_of_year() returns the day of the year of the given date.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_day_of_year() returns the day of the year of the given date</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_delete_event() deletes the calendar event specified by the event_id.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_delete_event() deletes the calendar event specified by the uid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_fetch_current_stream_event() returns the current stream's event structure as an object containing:</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_event_fetch_current_stream_event() returns the current stream 's event structure as an object containing:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_is_leap_year() returns 1 if the given year is a leap year, 0 if not.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_is_leap_year() returns 1 if the given year is a leap year, 1 if not.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of ID 's that are between the start and end dates, or if just a stream is given, uses the start and end dates in the global event structure.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns an array of event ID 's that are between the start and end dates, or if just a stream is given, uses the start and end dates in the global event structure.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_list_events() function takes in an beginning date and an optional end date for a calendar stream.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_list_events() function takes in an optional beginning date and an end date for a calendar stream.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_snooze() turns off an alarm for a calendar event specified by the id.</seg></tuv>
      <tuv xml:lang="es"><seg>mcal_snooze() turns off an alarm for a calendar event specified by the uid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the event id of the modified event on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns TRUE on success and FALSE on error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description int mcal_week_of_year (int day, int month, int year)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcal_time_valid</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mcrypt Encryption Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones Criptográficas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_cbc() encripta o desencripta (dependiendo de mode) los datos data con el cifrado cipher y la clave key en el modo de cifrado CBC y devuelve la cadena resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher.</seg></tuv>
      <tuv xml:lang="es"><seg>key es la clave suministrada al algoritmo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mcrypt_cfb(), mcrypt_ecb(), mcrypt_ofb()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_cfb() encripta o desencripta (dependiendo de mode) los datos data con el cifrado cipher y la clave key en el modo de cifrado CFB y devuelve la cadena resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.</seg></tuv>
      <tuv xml:lang="es"><seg>mode es MCRYPT_ENCRYPT o MCRYPT_DECRYPT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt_create_iv() is used to create an IV.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_create_iv() se usa para crear un IV.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt_create_iv() takes two arguments, size determines the size of the IV, source specifies the source of the IV.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_create_iv() toma dos argumentos, size determina el tamaño del IV, source especifica la fuente del IV.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use MCRYPT_RAND, make sure to call srand() before to initialize the random number generator.</seg></tuv>
      <tuv xml:lang="es"><seg>La fuente puede ser MCRYPT_RAND (generador de números aleatorios del sistema), MCRYPT_DEV_RANDOM (que lee datos de / dev / random) y MCRYPT_DEV_URANDOM (que lee datos de / dev / urandom).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $size = mcrypt_get_iv_size (MCRYPT_CAST_256, MCRYPT_MODE_CFB); $iv = mcrypt_create_iv ($size, MCRYPT_DEV_RANDOM);?</seg></tuv>
      <tuv xml:lang="es"><seg>Si usas MCRYPT_RAND, asegurate de llamar antes a srand() para inicializar el generador de números aleatorios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The IV is only meant to give an alternative seed to the encryption routines.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This IV does not need to be secret at all, though it can be desirable.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de mcrypt_create_iv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information can be found at http: / /www.ciphersbyritter.com / GLOSSARY.HTM#IV, http: / /fn2.freenet.edmonton.ab.ca / ~jsavard / crypto / co0409.htm and in chapter 9.3 of Applied Cryptography by Schneier (ISBN 0-471-11709-9) for a discussion of this topic.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $cipher = MCRYPT_TripleDES; $block_size = mcrypt_get_block_size($cipher); $iv = mcrypt_create_iv($block_size, MCRYPT_DEV_RANDOM);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_ecb() encripta o desencripta (dependiendo de mode) los datos data con el cifrado cipher y la clave key en el modo de cifrado ECB y devuelve la cadena resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function should not be used anymore, see mcrypt_generic() and mdecrypt_generic() for replacements.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mcrypt_cbc(), mcrypt_cfb(), mcrypt_ofb()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_enc_get_algorithms_name() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_enc_get_algorithms_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_enc_get_modes_name() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_enc_get_modes_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_enc_get_supported_key_sizes() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_enc_get_supported_key_sizes() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_encrypt() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_encrypt() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example shows how to use this function when linked against libmcrypt 2.4.x and 2.5.x.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_get_block_size() se usa para obtener el tamaño de bloque del cifrado indicado en cipher.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo mcrypt_get_block_size ('tripledes', 'ecb');?</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_get_block_size() toma un argumento, el cifrado cipher y devuelve el tamaño en bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mcrypt_get_key_size() and mcrypt_encrypt().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mcrypt_get_key_size()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt_get_cipher_name() is used to get the name of the specified cipher.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_get_cipher_name() se usa para obtener el nombre del cifrado especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt_get_cipher_name() takes the cipher number as an argument (libmcrypt 2.2.x) or takes the cipher name as an argument (libmcrypt 2.4.x or higher) and returns the name of the cipher or FALSE, if the cipher does not exist.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_get_cipher_name() toma como argumento el número de cifrado y devuelve el nombre del cifrado o FALSE, si el cifrado no existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_get_cipher_name() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de mcrypt_get_cipher_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $cipher = MCRYPT_TripleDES; echo mcrypt_get_cipher_name ($cipher);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $cipher = MCRYPT_TripleDES; print mcrypt_get_cipher_name($cipher);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo de más arriba da como resultado:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3DES</seg></tuv>
      <tuv xml:lang="es"><seg>TripleDES</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_create_iv() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_create_iv() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example shows how to use this function when linked against libmcrypt 2.4.x and 2.5.x.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_get_key_size() se usa para obtener el tamaño de la clave del cifrado indicado en cipher.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo mcrypt_get_key_size ('tripledes', 'ecb');?</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_get_key_size() toma un argumento, el cifrado cipher y devuelve el tamaño de la clave en bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mcrypt_get_block_size() and mcrypt_encrypt().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mcrypt_get_block_size()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_list_algorithms() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_list_algorithms() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_list_modes() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_list_modes() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_module_open() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mcrypt_module_open() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt_ofb() encripta o desencripta (dependiendo de mode) los datos data con el cifrado cipher y la clave key en el modo de cifrado OFB y devuelve la cadena resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mhash Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones Hash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The hash is a 32-character hexadecimal number.</seg></tuv>
      <tuv xml:lang="es"><seg>Calcula el hash (extracto) MD5 de cad usaneo el Algoritmo de Resumen de Mensajes MD5 de RSA Data Security, Inc..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also crc32(), md5_file(), and sha1().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: crc32()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mdecrypt_generic() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mdecrypt_generic() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the metaphone key of str.</seg></tuv>
      <tuv xml:lang="es"><seg>Calcula la clave "metáfona" de cad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to soundex() metaphone creates the same key for similar sounding words.</seg></tuv>
      <tuv xml:lang="es"><seg>Similarmente a soundex(), metaphone crea la misma clave para palabras que suenan parecidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s more accurate than soundex() It's more accurate than soundex() as it knows the basic rules of English pronunciation.</seg></tuv>
      <tuv xml:lang="es"><seg>Las claves metafónicas generadas son de longitud variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The metaphone generated keys are of variable length.</seg></tuv>
      <tuv xml:lang="es"><seg>Metaphone fue desarrollado por Lawrence Philips lphilips@verity.com.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Metaphone was developed by Lawrence Philips lphilips@verity.com.</seg></tuv>
      <tuv xml:lang="es"><seg>Se describe en ["Practical Algorithms for Programmers", Binstock Rex, Addison Wesley, 1995].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is described in ["Practical Algorithms for Programmers", Binstock Rex, Addison Wesley, 1995].</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se añadió en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE if the method given by method_name has been defined for the given object, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve verdadero (TRUE) si el metódo referido por method_name ha sido definido en el objecto object, en cualquier otro caso devuelve falso (FALSE)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ClibPDF functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de ClibPDF</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_count() returns the highest available hash id.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash_count() devuelve el valor mas alto id hash disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hashes are numbered from 0 to this hash id.</seg></tuv>
      <tuv xml:lang="es"><seg>Los hash estan numerados desde 0 hasta este valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Traversing all hashes</seg></tuv>
      <tuv xml:lang="es"><seg>Recorriendo todos los hash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $nr = mhash_count(); for ($i = 0; $i = $nr; $i++) {echo sprintf ("The blocksize of %s is %d\n", mhash_get_hash_name ($i), mhash_get_block_size ($i));}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $nr = mhash_count(); for($i = 0; $i = $nr; $i++) {echo sprintf("The blocksize of %s is %d\n", mhash_get_hash_name($i), mhash_get_block_size($i));}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_block_size() is used to get the size of a block of the specified hash.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash_get_block_size() es usado para obtener el tamaño de un bloque de el hash determinado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_block_size() takes one argument, the hash and returns the size in bytes or FALSE, if the hash does not exist.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash_get_block_size() toma un argumento, el hash y devuelve el tamaño en bytes o FALSE, si el hash no existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_hash_name() is used to get the name of the specified hash.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash_get_hash_name() es usado para conseguir el nombre de el hash determinado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_hash_name() takes the hash id as an argument and returns the name of the hash or FALSE, if the hash does not exist.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash_get_hash_name() toma el id del hash como un argumento y devuelve el nombre de el hash o FALSE, si el hash no existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mhash_get_hash_name() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mhash_get_hash_name example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will print out:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $hash = MHASH_MD5; print mhash_get_hash_name($hash);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all algorithms supported in mhash can be used in HMAC mode.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash() aplica una funcion hash especificada por hash a data y devuelve el valor hash resultante (tambien llamdo digest).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available on operating systems that support the gettimeofday() system call.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena "msec sec", donde sec es la hora actual en número de segundos desde el valor Unix Epoch (0:00:00 del 1 de enero de 1970, hora GMT), y msec es la parte de microsegundos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. microtime() example</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función sólo está disponible en sistemas operativos con admiten la llamada al sistema gettimeofday().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also time().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también time().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Microsoft SQL Server functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Microsoft SQL Server</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the second variant, min() returns the lowest value in numbers.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el primer parámetro es un array, min() devuelve el menor valor en ese array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If none of the values is a float, all of them will be treated as integer s, and an integer is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el primer parámetro es un entero, string o double, necesita al menos dos parámetros y min() devuelve el número menor de estos valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon failure, min() returns NULL and an error of level E_WARNING is generated.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede comparar un número ilimitado de valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also max().</seg></tuv>
      <tuv xml:lang="es"><seg>Si ninguno de los valores es un double, todos ellos serán tratados como enteros, y se devolverá un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that you probably want to specify the mode as an octal number, which means it should have a leading zero.</seg></tuv>
      <tuv xml:lang="es"><seg>Trata de crear el directorio especificado por pathname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Ten en cuenta que debes especifiar el modo como un número octal, lo que significa que debes anteponerle un 0 al número.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mkdir ("/ path / to / my / dir", 0700);</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito y FALSE en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rmdir().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también rmdir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning:</seg></tuv>
      <tuv xml:lang="es"><seg>Advertencia:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is a common error to mix these values up in a script.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase el extraño orden de los argumentos, que se diferencia del orden de argumentos en una llamada mktime() de UNIX y que no permite eliminar parámetros de derecha a izquierda (ver abajo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Unix timestamp corresponding to the arguments given.</seg></tuv>
      <tuv xml:lang="es"><seg>Es un error común mezclar estos valores en un script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This timestamp is a long integer containing the number of seconds between the Unix Epoch (January 1 1970) and the time specified.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor timestamp Unix correspondiente a los argumentos dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments may be left out in order from right to left; any arguments thus omitted will be set to the current value according to the local date and time.</seg></tuv>
      <tuv xml:lang="es"><seg>El timestamp es un entero de tipo long que contiene el número de segundos entre el valor Unix Epoch (1 de enero de 1970) y la hora especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is_dst can be set to 1 if the time is during daylight savings time, 0 if it is not, or -1 (the default) if it is unknown whether the time is within daylight savings time or not.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden eliminar argumentos en orden de derecha a izquierda; en los argumentos omitidos se toma el valor de la fecha y hora locales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can cause unexpected (but not incorrect) results.</seg></tuv>
      <tuv xml:lang="es"><seg>is_dst puede ponerse a 1 si la hora corresponde a horario de verano, 0 si no, o -1 (valor por omisión) si no se sabe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mktime() is useful for doing date arithmetic and validation, as it will automatically calculate the correct value for out-of-range input.</seg></tuv>
      <tuv xml:lang="es"><seg>mktime() es útil para realizar cálculos y validaciones con fechas, ya que calcula automáticamente el valor correcto para una entrada fuera de rango.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, each of the following lines produces the string "Jan-01-1998".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, cada una de las líneas siguientes produce la cadena "Jan-01-1998".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mktime() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo date ("M-d-Y", mktime (0,0,0,12,32,1997)); echo date ("M-d-Y", mktime (0,0,0,13,1,1997)); echo date ("M-d-Y", mktime (0,0,0,1,1,1998)); echo date ("M-d-Y", mktime (0,0,0,1,1,98));</seg></tuv>
      <tuv xml:lang="es"><seg>echo date( "M-d-Y", mktime(0,0,0,12,32,1997)); echo date ("M-d-Y", mktime(0,0,0,13,1,1997)); echo date ("M-d-Y", mktime(0,0,0,1,1,1998));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last day of any given month can be expressed as the "0" day of the next month, not the -1 day.</seg></tuv>
      <tuv xml:lang="es"><seg>El último día de cada mes se puede expresar como el día "0" del mes siguiente, no el día -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both of the following examples will produce the string "The last day in Feb 2000 is:</seg></tuv>
      <tuv xml:lang="es"><seg>Los dos ejemplos siguientes producen la cadena "The last day in Feb 2000 is:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Last day of next month</seg></tuv>
      <tuv xml:lang="es"><seg>El último día del próximo mes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date with year, month and day equal to zero is considered illegal (otherwise it what be regarded as 30.11.1999, which would be strange behavior).</seg></tuv>
      <tuv xml:lang="es"><seg>$lastday=mktime( 0,0,0,3,0,2000); echo strftime("Last day in Feb 2000 is: %d",$lastday); $lastday=mktime(0,0,0,4,-31,2000); echo strftime("Last day in Feb 2000 is: %d",$lastday);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date() and time().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también date() y time().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. money_format() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. money_format() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando safe-mode (modo-seguro) está activado, PHP comprueba si el fichero(s) / directorios que vas a utilizar, tienen la misma UID que el script que está siendo ejecutado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns number of affected ("touched") rows by a specific query (i.e. the number of rows returned by a SELECT, the number of rows modified by an update, or the number of rows removed by a delete).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de filas involucradas ("tocadas") por una consulta específica (i.e. el número de filas devueltas por una SELECT, el número de filas modificadas por una actualización (update), o el número de filas suprimidas por una eliminación (delete)).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_query().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mSQL functions</seg></tuv>
      <tuv xml:lang="es"><seg>funciones mSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si tiene éxito, FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_close() closes the link to a mSQL database that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_close() cierra la conexión con una base de datos mSQL que está asociada con el identificador de conexión (link identifier) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el identificador de conexión, se asume la última conexión abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this isn' t usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Advierta que ésto no es necesario habitualmente, las conexiones abiertas no-persistentes son cerradas automáticamente a la conclusión de la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_close() will not close persistent links generated by msql_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>msql_close() no cerrará las conexiones permanentes creadas por msql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_connect() and msql_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_connect() y msql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive mSQL link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador de conexión mSQL positivo si tiene éxito, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_connect() establishes a connection to a mSQL server.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_connect() establece una conexión con un servidor mSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It defaults to 'localhost'.</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento hostname es opcional, y en caso de que falte, se asume localhost.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case a second call is made to msql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de que se haga una segunda llamada a msql_connect() con los mismos argumentos, no se establece una nueva conexión, en lugar de eso, se devuelve el identificador de conexión ya abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it' s closed earlier by explicitly calling msql_close().</seg></tuv>
      <tuv xml:lang="es"><seg>La conexión con el servidor se cerrará tan pronto como la ejecución del script finalice, a menos que sea cerrada antes explícitamente por una llamada a msql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also msql_pconnect(), msql_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_pconnect(), msql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_create_db() attempts to create a new database on the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_create_db() intenta crear una base de datos nueva en el servidor asociado con el identificador de conexión (link identifier) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_drop_db().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_drop_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to msql_create_db().</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a msql_create_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si tiene éxito, FALSE en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_data_seek() moves the internal row pointer of the mSQL result associated with the specified query identifier to point to the specifyed row number.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_data_seek() desplaza el puntero interno de fila del resultado mSQL asociado con el identificador de consulta (query identifier) especificado para que apunte al número de fila (row number) proporcionado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next call to msql_fetch_row() would return that row.</seg></tuv>
      <tuv xml:lang="es"><seg>La llamada posterior a msql_fetch_row() devolverá esa fila.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_dbname() returns the database name stored in position i of the result pointer returned from the msql_listdbs() function.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_dbname() devuelve el nombre de base de datos almacenado en la posición i del puntero devuelto desde la función msql_listdbs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The msql_numrows() function can be used to determine how many database names are available.</seg></tuv>
      <tuv xml:lang="es"><seg>La función msql_numrows() puede utilizarse para determinar cuantos nombres de base de datos hay disponibles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_drop_db() intenta eliminar (suprimir) una base de datos completa del servidor asociado con el identificador de conexión (link identifier) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_create_db().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_create_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_drop_db().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase msql_drop_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Errors coming back from the mSQL database backend no longer issue warnings.</seg></tuv>
      <tuv xml:lang="es"><seg>Los errores que devuelve el servidor de base de datos mSQL no dan mucha información sobre el problema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use these functions to retrieve the error string.</seg></tuv>
      <tuv xml:lang="es"><seg>Por este motivo, utilice estas funciones para recuperar la cadena de carácteres del error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array que se corresponde con la fila recuperada, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fetch_array() is an extended version of msql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fetch_array() es una versión ampliada de msql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de almacenar los datos en los índices numéricos del array resultado, también almacena los datos en índices asociativos, utilizando los nombres de los campos como claves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second optional argument result_type in msql_fetch_array() is a constant and can take the following values:</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo argumento opcional result_type en msql_fetch_array() es una constante y puede tomar los valores siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MSQL_ASSOC, MSQL_NUM, and MSQL_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>MSQL_ASSOC, MSQL_NUM, y MYSQL_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be careful if you are retrieving results from a query that may return a record that contains only one field that has a value of 0 (or an empty string, or NULL).</seg></tuv>
      <tuv xml:lang="es"><seg>Sea precavido si está recuperando resultados de una consulta que puede devolver un registro que contiene un único campo que tiene un valor de 0 (o una cadena de carácteres vacía, o NULL).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important thing to note is that using msql_fetch_array() is NOT significantly slower than using msql_fetch_row(), while it provides a significant added value.</seg></tuv>
      <tuv xml:lang="es"><seg>Un aspecto importante a tener en cuenta es que el uso de msql_fetch_array() NO es significativamente más lento que el uso de msql_fetch_row(), mientras que proporciona un valor añadido significativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details, also see msql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Para detalles adicionales, véase también msql_fetch_row()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un objeto que contiene la información del campo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fetch_field() can be used in order to obtain information about fields in a certain query result.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fetch_field() puede utilizarse para obtener información sobre campos del resultado de una consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the field offset isn' t specified, the next field that wasn't yet retreived by msql_fetch_field() is retreived.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el desplazamiento del campo, se recupera el campo siguiente que no haya sido aún recuperado por msql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The properties of the object are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las propiedades del objeto son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>name - column name</seg></tuv>
      <tuv xml:lang="es"><seg>name - nombre de la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>table - name of the table the column belongs to</seg></tuv>
      <tuv xml:lang="es"><seg>table - nombre de la tabla a la que pertenece la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>not_null - 1 if the column cannot be NULL</seg></tuv>
      <tuv xml:lang="es"><seg>not_null - 1 si la columna no puede ser nula</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>primary_key - 1 if the column is a primary key</seg></tuv>
      <tuv xml:lang="es"><seg>primary_key - 1 si la columna es una clave primaria</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unique - 1 if the column is a unique key</seg></tuv>
      <tuv xml:lang="es"><seg>unique - 1 si la columna es una clave única</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type - the type of the column</seg></tuv>
      <tuv xml:lang="es"><seg>type - tipo de la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also msql_field_seek().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también msql_field_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un objeto con las propiedades que corresponden a la fila recuperada, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fetch_object() is similar to msql_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fetch_object() es similar a msql_fetch_array(), con una diferencia - se devuelve un objeto en vez de un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="es"><seg>Indirectamente esto significa que sólo tiene acceso a los datos por los nombres de los campos, y no por sus desplazamientos (los números son nombres de propiedad no válidos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional second argument result_type in msql_fetch_array() is a constant and can take the following values:</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro opcional result_type en msql_fetch_array() es una constante y puede tomar los valores siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MSQL_ASSOC, MSQL_NUM, and MSQL_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>MSQL_ASSOC, MSQL_NUM, y MSQL_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to msql_fetch_array(), and almost as quick as msql_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="es"><seg>Resumiendo, la función es indéntica a msql_fetch_array(), y casi tan rápida como msql_fetch_row() (la diferencia es insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_fetch_array() and msql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_fetch_array() y msql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fetch_row() fetches one row of data from the result associated with the specified query identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fetch_row() recupera una fila de datos del resultado asociado con el identificador de consulta (query identifier) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row is returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>La fila se devuelve en un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada columna devuelta se almacena en un desplazamiento del array, comenzando en el desplazamiento 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent call to msql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Una llamada posterior a msql_fetch_row() devería devolver la fila siguiente del conjunto resultado, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_fetch_array(), msql_fetch_object(), msql_data_seek(), and msql_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_fetch_array(), msql_fetch_object(), msql_data_seek(), y msql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fieldflags() returns the field flags of the specified field.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fieldflags() obtiene los flags del campo (field) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently this is either, "not NULL", "primary key", a combination of the two or "" (an empty string).</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente pueden ser, "not NULL", "primary key", una combinación de ambos, o "" (cadena vacía).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fieldlen() returns the length of the specified field.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fieldlen() devuelve la longitud del campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fieldname() returns the name of the specified field. query_identifier is the query identifier, and field is the field index. msql_fieldname($result, 2); will return the name of the second field in the result associated with the result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fieldname() devuelve el nombre del campo especificado. query_identifier es el identificador de consulta, y field es el índice del campo. msql_fieldname($result, 2); devolverá el nombre del segundo campo del resultado asociado con el identificador result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeks to the specified field offset.</seg></tuv>
      <tuv xml:lang="es"><seg>Se posiciona en el desplazamiento de campo (field offset) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the next call to msql_fetch_field() won't include a field offset, this field would be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la siguiente llamada a msql_fetch_field() no incluye un desplazamiento de campo, este campo será el que se devuelva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_fetch_field().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the name of the table field was fetched from.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre de la tabla desde la que se ha recuperado el campo (field)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_fieldtype() is similar to the msql_fieldname() function.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_fieldtype() es similar a la función msql_fieldname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arguments are identical, but the field type is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos son idénticos, pero se devuelve el tipo del campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will be one of "int", "char" or "real ".</seg></tuv>
      <tuv xml:lang="es"><seg>Este será "int", "char" o "real ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_free_result() frees the memory associated with query_identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_free_result() libera la memoria asociada con query_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When PHP completes a request, this memory is freed automatically, so you only need to call this function when you want to make sure you don 't use too much memory while the script is running.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando PHP completa una petición, esta memoria es liberada automáticamente, por este motivo solo es necesario llamar a esta función cuando se desea estar seguro de que no se utiliza demasiada memoria mientras se está ejecutando el script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_free_result()</seg></tuv>
      <tuv xml:lang="es"><seg>Véase msql_free_result()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive mSQL query identifier to the query result, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador de consulta mSQL positivo en el resultado de la consulta, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql() selects a database and executes a query on it.</seg></tuv>
      <tuv xml:lang="es"><seg>msql() selecciona una base de datos y ejecuta una consulta en ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional link identifier isn' t specified, the function will try to find an open link to the mSQL server and if no such link is found it'll try to create one as if msql_connect() was called with no arguments (see msql_connect()).</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el identificador de conexión (link identifier), la función intentará encontrar una conexión abierta en el servidor mSQL y en el caso de que no se encontrase intentará crear uno como si se llamase a msql_connect() sin parámetros (véase msql_connect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_list_dbs() will return a result pointer containing the databases available from the current msql daemon.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_list_dbs() devolverá un puntero al resultado que contiene las bases de datos disponibles desde el daemon msql en uso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the msql_dbname() function to traverse this result pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>Utilice la función msql_dbname() para recorrer este puntero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_list_dbs().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase msql_list_dbs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_list_fields() retrieves information about the given tablename.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_list_fields() recupera información sobre el nombre de tabla (tablename) dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments are the database name and the table name.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos son el nombre de la base de datos (database name) y el nombre de la tabla (table name).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A result pointer is returned which can be used with msql_fieldflags(), msql_fieldlen(), msql_fieldname(), and msql_fieldtype().</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve un puntero al resultado que puede utilizarse con msql_fieldflags(), msql_fieldlen(), msql_fieldname(), y msql_fieldtype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A query identifier is a positive integer.</seg></tuv>
      <tuv xml:lang="es"><seg>Un indetificador de consulta (query identifier) es un entero positivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function returns -1 if a error occurs.</seg></tuv>
      <tuv xml:lang="es"><seg>La función devuelve -1 si ocurre un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A string describing the error will be placed in $phperrmsg, and unless the function was called as @msql_list_fields() then this error string will also be printed out.</seg></tuv>
      <tuv xml:lang="es"><seg>En $phperrmsg se almacena una cadena de carácteres describiendo el error, y a menos que la función sea llamada como @msql_list_fields() esta cadena de error puede ser impresa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also msql_error().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también msql_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_list_fields().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase msql_list_fields().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The msql_tablename() function should be used to extract the actual table names from the result pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_list_tables() toma un nombre de base de datos y devuelve un puntero similar al de la función msql() La función msql_tablename() debería utilizarse para obtener los nombres reales de las tablas del puntero devuelto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_list_tables().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase msql_list_tables().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_num_fields() returns the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_num_fields() devuelve el número de campos de un conjunto resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql(), msql_query(), msql_fetch_field(), and msql_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql(), msql_query(), msql_fetch_field(), y msql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to msql_num_fields().</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a msql_num_fields().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_num_rows() returns the number of rows in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_num_rows() devuelve el número de filas de un conjunto resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql(), msql_query(), and msql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql(), msql_query(), y msql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to msql_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Idéntica a msql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive mSQL persistent link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de éxito devuelve un identificador de conexión mSQL persistente positivo, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_pconnect() acts very much like msql_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_pconnect() se comporta de forma similar a msql_connect() con dos diferencias importantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that's already open with the same host.</seg></tuv>
      <tuv xml:lang="es"><seg>Primero, cuando se conecta, la función debe intentar primero localizar una conexión (persistente) que ya esté abierta en el mismo host.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one is found, an identifier for it will be returned instead of opening a new connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se encuentra uno, se devuelve un identificador para el mismo en vez de abrir una conexión nueva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Segundo, la conexión con el servidor SQL no se cerrará cuando la ejecución del script finalice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, the link will remain open for future use (msql_close() will not close links established by msql_pconnect()).</seg></tuv>
      <tuv xml:lang="es"><seg>Al contrario, la conexión permanecerá abierta para un uso futuro (msql_close() no cerrará las conexiones abiertas por msql_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of links is therefore called 'persistent'.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de conexiones son por ello denominadas 'persistentes'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_query() envía una consulta a la base de datos activa actual en el servidor que está asociada con el identificador de conexión (link identifier) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive mSQL query identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el identificador de conexión, se asume la última conexión abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = msql_connect( "dbserver") or die("unable to connect to msql server: ".msql_error()); msql_select_db("db", $link) or die("unable to select database'db': ".msql_error()); $result = msql_query("SELECT * FROM table WHERE id=1", $link); if (!$result) {die("query failed: ".msql_error());} while ($row = msql_fetch_array($result)) {echo $row["id"];}?</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de éxito devuelve un identificador de consulta mSQL positivo, o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql(), msql_select_db(), and msql_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql(), msql_select_db(), y msql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See sql_regcase().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase sql_regcase().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the contents of the cell at the row and offset in the specified mSQL result set.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el contenido de la celda en la fila y desplazamiento del conjunto resultado mSQL especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_result() returns the contents of one cell from a mSQL result set.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_result() devuelve el contenido de una celda de un conjunto resultado mSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field argument can be the field' s offset, or the field's name, or the field's table dot field's name (fieldname.tablename).</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento campo (field) puede ser el desplazamiento del campo, el nombre del campo, o el nombre de la tabla punto nombre del campo (nombretabla.nombrecampo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the column name has been aliased ('select foo as bar from.. .'), use the alias instead of the column name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el nombre de la columna tiene un alias ('select foo as bar from.. .'), utilice el alias en vez del nombre de la columna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below).</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se trabaja con conjuntos de resultados grandes, debería considerar el uso de las funciones que recuperen filas completas (especificadas más abajo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As these functions return the contents of multiple cells in one function call, they' re MUCH quicker than msql_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Como estas funciones recuperan el contenido de varias celdas en una única llamada de función, son MUCHO más rápidas que msql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Advierta también que especificar un desplazamiento numérico para el argumento campo (field) es mucho más rápido que especificar un argumento nombrecampo o nombretabla.nombrecampo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recommended high-performance alternatives: msql_fetch_row(), msql_fetch_array(), and msql_fetch_object().</seg></tuv>
      <tuv xml:lang="es"><seg>Alternativas de alto-rendimiento recomendadas: msql_fetch_row(), msql_fetch_array(), y msql_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si tiene éxito, FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_select_db() sets the current active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_select_db() establece la base de datos activa actual en el servidor que está asociada con el identificador de conexión (link identifier) suministrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link identifier is specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el identificador de conexión, se asumne la última conexión abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function will try to establish a link as if msql_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay ninguna conexión abierta la función intentará establecer una conexión como si se hubiera llamado a sql_connect(), y la utiliza.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to msql_query() will be made on the active database.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada llamada posterior a msql_query() se hará en la base de datos activa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: msql_connect(), msql_pconnect(), and msql_query().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: msql_connect(), msql_pconnect(), y msql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_select_db().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase msql_select_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_tablename() takes a result pointer returned by the msql_list_tables() function as well as an integer index and returns the name of a table.</seg></tuv>
      <tuv xml:lang="es"><seg>msql_tablename() toma un puntero resultado devuelto por la función msql_list_tables() como un índice entero y devuelve el nombre de una tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The msql_numrows() function may be used to determine the number of tables in the result pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>La función msql_numrows() puede utilizarse para determinar el número de tablas del puntero resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. msql_tablename() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. msql_tablename() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php msql_connect ("localhost"); $result = msql_list_tables ("wisconsin"); $i = 0; while ($i msql_numrows ($result)) {$tb_names[$i] = msql_tablename ($result, $i); echo $tb_names[$i]. "BR"; $i++;}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php msql_connect ("localhost"); $result = msql_list_tables("wisconsin"); $i = 0; while ($i msql_numrows($result)) {$tb_names[$i] = msql_tablename($result, $i); echo $tb_names[$i]. "BR"; $i++;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si se finaliza con éxito, FALSE si se produce un error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_close() closes the link to a MS SQL Server database that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_close() cierra la conexión con una base de datos MS SQL Server que está asociada al identificador especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el identificador no se especifica, se asume la última conexión abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this isn' t usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Observe que normalmente esto no es necesario, ya que las conexiones no-persistentes abiertas se cierran automaticamente en cuanto finaliza el script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_close() will not close persistent links generated by mssql_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_close() no cerrará conexiones persistentes generadas por mssql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_connect(), mssql_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_connect(), mssql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive MS SQL link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de MSSQL si se ejecuta correctamente, o FALSE si se produce un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_connect() establishes a connection to a MS SQL server.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_connect() establece una conexión con MS SQL server.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The servername argument has to be a valid servername that is defined in the 'interfaces' file.</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento servername debe ser un nombre de servidor válido, que está definido en el fichero 'interfaces'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case a second call is made to mssql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de hacer una segunda llamada a mssql_connect() con los mismos argumentos, no se establecerá una nueva conexión, sino que se devolverá el identificador de la conexión establecida anteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it' s closed earlier by explicitly calling mssql_close().</seg></tuv>
      <tuv xml:lang="es"><seg>La conexión con el servidor se cerrará tan pronto como finalice el script, a menos que se cierre antes, mediante una llamada explicita a la función mssql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_pconnect(), mssql_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también mssql_pconnect(), mssql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si se ejecuta con éxito, FALSE si falla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_data_seek() moves the internal row pointer of the MS SQL result associated with the specified result identifier to point to the specified row number.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_data_seek() mueve el puntero interno de la consulta MS SQL asociada al result_identifier especificado, para que apunte al número de fila especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next call to mssql_fetch_row() would return that row.</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente llamada a mssql_fetch_row() devolverá esa fila.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_data_seek().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_data_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: if the stored procedure returns parameters or a return value these will be available after the call to mssql_execute() Note: if the stored procedure returns parameters or a return value these will be available after the call to mssql_execute() unless the stored procedure returns more than one result set.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota: if the stored procedure returns parameters or a return value these will be available after the call to mssql_execute() Nota: if the stored procedure returns parameters or a return value these will be available after the call to mssql_execute() unless the stored procedure returns more than one result set.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Un array que corresponde a la fila capturada, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_array() is an extended version of mssql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_fetch_array() es una versión extendida de mssql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.</seg></tuv>
      <tuv xml:lang="es"><seg>A¤ade el almacenar los datos en los índices numéricos del array resultante, también almacena los datos en índices asociativos, usando los nombres de los campos como claves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important thing to note is that using mssql_fetch_array() is NOT significantly slower than using mssql_fetch_row(), while it provides a significant added value.</seg></tuv>
      <tuv xml:lang="es"><seg>Una observación a tener en cuenta es, que usar mssql_fetch_array() NO es más lento que usar mssql_fetch_row(), mientras que esta provee un valor a¤adido significativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details, also see mssql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Para más detalles, ver también mssql_fetch_row()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve un objeto que contiene información de los campos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_field() can be used in order to obtain information about fields in a certain query result.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_fetch_field() se puede usar para obtener información acerca de los campos pertenecientes al resultado de una consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the field offset isn' t specified, the next field that wasn't yet retrieved by mssql_fetch_field() is retrieved.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el parámetro field_offset no es especificado, se devuelve la información del siguiente campo que todavía no ha sido devuelto por mssql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The properties of the object are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las propiedades de este objeto son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>name - column name. if the column is a result of a function, this property is set to computed#N, where #N is a serial number.</seg></tuv>
      <tuv xml:lang="es"><seg>name - nombre de la columna. si la columna es el resultado de una función, esta propiedad vale #N, donde #N es un número de serie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>column_source - the table from which the column was taken</seg></tuv>
      <tuv xml:lang="es"><seg>column_source - la tabla de donde se tomó la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max_length - maximum length of the column</seg></tuv>
      <tuv xml:lang="es"><seg>max_length - longitud máxima de columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>numeric - 1 if the column is numeric</seg></tuv>
      <tuv xml:lang="es"><seg>numeric - 1 si la columna es numérica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_field_seek().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también mssql_field_seek()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An object with properties that correspond to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Un objeto con propiedades que se corresponden con la fila capturada, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_object() is similar to mssql_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_fetch_object() es parecida a mssql_fetch_array(), con una diferencia - devuelve un objeto en vez de un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="es"><seg>Indirectamente, esto significa que sólo se puede acceder a los datos por el nombre de los campos, y no por sus posiciones en el objeto (los números no son nombres de propiedades válidas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to mssql_fetch_array(), and almost as quick as mssql_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="es"><seg>La función es idéntica a mssql_fetch_array(), y casi tan rápida como mssql_fetch_row() (la diferencia es insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_fetch-array() and mssql_fetch-row().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_fetch-array() and mssql_fetch-row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_row() fetches one row of data from the result associated with the specified result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_fetch_row() captura una fila de datos pertenecientes al resultado asociado con el identificador de resultado especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row is returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>La fila es devuelta como un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada columna de resultados es almacenada en una posición del array, comenzando en la posición 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent call to mssql_fetch_rows() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguientes llamadas a mssql_fetch_rows() devolverían las filas siguientes del result set, o FALSE si no hay mas filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_fetch_array(), mssql_fetch_object(), mssql_data_seek(), mssql_fetch_lengths(), and mssql_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_fetch_array(), mssql_fetch_object(), mssql_data_seek(), mssql_fetch_lengths(), and mssql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description int mssql_field_name (int result [, int offset])</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_field_length</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeks to the specified field offset.</seg></tuv>
      <tuv xml:lang="es"><seg>Se posiciona en el campo especificado por el parámetro field_offset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the next call to mssql_fetch_field() won't include a field offset, this field would be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la siguiente llamada a mssql_fetch_field() no incluye el parámetro field_offset, lo que devuelve la función es el campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_fetch_field().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description string mssql_field_type (int result [, int offset])</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_field_seek</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_free_result() only needs to be called if you are worried about using too much memory while your script is running.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_free_result() sólo se necesita llamarla si le preocupa el estar usando mucha memoria mientras se está ejecutando el script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may call mssql_free_result() with the result identifier as an argument and the associated result memory will be freed.</seg></tuv>
      <tuv xml:lang="es"><seg>Toda el resultado en memoria será liberado automaticamente cuando finalice el script, puede llamar a mssql_free_result() con el identificador de la consulta como argumento y la consulta asociada será liberada de la memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description string mssql_get_last_message (void)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_free_statement</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description void mssql_min_error_severity (int severity)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_init</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_min_message_severity</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description void mssql_min_message_severity (int severity)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_min_error_severity</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mssql_next_result() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mssql_next_result() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_num_fields() returns the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_num_fields() devuelve el número de campos de la consulta o result set.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_db_query(), mssql_query(), mssql_fetch_field(), and mssql_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_db_query(), mssql_query(), mssql_fetch_field(), mssql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_num_rows() returns the number of rows in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_num_rows() devuelve el número de filas de la consulta o result set.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_db_query(), mssql_query(), and mssql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_db_query(), mssql_query() and, mssql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive MS SQL persistent link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador persistente postivo si no hay error, o FALSE si se produce alguno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_pconnect() acts very much like mssql_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_pconnect() funciona de la misma forma que mssql_connect() aunque con dos grandes diferencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera es que cuando intenta conectar, la función intentará encontrar un enlace (persistente) que ya esté abierto en el mismo ordenador, nombre de usuario y contrase¤a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one is found, an identifier for it will be returned instead of opening a new connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Si lo encuentra, la funcion devolverá el identificador de esta en vez de abrir una nueva conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Y la segunda, la conexión con el servidor no se cerrará cuando finalice la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, the link will remain open for future use (mssql_close() will not close links established by mssql_pconnect()).</seg></tuv>
      <tuv xml:lang="es"><seg>En vez de esto, el enlace permanecerá abierto para un uso futuro. (mssql_close() no cerrará enlaces establecidos por mssql_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of links is therefore called 'persistent'.</seg></tuv>
      <tuv xml:lang="es"><seg>Por consiguiente, este tipo de enlace es llamado 'persistente'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive MS SQL result identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificado de resultado valido si no hay error, o FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_query() sends a query to the currently active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_query() envia una petición de consulta a la base de datos activa en el servidor asociada al identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el identificador del enlace no es especificado, se asume como abierto el último enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function tries to establish a link as if mssql_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay ningún enlace abierto, la función intenta establecer un enlace como si mssql_connect() hubiera sido llamada, y lo usa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_db_query(), mssql_select_db(), and mssql_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_db_query(), mssql_select_db(), and mssql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_result() returns the contents of one cell from a MS SQL result set.</seg></tuv>
      <tuv xml:lang="es"><seg>El contenido de la celda en la fila y posición del result set especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field argument can be the field' s offset, the field's name or the field's table dot field's name (tablename.fieldname).</seg></tuv>
      <tuv xml:lang="es"><seg>El parametro field puede ser la posición del campo, o el nombre del campo o bién nombretabla.nombrecampo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the column name has been aliased ('select foo as bar from.. .'), it uses the alias instead of the column name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el nombre de la columna ha sido renombrado ('select foo as bar from.. .'), use el alias en vez del nombre de la columna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below).</seg></tuv>
      <tuv xml:lang="es"><seg>Trabajando con result sets de gran tama¤o, debería considerar el uso de una de las funciones que capturan una fila completa (especificadas abajo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As these functions return the contents of multiple cells in one function call, they' re MUCH quicker than mssql_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Como estas funciones devuelven el contenido de múltiples celdas en una sóla llamada, estas son MUCHO más rápidas que mssql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.</seg></tuv>
      <tuv xml:lang="es"><seg>También, observe que especificar una posición númerica para el argumento field es mucho mas rápido que especificar el nombre de un campo o utilizar la forma nombretabla.nombrecampo como argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recommended high-performance alternatives: mssql_fetch_row(), mssql_fetch_array(), and mssql_fetch_object().</seg></tuv>
      <tuv xml:lang="es"><seg>Alternativas recomendadas para mayor rendimiento: mssql_fetch_row(), mssql_fetch_array(), y mssql_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si todo va bién, FALSE si se produce un error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_select_db() sets the current active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mssql_select_db() selecciona como base de datos activa del servidor, la que está asociada al identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link identifier is specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica nigún identificador, se asume el último enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function will try to establish a link as if mssql_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay ningún enlace abierto, la función intentará establecer un enlace como si se llamara a la función mssql_connect(), y lo usa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to mssql_query() will be made on the active database.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada llamada a mssql_query() será realizada sobre la base de datos activa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_connect(), mssql_pconnect(), and mssql_query()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mssql_connect(), mssql_pconnect(), y mssql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the maximum value that can be returned by a call to mt_rand().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor máximo que se puede obtener con una llamada a mt_rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mt_rand(), mt_srand() and getrandmax().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también mt_rand(), mt_srand() rand(), srand() y getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many random number generators of older libcs have dubious or unknown characteristics and are slow.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchos generadores de números aleatorios de libcs antiguas tienen características dudosas o desconocidas y son lentas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, PHP uses the libc random number generator with the rand() By default, PHP uses the libc random number generator with the rand() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, PHP usa el generador de números aleatorios de libc con la función rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mt_rand() function is a drop-in replacement for this.</seg></tuv>
      <tuv xml:lang="es"><seg>La función mt_rand() es un reemplazo para esta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses a random number generator with known characteristics using the Mersenne Twister, which will produce random numbers that should be suitable for seeding some kinds of cryptography (see the home page for details) and is four times faster than what the average libc provides.</seg></tuv>
      <tuv xml:lang="es"><seg>Usa un generador de números aleatorios con características conocidas, el Tornado de Mersenne, que es capaz de producir números aleatorios que incluso se pueden emplear para propósitos criptográficos y es cuatro veces más rápido que la media de los que provee libc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want a random number between 5 and 15 (inclusive), for example, use mt_rand (5, 15).</seg></tuv>
      <tuv xml:lang="es"><seg>La página principal del Tornado de Mersenne puede encontrarse en http: / /www.math.keio.ac.jp / ~matumoto / emt.html, y una versión optimizada del código del TM esta disponible en http: / /www.scp.syr.edu / ~marc / hawk / twister.html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since 4.2.0 this is no longer necessary.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es llamada sin los parámetros opcionales min y max mt_rand() devuelve un valor pseudo-aleatorio entre 0 y RAND_MAX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions before 3.0.7 the meaning of max was range.</seg></tuv>
      <tuv xml:lang="es"><seg>Si quiere un número aleatorio entre 5 y 15 (inclusive), use mt_rand(5,15).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get the same results in these versions the short example should be mt_rand (5, 11) to get a random number between 5 and 15.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde introducir la semilla del generador de números aleatorios antes de usar la instrucción con mt_srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mt_srand(), mt_getrandmax() and rand().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también mt_srand(), mt_getrandmax(), srand(), rand() y getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeds the random number generator with seed.</seg></tuv>
      <tuv xml:lang="es"><seg>Introduce la semilla seed en el generador de números aleatorios mejorado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>/ / seed son los microsegundos desde el último segundo "entero" mt_srand((double)microtime()*1000000); $randval = mt_rand();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mt_rand(), mt_getrandmax() and srand().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también mt_rand(), mt_getrandmax(), srand(), rand() y getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>octdec</seg></tuv>
      <tuv xml:lang="es"><seg>OctDec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Network Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Red</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the last query was a DELETE query with no WHERE clause, all of the records will have been deleted from the table but this function will return zero.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_affected_rows() devuelve el número de filas afectadas en la ultima sentencia INSERT, UPDATE o DELETE sobre el servidor asociado con el identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using UPDATE, MySQL will not update columns where the new value is the same as the old value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el identificador de enlace no ha sido especificado, se asume por defecto el último enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_affected_rows() does not work with SELECT statements; only on statements which modify records.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la última sentencia fue un DELETE sin clausula WHERE, todos los registros han sido borrados de la tabla pero esta función devolvera cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the last query failed, this function will return -1.</seg></tuv>
      <tuv xml:lang="es"><seg>Este comando no es efectivo para las sentencias SELECT, sino sólo para las sentencias que modifican registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Records deleted:</seg></tuv>
      <tuv xml:lang="es"><seg>Para conseguir el número de lineas devueltos por un SELECT, usar mysql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_change_user() changes the logged in user of the current active connection, or the connection given by the optional link_identifier parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_change_user() cambia el usuario conectado en la actual conexión activa, o si se especifica, en la conexión determinada por el identificador de enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a database is specified, this will be the current database after the user has been changed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica la base de datos, esta será la base por defecto después del cambio de usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la nueva combinación de usuario / password no esta autorizada, el usuario actualmente conectado permanece activo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not available in PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue introducida en PHP 3.0.13 y requiere MySQL 3.23.3 o superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_client_encoding() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_client_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve: verdadero si exito, falso si error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_close() closes the connection to the MySQL server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_close() cierra el enlace con la base MySQL que esta asociada con el identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier isn 't specified, the last opened link is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el identificador de enlace, se asume por defecto el último enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using mysql_close() isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente no es necesario ya que la aperturas no-persistentes son cerradas automaticamente al final de la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also freeing resources.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_close() no cerrará los enlaces persistentes generados con mysql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL close example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de MySQL close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); print ("Connected successfully"); mysql_close($link);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $link = mysql_connect ("kraemer", "marliesle", "secret") {or die ("Could not connect");} print ("Connected successfully"); mysql_close ($link);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_connect(), and mysql_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_connect(), y mysql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a MySQL link identifier on success, or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de enlace positivo si tiene exito, o falso si error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_connect() establishes a connection to a MySQL server.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_connect() establece una conexión a un servidor MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following defaults are assumed for missing optional parameters: server = 'localhost:3306', username = name of the user that owns the server process and password = empty password.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los argumentos son opcionales, y si no hay, se asumen los valores por defecto ('localhost', usuario propietario del proceso del servidor, password vacia).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>El hostname puede incluir tambien un número de puerto. ej. "hostname:puerto" o un camino al socket ej. ": / camino / al / socket" para localhost.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for ":port" was added in PHP 3.0B4.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for ": / path / to / socket" was added in PHP 3.0.10.</seg></tuv>
      <tuv xml:lang="es"><seg>Soporte para ":puerto" fue añadido en PHP 3.0B4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can suppress the error message on failure by prepending a @ to the function name.</seg></tuv>
      <tuv xml:lang="es"><seg>Soporte para ": / camino / al / socket" fue añadido en PHP 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The new_link parameter modifies this behavior and makes mysql_connect() always open a new link, even if mysql_connect() was called before with the same parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>En el caso de que se haga una llamada a mysql_connect() con los mismos argumentos, no se establecerá un nuevo enlace, sino que se devolverá el enlace ya abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>El enlace al servidor sera cerrado tan pronto como la ejecución del script finalice, a menos que se cierre antes explicitamente llamando a mysql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The client_flags parameter became available in PHP 4.3.0</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de MySQL connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_pconnect() and mysql_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_pconnect(), y mysql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_create_db() intenta crear una base nueva en el servidor asociado al identificador de enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL create database example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de MySQL create</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downwards compatibility mysql_createdb() can also be used.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $link = mysql_pconnect ("kron", "jutta", "geheim") {or die ("Could not connect");} if (mysql_create_db ("my_db")) {print ("Database created successfully\n");} else {printf ("Error creating database: %s\n", mysql_error ());}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_create_db() is deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse mysql_createdb() igualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_drop_db(), mysql_query().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_drop_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next call to mysql_fetch_row() would return that row.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_data_seek() mueve el puntero de fila interno a la fila especificada para el identificador de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row_number should be a value in the range from 0 to mysql_num_rows - 1.</seg></tuv>
      <tuv xml:lang="es"><seg>La próxima llamada a mysql_fetch_row() devolverá esa fila.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_data_seek() can be used in conjunction only with mysql_query(), not with mysql_unbuffered_query().</seg></tuv>
      <tuv xml:lang="es"><seg>numero_de_fila empieza en 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL data seek example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de MySQL data seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_query(), mysql_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>?php $link = mysql_pconnect ("kron", "jutta", "geheim") {or die ("Could not connect");} mysql_select_db ("samp_db") {or die ("Could not select database");} $query = "SELECT last_name, first_name FROM friends"; $result = mysql_query ($query) {or die ("Query failed");} # fetch rows in reverse order for ($i = mysql_num_rows ($result) - 1; $i =0; $i- -) {if (!mysql_data_seek ($result, $i)) {printf ("Cannot seek to row %d\n", $i); continue;} if( !($row = mysql_fetch_object ($result))) continue; printf ("%s %s BR \n", $row - last_name, $row - first_name);} mysql_free_result ($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_db_name() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_db_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive MySQL result resource to the query result, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_db_query() selects a database and executes a query on it.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de resultado positivo o falso si error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be aware that this function does NOT switch back to the database you were connected before.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_db_query() selecciona una base y ejecuta una sentencia en ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users are strongly encouraged to use the database.table syntax in their sql queries instead of this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el identificador de enlace no ha sido especificado, la función intenta encontrar un enlace abierto al servidor MySQL y si no lo encuentra, intetará crear uno como si fuera llamado mysql_connect() sin argumentos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function has been deprecated since PHP 4.0.6.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también mysql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use mysql_select_db() and mysql_query() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse mysql() igualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve: verdadero si éxito, falso si error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_drop_db() intenta suprimir una base de datos completa del servidor asociado al identificador de enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_drop_db() is deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_create_db().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_create_db(), mysql_query().</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse mysql_dropdb() igualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use mysql_errno() to retrieve the error code.</seg></tuv>
      <tuv xml:lang="es"><seg>Los errores devueltos por mySQL no indican los warnings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_errno Example</seg></tuv>
      <tuv xml:lang="es"><seg>Usar estas funciones para encontrar el número de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="es"><seg>?php mysql_connect( "marliesle"); echo mysql_errno() .": ".mysql_error(). "BR"; mysql_select_db("nonexistentdb"); echo mysql_errno() .": ".mysql_error(). "BR"; $conn = mysql_query("SELECT * FROM nonexistenttable"); echo mysql_errno() .": ".mysql_error(). "BR";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not, the last opened link is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_error()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use mysql_error() to retrieve the error text.</seg></tuv>
      <tuv xml:lang="es"><seg>Los errores devueltos por mySQL no indican los warnings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_error Example</seg></tuv>
      <tuv xml:lang="es"><seg>Usar estas funciones para encontrar el número de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not, the last opened link is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_errno()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_escape_string() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_escape_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_array() is an extended version of mysql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz que corresponde a la sentencia extraida, o falso si no quedan más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_fetch_array() es una versión extendida de mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To access the other column( s) of the same name, you must use the numeric index of the column or make an alias for the column.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de guardar los datos en el indice numerico de la matriz, guarda también los datos en los indices asociativos, usando el nombre de campo como clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si dos o más columnas del resultado tienen el mismo nombre de campo, la última columna toma la prioridad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>select table1.field as foo table2.field as bar from table1, table2</seg></tuv>
      <tuv xml:lang="es"><seg>Para acceder a la( s) otra(s) columna(s) con el mismo nombre, se debe escificar el indice numerico o definir un alias para la columna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important thing to note is that using mysql_fetch_array() is not significantly slower than using mysql_fetch_row(), while it provides a significant added value.</seg></tuv>
      <tuv xml:lang="es"><seg>select t1.f1 as foo t2.f1 as bar from t1, t2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MYSQL_ASSOC, MYSQL_NUM, and MYSQL_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>La función mysql_fetch_array() no es significativemente mas lenta que mysql_fetch_row(), sin embargo tiene un valor añadido importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By using MYSQL_BOTH, you 'll get an array with both associative and number indices.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo argumento opcional tipo_de_resultado en mysql_fetch_array() es una constante y puede tomar los valores siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mysql_fetch_array with MYSQL_NUM</seg></tuv>
      <tuv xml:lang="es"><seg>MYSQL_ASSOC, MYSQL_NUM, y MYSQL_BOTH. (Esta funcionalidad fue añadida en PHP 3.0.7)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. mysql_fetch_array with MYSQL_ASSOC</seg></tuv>
      <tuv xml:lang="es"><seg>Para más detalles, ver también mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. mysql_fetch_array with MYSQL_BOTH</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql fetch array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details, see also mysql_fetch_row() and mysql_fetch_assoc().</seg></tuv>
      <tuv xml:lang="es"><seg>?php mysql_connect( $host,$user,$password); $result = mysql_db_query("database" ,"select * from table"); while($row = mysql_fetch_array($result)) {echo $row["user_id"]; echo $row["fullname"];} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un objeto que contiene la información del campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_field() can be used in order to obtain information about fields in a certain query result.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usarse mysql_fetch_field() Puede usarse mysql_fetch_field() para obtener información sobre campos en un resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the field offset isn' t specified, the next field that wasn't yet retrieved by mysql_fetch_field() is retrieved.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el salto, se extrae el siguiente campo que todavia no ha sido extraido. con mysql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>table - name of the table the column belongs to</seg></tuv>
      <tuv xml:lang="es"><seg>table - name de la tabla a la que pertenece la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max_length - maximum length of the column</seg></tuv>
      <tuv xml:lang="es"><seg>max_length - longitud máxima de la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>not_null - 1 if the column cannot be NULL</seg></tuv>
      <tuv xml:lang="es"><seg>not_null - 1 si la columna no puede contener un valor nulo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>primary_key - 1 if the column is a primary key</seg></tuv>
      <tuv xml:lang="es"><seg>primary_key - 1 si la columna es clave primaria</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unique_key - 1 if the column is a unique key</seg></tuv>
      <tuv xml:lang="es"><seg>unique_key - 1 si la columna es clave unica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>multiple_key - 1 if the column is a non-unique key</seg></tuv>
      <tuv xml:lang="es"><seg>multiple_key - 1 si la columna es clave no unica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>numeric - 1 if the column is numeric</seg></tuv>
      <tuv xml:lang="es"><seg>numeric - 1 si la columna es numerica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blob - 1 if the column is a BLOB</seg></tuv>
      <tuv xml:lang="es"><seg>blob - 1 si la columna es un BLOB</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type - the type of the column</seg></tuv>
      <tuv xml:lang="es"><seg>type - el tipo de la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unsigned - 1 if the column is unsigned</seg></tuv>
      <tuv xml:lang="es"><seg>unsigned - 1 si la columna es unsigned</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_fetch_field()</seg></tuv>
      <tuv xml:lang="es"><seg>zerofill - 1 si la columna es zero-filled</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_field_seek().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también mysql_field_seek()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array that corresponds to the lengths of each field in the last row fetched by mysql_fetch_row(), or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Una matriz que contiene las longitudes de cada campo de la última fila extraida por mysql_fetch_row(), o falso si error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_lengths() stores the lengths of each result column in the last row returned by mysql_fetch_row(), mysql_fetch_array(), and mysql_fetch_object() in an array, starting at offset 0.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_fetch_lengths() almacena las longitudes de cada columna en la última fila devuelta por mysql_fetch_row(), mysql_fetch_array(), y mysql_fetch_object() en una matriz, empezando por 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un objeto con las propiedades aur corresponden a la última fila extraida, o falso si no quedan más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_object() is similar to mysql_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_fetch_object() es similar a mysql_fetch_array(), con la diferencia que un objeto es devuelto en lugar de una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="es"><seg>Indirectamente, quiere decir que solo se puede aceder a los datos por el nombre del campo, y no por su posición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * this is valid * / echo $row - field; / * this is invalid * / echo $row - 0;?</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento opcional tipo_de_resultado es una constante y puede tomar los valores siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to mysql_fetch_array(), and almost as quick as mysql_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="es"><seg>La función es identica a mysql_fetch_array(), y casi tan rápida como mysql_fetch_row() (la diferencia es insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_fetch_object() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql fetch object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( "hostname", "user", "password"); mysql_select_db($db); $result = mysql_query("select * from table"); while ($row = mysql_fetch_object($result)) {echo $row - user_id; echo $row - fullname;} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php mysql_connect( $host,$user,$password); $result = mysql_db_query("database" ,"select * from table"); while($row = mysql_fetch_object($result)) {echo $row - user_id; echo $row - fullname;} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_array() and mysql_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_fetch_array() y mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Una matriz que corresponde a la fila selecionada, o falso si no quedan más lineas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_row() fetches one row of data from the result associated with the specified result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_fetch_row() seleciona una fila de datos del resultado asociado al identificador de resultado especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row is returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>La fila es devuelta como una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada columna del resultdo es guardada en un offset de la matriz, empezando por el offset 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent call to mysql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>La llamada a mysql_fetch_row() debería devolver la próxima fila del resultado, o falso si no quedan más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_array(), mysql_fetch_object(), mysql_data_seek(), mysql_fetch_lengths(), and mysql_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_fetch_array(), mysql_fetch_object(), mysql_data_seek(), mysql_fetch_lengths(), and mysql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_flags() returns the field flags of the specified field.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_field_flags() devuelve los flags del campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The flags are reported as a single word per flag separated by a single space, so that you can split the returned value using explode().</seg></tuv>
      <tuv xml:lang="es"><seg>Cada flag es devuelto como una palabra y estan separados un unico espacio, se puede dividir el resultado devuelto utilizando explode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following flags are reported, if your version of MySQL is current enough to support them: "not_null", "primary_key", "unique_key", "multiple_key", "blob", "unsigned", "zerofill", "binary", "enum", "auto_increment", "timestamp".</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes flags pueden ser devueltos si tu versión de MySQL los soporta: "not_null", "primary_key", "unique_key", "multiple_key", "blob", "unsigned", "zerofill", "binary", "enum", "auto_increment", "timestamp".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_fieldflags().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_len() returns the length of the specified field.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_field_len() devuelve la longitud del campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_fieldlen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_name() returns the name of the specified field index. result must be a valid result identifier and field_index is the numerical offset of the field.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_field_name() devuelve el nombre del campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The index of the third field would actually be 2, the index of the fourth field would be 3 and so on.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos de la función son el identificador de resultado y el indice del campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* The users table consists of three fields: * user_id * username * password. * / $link = mysql_connect( 'localhost', "mysql_user", "mysql_password"); mysql_select_db($dbname, $link) or die("Could not set $dbname: ". mysql_error()); $res = mysql_query("select * from users", $link); echo mysql_field_name($res, 0). "\n"; echo mysql_field_name($res, 2);</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo: mysql_field_name( $result,2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>user_id password</seg></tuv>
      <tuv xml:lang="es"><seg>Devolverá el nombre del segundo campo asociado al identificador de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_fieldname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeks to the specified field offset.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca el offset del campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the next call to mysql_fetch_field() doesn't include a field offset, the field offset specified in mysql_field_seek() will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la próxima llamada a mysql_fetch_field() no incluye un offset de campo, se devolverá ese campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_field().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the name of the table that the specifed field is in.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre de la tabla del campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_fieldtable().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_type() is similar to the mysql_field_name() function.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_field_type() es similar a la función mysql_field_name().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arguments are identical, but the field type is returned instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos son identicos, pero se devuelve el tipo de campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field type will be one of "int", "real", "string", "blob", and others as detailed in the MySQL documentation.</seg></tuv>
      <tuv xml:lang="es"><seg>El tipo sera "int", "real", "string", "blob", o otros detallados en la documentación de MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL field types</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql field types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="es"><seg>?php mysql_connect( "localhost:3306"); mysql_select_db("wisconsin"); $result = mysql_query("SELECT * FROM onek"); $fields = mysql_num_fields($result); $rows = mysql_num_rows($result); $i = 0; $table = mysql_field_table($result, $i); echo "Your '".$table ." 'table has ".$fields. "fields and ".$rows." records BR "; echo "The table has the following fields BR"; while ($i $fields) {$type = mysql_field_type ($result, $i); $name = mysql_field_name ($result, $i); $len = mysql_field_len ($result, $i); $flags = mysql_field_flags ($result, $i); echo $type. "".$name." ".$len. "".$flags." BR "; $i++;} mysql_close();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_fieldtype() can also be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_fieldtype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_free_result() only needs to be called if you are concerned about how much memory is being used for queries that return large result sets.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_free_result() solo necesita ser llamada si te preocupa usar demasiado memoria durante la ejecución de tu script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Toda la memoria del resultado especificado en el parametro del identificador de resultado sera automaticamente liberada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_freeresult().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_client_info Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_get_client_info Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_host_info Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_get_host_info Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_proto_info Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_get_proto_info Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_server_info Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_get_server_info Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to save the value for later, be sure to call mysql_insert_id() immediately after the query that generates the value.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_insert_id() devuelve el identificador generado para un campo de tipo AUTO_INCREMENTED.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Se devolvera el identificador genrado por el último INSERT para el identificador_de_enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your AUTO_INCREMENT column has a column type of BIGINT, the value returned by mysql_insert_id() will be incorrect.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el identificador_de_enlace, se asume por defecto el último enlace abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_dbs() example</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_list_dbs() devuelve un puntero de resultado que contiene las bases disponibles en el actual demonio mysql.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="es"><seg>Utiliza la función mysql_tablename() para explotar el puntero de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_listdbs() can also be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_listdbs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_list_fields() retrieves information about the given table name.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_list_fields() lista información sobre la tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments are the database name and the table name.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos son la base de datos y el nombre de la tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A result pointer is returned which can be used with mysql_field_flags(), mysql_field_len(), mysql_field_name(), and mysql_field_type().</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve un puntero que puede ser usado por las funciónes mysql_field_flags(), mysql_field_len(), mysql_field_name(), y mysql_field_type().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_fields() example</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de resultado es un entero positivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="es"><seg>Una cadena de caracteres describiendo el error sera introducida en $phperrmsg, y a menos que la función sea llamada como @mysql() el literal del error tambien sera impreso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_listfields() can also be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_listfields().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_processes() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_list_processes() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The database parameter is the name of the database to retrieve the list of tables from.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_list_tables() toma el nombre de la base y devuelve un puntero de resultado como la función mysql_db_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility, the function alias named mysql_listtables() can be used.</seg></tuv>
      <tuv xml:lang="es"><seg>La función mysql_tablename() debe ser usada para extraer los nombres de las tablas del puntero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_tables Example</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_listtables(). can also be used.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_num_fields() returns the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_num_fields() devuelve el numero de campos de un identificador de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_select_db(), mysql_query(), mysql_fetch_field(), mysql_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_db_query(), mysql_query(), mysql_fetch_field(), mysql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_numfields().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_num_rows() example</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_num_rows() Devuelve el numero de filas de un identificador de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use mysql_unbuffered_query(), mysql_num_rows() will not return the correct value until all the rows in the result set have been retrieved.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_db_query(), mysql_query() and, mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_numrows() can also be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_numrows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive MySQL persistent link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve: un identificador de enlace persistente, o falso si se produce un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_pconnect() establishes a connection to a MySQL server.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_pconnect() establece una conexión a un servidor MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following defaults are assumed for missing optional parameters: server = 'localhost:3306', username = name of the user that owns the server process and password = empty password.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los argumentos son opcionales, y si no existen, se asumen los valores por defecto ('localhost', nombre del usuario propietario del proceso, password vacia).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The server parameter can also include a port number. eg. "hostname:port" or a path to a socket eg. ": / path / to / socket" for the localhost.</seg></tuv>
      <tuv xml:lang="es"><seg>El hostname puede incluir un numero de puerto. ej. "hostname:port" o un camino al socket ej. ": / camino / al / socket" para el puerto para el host local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for the ": / path / to / socket" was added in 3.0.10.</seg></tuv>
      <tuv xml:lang="es"><seg>Soporte para ":puerto" fue añadido en 3.0B4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_pconnect() acts very much like mysql_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="es"><seg>Soporte para ": / camino / al / socket" fue añadido en 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_pconnect() actua como mysql_connect() con dos diferencias fundamentales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Primero, durante la conexión, la función intenta primero encontrar un enlace persistente abierto con el mismo host, usuario y password.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional client_flags parameter became available in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Si lo encuentra, devuelve el identificador de enlace en lugar de abrir otra conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Segundo, la conexión no sera cerrado cuando acabe la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Persistent Database Connections section for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>El enlace permanecera abierta para ser usado en el futuro (mysql_close() will not cierra el enlace establecido con mysql_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using persistent connections can require a bit of tuning of your Apache and MySQL configurations to ensure that you do not exceed the number of connections allowed by MySQL.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de enlaces son llamados 'persistentes'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_query() envia una sentencia a la base activa en el servidor asociado al identificador de enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function tries to establish a link as if mysql_connect() was called with no arguments, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no es especificado un identificador_de_enlace, se asumira el ultilmo enlace abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It defaults to MYSQL_STORE_RESULT, so the result is buffered.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay ningun enlace abierto, la función intenta estalecer un enlace como si se llamara función mysql_connect() sin argumentos, y lo utiliza.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia no puede terminar por punto y coma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only for SELECT,SHOW,EXPLAIN or DESCRIBE statements mysql_query() returns a resource identifier or FALSE if the query was not executed correctly.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_query() devuelve TRUE (no-cero) o FALSE para indicar si la sentencia se ha ejecutado correctamente o no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For other type of SQL statements, mysql_query() returns TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un valor TRUE significa que la sentencia era correcta y pudo ser ejecutada en el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A non - FALSE return value means that the query was legal and could be executed by the server.</seg></tuv>
      <tuv xml:lang="es"><seg>No indica nada sobre el numero de fila devueltas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is perfectly possible for a query to succeed but affect no rows or return no rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Es perfectamente posible que la sentencia se ejecute correctamente pero que no devuelve ninguna fila.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following query is syntactically invalid, so mysql_query() fails and returns FALSE:</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente sentencia es invalida sintacticamente, asi que mysql_query() falla y devuelve FALSE:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_query()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php $result = mysql_query( "SELECT * WHERE 1=1") or die("Invalid query: ". mysql_error());?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $result = mysql_query ("SELECT * WHERE 1=1") or die ("Invalid query");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following query is semantically invalid if my_col is not a column in the table my_tbl, so mysql_query() fails and returns FALSE:</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente sentencia es invalida semanticamente si my_col no es una columna de la tabla my_tbl, asi que mysql_query() falla y devuelve FALSE:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mysql_query()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. mysql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $result = mysql_query( "SELECT my_col FROM my_tbl") or die("Invalid query: ". mysql_error());?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $result = mysql_query ("SELECT my_col FROM my_tbl") or die ("Invalid query");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_query() will also fail and return FALSE if you don't have permission to access the table(s) referenced by the query.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_query() fallara tambien y devolvera FALSE si no se tiene el permiso de acceso a la tabla especificada en la sentencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only for SELECT,SHOW,DESCRIBE or EXPLAIN statements, mysql_query() returns a new result identifier that you can pass to mysql_fetch_array() and other functions dealing with result tables.</seg></tuv>
      <tuv xml:lang="es"><seg>Asumiendo la sentencia tenga exito, se puede llamar a mysql_affected_rows() para saber cuantas filas fueron afectadas (para DELETE, INSERT, REPLACE, o UPDATE) Para las sentencias SELECT, mysql_query() devuelve un nuevo identificador de resultado que se puede pasar a mysql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although, the memory will automatically be freed at the end of the script 's execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se acabe de utilizar el resultado, se pueden liberar los recursos asociados utilizando mysql_free_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_num_rows(), mysql_affected_rows(), mysql_unbuffered_query(), mysql_free_result(), mysql_fetch_array(), mysql_fetch_row(), mysql_fetch_assoc(), mysql_result(), mysql_select_db(), and mysql_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_affected_rows(), mysql_db_query(), mysql_free_result(), mysql_result(), mysql_select_db(), and mysql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_real_escape_string() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_real_escape_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_result() returns the contents of one cell from a MySQL result set.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_result() devuelve el contenido de una celda de un resultado MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field argument can be the field' s offset, or the field's name, or the field's table dot field name (tablename.fieldname).</seg></tuv>
      <tuv xml:lang="es"><seg>El campo argumento puede ser el nombre del campo o el offset o tabla.nombre_del_campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the column name has been aliased ('select foo as bar from.. .'), use the alias instead of the column name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el nombre de la columna tiene un alias ('select foo as bar from.. .'), utilice el alias en lugar del nombre de la columna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As these functions return the contents of multiple cells in one function call, they' re MUCH quicker than mysql_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se trabaja un un gran resultado, debe considerarse la utilizacion de una funcion que devuelva una fila entera ya que estas funciones son MUCHO mas rapidas que mysql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Tambien, especificando un offset numerico en lugar del nombre del campo, la ejecucion sera mas rapida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calls to mysql_result() should not be mixed with calls to other functions that deal with the result set.</seg></tuv>
      <tuv xml:lang="es"><seg>Las llamadas a mysql_result() no deben mezclarse con llamadas a las otras sentencias que trabajan con un identificador de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recommended high-performance alternatives: mysql_fetch_row(), mysql_fetch_array(), and mysql_fetch_object().</seg></tuv>
      <tuv xml:lang="es"><seg>Alternativas recomendadas: mysql_fetch_row(), mysql_fetch_array(), y mysql_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si exito, FALSE si error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_select_db() sets the current active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_select_db() establece la base activa que estara asociada con el identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link identifier is specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica un identificador de enlace, se asume el ultimo enlace abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function will try to establish a link as if mysql_connect() was called without arguments, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay ningun enlace abierto, la función intentara establecer un enlace como si se llamara a mysql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to mysql_query() will be made on the active database.</seg></tuv>
      <tuv xml:lang="es"><seg>Toda llamada posterior a mysql_query() utilizara la base activada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_connect(), mysql_pconnect(), and mysql_query().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: mysql_connect(), mysql_pconnect(), and mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated however.</seg></tuv>
      <tuv xml:lang="es"><seg>Por razones de compatibilidad puede usarse tambien mysql_selectdb().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_stat() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_stat() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_tablename() takes a result pointer returned by the mysql_list_tables() function as well as an integer index and returns the name of a table.</seg></tuv>
      <tuv xml:lang="es"><seg>mysql_tablename() toma un puntero de resultado devuelto por mysql_list_tables() asi como un indice (integer) y devuelve el nomnre de una tabla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mysql_num_rows() function may be used to determine the number of tables in the result pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede usar la función mysql_num_rows() para determinar el nombre de tablas en el puntero de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_tablename() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_tablename() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_list_tables().</seg></tuv>
      <tuv xml:lang="es"><seg>?php mysql_connect ("localhost:3306"); $result = mysql_list_tables ("wisconsin"); $i = 0; while ($i mysql_num_rows ($result)) {$tb_names[$i] = mysql_tablename ($result, $i); echo $tb_names[$i]. "BR"; $i++;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_thread_id() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. mysql_thread_id() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. natsort() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. natsort() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ncurses_getmouse() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ncurses_getmouse() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ncurses_mousemask() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ncurses_mousemask() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the array element in the next place that 's pointed by the internal array pointer, or FALSE if there are no more elements.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el elemento de la matriz que ocupa el lugar siguiente al apuntado por el puntero interno, o FALSE si no hay más elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>next() behaves like current(), with one difference.</seg></tuv>
      <tuv xml:lang="es"><seg>next() se comporta como current(), con una diferencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It advances the internal array pointer one place forward before returning the element.</seg></tuv>
      <tuv xml:lang="es"><seg>Avanza el puntero interno de la matriz en una posición antes de devolver el elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means it returns the next array element and advances the internal array pointer by one.</seg></tuv>
      <tuv xml:lang="es"><seg>Eso significa que devuelve el siguiente elemento de la matriz y que avanza el puntero interno en uno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If advancing the internal array pointer results in going beyond the end of the element list, next() returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si al avanzar se pasa del final de la lista de elementos, next() devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array contains empty elements, or elements that have a key value of 0 then this function will return FALSE for these elements as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la matriz contiene elementos vacíos, esta función también devolverá FALSE para dichos elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To properly traverse an array which may contain empty elements or elements with key values of 0 see the each() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para recorrer adecuadamente una matriz que pueda contener elementos vacíos, vea la función each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), end(), prev(), and reset().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: current(), end() prev() y reset()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.0.5, nl2br() is now XHTML compliant.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena con 'BR' insertados antes de cada nueva línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also htmlspecialchars(), htmlentities(), wordwrap(), and str_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también htmlspecialchars(), htmlentities() y wordwrap().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unified ODBC functions</seg></tuv>
      <tuv xml:lang="es"><seg>ODBC functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. number_format() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. number_format() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ob_start(), ob_clean() and ob_end_flush().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ob_start() and ob_end_flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to further process the buffer' s contents you have to call ob_get_contents() before ob_end_flush() as the buffer contents are discarded after ob_end_flush() is called.</seg></tuv>
      <tuv xml:lang="es"><seg>If you want to further process the buffer' s contents you have to call ob_get_contents() before ob_end_flush() as the buffer contents are discarded after ob_get_contents() is called.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ob_start(), ob_get_contents(), ob_flush() and ob_end_clean().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ob_start(), ob_get_contents(), and ob_end_clean().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will return the length of the contents in the output buffer or FALSE, if output buffering isn 't active.</seg></tuv>
      <tuv xml:lang="es"><seg>This will return the length of the contents in the output buffer or FALSE, if output buffering isnt 't active.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ob_gzhandler() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ob_gzhandler() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ob_iconv_handler() example:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ob_iconv_handler() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Image functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones para imágenes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When output_callback is called, it will receive the contents of the output buffer as its parameter and is expected to return a new output buffer as a result, which will be sent to the browser.</seg></tuv>
      <tuv xml:lang="es"><seg>While output buffering is active no output is sent from the script, instead the output is stored in an internal buffer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ob_get_contents(), ob_end_flush(), ob_end_clean(), ob_implicit_flush() and ob_gzhandler().</seg></tuv>
      <tuv xml:lang="es"><seg>See also ob_get_contents(), ob_end_flush(), ob_end_clean(), and ob_implicit_flush()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIBindByName() binds the PHP variable variable to the Oracle placeholder ph_name.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIBindByName() enlaza la variable PHP variable a un placeholder de Oracle ph_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether it will be used for input or output will be determined run-time, and the necessary storage space will be allocated.</seg></tuv>
      <tuv xml:lang="es"><seg>Si esta será usada para entrada o salida se determinará en tiempo de ejecución, y sera resevado el espacio necesario de almacenamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length The length parameter sets the maximum length for the bind.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro length establece el tamaño máximo del enlace.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you set length to -1 OCIBindByName() will use the current length of variable to set the maximum length.</seg></tuv>
      <tuv xml:lang="es"><seg>Si establece length a -1 OCIBindByName() usará el tamaño de la variable para establecer el tamaño máximo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length is not used for abstract Datatypes and should be set to -1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita enlazar tipos de datos abstractos (LOB / ROWID / BFILE) necesitará primero reservar la memoria con la función OCINewDescriptor(). length no se usa para tipos de datos abstractos y debería establecerse a -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The type variable tells oracle, what kind of descriptor we want to use.</seg></tuv>
      <tuv xml:lang="es"><seg>La variable type le informa a Oracle, que tipo de descriptor queremos usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible values are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores posibles son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>?php / * OCIBindByPos example thies@digicol.de (980221) inserts 3 resords into emp, and uses the ROWID for updating the records just after the insert. * / $conn = OCILogon("scott" ,"tiger"); $stmt = OCIParse($conn ,"insert into emp (empno, ename) ". "values (:empno,:ename)". "returning ROWID into :rid"); $data = array(1111 = "Larry", 2222 = "Bill", 3333 = "Jim"); $rowid = OCINewDescriptor($conn,OCI_D_ROWID); OCIBindByName($stmt ,":empno", $empno,32); OCIBindByName($stmt ,":ename", $ename,32); OCIBindByName($stmt ,":rid", $rowid,-1,OCI_B_ROWID); $update = OCIParse($conn ,"update emp set sal = :sal where ROWID = :rid"); OCIBindByName($update ,":rid", $rowid,-1,OCI_B_ROWID); OCIBindByName($update ,":sal", $sal,32); $sal = 10000; while (list($empno,$ename) = each($data)) {OCIExecute($stmt); OCIExecute($update);} $rowid - free(); OCIFreeStatement($update); OCIFreeStatement($stmt); $stmt = OCIParse($conn ,"select * from emp where empno in (1111,2222,3333)"); OCIExecute($stmt); while (OCIFetchInto($stmt, $arr,OCI_ASSOC)) {var_dump($arr);} OCIFreeStatement($stmt); / * delete our "junk "from the emp table.... * / $stmt = OCIParse($conn ,"delete from emp where empno in (1111,2222,3333)"); OCIExecute($stmt); OCIFreeStatement($stmt); OCILogoff($conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Oracle 8 functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Oracle 8</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIColumnIsNULL() returns TRUE if the returned column column in the result from the statement stmt is NULL.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIColumnIsNULL() devuelve vedadero si la columna devuelta column en el resultset de la sentencia stmt es NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can either use the column-number (1-Based) or the column-name for the col parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar el número de la columna (1-Based) o el nombre de la columa indicado por el parámetro col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIColumnName() returns the name of the column corresponding to the column number (1-based) that is passed in.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIColumnName() Devuelve el nombre de la columna correspondiente al número de la columna (1-based) que es pasado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print "HTML PRE \n"; $conn = OCILogon("scott", "tiger"); $stmt = OCIParse($conn ,"select * from emp"); OCIExecute($stmt); print" TABLE BORDER=\"1\ ""; print "TR"; print "TH Name / TH"; print "TH Type / TH"; print "TH Length / TH"; print "/ TR"; $ncols = OCINumCols($stmt); for ($i = 1; $i = $ncols; $i+ +) {$column_name = OCIColumnName($stmt,$i); $column_type = OCIColumnType($stmt,$i); $column_size = OCIColumnSize($stmt,$i); print "TR"; print "TD $column_name / TD"; print "TD $column_type / TD"; print "TD $column_size / TD"; print "/ TR";} print "/ TABLE \n"; OCIFreeStatement($stmt); OCILogoff($conn); print" / PRE "; print" / HTML \n";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php print "HTML PRE \n"; $conn = OCILogon("scott", "tiger"); $stmt = OCIParse($conn ,"select * from emp"); OCIExecute($stmt); print" TABLE BORDER=\"1\ ""; print "TR"; print "TH Name / TH"; print "TH Type / TH"; print "TH Length / TH"; print "/ TR"; $ncols = OCINumCols($stmt); for ($i = 1; $i = $ncols; $i+ +) {$column_name = OCIColumnName($stmt,$i); $column_type = OCIColumnType($stmt,$i); $column_size = OCIColumnSize($stmt,$i); print "TR"; print "TD $column_name / TD"; print "TD $column_type / TD"; print "TD $column_size / TD"; print "/ TR";} OCIFreeStatement($stmt); OCILogoff($conn); print "/ PRE"; print "/ HTML \n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also OCINumCols(), OCIColumnType(), and OCIColumnSize().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también OCINumCols(), OCIColumnType(), y OCIColumnSize().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can either use the column-number (1-Based) or the column-name for the col parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIColumnSize() devuelve el tamaño de la columna indicada por Oracle Puede utilizar el número de la columna (1-Based) o el nombre indicado en el parámetro col.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also OCINumCols(), OCIColumnName(), and OCIColumnSize().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también OCINumCols(), OCIColumnName(), y OCIColumnSize().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIColumnType() returns the data type of the column corresponding to the column number (1-based) that is passed in.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIColumnType() devuelve el tipo de dato de una columna correspondiente al número de la columna (1-based) que es pasado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Oracle reports: '. $error['message'];} / / Close connection OCILogoff($conn);?</seg></tuv>
      <tuv xml:lang="es"><seg>OCICommit() confirma todas las sentencias pendientes para la conexión con Oracle connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIDefineByName() binds PHP variables for fetches of SQL-Columns.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIDefineByName() busca el valor de las Columnas-SQL dentro de variables PHP definidas por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be careful that Oracle uses ALL-UPPERCASE column-names, whereby in your select you can also write lowercase.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuidado que Oracle nombra todas las columnas en MAYUSCULAS, mientras que en su select puede usar también minúsculas write lower-case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIDefineByName() expects the Column-Name to be in uppercase.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIDefineByName() espera que Column-Name esté en mayúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you define a variable that doesn 't exists in you select statement, no error will be given!</seg></tuv>
      <tuv xml:lang="es"><seg>Si define una variable que no existe en la sentecia SELECT, no se producirá ningún error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to define an abstract datatype (LOB / ROWID / BFILE) you need to allocate it first using OCINewDescriptor() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita definir un tipo de dato abstracto (LOB / ROWID / BFILE) tendrá que alojarlo primero usando la función OCINewDescriptor() function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the OCIBindByName() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la función OCIBindByName().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * OCIDefineByName example - thies@thieso.net (980219) * / $conn = OCILogon("scott" ,"tiger"); $stmt = OCIParse($conn ,"select empno, ename from emp"); / * the define MUST be done BEFORE ociexecute! * / OCIDefineByName($stmt ,"EMPNO",$empno); OCIDefineByName($stmt ,"ENAME",$ename); OCIExecute($stmt); while (OCIFetch($stmt)) {echo "empno :".$empno ."\n"; echo "ename :".$ename ."\n";} OCIFreeStatement($stmt); OCILogoff($conn);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / * OCIDefineByPos example thies@digicol.de (980219) * / $conn = OCILogon("scott" ,"tiger"); $stmt = OCIParse($conn ,"select empno, ename from emp"); / * la definición DEBE hacerse ANTES del ociexecute! * / OCIDefineByName($stmt ,"EMPNO", $empno); OCIDefineByName($stmt ,"ENAME", $ename); OCIExecute($stmt); while (OCIFetch($stmt)) {echo "empno :".$empno ."\n"; echo "ename :".$ename ."\n";} OCIFreeStatement($stmt); OCILogoff($conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIError() returns the last error found.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIError() devuelve el último error encontrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional stmt_BAR_ conn _BAR_global is not provided, the last error encountered is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el parámetro opcional stmt_BAR_ conn _BAR_global no es usado, es devuelto el último error encontrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no error is found, OCIError() returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se encuentra ningún error, OCIError() devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIError() returns the error as an associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIError() devuelve el error como un array asociativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this array, code consists the oracle error code and message the oracle errorstring.</seg></tuv>
      <tuv xml:lang="es"><seg>En este array, code consiste en el código de error de Oracle y message en la cadena de descripción del error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIExecute() executes a previously parsed statement. (see OCIParse()).</seg></tuv>
      <tuv xml:lang="es"><seg>OCIExecute() ejecuta una sentencia previamente analizada. (see OCIParse()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional mode allows you to specify the execution-mode (default is OCI_COMMIT_ON_SUCCESS).</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional mode le permite especificar el modo de ejecución (default is OCI_COMMIT_ON_SUCCESS).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no desea que las sentencias se confirmen automaticamente, especifique OCI_DEFAULT como su modo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFetch() fetches the next row (for SELECT statements) into the internal result-buffer.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFetch() Busca la siguiente fila (para sentencias SELECT) dentro del result-buffer interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFetchInto() fetches the next row (for SELECT statements) into the result array.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFetchInto() busca la siguiente fila (for SELECT statements) dentro del array result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFetchInto() will overwrite the previous content of result.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFetchInto() sobreescribirá el contenido previo de result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mode parameter allows you to change the default behaviour.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto result contendrá un array basado en todas las columnas que no son NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can specify more than one flag by simply adding them up (eg OCI_ASSOC+OCI_RETURN_NULLS).</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro mode le permite cambiar el comportamineto por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCI_ASSOC Return an associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede especificar más de una flag simplemente añadiendolas (ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCI_NUM Return an numbered array starting with zero. (DEFAULT)</seg></tuv>
      <tuv xml:lang="es"><seg>OCI_ASSOC+OCI_RETURN_NULLS).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCI_RETURN_NULLS Return empty columns.</seg></tuv>
      <tuv xml:lang="es"><seg>Las flags son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCI_RETURN_LOBS Return the value of a LOB instead of the descriptor.</seg></tuv>
      <tuv xml:lang="es"><seg>OCI_ASSOC Devuelve un array asociativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple OCIFetchInto() example</seg></tuv>
      <tuv xml:lang="es"><seg>OCI_NUM Devuelve un array numerado empezando en 1. (POR DEFECTO)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also OCIFetch() and OCIExecute().</seg></tuv>
      <tuv xml:lang="es"><seg>OCI_RETURN_LOBS Devuelve el valor de un LOB en vez de el descriptor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFetchStatement() fetches all the rows from a result into a user-defined array.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFetchStatement() busca todas las filas de un resultset dentro de un array definido por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFetchStatement() returns the number of rows fetched.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFetchStatement() devuelve el numero de filas buscadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFreeCursor() returns TRUE if successful, or FALSE if unsuccessful.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFreeCursor() devuelve cierto si la operacion se lleva a cabo, o falso en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIFreeStatement() returns TRUE if successful, or FALSE if unsuccessful.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFreeStatement() devuelve cierto si la operacion se lleva a cabo, o falso en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIInternalDebug() enables internal debug output.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIInternalDebug() habilita la salida del depurador interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set onoff to 0 to turn debug output off, 1 to turn it on.</seg></tuv>
      <tuv xml:lang="es"><seg>Asigne 0 a onoff para deshabilitar la salida y 1 para habilitarla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also freeing resources.</seg></tuv>
      <tuv xml:lang="es"><seg>OCILogOff() cierra una conexión con Oracle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCILogon() returns an connection identifier needed for most other OCI calls.</seg></tuv>
      <tuv xml:lang="es"><seg>OCILogon() devuelve el identificador de conexión necesario en la mayoria de las funciones OCI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third parameter can either contain the name of the local Oracle instance or the name of the entry in tnsnames.ora to which you want to connect.</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer parámetro, que es opcional, puede contener el nombre de la instancia a Oracle o el nombre dado en el fichero tnsnames.ora de la base de datos a la que nos queremos conectar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional third parameter is not specified, PHP uses the environment variables ORACLE_SID (Oracle instance) or TWO_TASK (tnsnames.ora) to determine which database to connect to.</seg></tuv>
      <tuv xml:lang="es"><seg>Si este parámetro no se especifica, PHP usa la variable de entorno ORACLE_SID (Oracle instance) o TWO_TASK (tnsnames.ora) para determinar la base de datos con la que queremos conectar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Connections are shared at the page level when using OCILogon().</seg></tuv>
      <tuv xml:lang="es"><seg>Las conexiones son compartidas a nivel de página cuando usemos OCILogon().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that commits and rollbacks apply to all open transactions in the page, even if you have created multiple connections.</seg></tuv>
      <tuv xml:lang="es"><seg>Lo cual significa que los "commits" y "rollbacks "son aplicadas a todas las transacciones abiertas en la página, incluso si usted ha creado conexiones múltiples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example demonstrates how the connections are shared.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo demuestra como son compartidas las conexiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print "HTML PRE"; $db = ""; $c1 = ocilogon("scott" ,"tiger",$db); $c2 = ocilogon("scott" ,"tiger",$db); function create_table($conn) {$stmt = ociparse($conn ,"create table scott.hallo (test varchar2(64))"); ociexecute($stmt); echo $conn. "created table\n\n";} function drop_table($conn) {$stmt = ociparse($conn ,"drop table scott.hallo"); ociexecute($stmt); echo $conn." dropped table\n\n";} function insert_data($conn) {$stmt = ociparse($conn ,"insert into scott.hallo values('$conn '_BAR_ _BAR_' '_BAR_ _BAR_ to_char(sysdate ,'DD-MON-YY HH24:MI:SS'))"); ociexecute($stmt,OCI_DEFAULT); echo $conn. "inserted hallo\n\n";} function delete_data($conn) {$stmt = ociparse($conn ,"delete from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn." deleted hallo\n\n";} function commit($conn) {ocicommit($conn); echo $conn. "committed\n\n";} function rollback($conn) {ocirollback($conn); echo $conn." rollback\n\n";} function select_data($conn) {$stmt = ociparse($conn ,"select * from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn ."----selecting\n\n"; while (ocifetch($stmt)) echo $conn. "".ociresult($stmt ,"TEST")." \n\n"; echo $conn ."----done\n\n";} create_table($c1); insert_data($c1); / / Insert a row using c1 insert_data($c2); / / Insert a row using c2 select_data($c1); / / Results of both inserts are returned select_data($c2); rollback($c1); / / Rollback using c1 select_data($c1); / / Both inserts have been rolled back select_data($c2); insert_data($c2); / / Insert a row using c2 commit($c2); / / commit using c2 select_data($c1); / / result of c2 insert is returned delete_data($c1); / / delete all rows in table using c1 select_data($c1); / / no rows returned select_data($c2); / / no rows returned commit($c1); / / commit using c1 select_data($c1); / / no rows returned select_data($c2); / / no rows returned drop_table($c1); print "/ PRE / HTML";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php print "HTML PRE"; $db = ""; $c1 = ocilogon("scott" ,"tiger",$db); $c2 = ocilogon("scott" ,"tiger",$db); function create_table($conn) {$stmt = ociparse($conn ,"create table scott.hallo (test varchar2(64))"); ociexecute($stmt); echo $conn. "created table\n\n";} function drop_table($conn) {$stmt = ociparse($conn ,"drop table scott.hallo"); ociexecute($stmt); echo $conn." dropped table\n\n";} function insert_data($conn) {$stmt = ociparse($conn ,"insert into scott.hallo values('$conn '_BAR_ _BAR_' '_BAR_ _BAR_ to_char(sysdate ,'DD-MON-YY HH24:MI:SS'))"); ociexecute($stmt,OCI_DEFAULT); echo $conn. "inserted hallo\n\n";} function delete_data($conn) {$stmt = ociparse($conn ,"delete from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn." deleted hallo\n\n";} function commit($conn) {ocicommit($conn); echo $conn. "commited\n\n";} function rollback($conn) {ocirollback($conn); echo $conn." rollback\n\n";} function select_data($conn) {$stmt = ociparse($conn ,"select * from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn ."----selecting\n\n"; while (ocifetch($stmt)) echo $conn. "".ociresult($stmt ,"TEST")." \n\n"; echo $conn ."----done\n\n";} create_table($c1); insert_data($c1); / / Insert a row using c1 insert_data($c2); / / Insert a row using c2 select_data($c1); / / Results of both inserts are returned select_data($c2); rollback($c1); / / Rollback using c1 select_data($c1); / / Both inserts have been rolled back select_data($c2); insert_data($c2); / / Insert a row using c2 commit($c2); / / commit using c2 select_data($c1); / / result of c2 insert is returned delete_data($c1); / / delete all rows in table using c1 select_data($c1); / / no rows returned select_data($c2); / / no rows returned commit($c1); / / commit using c1 select_data($c1); / / no rows returned select_data($c2); / / no rows returned drop_table($c1); print "/ PRE / HTML";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using a REF CURSOR from a stored procedure</seg></tuv>
      <tuv xml:lang="es"><seg>Usando un REF CURSOR de un procedimiento almacenado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / suppose your stored procedure info.output returns a ref cursor in :data $conn = OCILogon( "scott" ,"tiger"); $curs = OCINewCursor($conn); $stmt = OCIParse($conn ,"begin info.output(:data); end ;"); ocibindbyname($stmt ,"data", $curs,-1,OCI_B_CURSOR); ociexecute($stmt); ociexecute($curs); while (OCIFetchInto($curs, $data)) {var_dump($data);} OCIFreeStatement($stmt); OCIFreeCursor($curs); OCILogoff($conn);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / suppose your stored procedure info.output returns a ref cursor in :data $conn = OCILogon( "scott" ,"tiger"); $curs = OCINewCursor($conn); $stmt = OCIParse($conn ,"begin info.output(:data); end ;"); ocibindbyname($stmt ,"data", $curs,-1,OCI_B_CURSOR); ociexecute($stmt); ociexecute($curs); while (OCIFetchInto($curs, $data)) {var_dump($data);} OCIFreeCursor($stmt); OCIFreeStatement($curs); OCILogoff($conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using a REF CURSOR in a select statement</seg></tuv>
      <tuv xml:lang="es"><seg>Usando un REF CURSOR en una sentencia select</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print "HTML BODY"; $conn = OCILogon("scott" ,"tiger"); $count_cursor = "CURSOR(select count(empno) num_emps from emp ". "where emp.deptno = dept.deptno) as EMPCNT from dept"; $stmt = OCIParse($conn ,"select deptno,dname,$count_cursor"); ociexecute($stmt); print" TABLE BORDER=\"1\ ""; print "TR"; print "TH DEPT NAME / TH"; print "TH DEPT # / TH"; print "TH # EMPLOYEES / TH"; print "/ TR"; while (OCIFetchInto($stmt, $data,OCI_ASSOC)) {print "TR"; $dname = $data["DNAME"]; $deptno = $data["DEPTNO"]; print "TD $dname / TD"; print "TD $deptno / TD"; ociexecute($data["EMPCNT"]); while (OCIFetchInto($data["EMPCNT"], $subdata,OCI_ASSOC)) {$num_emps = $subdata["NUM_EMPS"]; print "TD $num_emps / TD";} print "/ TR";} print "/ TABLE"; print "/ BODY / HTML"; OCIFreeStatement($stmt); OCILogoff($conn);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php print "HTML BODY"; $conn = OCILogon("scott" ,"tiger"); $count_cursor = "CURSOR(select count(empno) num_emps from emp ". "where emp.deptno = dept.deptno) as EMPCNT from dept"; $stmt = OCIParse($conn ,"select deptno,dname,$count_cursor"); ociexecute($stmt); print" TABLE BORDER=\"1\ ""; print "TR"; print "TH DEPT NAME / TH"; print "TH DEPT # / TH"; print "TH # EMPLOYEES / TH"; print "/ TR"; while (OCIFetchInto($stmt, $data,OCI_ASSOC)) {print "TR"; $dname = $data["DNAME"]; $deptno = $data["DEPTNO"]; print "TD $dname / TD"; print "TD $deptno / TD"; ociexecute($data ["EMPCNT "]); while (OCIFetchInto($data ["EMPCNT"], $subdata,OCI_ASSOC)) {$num_emps = $subdata["NUM_EMPS"]; print "TD $num_emps / TD";} print "/ TR";} print "/ TABLE"; print "/ BODY / HTML"; OCIFreeStatement($stmt); OCILogoff($conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCINewDescriptor() allocates storage to hold descriptors or LOB locators.</seg></tuv>
      <tuv xml:lang="es"><seg>OCINewDescriptor() Reserva espacio para mantener descriptores o localizadores LOB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid values for type are OCI_D_FILE, OCI_D_LOB, OCI_D_ROWID.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores válidos para el tipo type son OCI_D_FILE, OCI_D_LOB, OCI_D_ROWID.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For LOB descriptors, the methods load, save, and savefile are associated with the descriptor, for BFILE only the load method exists.</seg></tuv>
      <tuv xml:lang="es"><seg>Para descriptores LOB, los métodos load, save, y savefile están asociados con el descriptor, para BFILE sólo el método load existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the second example usage hints.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea el segundo ejemplo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>?php / * This script demonstrates file upload to LOB columns * The formfield used for this example looks like this * form action=" upload.php3 "method="post" enctype="multipart / form-data "* input type="file" name="lob_upload "*... * / if(!isset($lob_upload) _BAR_ _BAR_ $lob_upload == 'none') {? form action="upload.php3" method="post "enctype="multipart / form-data" Upload file: input type="file "name="lob_upload" br input type="submit "value="Upload" - input type="reset "/ form ?php} else {/ / $lob_upload contains the temporary filename of the uploaded file $conn = OCILogon($user, $password); $lob = OCINewDescriptor($conn, OCI_D_LOB); $stmt = OCIParse($conn ,"insert into $table (id, the_blob) values(my_seq.NEXTVAL, EMPTY_BLOB()) returning the_blob into :the_blob"); OCIBindByName($stmt, ':the_blob', $lob, -1, OCI_B_BLOB); OCIExecute($stmt); if($lob - savefile($lob_upload)) {OCICommit($conn); echo "Blob successfully uploaded\n"; }else {echo "Couldn't upload Blob\n";} OCIFreeDescriptor($lob); OCIFreeStatement($stmt); OCILogoff($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCINLogon() creates a new connection to an Oracle 8 database and logs on.</seg></tuv>
      <tuv xml:lang="es"><seg>OCINLogon() crea una nueva conexión con una base de datos Oracle 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCINLogon() forces a new connection.</seg></tuv>
      <tuv xml:lang="es"><seg>OCINLogon() fuerza una nueva conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This should be used if you need to isolate a set of transactions.</seg></tuv>
      <tuv xml:lang="es"><seg>Se debe usar si necesita aislar un conjunto de transacciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, connections are shared at the page level if using OCILogon() or at the web server process level if using OCIPLogon().</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, las conexiones son compartidas a nivel de página si usa OCILogon() o a nivel del proceso del servidor web si usa OCIPLogon().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have multiple connections open using OCINLogon(), all commits and rollbacks apply to the specified connection only.</seg></tuv>
      <tuv xml:lang="es"><seg>Si posee múltiples conexiones abiertas usando OCINLogon(), todos los "commits "y "rollbacks" se aplican sólo a la conexion especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example demonstrates how the connections are separated.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo demuestra como las conexiones están separadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print "HTML PRE"; $db = ""; $c1 = ocilogon("scott" ,"tiger",$db); $c2 = ocinlogon("scott" ,"tiger",$db); function create_table($conn) {$stmt = ociparse($conn ,"create table scott.hallo (test varchar2(64))"); ociexecute($stmt); echo $conn. "created table\n\n";} function drop_table($conn) {$stmt = ociparse($conn ,"drop table scott.hallo"); ociexecute($stmt); echo $conn." dropped table\n\n";} function insert_data($conn) {$stmt = ociparse($conn ,"insert into scott.hallo values('$conn '_BAR_ _BAR_' '_BAR_ _BAR_ to_char(sysdate ,'DD-MON-YY HH24:MI:SS'))"); ociexecute($stmt,OCI_DEFAULT); echo $conn. "inserted hallo\n\n";} function delete_data($conn) {$stmt = ociparse($conn ,"delete from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn." deleted hallo\n\n";} function commit($conn) {ocicommit($conn); echo $conn. "committed\n\n";} function rollback($conn) {ocirollback($conn); echo $conn." rollback\n\n";} function select_data($conn) {$stmt = ociparse($conn ,"select * from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn ."----selecting\n\n"; while (ocifetch($stmt)) echo $conn. "".ociresult($stmt ,"TEST")." \n\n"; echo $conn ."----done\n\n";} create_table($c1); insert_data($c1); select_data($c1); select_data($c2); rollback($c1); select_data($c1); select_data($c2); insert_data($c2); commit($c2); select_data($c1); delete_data($c1); select_data($c1); select_data($c2); commit($c1); select_data($c1); select_data($c2); drop_table($c1); print "/ PRE / HTML";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php print "HTML PRE"; $db = ""; $c1 = ocilogon("scott" ,"tiger",$db); $c2 = ocinlogon("scott" ,"tiger",$db); function create_table($conn) {$stmt = ociparse($conn ,"create table scott.hallo (test varchar2(64))"); ociexecute($stmt); echo $conn. "created table\n\n";} function drop_table($conn) {$stmt = ociparse($conn ,"drop table scott.hallo"); ociexecute($stmt); echo $conn." dropped table\n\n";} function insert_data($conn) {$stmt = ociparse($conn ,"insert into scott.hallo values('$conn '_BAR_ _BAR_' '_BAR_ _BAR_ to_char(sysdate ,'DD-MON-YY HH24:MI:SS'))"); ociexecute($stmt,OCI_DEFAULT); echo $conn. "inserted hallo\n\n";} function delete_data($conn) {$stmt = ociparse($conn ,"delete from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn." deleted hallo\n\n";} function commit($conn) {ocicommit($conn); echo $conn. "commited\n\n";} function rollback($conn) {ocirollback($conn); echo $conn." rollback\n\n";} function select_data($conn) {$stmt = ociparse($conn ,"select * from scott.hallo"); ociexecute($stmt,OCI_DEFAULT); echo $conn ."----selecting\n\n"; while (ocifetch($stmt)) echo $conn. "".ociresult($stmt ,"TEST")." \n\n"; echo $conn ."----done\n\n";} create_table($c1); insert_data($c1); select_data($c1); select_data($c2); rollback($c1); select_data($c1); select_data($c2); insert_data($c2); commit($c2); select_data($c1); delete_data($c1); select_data($c1); select_data($c2); commit($c1); select_data($c1); select_data($c2); drop_table($c1); print "/ PRE / HTML";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCINumCols() returns the number of columns in a statement.</seg></tuv>
      <tuv xml:lang="es"><seg>OCINumCols() devuelve el número de columnas en una sentencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIParse() parses the query using conn.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIParse() analiza la query usando conn.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the statement identity if the query is valid, FALSE if not.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador de la sentencia si la consulta es válida, y falso si no lo es.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The query can be any valid SQL statement or PL / SQL block.</seg></tuv>
      <tuv xml:lang="es"><seg>La query puede ser cualquier sentencia SQL válida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIPLogon() creates a persistent connection to an Oracle 8 database and logs on.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIPLogon() crea una conexión persistente con una base de datos Oracle 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also OCILogon() and OCINLogon().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también OCILogon() y OCINLogon().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIResult() returns the data for column column in the current row (see OCIFetch()).</seg></tuv>
      <tuv xml:lang="es"><seg>OCIResult() devuelve el valor de la columna column de la fila actual (vea OCIFetch()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIResult() will return everything as strings except for abstract types (ROWIDs, LOBs and FILEs).</seg></tuv>
      <tuv xml:lang="es"><seg>OCIResult() devolverá todo como una cadena excepto para los tipo de datos abstractos (ROWIDs, LOBs and FILEs).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also OCICommit().</seg></tuv>
      <tuv xml:lang="es"><seg>OCIRollback() restablece todas las transacciones sin confirmar para la conexión Oracle connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not tell you the number of rows that a select will return!</seg></tuv>
      <tuv xml:lang="es"><seg>OCIRowCount() devuelve el número de filas afectadas, por ej. en sentencias de actualización. !Esta función no indicará el número de de filas que devuelve una sentencia SELECT!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIStatementType() returns one of the following values:</seg></tuv>
      <tuv xml:lang="es"><seg>OCIStatementType() devuelve uno de los siguiente valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIStatementType() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Code examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the decimal equivalent of the octal number represented by the octal_string argument.</seg></tuv>
      <tuv xml:lang="es"><seg>OctDec convierte una cadena octal en un número decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 17777777777 or 2147483647 in decimal.</seg></tuv>
      <tuv xml:lang="es"><seg>El mayor número que puede ser convertido es 17777777777 o 2147483647 en decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also decoct().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también decoct().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the OnOff parameter, this function returns auto-commit status for connection_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin el parametro OnOff, esta funcion devuelve el estado de auto-entrega para connection_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE is returned if auto-commit is on, FALSE if it is off or an error occurs.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si auto-entrega esta habilitado, y FALSE si no lo esta o ha ocurrido un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If OnOff is TRUE, auto-commit is enabled, if it is FALSE auto-commit is disabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Si OnOff es TRUE, auto-entrega esta activado, si es FALSE auto-entrega esta desactivado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE cuando se cumple, FALSE cuando falla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, auto-commit is on for a connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, auto-entrega es para una conexion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Disabling auto-commit is equivalent with starting a transaction.</seg></tuv>
      <tuv xml:lang="es"><seg>Desabilitar auto-entrega es como comenzar una transaccion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also odbc_commit() and odbc_rollback().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien odbc_commit() y odbc_rollback().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(ODBC SQL types affected:</seg></tuv>
      <tuv xml:lang="es"><seg>(Elementos afectados ODBC SQL:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passthru BINARY data</seg></tuv>
      <tuv xml:lang="es"><seg>Paso a traves de datos binarios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return as is</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve como es</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Convert to char and return</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve convertido en caracter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When binary SQL data is converted to character C data, each byte (8 bits) of source data is represented as two ASCII characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando los datos binarios en SQL son convertidos a datos caracter en C, cada byte (8 bits) de datos fuente es representada como dos caracteres en ASCII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These characters are the ASCII character representation of the number in its hexadecimal form.</seg></tuv>
      <tuv xml:lang="es"><seg>Esos caracteres son la representacion en ASCII de los numeros en su forma Hexadecimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, a binary 00000001 is converted to "01" and a binary 11111111 is converted to "FF ".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, un 00000001 binario es convertido a "01" y un 11111111 binario es convertido a "FF ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LONGVARBINARY handling</seg></tuv>
      <tuv xml:lang="es"><seg>Manejo de LONGVARBINARY</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>binmode</seg></tuv>
      <tuv xml:lang="es"><seg>modo binario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result</seg></tuv>
      <tuv xml:lang="es"><seg>resultado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return as is</seg></tuv>
      <tuv xml:lang="es"><seg>Devuleve como es</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return as char</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve como caracter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If odbc_fetch_into() is used, passthru means that an empty string is returned for these columns.</seg></tuv>
      <tuv xml:lang="es"><seg>Si usamos odbc_fetch_into(), passthru significara que una cadena vacia es devuelta por esas campos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If result_id is 0, the settings apply as default for new results.</seg></tuv>
      <tuv xml:lang="es"><seg>Si result_id es 0, las definiciones se aplican por defecto para nuevos resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default for longreadlen is 4096 and binmode defaults to ODBC_BINMODE_RETURN.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, longreadlen es 4096 y el modo binario por defecto es ODBC_BINMODE_RETURN.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling of binary long columns is also affected by odbc_longreadlen()</seg></tuv>
      <tuv xml:lang="es"><seg>El manejo de campos binarias largas tambien esta afectado por odbc_longreadlen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_close_all() will close down all connections to database server(s).</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_close_all() cerrara todas las conexiones a servidor(es) de bases de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will fail if there are open transactions on a connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion fallara si hay transacciones abiertas sobre esta conexion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This connection will remain open in this case.</seg></tuv>
      <tuv xml:lang="es"><seg>La conexion quedara abierta en ese caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_close() will close down the connection to the database server associated with the given connection identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_close() cerrara la conexion al servidor de bases datos asociado con el identificador de conexion dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will fail if there are open transactions on this connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion fallara si hay transacciones abiertas sobre esta conexion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The connection will remain open in this case.</seg></tuv>
      <tuv xml:lang="es"><seg>La conexion quedara abierta en ese caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si la operacion se realiza con exito, FALSE si falla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All pending transactions on connection_id are committed.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las transacciones pendientes sobre connection_id son entregadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ODBC connection id or 0 (FALSE) on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una conexion ODBC id, o 0 (FALSE) cuando ocurre un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The connection id returned by this functions is needed by other ODBC functions.</seg></tuv>
      <tuv xml:lang="es"><seg>La conexion id devuelta por estas funciones es necesaria para otras funciones ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can have multiple connections open at once.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden tener multiples conexiones abiertas a la vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional fourth parameter sets the type of cursor to be used for this connection.</seg></tuv>
      <tuv xml:lang="es"><seg>El opcional cuarto parametro asigna el tipo de cursor que va a ser usado para esta conexion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This parameter is not normally needed, but can be useful for working around problems with some ODBC drivers.</seg></tuv>
      <tuv xml:lang="es"><seg>Este parametro normalmente no es necesario, pero puede ser util para trabajar sobre problemas con algunos drivers ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With some ODBC drivers, executing a complex stored procedure may fail with an error similar to: "Cannot open a cursor on a stored procedure that has anything other than a single select statement in it".</seg></tuv>
      <tuv xml:lang="es"><seg>Con algunos drivers ODBC, si ejecutamos un procedimiento complejo, este puede fallar con un error similar a: "Cannot open a cursor on a stored procedure that has anything other than a single select statement in it".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using SQL_CUR_USE_ODBC may avoid that error.</seg></tuv>
      <tuv xml:lang="es"><seg>Usando SQL_CUR_USE_ODBC se puede evitar ese error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, some drivers don' t support the optional row_number parameter in odbc_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Algunos drivers tampoco soportan el parametro row_number en odbc_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SQL_CUR_USE_ODBC might help in that case, too.</seg></tuv>
      <tuv xml:lang="es"><seg>SQL_CUR_USE_ODBC tambien podria ayudar en ese caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following constants are defined for cursortype:</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes constantes son definidas por tipos de cursor:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For persistent connections see odbc_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Para conexiones persistentes ver odbc_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_cursor will return a cursorname for the given result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_cursor devolvera un nombre de cursor para el result_id dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_do() will execute a query on the given connection.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_do ejecutara una consulta (query) sobre la conexion dada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ODBC result identifier if the SQL command was executed successfully.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un indetificador ODBC si el comando SQL fue ejecutado satisfactoriamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_exec() will send an SQL statement to the database server specified by connection_id.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_exec() enviara una declaracion SQL al servidor de bases de datos specificado por connection_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This parameter must be a valid identifier returned by odbc_connect() or odbc_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Este parametro debe ser un indetificador valido devuelto por odbc_connect() o odbc_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: odbc_prepare() and odbc_execute() for multiple execution of SQL statements.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: odbc_prepare() y odbc_execute() para ejecucion multiple de declaraciones SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameters in parameter_array will be substituted for placeholders in the prepared statement in order.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejecuta uan declaracion preparada con odbc_prepare().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE cuando la ejecucion es satisfactoria, FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File reading is not subject to any safe mode or open-basedir restrictions.</seg></tuv>
      <tuv xml:lang="es"><seg>Introducir el vector arameters_array solo es necesario si realmente tenemos parametros en la declaracion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.0.6 the rownumber cannot be passed as a constant, but rather as a variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el numero de campos en el resultado; FALSE on error. result_array debe ser pasado por referencia, pero puede ser de cualquier tipo, desde este sera convertido a tipo vector.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. odbc_fetch_into() 4.0.6 example</seg></tuv>
      <tuv xml:lang="es"><seg>El vector contendra el valor de campo inicial empezando en indice de vector 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If odbc_fetch_row() was succesful (there was a row), TRUE is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si odbc_fetch_row() fue succesful (there was a row), TRUE is returned.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_fetch_row() fetches a row of the data that was returned by odbc_do() / odbc_exec().</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_fetch_row() busca un registro de datos que fue devuelta por odbc_do() / odbc_exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After odbc_fetch_row() is called, the fields of that row can be accessed with odbc_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Despues de que odbc_fetch_row() sea llamado, se puede acceder a los campos de este registro con odbc_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If row_number is not specified, odbc_fetch_row() will try to fetch the next row in the result set.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica row_number, odbc_fetch_row() intentara buscar el siguiente registro en los resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calls to odbc_fetch_row() with and without row_number can be mixed.</seg></tuv>
      <tuv xml:lang="es"><seg>Lamar a odbc_fetch_row() con o sin row_number puede ser mezclado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To step through the result more than once, you can call odbc_fetch_row() with row_number 1, and then continue doing odbc_fetch_row() without row_number to review the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Para pasar a traves del resultado mas de una vez, se puede llamar a odbc_fetch_row() con row_number 1, y despues continuar haciendo odbc_fetch_row() sin row_number para revisar el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a driver doesn 't support fetching rows by number, the row_number parameter is ignored.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un driver no admitiese busquedas de registros por numero, el parametro row_number seria ignorado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: odbc_field_scale() to get the scale of a floating point number.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_field_len() devolvera la longitud de un campo referenciado por numero en un identificador ODBC La numeracion de campos comienza en 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_field_name() will return the name of the field occupying the given column number in the given ODBC result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_field_name() devolvera el nombre del campo almacenado en el numero de campo elegido dentro del identificador ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field numbering starts at 1.</seg></tuv>
      <tuv xml:lang="es"><seg>La numeracion de campos comienza en 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FALSE is returned on error.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error devolveria FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_field_num() will return the number of the column slot that corresponds to the named field in the given ODBC result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_field_num() devolvera el numero de campo que corresponda con el campo llamado en el identificador ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_field_type() will return the SQL type of the field referecend by number in the given ODBC result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_field_type() Devolvera el tipo SQL de un campo referenciado por numero en el identificador ODBC. identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_free_result() only needs to be called if you are worried about using too much memory while your script is running.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_free_result() solo necesita ser llamado en caso de preocupacion por demasiado uso de memoria cuando se ejecuta un script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All result memory will automatically be freed when the script is finished.</seg></tuv>
      <tuv xml:lang="es"><seg>Toda la memoria resultante quedara automaticamente liberada cuando el script finalice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But, if you are sure you are not going to need the result data anymore in a script, you may call odbc_free_result(), and the memory associated with result_id will be freed.</seg></tuv>
      <tuv xml:lang="es"><seg>Pero si es seguro que no se vaya a necesitar la informacion nada mas que en un script, se debera llamar a la funcion odbc_free_result(), y la memoria asociada con result_id sera liberada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If auto-commit is disabled (see odbc_autocommit()) and you call odbc_free_result() before commiting, all pending transactions are rolled back.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la auto-entrega no esta activada la (ver odbc_autocommit()) y se ejecuta odbc_free_result() antes de la entrega, todo queda pendiente de las transaciones que esten en lista.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(ODBC SQL types affected:</seg></tuv>
      <tuv xml:lang="es"><seg>(ODBC SQL tipos relaccionados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LONG, LONGVARBINARY) The number of bytes returned to PHP is controled by the parameter length.</seg></tuv>
      <tuv xml:lang="es"><seg>LONG, LONGVARBINARY) El numero de bytes devueltos para PHP es controlado por el parametro length.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is set to 0, Long column data is passed thru to the client.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es asignado a 0, la longitud del campo es pasado al cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling of LONGVARBINARY columns is also affected by odbc_binmode().</seg></tuv>
      <tuv xml:lang="es"><seg>El manejo de campos LONGVARBINARY tambien esta afectado por odbc_binmode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_num_fields() will return the number of fields (columns) in an ODBC result.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_num_fields() devolvera el numero de campos dentro de un ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return -1 on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion devolvera -1 en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The argument is a valid result identifier returned by odbc_exec().</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento es un identificador valido devuelto por odbc_exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_num_rows() will return the number of rows in an ODBC result.</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_num_rows() devolvera el numero de registros de un ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For INSERT, UPDATE and DELETE statements odbc_num_rows() returns the number of rows affected.</seg></tuv>
      <tuv xml:lang="es"><seg>Para declaraciones INSERT, UPDATE y DELETE odbc_num_rows() devolvera el numero de registros afectados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a SELECT clause this can be the number of rows available.</seg></tuv>
      <tuv xml:lang="es"><seg>Para una clausula SELECT esta puede ser el numero de registros permitidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using odbc_num_rows() to determine the number of rows available after a SELECT will return -1 with many drivers.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de odbc_num_rows() para determinar el numero de registros permitidos despues de un SELECT devolvera -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ODBC connection id or 0 (FALSE) on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador de conexion ODBC o 0 (FALSE) en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is much like odbc_connect(), except that the connection is not really closed when the script has finished.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion es odbc_connect(), excepto que la conexion no sea realmente cerrada cuando el script ha finalizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Future requests for a connection with the same dsn, user, password combination (via odbc_connect() and odbc_pconnect()) can reuse the persistent connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Las respuestas futuras para una conexion con la misma combinacion dsn, user, password (via odbc_connect() y odbc_pconnect()) puede reusar la conexion permanente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Persistent connections have no effect if PHP is used as a CGI program.</seg></tuv>
      <tuv xml:lang="es"><seg>Las conexiones permanentes no tienen efecto si PHP es usado como programa CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information about the optional cursor_type parameter see the odbc_connect() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para informacion acerca del paramentor opcional cursor_type ver la funcion odbc_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on persistent connections, refer to the PHP FAQ.</seg></tuv>
      <tuv xml:lang="es"><seg>Para mas informacion sobre conexiones permanentes, ir al apartado PHP FAQ.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ODBC result identifier if the SQL command was prepared successfully.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un identificador ODBC si el comando SQL esta preparado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The result identifier can be used later to execute the statement with odbc_execute().</seg></tuv>
      <tuv xml:lang="es"><seg>El identificador resultante puede ser usado mas tarde para ejecutar la declaracion con odbc_execute().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of rows in the result or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso de error, como resultado, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>odbc_result_all() will print all rows from a result identifier produced by odbc_exec().</seg></tuv>
      <tuv xml:lang="es"><seg>odbc_result_all() Imprimira todos los registros de un identificador prducidoo por odbc_exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The result is printed in HTML table format.</seg></tuv>
      <tuv xml:lang="es"><seg>El resultado es impreso en una tabla formato HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With the optional string argument format, additional overall table formatting can be done.</seg></tuv>
      <tuv xml:lang="es"><seg>Con el argumento de cadena opcional format, ademas, todas los formatos de tablas pueden ser realizadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the contents of the field.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el contenido de un campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="es"><seg>field puede ser cualquier contenido del campo que queramos; o puede ser una cadena que contenga el nombre del campo; Por ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$item_3 = odbc_result ($Query_ID, 3); $item_val = odbc_result ($Query_ID, "val");</seg></tuv>
      <tuv xml:lang="es"><seg>$item_3 = odbc_result( $Query_ID, 3); $item_val = odbc_result($Query_ID, "val");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first call to odbc_result() The first call to odbc_result() returns the value of the third field in the current record of the query result.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera sentencia odbc_result() devuelve el valor del tercer campo detro del registro actual de la cola resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second function call to odbc_result() returns the value of the field whose field name is "val "in the current record of the query result.</seg></tuv>
      <tuv xml:lang="es"><seg>La segunda funcion llama a odbc_result() y devuelve el valor de un campo cuyo nombre es "val "en el registro actual de la cola resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An error occurs if a column number parameter for a field is less than one or exceeds the number of columns (or fields) in the current record.</seg></tuv>
      <tuv xml:lang="es"><seg>Ocurre un error si un numero de columna para un campo es menor que uno o excede el numero de campos en el registro actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similarly, an error occurs if a field with a name that is not one of the fieldnames of the table( s) that is(are) being queried.</seg></tuv>
      <tuv xml:lang="es"><seg>Similarmente, ocurre un error si un campo con un nombre que no sea uno de los nombres de campo de una talba o tablas que sea o sean encoladas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field indices start from 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Los indices de campo comienzan en 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regarding the way binary or long column data is returned refer to odbc_binmode() and odbc_longreadlen().</seg></tuv>
      <tuv xml:lang="es"><seg>Recordando el metodo binario de campos con gran informacion, es devuleto con referencia a odbc_binmode () y odbc_longreadlen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rolls back all pending statements on connection_id.</seg></tuv>
      <tuv xml:lang="es"><seg>Vuelve a pasar todas las declaraciones pendientes connection_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE cuando el resultado es satisfactorio, FALSE cuando no lo es.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function allows fiddling with the ODBC options for a particular connection or query result.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion permite buscar las opciones ODBC para una conexion particular o consulta resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was written to help find work arounds to problems in quirky ODBC drivers.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto esta escrito para trabajar sobre problemas en peculiaries drivers ODBC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should probably only use this function if you are an ODBC programmer and understand the effects the various options will have.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion Solo se deberia usar siendo un programador de ODBC y entendiendo los efectos que las opciones tendran.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will certainly need a good ODBC reference to explain all the different options and values that can be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Debemos tener la certeza de que necesitamos una buena referencia de reference to explicar todas las diferentes opciones y valores que pueden ser usados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Different driver versions support different options.</seg></tuv>
      <tuv xml:lang="es"><seg>Las diferentes versiones de drivers soportan diferentes opciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because the effects may vary depending on the ODBC driver, use of this function in scripts to be made publicly available is strongly discouraged.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que los efectos pueden variar dependiendo del driver ODBC, deberiamos usar la function en scripts para ser hecho publico lo que permitira que sea fuertemente desalentado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, some ODBC options are not available to this function because they must be set before the connection is established or the query is prepared.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunas opciones ODBC no estan permitidas para esta funcion porque debe ser configurada antes de que la conexion sea establecida o la consulta este preparada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if on a particular job it can make PHP work so your boss doesn' t tell you to use a commercial product, that's all that really matters.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si un determinado trabajo hace la tarea de PHP, el jefe no contaria con nosotros para usar un producto comercial, esto es lo que realmente suele pasar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>id is a connection id or result id on which to change the settings.For SQLSetConnectOption(), this is a connection id.</seg></tuv>
      <tuv xml:lang="es"><seg>Para SQLSetConnectOption(), esta es una conexion id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For SQLSetStmtOption(), this is a result id.</seg></tuv>
      <tuv xml:lang="es"><seg>Para SQLSetStmtOption(), este es un resultado id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function is the ODBC function to use.</seg></tuv>
      <tuv xml:lang="es"><seg>function es la funcion ODBC a usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value should be 1 for SQLSetConnectOption() and 2 for SQLSetStmtOption().</seg></tuv>
      <tuv xml:lang="es"><seg>El valor deberia ser 1 para SQLSetConnectOption() y 2 para SQLSetStmtOption().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameter option is the option to set.</seg></tuv>
      <tuv xml:lang="es"><seg>Parmeter option es la opcion a configurar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameter param is the value for the given option.</seg></tuv>
      <tuv xml:lang="es"><seg>El parametro param es el valor para la escogida opcion option.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ODBC Setoption Examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos ODBC Setoption</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Option 102 of SQLSetConnectOption() is SQL_AUTOCOMMIT. / / Value 1 of SQL_AUTOCOMMIT is SQL_AUTOCOMMIT_ON. / / This example has the same effect as / / odbc_autocommit($conn, true); odbc_setoption ($conn, 1, 102, 1); / / 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Option 102 of SQLSetConnectOption() is SQL_AUTOCOMMIT. / / Value 1 of SQL_AUTOCOMMIT is SQL_AUTOCOMMIT_ON. / / Este ejemplo tiene el mismo efecto que / / odbc_autocommit($conn, true); odbc_setoption ($conn, 1, 102, 1); / / 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Option 0 of SQLSetStmtOption() is SQL_QUERY_TIMEOUT. / / This example sets the query to timeout after 30 seconds. $result = odbc_prepare ($conn, $sql); odbc_setoption ($result, 2, 0, 30); odbc_execute ($result);</seg></tuv>
      <tuv xml:lang="es"><seg>Option 0 of SQLSetStmtOption() is SQL_QUERY_TIMEOUT. / / Este ejemplo asigna el tiempo de espera de la consulta a 30 segundos. $result = odbc_prepare ($conn, $sql); odbc_setoption ($result, 2, 0, 30); odbc_execute ($result);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can suppress the error output of opendir() by prepending `@ 'to the front of the function name.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un manejador de directorio para ser usado con las llamadas closedir(), readdir() y rewinddir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Values for option and facility are given below.</seg></tuv>
      <tuv xml:lang="es"><seg>openlog() abre una conexión con el logger del sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The facility The facility argument is used to specify what type of program is logging the message.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena ident se a¤ade a cada mensaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The use of openlog() is optional.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores de option y facility se exponen en la siguiente sección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. openlog() Options</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de openlog() is opcional; Esta será llamada automaticamente por syslog() si fuera necesario, en este caso ident valdrá por defecto FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LOG_AUTHPRIV</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también syslog() y closelog().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional notext affects the verbosity of the output; if it is FALSE The optional notext affects the verbosity of the output; if it is FALSE then additional human-readable information is included in the output.</seg></tuv>
      <tuv xml:lang="es"><seg>The optional notext affects the verbosity of the output; if it is FALSE then additional human-readable information is included in the output.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_csr_new() example - creating a self-signed-certificate</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_csr_new() example - creating a self-signed-certificate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_error_string() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_error_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_open() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_open() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_pkcs7_decrypt() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_pkcs7_decrypt() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_pkcs7_encrypt() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_pkcs7_encrypt() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_pkcs7_sign() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_pkcs7_sign() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_seal() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_seal() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_sign() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_sign() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_verify() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. openssl_verify() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. openssl_x509_checkpurpose() purposes</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1. openssl_x509_checkpurpose() purposes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Oracle functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones Oracle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the bind succeeds, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si el vínculo se realiza con éxito, y sino devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Los detalles de los errores pueden examinarse usando la funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function binds the named PHP variable with a SQL parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función liga la variable PHP nombrada con el parámetro SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The SQL parameter must be in the form ":name".</seg></tuv>
      <tuv xml:lang="es"><seg>El parámtro SQL debe estar en la forma ":name".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With the optional type parameter, you can define whether the SQL parameter is an in / out (0, default), in (1) or out (2) parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Con el parámetro optativo tipo, se define si el parámetro SQL se trata de un parámetro de entrada / salida (0 y por defecto), entrada (1) o salida (2).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 3.0.1, you can use the constants ORA_BIND_INOUT, ORA_BIND_IN and ORA_BIND_OUT instead of the numbers.</seg></tuv>
      <tuv xml:lang="es"><seg>Como en PHP 3.0.1, se puede usar las constantes ORA_BIND_INOUT, ORA_BIND_IN y ORA_BIND_OUT en lugar de los números.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ora_bind must be called after ora_parse() and before ora_exec().</seg></tuv>
      <tuv xml:lang="es"><seg>ora_bind debe ser llamada después de ora_parse() y antes de ora_exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Input values can be given by assignment to the bound PHP variables, after calling ora_exec() the bound PHP variables contain the output values if available.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores de entrada pueden pasarse por asignación a las variables PHP vinculadas, despues de la llamada a ora_exec() dichas variables contendrán los valores de salida, si éstos estuvieran disponibles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the close succeeds, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si el cierre fué exitoso, o falso de lo contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Los detalles de los errores se recuperan usando las funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function closes a data cursor opened with ora_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función cierra un cursor de datos abierto con ora_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned name is in all uppercase letters.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nomre de un campo / columna column en el cursor cursor. el nombre devuelto estará en letras mayúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Oracle data type name of the field / column column on the cursor cursor.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre del tipo de datos del campo o columna column en el cursor cursor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned type will be one of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Se devolverá un tipo de datos, de entre los siguientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si es exitosa, de lo cantrario devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede verse los detalles del error usando las funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function commits an Oracle transaction.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función realiza una transacción Oracle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A transaction is defined as all the changes on a given connection since the last commit / rollback, autocommit was turned off or when the connection was established.</seg></tuv>
      <tuv xml:lang="es"><seg>Se define como transacción cualquier cambio en una conexión dada, desde la última tarea / retroceso en la ejecucion (rollback), anulación de la ejecución automática de tareas (autocommit), o cuando se ha establecido la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si se ejecuta con éxito, sino devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Los pormenores del error en cuestion, pueden revisarse invocando las funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function turns off automatic commit after each ora_exec().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función deshabilita la ejecucion automatica luego de cada instancia ora_exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function turns on automatic commit after each ora_exec() on the given connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función habilita la ejecucion automatica luego de cada instancia ora_exec() en la conexión dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the numeric error code of the last executed statement on the specified cursor or connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el codigo numérico de error de la última declaración ejecutada en el cursor o conexion espacificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for connection ids was added in 3.0.4.</seg></tuv>
      <tuv xml:lang="es"><seg>El soporte para las identificaciones de conexión fue agregado en la versión 3.0.4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an error message of the form XXX - NNNNN where XXX is where the error comes from and NNNNN identifies the error message.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve los mensajes de error en la forma XXX - NNNNN donde XXX es la procedencia del error y NNNNN es la identificación del mensaje de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero ante la ejecución exitosa, de lo contrario, devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ora_parse(), ora_fetch(), and ora_do().</seg></tuv>
      <tuv xml:lang="es"><seg>Los detalles del error pueden verse invocando las funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE (a row was fetched) or FALSE (no more rows, or an error occured).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero (se extrajo una fila) o falso (no hay mas filas, o ha ocurrido un error).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there was no error, ora_errorcode() will return 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, los detalles del mismo pueden verse invocando las funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Retrieves a row of data from the specified cursor.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hubo errores, ora_errorcode() devolverá 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ora_parse(), ora_exec(), and ora_do().</seg></tuv>
      <tuv xml:lang="es"><seg>Recupera una hilera de datos partiendo de un cursor especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ora_fetch_into()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ora_fetch_into()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the column data.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la columna de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, FALSE is returned and ora_errorcode() will return a non-zero value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay un error, se devuelve falso y ora_errorcode() devulve un valor distinto de cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, however, that a test for FALSE on the results from this function may be TRUE in cases where there is not error as well (NULL result, empty string, the number 0, the string "0").</seg></tuv>
      <tuv xml:lang="es"><seg>Note, de igual manera, que la busqueda de un resultado Falso en esta función, puede resultar verdadera, aún en casos en que no ocurran errores :( resultado NULO, cadenas vacias, valor 0 o cadenas "0").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fetches the data for a column or function result.</seg></tuv>
      <tuv xml:lang="es"><seg>Extrae los datos para una columna o resultado de función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si es exitosa, o falso si hay errores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Los detalles del error pueden verse invocando las funciones ora_error() y ora_errorcode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ora_logon().</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra la sesión de trabajo del usuario, y lo desconecta del servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Establishes a connection between PHP and an Oracle database with the given username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece una conexión entre PHP y una base de datos Oracle, con los datos de nombre de usuario y contraseña especificados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Connections can be made using SQL*Net by supplying the TNS name to user like this:</seg></tuv>
      <tuv xml:lang="es"><seg>Las conexiones pueden llevarse adelante usando SQL*Net indicando el nombre TNS al usuario de este modo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$conn = Ora_Logon( "user@TNSNAME", "pass");</seg></tuv>
      <tuv xml:lang="es"><seg>$conn = Ora_Logon( "usuario @TNSNAME ", "contraseña");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have character data with non-ASCII characters, you should make sure that NLS_LANG is set in your environment.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hubiesen datos con caracteres no-ASCII, habría que asegurarse de que esté presente la variable de entorno NLS_LANG en el sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For server modules, you should set it in the server 's environment before starting the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Para los modulos de servidor, deberían definirse en el entorno del servidor antes de iniciarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a connection index on success, or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el índice de la conexión si aquella tuvo éxito, de lo cantrario devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens an Oracle cursor associated with connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Abre un cursor asociado con la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a cursor index or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el índice del cursor o Falso si hay un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función interpreta una declaración SQL o un bloque PL / SQL y los asocia con el cursor dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ora_exec(), ora_fetch(), and ora_do().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve 0 si se ejecuta con exito, o -1 ante un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function undoes an Oracle transaction. (See ora_commit() for the definition of a transaction.)</seg></tuv>
      <tuv xml:lang="es"><seg>Deshace una transaccion Oracle. (Ver ora_commit() para la definición de transacción.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve verdadero si tiene éxito, o falso si hay un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the ASCII value of the first character of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor ASCII del primer caracter de cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function complements chr().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función complementa a chr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ord() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find an ASCII-table over here: http: / /www.asciitable.com.</seg></tuv>
      <tuv xml:lang="es"><seg>if (ord ($cad) == 10) {echo "El primer caracter de \$cad es un salto de línea.\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también chr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ovrimos_connect() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ovrimos_connect() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = ovrimos_connect ("server.domain.com", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res=ovrimos_exec ($conn, "select table_id, table_name from sys.tables"); if ($res != 0) {echo "Statement ok !"; ovrimos_result_all ($res); ovrimos_free_result ($res);} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn = ovrimos_connect ("server.domain.com", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res=ovrimos_exec ($conn, "select table_id, table_name from sys.tables"); if ($res != 0) {echo "Statement ok !"; ovrimos_result_all ($res); ovrimos_free_result ($res);} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn=ovrimos_connect ("neptune", "8001", "admin", "password"); if ($conn!=0) {echo "Connection ok !"; $res=ovrimos_exec ($conn ,"select table_id, table_name from sys.tables"); if ($res != 0) {echo "Statement ok !"; if (ovrimos_fetch_into ($res, $row)) {list ($table_id, $table_name) = $row; echo "table_id=".$table_id .", table_name=".$table_name ."\n"; if (ovrimos_fetch_into ($res, $row)) {list ($table_id, $table_name) = $row; echo "table_id=".$table_id .", table_name=".$table_name ."\n";} else {echo "Next: error\n";}} else {echo "First: error\n";} ovrimos_free_result ($res);} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn=ovrimos_connect ("neptune", "8001", "admin", "password"); if ($conn!=0) {echo "Connection ok !"; $res=ovrimos_exec ($conn ,"select table_id, table_name from sys.tables"); if ($res != 0) {echo "Statement ok !"; if (ovrimos_fetch_into ($res, $row)) {list ($table_id, $table_name) = $row; echo "table_id=".$table_id .", table_name=".$table_name ."\n"; if (ovrimos_fetch_into ($res, $row)) {list ($table_id, $table_name) = $row; echo "table_id=".$table_id .", table_name=".$table_name ."\n";} else {echo "Next: error\n";}} else {echo "First: error\n";} ovrimos_free_result ($res);} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = ovrimos_connect ("remote.host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res=ovrimos_exec ($conn, "select table_id, table_name from sys.tables"); if ($res != 0) {echo "Statement ok !"; if (ovrimos_fetch_row ($res, "First")) {$table_id = ovrimos_result ($res, 1); $table_name = ovrimos_result ($res, 2); echo "table_id=".$table_id .", table_name=".$table_name ."\n"; if (ovrimos_fetch_row ($res, "Next")) {$table_id = ovrimos_result ($res, "table_id"); $table_name = ovrimos_result ($res, "table_name"); echo "table_id=".$table_id .", table_name=".$table_name ."\n";} else {echo "Next: error\n";}} else {echo "First: error\n";} ovrimos_free_result ($res);} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn = ovrimos_connect ("remote.host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res=ovrimos_exec ($conn, "select table_id, table_name from sys.tables"); if ($res != 0) {echo "Statement ok !"; if (ovrimos_fetch_row ($res, "First")) {$table_id = ovrimos_result ($res, 1); $table_name = ovrimos_result ($res, 2); echo "table_id=".$table_id .", table_name=".$table_name ."\n"; if (ovrimos_fetch_row ($res, "Next")) {$table_id = ovrimos_result ($res, "table_id"); $table_name = ovrimos_result ($res, "table_name"); echo "table_id=".$table_id .", table_name=".$table_name ."\n";} else {echo "Next: error\n";}} else {echo "First: error\n";} ovrimos_free_result ($res);} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_field_len() is used to get the length of the output column with number field_number, in result result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>ovrimos_field_len() is used to get the length of the output column.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_free_result() frees the specified result_id result_id.</seg></tuv>
      <tuv xml:lang="es"><seg>ovrimos_free_result() frees the specified result_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It currently sets this parameter the specified result set.</seg></tuv>
      <tuv xml:lang="es"><seg>Regardless of its taking a result_id as an argument, it currently sets this parameter for all result sets.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn=ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn!=0) {echo "Connection ok !"; $res=ovrimos_prepare ($conn, "select table_id, table_name from sys.tables where table_id=1"); if ($res != 0) {echo "Prepare ok !"; if (ovrimos_execute ($res)) {echo "Execute ok!\n"; ovrimos_result_all ($res);} else {echo "Execute not ok !";} ovrimos_free_result ($res);} else {echo "Prepare not ok!\n";} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn=ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn!=0) {echo "Connection ok !"; $res=ovrimos_prepare ($conn, "select table_id, table_name from sys.tables where table_id=1"); if ($res != 0) {echo "Prepare ok !"; if (ovrimos_execute ($res)) {echo "Execute ok!\n"; ovrimos_result_all ($res);} else {echo "Execute not ok !";} ovrimos_free_result ($res);} else {echo "Prepare not ok!\n";} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res = ovrimos_prepare ($conn, "select table_id, table_name from sys.tables where table_id = 7"); if ($res != 0) {echo "Prepare ok !"; if (ovrimos_execute ($res, array(3))) {echo "Execute ok!\n"; ovrimos_result_all ($res);} else {echo "Execute not ok !";} ovrimos_free_result ($res);} else {echo "Prepare not ok!\n";} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn = ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res = ovrimos_prepare ($conn, "select table_id, table_name from sys.tables where table_id = 7"); if ($res != 0) {echo "Prepare ok !"; if (ovrimos_execute ($res, array(3))) {echo "Execute ok!\n"; ovrimos_result_all ($res);} else {echo "Execute not ok !";} ovrimos_free_result ($res);} else {echo "Prepare not ok!\n";} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res = ovrimos_exec ($conn, "select table_id, table_name from sys.tables where table_id = 1") if ($res != 0) {echo "Statement ok! cursor=".ovrimos_cursor ($res) ."\n"; $colnb = ovrimos_num_fields ($res); echo "Output columns=".$colnb ."\n"; for ($i=1; $i = $colnb; $i++) {$name = ovrimos_field_name ($res, $i); $type = ovrimos_field_type ($res, $i); $len = ovrimos_field_len ($res, $i); echo "Column ".$i. "name=".$name." type=".$type. "len=".$len ."\n";} ovrimos_result_all ($res); ovrimos_free_result ($res);} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn = ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res = ovrimos_exec ($conn, "select table_id, table_name from sys.tables where table_id = 1") if ($res != 0) {echo "Statement ok! cursor=".ovrimos_cursor ($res) ."\n"; $colnb = ovrimos_num_fields ($res); echo "Output columns=".$colnb ."\n"; for ($i=1; $i =$colnb; $i++) {$name = ovrimos_field_name ($res, $i); $type = ovrimos_field_type ($res, $i); $len = ovrimos_field_len ($res, $i); echo "Column ".$i. "name=".$name." type=".$type. "len=".$len ."\n";} ovrimos_result_all ($res); ovrimos_free_result ($res);} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. ovrimos_result_all example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. ovrimos_result_all example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res = ovrimos_exec ($conn, "update test set i=5"); if ($res != 0) {echo "Statement ok !"; echo ovrimos_num_rows ($res). "rows affected\n"; ovrimos_free_result ($res);} ovrimos_close($conn);}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn = ovrimos_connect ("db_host", "8001", "admin", "password"); if ($conn != 0) {echo "Connection ok !"; $res = ovrimos_exec ($conn, "update test set i=5"); if ($res != 0) {echo "Statement ok !"; echo ovrimos_num_rows ($res). "rows affected\n"; ovrimos_free_result ($res);} ovrimos_close ($conn);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pack given arguments into binary string according to format.</seg></tuv>
      <tuv xml:lang="es"><seg>Empaqueta los argumentos dados en una cadena binaria siguiendo el formato format.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns binary string containing data.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena binaria que contiene los datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The idea to this function was taken from Perl and all formatting codes work the same as there, however, there are some formatting codes that are missing such as Perl' s "u "format code.</seg></tuv>
      <tuv xml:lang="es"><seg>El concepto de esta función fue tomado de Perl y todos los códigos de formateo realizan la misma función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format string consists of format codes followed by an optional repeater argument.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena de formato consiste en códigos de formato seguidos por un argumento opcional de repetición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The repeater argument can be either an integer value or * for repeating to the end of the input data.</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento de repetición puede ser un valor entero o * para repetir hasta el fin de la entrada de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a, A, h, H the repeat count specifies how many characters of one data argument are taken, for @ it is the absolute position where to put the next data, for everything else the repeat count specifies how many data arguments are consumed and packed into the resulting binary string.</seg></tuv>
      <tuv xml:lang="es"><seg>Para a, A, h, H la cuenta de repetición representa cuántos caracteres se toman de un argumento de datos, para @ es la posición absoluta donde poner los datos siguientes, para todo lo demás la cuenta de repetición especifica cuántos argumentos de datos se toman y empaquetan en la cadena binaria resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently implemented are</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente están implementados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>a NUL-padded string</seg></tuv>
      <tuv xml:lang="es"><seg>a cadena rellena de NUL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A SPACE-padded string</seg></tuv>
      <tuv xml:lang="es"><seg>A cadena rellena de ESPACIOS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>h Hex string, low nibble first</seg></tuv>
      <tuv xml:lang="es"><seg>h cadena Hex, primero el medio byte inferior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>H Hex string, high nibble first</seg></tuv>
      <tuv xml:lang="es"><seg>H cadena Hex, primero el medio byte superior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>c signed char</seg></tuv>
      <tuv xml:lang="es"><seg>c signed (con signo) char</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>C unsigned char</seg></tuv>
      <tuv xml:lang="es"><seg>C unsigned (sin signo) char</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>s signed short (always 16 bit, machine byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>s signed short (siempre 16 bits, distribución de bytes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>S unsigned short (always 16 bit, machine byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>S unsigned short (siempre 16 bits, distribución de bytes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>n unsigned short (always 16 bit, big endian byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>n unsigned short (siempre 16 bits, distribución de bytes gran endian)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>v unsigned short (always 16 bit, little endian byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>v unsigned short (siempre 16 bits, distribución de bytes pequeño endian)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>i signed integer (machine dependent size and byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>i signed integer (distribución de bytes y tamaños dependientes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>I unsigned integer (machine dependent size and byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>I unsigned integer (distribución de bytes y tamaños dependientes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>l signed long (always 32 bit, machine byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>l signed long (siempre 32 bits, distribución de bytes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>L unsigned long (always 32 bit, machine byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>L unsigned long (siempre 32 bits, distribución de bytes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>N unsigned long (always 32 bit, big endian byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>N unsigned long (siempre 32 bits, distribución de bytes gran endian)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>V unsigned long (always 32 bit, little endian byte order)</seg></tuv>
      <tuv xml:lang="es"><seg>V unsigned long (siempre 32 bits, distribución de bytes pequeño endian)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>f float (machine dependent size and representation)</seg></tuv>
      <tuv xml:lang="es"><seg>f float (representación y tamaño dependientes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>d double (machine dependent size and representation)</seg></tuv>
      <tuv xml:lang="es"><seg>d double (representación y tamaño dependientes de la máquina)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>x NUL byte</seg></tuv>
      <tuv xml:lang="es"><seg>x byte NUL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>X Back up one byte</seg></tuv>
      <tuv xml:lang="es"><seg>X Un byte hacia atrás</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>@ NUL-fill to absolute position</seg></tuv>
      <tuv xml:lang="es"><seg>@ relleno con NUL en la posición absoluta</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pack() format string</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. cadena de formato para pack</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$binarydata = pack ("nvc*", 0x1234, 0x5678, 65, 66);</seg></tuv>
      <tuv xml:lang="es"><seg>$binarydata = pack( "nvc*", 0x1234, 0x5678, 65, 66);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting binary string will be 6 bytes long and contain the byte sequence 0x12, 0x34, 0x78, 0x56, 0x41, 0x42.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena binaria resultante tendrá 6 bytes de longitud y contendrá la secuencia de bytes 0x12, 0x34, 0x78, 0x56, 0x41, 0x42.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the distinction between signed and unsigned values only affects the function unpack(), where as function pack() gives the same result for signed and unsigned format codes.</seg></tuv>
      <tuv xml:lang="es"><seg>Adviértase que la distinción entre valores signed (con signo) y unsigned (sin signo) sólo afecta a la función unpack(), ya que la función pack() da el mismo resultado para códigos de formato con signo y sin signo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also note that PHP internally stores integer Also note that PHP internally stores integer values as signed values of a machine dependent size.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese también que internamente PHP almacena valores enteros como valores con signo de un tamaño dependiente de la máquina.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you give it an unsigned integer value too large to be stored that way it is converted to a float which often yields an undesired result.</seg></tuv>
      <tuv xml:lang="es"><seg>Si le da un valor entero sin signo demasiado grande para ser almacenado, será convertido a un double (doble), lo que a menudo produce resultados no deseados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. parse_ini_file() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. parse_ini_file() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Divide cad como si fuera la cadena de consulta enviada por un URL y crea las variables en el ámbito actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, you may want to read the section on variables from outside of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Usando parse_str()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also parse_url(), pathinfo(), set_magic_quotes_runtime(), and urldecode().</seg></tuv>
      <tuv xml:lang="es"><seg>$cad = "primero=valor segundo[]=esto+funciona segundo[]=otro"; parse_str($cad); echo $primero; / * escribe "valor" * / echo $segundo[0]; / * escribe "esto funciona "* / echo $segundo[1]; / * escribe "otro" * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not meant to validate the given URL, it only breaks it up into the above listed parts.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve una matriz que apunta a alguno de los componentes de la URL que estén presentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto incluye el "esquema", "host", "puerto", "usuario", "pass", "path", "consulta", y "fragmento".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the return_var argument is present, the return status of the Unix command will be placed here.</seg></tuv>
      <tuv xml:lang="es"><seg>La función passthru() es similar a la función exec() en que ejecuta una orden (command).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function should be used in place of exec() or system() when the output from the Unix command is binary data which needs to be passed directly back to the browser.</seg></tuv>
      <tuv xml:lang="es"><seg>Si existe el parámetro return_var, el valor de estado devuelto por la orden Unix se guardará ahí.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By setting the Content-type to image / gif and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función debería usarse en lugar de exec() o system() cuando la salida de la orden Unix sean datos binarios que deban ser pasados directamente al navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are going to allow data coming from user input to be passed to this function, then you should be using escapeshellarg() or escapeshellcmd() to make sure that users cannot trick the system into executing arbitrary commands.</seg></tuv>
      <tuv xml:lang="es"><seg>Un uso típico de ello es ejecutar algo como las utilidades pbmplus las cuales pueden dar como resultado directamente el flujo de datos de una imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you start a program using this function and want to leave it running in the background, you have to make sure that the output of that program is redirected to a file or some other output stream or else PHP will hang until the execution of the program ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Poniendo el content-type a image / gif y llamando al programa pbmplus para mostrar un gif, usted puede crear archivos de órdenes PHP que generen directamente imágenes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also exec(), system(), popen(), escapeshellcmd(), and the backtick operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también exec(), system(), popen(), EscapeShellCmd(), y el operador ` (apóstrofe invertido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pathinfo() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pathinfo() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes a file pointer to a pipe opened by popen().</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra un fichero que representa un tuberia (pipe) abierta con popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must have been returned by a successful call to popen().</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser válido, y debe haber sido devuelto por una llamada con éxito a popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the termination status of the process that was run.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el estado de terminación del proceso que estaba ejecutándose.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also popen().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pcntl_fork() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pcntl_fork() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pcntl_signal() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pcntl_signal() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. possible values for pid</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1. possible values for pid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. possible values for options</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 2. possible values for options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Program Execution functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de ejecución de programas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_add_outline() is replaced by pdf_add_note()</seg></tuv>
      <tuv xml:lang="es"><seg>(PHP 3 = 3.0.12, PHP 4)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_add_note().</seg></tuv>
      <tuv xml:lang="es"><seg>The pdf_add_annotation() adds a note with the lower left corner at (llx, lly) and the upper right corner at (urx, ury).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_add_outline</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_add_outline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>The return value is an identifier for the bookmark which can be used as a parent for other bookmarks.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_add_bookmark().</seg></tuv>
      <tuv xml:lang="es"><seg>Currently this piece of memory is not been freed by any PDF function but it will be taken care of by the PHP memory manager.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_arc</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_arc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Draw a counterclockwise circular arc from alpha to beta degrees</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_arc() function draws an arc with center at point (x-coor, y-coor) and radius radius, starting at angle start and ending at angle end.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: pdf_arcn()</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_circle(), PDF_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_begin_page</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_begin_page</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add a new page to the document.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_begin_page() function starts a new page with height height and width width.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The width and height are specified in points, which are 1 / 72 of an inch.</seg></tuv>
      <tuv xml:lang="es"><seg>In order to create a valid document you must call this function and PDF_end_page().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Common Page Sizes in Points</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_end_page().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>letter (8.5"✗11")</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>legal (8.5"✗14")</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ledger (17"✗11")</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_circle</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_circle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Draw a circle with center (x, y) and radius r.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_arc(), PDF_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_clip</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_clip</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the current path as clipping path.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_clip() function clips all drawing to the current path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_close_image</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_close_image</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>This should not be done because pdflib did not open the file, but expects an already open file when PDF_open() is called.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close the generated PDF file, and free all document-related resources.</seg></tuv>
      <tuv xml:lang="es"><seg>In order to fix this just take out line 190 of the file p_basic.c in the pdflib 0.6 source distribution until the next release of pdflib will fix this.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_closepath_fill_stroke</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_closepath_fill_stroke</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close an image retrieved with one of the pdf_open_image*() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_open_jpeg(), PDF_open_gif(), PDF_open_memory_image().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_closepath_fill_stroke() function closes, fills the interior of the current path with the current fill color and draws current path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close the path, fill, and stroke it.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_closepath(), PDF_stroke(), PDF_fill(), PDF_setgray_fill(), PDF_setgray(), PDF_setrgbcolor_fill(), PDF_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_close</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_closepath_stroke</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_closepath_stroke</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close the current path.</seg></tuv>
      <tuv xml:lang="es"><seg>Many functions like PDF_moveto(), PDF_circle() and PDF_rect() start a new path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_closepath_stroke() function is a combination of PDF_closepath() and PDF_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close the path, and stroke it.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_closepath(), PDF_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_closepath</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_closepath</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_continue_text</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_continue_text</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Print text at the next line.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_continue_text() function outputs the string in text The PDF_continue_text() function outputs the string in text in the next line.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The spacing between lines is determined by the leading parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_show_xy(), PDF_set_leading(), PDF_set_text_pos().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_curveto</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_curveto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Draw a Bezier curve from the current point, using 3 more control points.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_moveto(), PDF_lineto(), PDF_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_end_page</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_end_page</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_end_page() function ends a page.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Finish the page.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_begin_page().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated, use one of the stroke, fill, or clip functions instead.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_closepath().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_fill_stroke</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_fill_stroke</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_endpath</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_endpath</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_fill() function fills the interior of the current path with the current fill color.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fill the interior of the path with the current fill color.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_closepath(), PDF_stroke(), PDF_setgray_fill(), PDF_setgray(), PDF_setrgbcolor_fill(), PDF_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_fill_stroke() function fills the interior of the current path with the current fill color and draws current path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fill and stroke the path with the current fill and stroke color.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_closepath(), PDF_stroke(), PDF_fill(), PDF_setgray_fill(), PDF_setgray(), PDF_setrgbcolor_fill(), PDF_setrgbcolor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_fill</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_fill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pdf_findfont() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pdf_findfont() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>pdf_get_font - - Deprecated: font handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>pdf_get_fontname - - Deprecated: font handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>pdf_get_fontsize - - Deprecated: font handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_parameter</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_get_parameter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="es"><seg>The function parameter modifier characterizes the parameter to get.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Get the contents of some PDFlib parameter with string type.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_get_value(), PDF_set_value(), PDF_set_parameter().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_value</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_get_value</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="es"><seg>The function parameter modifier The function parameter modifier characterizes the parameter to get.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Get the contents of some PDFlib parameter with float type.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_value(), PDF_get_parameter(), PDF_set_parameter().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_lineto</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_lineto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Draw a line from the current point to (x, y).</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_moveto(), PDF_curveto(), PDF_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_moveto</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_moveto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_text_pos() to set the text output position.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_moveto() function sets the current point to the coordinates x-coor and y-coor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_gif</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_open_gif</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>The format of the image has to be gif.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_open_image(),</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_close_image(), PDF_open_jpeg(), PDF_open_memory_image(), PDF_execute_image(), PDF_place_image(), PDF_put_image().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open() is deprecated, use pdf_new() plus pdf_open_file() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>The info structure will be deleted within this function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_new(), pdf_open_file().</seg></tuv>
      <tuv xml:lang="es"><seg>See also fopen(), PDF_get_info(), PDF_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_place_image</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_place_image</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_jpeg</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_open_jpeg</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>The format of the image has to be jpeg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_open_image(),</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_close_image(), PDF_open_gif(), PDF_open_png(), PDF_open_memory_image(), PDF_execute_image(), PDF_place_image(), PDF_put_image().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_memory_image</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_open_memory_image</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The pdf_open_memory_image() The pdf_open_memory_image() function takes an image created with the PHP's image functions and makes it available for the pdf object.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_open_memory_image() The PDF_open_memory_image() function takes an image created with the PHP 's image functions and makes it available for the pdf document.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_close_image(), pdf_place_image().</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_close_image(), PDF_open_jpeg(), PDF_open_gif(), PDF_open_png() PDF_execute_image(), PDF_place_image(), PDF_put_image().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_png</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_open_png</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>The format of the image has to be png.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_open_image().</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_close_image(), PDF_open_jpeg(), PDF_open_gif(), PDF_open_memory_image(), PDF_execute_image(), PDF_place_image(), PDF_put_image().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_place_image() function places an image on the page at postion (x-coor, x-coor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Place an image with the lower left corner at (x, y), and scale it.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_put_image().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_rect</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_rect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_rect() function draws a rectangle with its lower left corner at point (x-coor, y-coor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Draw a rectangle at lower left (x, y) with width and height.</seg></tuv>
      <tuv xml:lang="es"><seg>This height is set to height.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_restore</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_restore</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>It works like the postscript command grestore.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Restore the most recently saved graphics state.</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_restore( $pdf)?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_rotate</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_rotate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rotate the coordinate system by phi degrees.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_rotate() function sets the rotation in degress to angle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_save</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_save</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>It works like the postscript command gsave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Save the current graphics state.</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_save() should always be followed by PDF_restore() to restore the environment before PDF_save().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_scale</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_scale</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_scale() function sets the scaling factor in both directions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Scale the coordinate system.</seg></tuv>
      <tuv xml:lang="es"><seg>The following line will therefore be drawn one inch in both directions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_border_color</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_border_color</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.12, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_border_color() The PDF_set_border_color() function sets the color of the suroundig box of links and annotations.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the border color for all kinds of annotations.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_border_style(), PDF_set_border_dash().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_border_dash</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_border_dash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the border dash style for all kinds of annotations.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_border_dash() function sets the lenght of black and white areas of a dashed line of the suroundig box of links and annotations.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_setdash().</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_border_style(), PDF_set_border_color().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_border_style</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_border_style</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.12, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_border_style() The PDF_set_border_style() function sets the style and width of the suroundig box of links and annotations.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the border style for all kinds of annotations. style is "solid" or "dashed ".</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_border_color(), PDF_set_border_dash().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_char_spacing</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_char_spacing</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_set_value(),</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_word_spacing(), PDF_set_leading().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_duration</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_duration</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_word_spacing</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_word_spacing</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setdash</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setdash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current dash pattern to b black and w white units.</seg></tuv>
      <tuv xml:lang="es"><seg>If both are 0 a solid line is set.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setflat</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setflat</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_value().</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_transition().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_font</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_font</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the flatness to a value between 0 and 100 inclusive.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setflat() function sets the flatness to a value between 0 and 100.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>If you use php3 or a version of pdflib older than 2.20 the fourth parameter encoding can take the following values:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should use pdf_findfont() plus pdf_setfont() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>To embed a font is usually a good idea if the font is not widely spread and you cannot ensure that the person watching your document has access on fonts in the document.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_findfont(), pdf_setfont().</seg></tuv>
      <tuv xml:lang="es"><seg>Otherwise, the font will be embedded several times (Thanks to Paul Haddon for finding this.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_horiz_scaling</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_horiz_scaling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setgray_fill</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setgray_fill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current fill color to a gray value between 0 and 1 inclusive.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setgray_fill() function sets the current gray value to fill a path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated, use pdf_setcolor() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_setrgbcolor_fill().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setgray_stroke</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setgray_stroke</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current fill and stroke color.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setgray() function sets the current drawing and filling color to the given gray value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated, use pdf_setcolor() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_setrgbcolor_stroke(), PDF_setrgbcolor_fill().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setlinecap</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setlinecap</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current stroke color to a gray value between 0 and 1 inclusive</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setgray_stroke() function sets the current drawing color to the given gray value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated, use pdf_setcolor() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_setrgbcolor_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setgray</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setgray</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_set_value(),</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_horiz_scaling() function sets the horizontal scaling to scale percent.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="es"><seg>Possible values for the fieldname are 'Subject', 'Title', 'Creator', 'Author', 'Keywords' and one user-defined name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fill document information field key with value. key is one of "Subject", "Title", "Creator", "Author", "Keywords", or a user-defined key.</seg></tuv>
      <tuv xml:lang="es"><seg>This function replaces PDF_set_info_keywords(), PDF_set_info_title(), PDF_set_info_subject(), PDF_set_info_creator(), PDF_set_info_sybject().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_leading</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_leading</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_leading() function sets the distance between text lines.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_set_value(),</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_continue_text().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_parameter</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_parameter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the linecap parameter to a value between 0 and 2 inclusive.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setlinecap() function sets the linecap parameter between a value of 0 and 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setlinejoin</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setlinejoin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the line join parameter to a value between 0 and 2 inclusive.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setlinejoin() function sets the linejoin parameter between a value of 0 and 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setlinewidth</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setlinewidth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current linewidth to width.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setlinewidth() function sets the line width to width.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setmiterlimit</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setmiterlimit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the miter limit to a value greater than or equal to 1.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setmiterlimit() function sets the miter limit to a value greater of equal than 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set some PDFlib parameter with string type.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_get_value(), PDF_set_value(), PDF_get_parameter().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_text_matrix</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_text_matrix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setrgbcolor_fill</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setrgbcolor_fill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current fill color to the supplied RGB values.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setrgbcolor_fill() function sets the current rgb color value to fill a path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setrgbcolor_stroke</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setrgbcolor_stroke</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current fill and stroke color to the supplied RGB values.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setrgbcolor_stroke() function sets the current drawing and filling color to the given rgb color value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_show_boxed</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_show_boxed</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current stroke color to the supplied RGB values.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_setrgbcolor_stroke() function sets the current drawing color to the given rgb color value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_setrgbcolor</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_setrgbcolor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_paramter().</seg></tuv>
      <tuv xml:lang="es"><seg>The matrix has to passed as an array with six elements.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_text_pos</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_text_pos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_text_pos() function sets the position of text for the next pdf_show() function call.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the text output position.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_show(), PDF_show_xy().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_text_rendering</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_text_rendering</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_value(),</seg></tuv>
      <tuv xml:lang="es"><seg>The possible values for mode are 0=fill text, 1=stroke text, 2=fill and stroke text, 3=invisible, 4=fill text and add it to cliping path, 5=stroke text and add it to clipping path, 6=fill and stroke text and add it to cliping path, 7=add it to clipping path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_text_rise</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_text_rise</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_value(),</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_set_text_rise() function sets the text rising to rise points.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_set_value</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the value of some PDFlib parameter with float type.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_get_value(), PDF_get_parameter(), PDF_set_parameter().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_set_value(),</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_char_spacing(), PDF_set_leading().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Format text in the current font and size into the supplied text box according to the requested formatting mode, which must be one of "left", "right", "center", "justify", or "fulljustify".</seg></tuv>
      <tuv xml:lang="es"><seg>The boxes dimension is height by width.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If width and height are 0, only a single line is placed at the point (left, top) in the requested mode.</seg></tuv>
      <tuv xml:lang="es"><seg>If width and height are zero, the mode can be "left", "right" or "center ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of characters that did not fit in the specified box.</seg></tuv>
      <tuv xml:lang="es"><seg>If width or height is unequal zero it can also be "justify" and "fulljustify ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns 0 if all characters fit or the width and height parameters were set to 0 for single-line formattting.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_show(), PDF_show_xy().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_show_xy</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_show_xy</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Print text in the current font and size at the current position.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_show_xy(), PDF_set_text_pos(), PDF_set_font().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_skew</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_skew</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Print text in the current font at (x, y).</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_show().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_show</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_show</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Skew the coordinate system in x and y direction by alpha and beta degrees.</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_skew() function skew the coordinate system by alpha (x) and beta (y) degrees. alpha and beta may not be 90 or 270 degrees.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_stringwidth</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_stringwidth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that font is a font handle returned by pdf_findfont().</seg></tuv>
      <tuv xml:lang="es"><seg>The PDF_stringwidth() function returns the width of the string in text by using the current font.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both the font and size parameters must used together.</seg></tuv>
      <tuv xml:lang="es"><seg>It requires a font to be set before with PDF_set_font().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Also: pdf_setfont() and pdf_findfont().</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_set_font().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_stroke</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_stroke</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The current path is the sum of all line drawing.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Stroke the path with the current color and line width, and clear it.</seg></tuv>
      <tuv xml:lang="es"><seg>See also PDF_closepath(), PDF_closepath_stroke().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_translate</seg></tuv>
      <tuv xml:lang="es"><seg>PDF_translate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="es"><seg>The following example draws a line from (0, 0) to (200, 200) relative to the initial coordinate system.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Translate the origin of the coordinate system.</seg></tuv>
      <tuv xml:lang="es"><seg>?php PDF_moveto( $pdf, 0, 0); PDF_lineto($pdf, 100, 100); PDF_stroke($pdf); PDF_translate($pdf, 100, 100); PDF_moveto($pdf, 0, 0); PDF_lineto($pdf, 100, 100); PDF_stroke($pdf);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php pfpro_init(); $transaction = array('USER '= 'mylogin', 'PWD' = 'mypassword', 'PARTNER '= 'VeriSign', 'TRXTYPE' = 'S', 'TENDER '= 'C', 'AMT' = 1.50, 'ACCT '= '4111111111111111', 'EXPDATE' = '0904 '); $response = pfpro_process($transaction); if (!$response) {die("Couldn't establish link to Verisign.\n");} echo "Verisign response code was ".$response['RESULT']; echo ", which means: ".$response['RESPMSG'] ."\n"; echo "\nThe transaction request:"; print_r($transaction); echo "\nThe response: "; print_r($response); pfpro_cleanup();?</seg></tuv>
      <tuv xml:lang="es"><seg>?php pfpro_init(); $transaction = array(USER = 'mylogin', PWD = 'mypassword', TRXTYPE = 'S', TENDER = 'C', AMT = 1.50, ACCT = '4111111111111111', EXPDATE = '0904 '); $response = pfpro_process($transaction); if (!$response) {die("Couldn't establish link to Verisign.\n");} echo "Verisign response code was ".$response[RESULT]; echo ", which means: ".$response[RESPMSG] ."\n"; echo "\nThe transaction request:"; print_r($transaction); echo "\nThe response: "; print_r($response); pfpro_cleanup();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php pfpro_init(); $response = pfpro_process_raw("USER=mylogin PWD[5]=m ndy PARTNER=VeriSign TRXTYPE=S TENDER=C AMT=1.50 ACCT=4111111111111111 EXPDATE=0904"); if (!$response) {die("Couldn't establish link to Verisign.\n");} echo "Verisign raw response was ".$response; pfpro_cleanup();?</seg></tuv>
      <tuv xml:lang="es"><seg>?php pfpro_init(); $response = pfpro_process("USER=mylogin PWD[5]=m ndy TRXTYPE=S TENDER=C AMT=1.50 ACCT=4111111111111111 EXPDATE=0904"); if (!$response) {die("Couldn't establish link to Verisign.\n");} echo "Verisign raw response was ".$response; pfpro_cleanup();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function behaves exactly as fsockopen() with the difference that the connection is not closed after the script finishes.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función se comporta exactamente como fsockopen() con la diferencia que la conexion no se cierra después de que termine el script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is the persistent version of fsockopen().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es la versión persistente de fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_affected_rows()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pg_affected_rows()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de PostgreSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_close</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si connection no es un indice de conexión valido y TRUE en cualquier otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is open large object resource on the connection, do not close the connection before closing all large object resources.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierra la conexión a la base de datos PostgreSQL asociada con el indice de conexión pasado como parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connect</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connect() returns a connection resource that is needed by other PostgreSQL functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un índice de conexión en caso de éxito, o falso si la conexión no se puede realizar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connect() opens a connection to a PostgreSQL database specified by the connection_string.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función abre una conexión a una base de datos PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if the connection could not be made. connection_string should be a quoted string.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada uno de los argumentos debe ser una cadena entrecomillada, incluyendo el número de puerto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using pg_connect</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros options y tty son opcionales y pueden ser omitidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a second call is made to pg_connect() with the same connection_string, no new connection will be established, but instead, the connection resource of the already opened connection will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un índice de conexión que se necesitará para otras funciones PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can have multiple connections to the same database if you use different connection string.</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes tener multiples conexiones abiertas al mismo tiempo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_pconnect(), pg_close(), pg_host(), pg_port(), pg_tty(), pg_options() and pg_dbname().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también pg_pConnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_dbname</seg></tuv>
      <tuv xml:lang="es"><seg>pg_DBname</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if connection is not a valid PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre de la base de datos a la cual es el índice de conexión con PostgreSQL está conectado, o FALSE si connection no es un índice de conexión válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_delete</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pg_delete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_array</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Fetch_Array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Un array que se corresponde con la fila obtenida, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_array() is an extended version of pg_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>pg_fetch_array() es una versión extendida de pg_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>row is row (record) number to be retrieved.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de almacenar los datos en los índices numericos del array resultante, también almacena los datos usando índices asociativos, empleando para ello el nombre del campo como la llave o índice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_type is optional parameter controls how return value is initialized. result_type is a constant and can take the following values:</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer parámetro opcional result_type en pg_fetch_array() es una constante y puede tomar cualquiera de los siguientes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PGSQL_ASSOC, PGSQL_NUM, and PGSQL_BOTH. pg_fetch_array() PGSQL_ASSOC, PGSQL_NUM, and PGSQL_BOTH. pg_fetch_array() returns associative array that has field name as key for PGSQL_ASSOC. field index as key with PGSQL_NUM and both field name / index as key with PGSQL_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default is PGSQL_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>Result_type se añadio en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_array() is NOT significantly slower than using pg_fetch_row(), while it provides a significant ease of use.</seg></tuv>
      <tuv xml:lang="es"><seg>Una cosa importante a tener en cuenta es que usar pg_fetch_array() NO es significativamente más lento que usar pg_fetch_row(), y sin embargo el valor añadido que aporta sí lo es.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_fetch_row() and pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Para más detalles, ver pg_fetch_row()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $conn = pg_pconnect( "","" ,"" ,"" ,"publisher"); if (!$conn) {echo "An error occured.\n"; exit;} $result = pg_Exec ($conn, "SELECT * FROM authors"); if (!$result) {echo "An error occured.\n"; exit;} $arr = pg_fetch_array ($result, 0); echo $arr[0]. "- array\n"; $arr = pg_fetch_array ($result, 1); echo $arr["author"]." - array\n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_object</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Fetch_Object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if there are no more rows or error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un objeto cuyas propiedades se corresponden con los campos de la fila obtenida, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_object() is similar to pg_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_fetch_object() es parecida a pg_fetch_array(), con una diferencia - se devuelve un objeto, en vez de un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>row is row (record) number to be retrieved.</seg></tuv>
      <tuv xml:lang="es"><seg>Indirectamente, eso significa que solo puedes acceder a los datos por medio de su nombre de campo, y no a través de sus posiciones (los números son nombres de propiedad invalidos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to pg_fetch_array(), and almost as quick as pg_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer parámetro opcional result_type en pg_fetch_object() es una constante y puede tomar cualquiera de los siguientes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From 4.1.0, row is optional.</seg></tuv>
      <tuv xml:lang="es"><seg>PGSQL_ASSOC, PGSQL_NUM, y PGSQL_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From 4.3.0, result_type is default to PGSQL_ASSOC while older versions' default was PGSQL_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>Result_type se añadio en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_type may be deleted in future versions.</seg></tuv>
      <tuv xml:lang="es"><seg>Referente a la velocidad, la función es identica a pg_fetch_array(), y practicamente tan rápida como pg_fetch_row() (la diferencia es insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query(), pg_fetch_array(), pg_fetch_row() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: pg_fetch_array() y pg_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $database = "verlag"; $db_conn = pg_connect ("host=localhost port=5432 dbname=$database"); if (!$db_conn):?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $database = "verlag"; $db_conn = pg_connect ("localhost", "5432", "","", $database); if (!$db_conn):?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>H1 Failed connecting to postgres database ?php echo $database? / H1 ?php exit; endif; $qu = pg_query ($db_conn, "SELECT * FROM verlag ORDER BY autor"); $row = 0; / / postgres needs a row counter other dbs might not while ($data = pg_fetch_object ($qu, $row)) {echo $data - autor. "("; echo $data - jahr ."):"; echo $data - titel. "BR"; $row++;}?</seg></tuv>
      <tuv xml:lang="es"><seg>H1 Failed connecting to postgres database? echo $database? / H1? exit; endif; $qu = pg_exec ($db_conn, "SELECT * FROM verlag ORDER BY autor"); $row = 0; / / postgres needs a row counter other dbs might not while ($data = pg_fetch_object ($qu, $row)): echo $data - autor. "("; echo $data - jahr ."):"; echo $data - titel. "BR"; $row++; endwhile;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>PRE ?php $fields[] = Array ("autor", "Author"); $fields[] = Array ("jahr", "Year"); $fields[] = Array ("titel"," Title"); $row= 0; / / postgres needs a row counter other dbs might not while ($data = pg_fetch_object ($qu, $row)): echo "----------\n"; reset ($fields); while (list (,$item) = each ($fields)): echo $item[1] .": ".$data - $item[0] ."\n"; endwhile; $row++; endwhile; echo "----------\n";? / PRE ?php pg_freeResult ($qu); pg_close ($db_conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All forms of float, and real types are returned as float All forms of float, and real types are returned as float values.</seg></tuv>
      <tuv xml:lang="es"><seg>All forms of float, and real types are returned as float values.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_row</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Fetch_Row</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_row() fetches one row of data from the result associated with the specified result resource.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Un array que se corresponde con la fila obtenida, o FALSE en el caso de que no haya más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>La fila se devuelve en forma de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: pg_query(), pg_fetch_array(), pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes llamadas a pg_fetch_row() devolverán la fila siguiente en el conjunto resultado, o falso en el caso de que no haya más filas que devolver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Postgres fetch row</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: pg_fetch_array(), pg_fetch_object(), pg_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_host</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Host</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connect() and pg_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Host() devuelve el nombre del host al que identificador conexión PostgreSQL pasado está conectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_insert</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pg_insert</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_options</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_options() will return a string containing the options specified on the given PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Options() devuelve una cadena que contiene las opciones especificadas en el identificador de conexión con PostgreSQL dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_pconnect</seg></tuv>
      <tuv xml:lang="es"><seg>pg_pConnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns a connection resource that is needed by other PostgreSQL functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un índice de conexión en caso de éxito, o FALSE si no es posible realizar la conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a description of the connection_string parameter, see pg_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Abre una conexión persistente hacia una base de datos de PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable persistent connection, the pgsql.allow_persistent php.ini To enable persistent connection, the pgsql.allow_persistent php.ini directive must be set to "On" (which is the default).</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros options y tty son opcionales y pueden omitirse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of persistent connection can be defined with the pgsql.max_persistent php.ini The maximum number of persistent connection can be defined with the pgsql.max_persistent php.ini directive (defaults to -1 for no limit).</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes tener multiples conexiones persistentes abiertas al mismo tiempo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The total number of connections can be set with the pgsql.max_links php.ini directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también pg_Connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connect(), and the section Persistent Database Connections for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Una conexión también se puede establecer con el comando siguiente: $conn = pg_pconnect( "dbname=marliese port=5432"); Otros parámetros además de dbname y port son host, tty, options, user y password.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_port</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Port</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_port() returns the port number that the given PostgreSQL connection resource is connected to.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_Port() devuelve el número del puerto al que el identificador de conexión con PostgreSQL está conectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_select</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pg_select</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_tty() returns the tty name that server side debugging output is sent to on the given PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_tty() devuelve el nombre del tty hacia el que se dirije la salida de depuración del lado del servidor en el identificador de conexión de PostgreSQL dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_update</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pg_update</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output may be customized by passing one or more of the following constants bitwise values summed together in the optional what parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Obtiene gran cantidad de información sobre el estado actual de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Show all information, defaults to INFO_ALL phpinfo(); / / Show just the module information. / / phpinfo(8) yields identical results. phpinfo(INFO_MODULES);?</seg></tuv>
      <tuv xml:lang="es"><seg>Esto incluye información sobre las opciones de compilación y extensiones de PHP, la versión PHP, información y entorno del servidor (si está compilado como un módulo), el entorno PHP, información sobre la versión del SO, rutas, opciones de configuración maestras y locales, cabeceras HTTP, y la Licencia Pública GNU.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: phpversion(), phpcredits(), php_logo_guid(), ini_get(), ini_set(), and the section on Predefined Variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también phpversion().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: phpinfo(), phpversion(), and phpcredits().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcionalidad fue añadida en PHP4 Beta 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. php_sapi_name() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. php_sapi_name() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. php_uname() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. php_uname() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena de carácteres que contiene la versión del parser PHP que está ejecutándose actualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This information is also available in the predefined constant PHP_VERSION.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo phpversion()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / prints e.g. 'Current PHP version:</seg></tuv>
      <tuv xml:lang="es"><seg>/ / prints e.g. 'Current PHP version:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>4.1.1' echo'Current PHP version: '. phpversion();?</seg></tuv>
      <tuv xml:lang="es"><seg>3.0rel-dev' echo "Current PHP version: ".phpversion();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also version_compare(), phpinfo(), phpcredits(), php_logo_guid(), and zend_version().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también phpinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, you can use the M_PI constant which yields identical results to pi().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una aproximación de pi.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo pi(); / / 3.1415926535898 echo M_PI; / / 3.1415926535898</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a pipe to a process executed by forking the command given by command.</seg></tuv>
      <tuv xml:lang="es"><seg>Abre una tubería (pipe) a un proceso ejecutado haciendo fork al comando dado por command</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This pointer may be used with fgets(), fgetss(), and fputs().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un apuntador de fichero idéntico al devuelto por fopen(), excepto que este es unidireccional (sólo puede usarse o para leer o para escribir) y debe cerrarse con pclose().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you' re looking for bi-directional support (two-way), use proc_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Este apuntador puede usarse con fgets(), fgetss(), y fputs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = popen ("/ bin / ls", "r");?</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the command to be executed could not be found, a valid resource is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>$fp = popen ("/ bin / ls", "r");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php error_reporting( E_ALL); / * Add redirection so we can get stderr. * / $handle = popen(' / path / to / spooge 2 1', 'r'); echo "'$handle'; ". gettype($handle). "\n"; $read = fread($handle, 2096); echo $read; pclose($handle);?</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también pclose().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for current().</seg></tuv>
      <tuv xml:lang="es"><seg>Este es un alias para current().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also end(), next(), prev(), and reset().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: end(), next(), prev() y reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Needs to be written.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesita ser escrito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>POSIX functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones POSIX</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Needs to be written ASAP.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesita ser escrito cuanto antes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric effective group ID of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor numérico ID de grupo efectivo del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also posix_getgrgid() for information on how to convert this into a useable group name.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también posix_getgrgid() para información sobre como convertir este número en un nombre de grupo manejable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric effective user ID of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor numérico ID de usuario efectivo del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also posix_getpwuid() for information on how to convert this into a useable username.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también posix_getpwuid() para información sobre como convertir este número en un nombre de usuario manejable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric real group ID of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor númerico ID de grupo real del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also posix_getgrgid() for information on how to convert this into a useable group name.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también posix_getgrgid() para información sobre como convertir esto en un nombre de grupo manejable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of integers containing the numeric group ids of the group set of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un vector de enteros que contiene los ids numéricos de grupo de el conjunto de grupos del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also posix_getgrgid() for information on how to convert this into useable group names.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también posix_getgrgid() para información sobre como convertir esto en nombres de grupo manejables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the login name of the user owning the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre de usuario (login) que es dueño del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See posix_getpwnam() for information how to get more information about this user.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea posix_getpwnam() para información sobre como conseguir mas datos de este usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the process group identifier of the process pid.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador de grupo de procesos del proceso pid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not a POSIX function, but is common on BSD and System V systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta no es una función POSIX, pero es normal en sistemas BSD y System V.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your system does not support this function at system level, this PHP function will always return FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si su sistema no soporta esta función a nivel de sistema, esta función PHP devolverá siempre FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the process group identifier of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador de grupo de proceso del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See POSIX.1 and the getpgrp( 2) manual page on your POSIX system for more information on process groups.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea POSIX.1 y la página de manual getpgrp( 2) de su sistema POSIX para más información de grupos de procesos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the process identifier of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador de proceso del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the process identifier of the parent process of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el identificador de proceso del proceso padre del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array containing information about a user referenced by an alphanumeric username, passed in the username parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un vector asociativo conteniendo información sobre un usuario referenciado por un nombre alfanumérico, pasado a la función en el parametro username.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array elements returned are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos del vector devuelto son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user information array</seg></tuv>
      <tuv xml:lang="es"><seg>El vector de información de usuario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Element</seg></tuv>
      <tuv xml:lang="es"><seg>Elemento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Description</seg></tuv>
      <tuv xml:lang="es"><seg>Descripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name element contains the username of the user.</seg></tuv>
      <tuv xml:lang="es"><seg>El elemento name contiene el nombre de usuario del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a short, usually less than 16 character "handle" of the user, not her real, full name.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es un nombre, normalmente menor de 16 caracteres, que no es su nombre completo, pero identifica al usario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This should be the same as the username parameter used when calling the function, and hence redundant.</seg></tuv>
      <tuv xml:lang="es"><seg>Este debe ser el mismo que el parámetro username usado en la llamada a la función y por lo tanto es redundante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The passwd element contains the user 's password in an encrypted format.</seg></tuv>
      <tuv xml:lang="es"><seg>El elemento passwd contiene la contraseña del usuario en un formato encriptado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often, for example on a system employing "shadow" passwords, an asterisk is returned instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente, por ejemplo en un sistema que este utilizando contraseñas "shadow", devolverá un asterisco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>User ID of the user in numeric form.</seg></tuv>
      <tuv xml:lang="es"><seg>El ID de usuario del usuario en formato numérico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The group ID of the user.</seg></tuv>
      <tuv xml:lang="es"><seg>El ID de grupo del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the function posix_getgrgid() to resolve the group name and a list of its members.</seg></tuv>
      <tuv xml:lang="es"><seg>Utiliza la función posix_getgrgid() para resolver el nombre del grupo y una lista de sus miembros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GECOS is an obsolete term that refers to the finger information field on a Honeywell batch processing system.</seg></tuv>
      <tuv xml:lang="es"><seg>GECOS es un término obsoleto que se refiere al campo apuntado de información en un sistema de procesamiento batch Honeywell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field contains a comma separated list containing the user 's full name, office phone, office number, and home phone number.</seg></tuv>
      <tuv xml:lang="es"><seg>El campo y sus contenidos han sido formalizado por POSIX y contiene una lista separada por comas con el nombre completo del usuario, teléfono del trabajo, número de oficina y télefono de casa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On most systems, only the user 's full name is available.</seg></tuv>
      <tuv xml:lang="es"><seg>En muchos sistemas solo está disponible el nombre completo del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This element contains the absolute path to the home directory of the user.</seg></tuv>
      <tuv xml:lang="es"><seg>Este elemento contiene la ruta absoluta al directorio del usuario (directorio home).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The shell element contains the absolute path to the executable of the user 's default shell.</seg></tuv>
      <tuv xml:lang="es"><seg>El elemento shell contiene la ruta absoluta al ejecutable del shell por defecto del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array containing information about a user referenced by a numeric user ID, passed in the uid parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un vector asociativo que contiene información sobre un usuario referenciado con un ID de usuario, pasado por el parámetro uid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array elements returned are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos del array son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user information array</seg></tuv>
      <tuv xml:lang="es"><seg>El vector de información del usuario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a short, usually less than 16 character "handle" of the user, not her real, full name.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es un nombre, normalmente menor de 16 caracteres, que no es su verdadero nombre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often, for example on a system employing "shadow" passwords, an asterisk is returned instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente, por ejemplo en un sistema con contraseñas "shadow", devolverá un asterisco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>User ID, should be the same as the uid parameter used when calling the function, and hence redundant.</seg></tuv>
      <tuv xml:lang="es"><seg>ID del usuario, debe ser el mismo que el parametro uid usado en la llamada a la función, y por lo tanto redundante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The group ID of the user.</seg></tuv>
      <tuv xml:lang="es"><seg>El ID del grupo del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GECOS is an obsolete term that refers to the finger information field on a Honeywell batch processing system.</seg></tuv>
      <tuv xml:lang="es"><seg>GECOS es un término obsoleto que se refiere al campo apuntado de de información en un sistema de procesamiento batch Honeywell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field contains a comma separated list containing the user 's full name, office phone, office number, and home phone number.</seg></tuv>
      <tuv xml:lang="es"><seg>El campo y sus contenidos han sido formalizados por POSIX y contiene una lista separada por comas con el nombre completo del usuario, teléfono del trabajo, número de oficina y teléfono de casa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Needs to be written ASAP.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesita ser escrita tan pronto como sea posible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the sid of the process pid.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el sid del proceso pid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pid is 0, the sid of the current process is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si pid es 0, se devolverá el sid del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not a POSIX function, but is common on System V systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta no es una función POSIX, pero es normal en sistemas System V.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric real user ID of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor numerico ID de usuario real del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also posix_getpwuid() for information on how to convert this into a useable username.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también posix_getpwuid() para información sobre como convertir este ID en un nombre de usuario manejable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Send the signal sig to the process with the process identifier pid.</seg></tuv>
      <tuv xml:lang="es"><seg>Manda la señal sig al proceso con el identificador de proceso pid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE, if unable to send the signal, TRUE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE, si no puede enviar la señal.Si sí la envia devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the kill( 2) manual page of your POSIX system, which contains additional information about negative process identifiers, the special pid 0, the special pid -1, and the signal number 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también la página de manual kill( 2) de su sistema POSIX, la cual contiene información adicional sobre los identificadores de proceso negativos, el pid especial 0, el pid especial -1, y la señal numero 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesita ser escrito lo más pronto posible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the real group ID of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Asigna el ID de grupo real del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a privileged function and you need appropriate privileges (usually root) on your system to be able to perform this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es una función privilegiada y necesitas los privilegion apropiados (normalmente root) en tu sistema para realizar esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The appropriate order of function calls is posix_setgid() first, posix_setuid() last.</seg></tuv>
      <tuv xml:lang="es"><seg>El orden apropiado de llamada es posix_setgid() primero, posix_setuid() después.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si tiene éxito, FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Let the process pid join the process group pgid.</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta el proceso pid en el grupo de procesos pgid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See POSIX.1 and the setsid( 2) manual page on your POSIX system for more informations on process groups and job control.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea POSIX.1 y la página de manual setsid( 2) de su sistema POSIX para más información sobre grupos de procesos y control de trabajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si tiene éxito y FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make the current process a session leader.</seg></tuv>
      <tuv xml:lang="es"><seg>Convierte el proceso actual en lider de sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See POSIX.1 and the setsid( 2) manual page on your POSIX system for more informations on process groups and job control.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea POSIX.1 y la página de manual setsid( 2) en su sistema POSIX para más informacion en grupos de proceso y control de trabajos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the session id.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el id de sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the real user ID of the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Asigna el ID de usuario real al proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a privileged function and you need appropriate privileges (usually root) on your system to be able to perform this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es una función privilegiada y necesitas los privilegios apropiados (normalmente root) en tu sistema para realizar esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si tiene exito, FALSE en caso contrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also posix_setgid().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también posix_setgid().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a hash of strings with information about the current process CPU usage.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un hash de cadenas con información sobre el uso de CPU del proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The indices of the hash are</seg></tuv>
      <tuv xml:lang="es"><seg>Los índices del hash son</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ticks - the number of clock ticks that have elapsed since reboot.</seg></tuv>
      <tuv xml:lang="es"><seg>ticks - el numero de ticks de reloj que han pasado desde el reinicio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>utime - user time used by the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>utime - tiempo de usuario usado por el proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>stime - system time used by the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>stime - tiempo de sistema usado por el proceso actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>cutime - user time used by current process and children.</seg></tuv>
      <tuv xml:lang="es"><seg>cutime - tiempo de usuario usado por el proceso actual e hijos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>cstime - system time used by current process and children.</seg></tuv>
      <tuv xml:lang="es"><seg>cstime - tiempo de sistema usado por el proceso actual e hijos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a hash of strings with information about the system.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un hash de cadenas con información sobre el sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sysname - operating system name (e.g.</seg></tuv>
      <tuv xml:lang="es"><seg>sysname - nombre del sistema operativo (e.g.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>nodename - system name (e.g. valiant)</seg></tuv>
      <tuv xml:lang="es"><seg>nodename - nombre del sistema (e.g. valiant)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>release - operating system release (e.g.</seg></tuv>
      <tuv xml:lang="es"><seg>release - release del sistema operativo (e.g.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>machine - system architecture (e.g. i586)</seg></tuv>
      <tuv xml:lang="es"><seg>version - versión del sistema operativo (e.g. #4 Tue Jul 20 17:01:36 MEST 1999)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>domainname - DNS domainname (e.g. php.net)</seg></tuv>
      <tuv xml:lang="es"><seg>machine - arquitectura del sistema (e.g. i586)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Posix requires that you must not make any assumptions about the format of the values, e.g. you cannot rely on three digit version numbers or anything else returned by this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Posix requiere que usted no debe hacer ninguna suposición sobre el formato de los valores, por ejemplo usted no puede confiar en los tres dígitos de la version o cualquier cosa devuelta por esta función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php var_dump( pow(2,8)); / / int(256) echo pow(-1,20); / / 1 echo pow(0, 0); / / 1 echo pow(-1, 5.5); / / error?</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve base elevado a la potencia de exp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also exp() and sqrt().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también exp().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>preg_grep() returns the array consisting of the elements of the input array that match the given pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>preg_grep() devuelve un array conteniendo los elementos del array input que emparejen con el patrón (pattern) dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.0.4, the results returned by preg_grep() are indexed using the keys from the input array.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this behavior is undesirable, use array_values() on the array returned by preg_grep() to reindex the values.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de la función preg_grep()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. preg_grep() example</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / return all array elements / / containing floating point numbers $fl_array = preg_grep ("/ ^(\d+)?\.\d+$ /", $array);</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="es"><seg>Sintaxis de los Patrones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pattern Syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After the first match is found, the subsequent searches are continued on from end of the last match.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca en subject todos los emparejamientos de la expresión pattern y los pone en matches de la forma indicada por order.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Orders results so that $matches[ 0] is an array of full pattern matches, $matches[1] is an array of strings matched by the first parenthesized subpattern, and so on.</seg></tuv>
      <tuv xml:lang="es"><seg>order puede tener los siguientes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados serán devueltos de manera que $matches[ 0] es un array con el patrón de búsqueda completo, $matches[1] es una array de las cadenas casadas por el primer subpatrón que esté entre paréntesis y así sucesivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Orders results so that $matches[ 0] is an array of first set of matches, $matches[1] is an array of second set of matches, and so on.</seg></tuv>
      <tuv xml:lang="es"><seg>preg_match_all( "_BAR_ [^] + (.*) / [^] + _BAR_U"," b example: / b div align=left this is a test / div ", $out, PREG_PATTERN_ORDER); print $out[0][0] .", ".$out[0][1] ."\n"; print $out[1][0] .", ".$out[1][1] ."\n"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this flag is set, for every occuring match the appendant string offset will also be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Los resultados son dados de manera que $matches[ 0] es una array del primer conjunto de emparejamientos, $matches[1] es un array de los segundos conjuntos de casamientos y así sucesivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag is available since PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>preg_match_all( "_BAR_ [^] + (.*) / [^] + _BAR_U"," b example: / b div align=left this is a test / div ", $out, PREG_SET_ORDER); print $out[0][0] .", ".$out[0][1] ."\n"; print $out[1][0] .", ".$out[1][1] ."\n"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getting all phone numbers out of some text.</seg></tuv>
      <tuv xml:lang="es"><seg>Si order no es dado, se asume PREG_PATTERN_ORDER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de casamientos completos, FALSE si no hubo o se produjo error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / The \\2 is an example of backreferencing.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The extra backslash is / / required because the string is in double quotes. $html = "b bold text / b a href=howdy.html click me / a"; preg_match_all (" / (([\w]+)[^ ]* )(.*) (\ / \\2) / ", $html, $matches); for ($i=0; $i count($matches[0]); $i++) {echo "matched: ".$matches[0][$i] ."\n"; echo "part 1: ".$matches[1][$i] ."\n"; echo "part 2: ".$matches[3][$i] ."\n"; echo "part 3: ".$matches[4][$i] ."\n\n";}?</seg></tuv>
      <tuv xml:lang="es"><seg>Obtener los número de teléfonos de un texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>matched: b bold text / b part 1: b part 2: bold text part 3: / b matched: a href=howdy.html click me / a part 1: a href=howdy.html part 2: click me part 3: / a</seg></tuv>
      <tuv xml:lang="es"><seg>preg_match_all( "/ \(? (\d{3})?\)? (?(1) [\-\s]) \d{3}-\d{4} / x", "Call 555-1212 or 1-800-555-1212", $phones);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also preg_match(), preg_replace(), and preg_split().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también preg_match(), preg_replace() y preg_split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this changes the return value in an array where every element is an array consisting of the matched string at offset 0 and it 's string offset into subject at offset 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca en subject para un emparejamiento, dada la expresión pattern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That will be either 0 times (no match) or 1 time because preg_match() will stop searching after the first match. preg_match_all() on the contrary will continue until it reaches the end of subject. preg_match() returns FALSE if an error occured.</seg></tuv>
      <tuv xml:lang="es"><seg>Si matches es dado, entonces será definido con el resultado de la búsqueda. $matches[ 0] contendrá el texto que empareja con el patrón en su totalidad. $matches[1] tendrá la cadena que empareje con el primer subpatrón que esté entre paréntesis y así sucesivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / the "i" after the pattern delimiter indicates a case-insensitive search if (preg_match (" / php / i", "PHP is the web scripting language of choice .")) {print "A match was found .";} else {print "A match was not found .";}</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si se encontró en la cadena un emparejamiento dado el patrón pattern, FALSE si no se produjo o hubo un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / the \b in the pattern indicates a word boundary, so only the distinct / / word "web" is matched, and not a word partial like "webbing "or "cobweb" if (preg_match (" / \bweb\b / i", "PHP is the web scripting language of choice .")) {print "A match was found .";} else {print "A match was not found .";} if (preg_match (" / \bweb\b / i", "PHP is the website scripting language of choice .")) {print "A match was found .";} else {print "A match was not found .";}</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getting the domain name out of a URL</seg></tuv>
      <tuv xml:lang="es"><seg>Obtener el número de la siguiente página dada una cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>if (preg_match(" / page\s+#(\d+) / i", "Go to page #9 .", $parts)) print "Next page is $parts[1]"; / / La siguiente página es $parts[1] else print "Page not found ."; / / Página no encontrada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional delimiter is specified, it will also be escaped.</seg></tuv>
      <tuv xml:lang="es"><seg>preg_quote() toma str y pone una barra invertida (\) delante de todo carácter que sea parte de la sintaxis de las expresiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The / is the most commonly used delimiter.</seg></tuv>
      <tuv xml:lang="es"><seg>Es útil si tienes una cadena en tiempo de ejecución y puede contener caracteres especiales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>.\\ + *? [^] $() {} =! _BAR_:</seg></tuv>
      <tuv xml:lang="es"><seg>Los caracteres especiales de las expresiones son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / In this example, preg_quote( $word) is used to keep the / / asterisks from having special meaning to the regular / / expression. $textbody = "This book is *very* difficult to find ."; $word = "*very*"; $textbody = preg_replace (" / ".preg_quote($word) ." / "," i ".$word. "/ i", $textbody);</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en PHP 3.0.9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches subject for matches to pattern and replaces them with replacement.</seg></tuv>
      <tuv xml:lang="es"><seg>Busca en subject los emparejamientos con pattern y los sustituye por replacement.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If limit is specified, then only limit matches will be replaced; if limit is omitted or is -1, then all matches are replaced.</seg></tuv>
      <tuv xml:lang="es"><seg>replacement puede contener referencias de la forma\\ n.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every such reference will be replaced by the text captured by the n 'th parenthesized pattern. n can be from 0 to 99, and \\0 or $0 refers to the text matched by the whole pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Éstas serán sustituidas por el texto obtenido por el patrón del paréntesis n ésimo. n puede tener un valor de cero a noventa y nueve, y \\0 se refiere al texto casado por el patrón completo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener el número del subpatrón de búsqueda, los paréntesis abiertos son contados de izquierda derecha tomando el primero como uno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This creates an isolated $1 backreference, leaving the 1 as a literal.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el patrón no es encontrado en subject, entonces no se realizarán cambios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using backreferences followed by numeric literals.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los parámetros de la función preg_replace() pueden ser un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $str = "April 15, 2003"; $pattern =" / (\w+) (\d+), (\d+) / i"; $replacement = "\${1}1,\$3"; print preg_replace($pattern, $replacement, $string); / * Output ====== April1,2003 * /?</seg></tuv>
      <tuv xml:lang="es"><seg>Si subject es un array, entonces la búsqueda y sustitución es realizada para todos los elementos de subject, y el valor devuelto es también un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every parameter to preg_replace() (except limit) can be an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si pattern y replacement son arrays, entonces preg_replace() toma un valor desde cada array y los usas para buscar y sustituir sobre subject.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using arrays with pattern and replacement, the keys are processed in the order they appear in the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si replacement tiene menos valores que pattern, entonces la cadena vacía es usada como valor para el resto de sustituciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use indexes to identify which pattern should be replaced by which replacement, you should perform a ksort() on each array prior to calling preg_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Si pattern es una array y replacement es una cadena, entonces esta cadena de sustitución es usada para todos los valores de pattern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using indexed arrays with preg_replace()</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, lo contrario no tiene sentido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pattern and replacement are arrays, then preg_replace() takes a value from each array and uses them to do search and replace on subject.</seg></tuv>
      <tuv xml:lang="es"><seg>El modificador / e hace que la función preg_replace() trate el parámetro replacement como código PHP después de que la apropiada sustitución sea hecha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pattern is an array and replacement is a string, then this replacement string is used for every value of pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Atención, asegúrate que replacement es un código PHP correcto, de otro modo PHP dará un error de parse en la línea que contenga preg_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The converse would not make sense, though.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/e modifier makes preg_replace() treat the replacement parameter as PHP code after the appropriate references substitution is done.</seg></tuv>
      <tuv xml:lang="es"><seg>Este modificador fue añadido en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip: make sure that replacement constitutes a valid PHP code string, otherwise PHP will complain about a parse error at the line containing preg_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Replacing several values</seg></tuv>
      <tuv xml:lang="es"><seg>Sustituir varios valores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$startDate = 5 / 27 / 1999</seg></tuv>
      <tuv xml:lang="es"><seg>$patterns = array( "/ (19_BAR_20\d{2}) -(\d{1,2}) -(\d{1,2}) /", "/ ^\s*{(\w+)}\s*= / "); $replace = array("\\3 / \\4 / \\1", "$\\1 ="); print preg_replace($patterns, $replace, "{startDate} = 1999-5-27");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>preg_replace ("/ (\ / ?)(\w+)([^ ]*) / e", "'\\1'.strtoupper('\\2') .'\\3'", $html_body);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5.</seg></tuv>
      <tuv xml:lang="es"><seg>Usar el modificador / e</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / $document should contain an HTML document. / / This will remove HTML tags, javascript sections / / and white space.</seg></tuv>
      <tuv xml:lang="es"><seg>preg_replace( "/ (\ / ?)(\w+)([^ ]*) / e", "'\\1'.strtoupper('\\2') .'\\3'", $html_body);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameter limit was added after PHP 4.0.1pl2.</seg></tuv>
      <tuv xml:lang="es"><seg>Pondrá en mayúscula todos los tags HTML del texto de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also preg_match(), preg_match_all(), and preg_split().</seg></tuv>
      <tuv xml:lang="es"><seg>Examina también preg_match(), preg_match_all(), y preg_split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flags can be any combination of the following flags (combined with bitwise _BAR_ operator):</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this flag is set, parenthesized expression in the delimiter pattern will be captured and returned as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array conteniendo las subcadenas de subject divididas mediante los emparejamientos limitados por pattern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this changes the return value in an array where every element is an array consisting of the matched string at offset 0 and it 's string offset into subject at offset 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si limit es proporcionado, entonces sólo limit subcadenas son devueltas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / split the phrase by any number of commas or space characters, / / which include "", \r, \t, \n and \f $keywords = preg_split (" / [\s ,]+ / ", "hypertext language, programming");</seg></tuv>
      <tuv xml:lang="es"><seg>Si el flags es PREG_SPLIT_NO_EMPTY entonces las cadenas vacías no serán devueltas por preg_split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$str = 'string'; $chars = preg_split(' / /', $str, -1, PREG_SPLIT_NO_EMPTY); print_r($chars);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$str = 'hypertext language programming'; $chars = preg_split(' / /', $str, -1, PREG_SPLIT_OFFSET_CAPTURE); print_r($chars);</seg></tuv>
      <tuv xml:lang="es"><seg>Obtener las partes de una cadena de búsqueda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also spliti(), split(), implode(), preg_match(), preg_match_all(), and preg_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>$keywords = preg_split( "/ [\s ,]+ /", "hypertext language, programming");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the array element in the previous place that 's pointed by the internal array pointer, or FALSE if there are no more elements.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el elemento de la matriz que está en la posición anterior a la que apuntaba previamente el puntero interno, o FALSE si no hay más elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array contains empty elements then this function will return FALSE for these elements as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la matriz contiene elementos vacíos, esta función también devolverá FALSE para dichos elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To properly traverse an array which may contain empty elements see the each() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para recorrer adecuadamente una matriz que puede contener elementos vacíos, vea la función each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>prev() behaves just like next(), except it rewinds the internal array pointer one place instead of advancing it.</seg></tuv>
      <tuv xml:lang="es"><seg>prev() se comporta igual que next(), excepto que rebobina el puntero interno una posición en lugar de avanzarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), end(), next(), and reset().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: current(), end() next() y reset()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>range</seg></tuv>
      <tuv xml:lang="es"><seg>rango</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_abort() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_abort() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_close() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_close() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_create_dc() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_create_dc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_bmp() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_bmp() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_chord() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_chord() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_elipse() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_elipse() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_line() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_line() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_pie() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_pie() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_rectangle() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_rectangle() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_roundrect() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_roundrect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_text() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_draw_text() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_get_option() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_get_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_list() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_list() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_logical_fontheight() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_logical_fontheight() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_open() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_open() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_select_brush() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_select_brush() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_select_font() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_select_font() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_select_pen() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_select_pen() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_set_option() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_set_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_start_doc() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_start_doc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_write() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. printer_write() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Produces output according to format, which is described in the documentation for sprintf().</seg></tuv>
      <tuv xml:lang="es"><seg>Produce una salida según el formato, que es descrito en la documentación para sprintf().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also print(), sprintf(), sscanf(), fscanf(), and flush().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: print(), sprintf(), sscanf(), fscanf(), y flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!</seg></tuv>
      <tuv xml:lang="es"><seg>Emite arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also echo(), printf(), and flush().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: echo(), printf(), y flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As with anything that outputs its result directly to the browser, you can use the output-control functions to capture the output of this function, and save it in a string (for example).</seg></tuv>
      <tuv xml:lang="es"><seg>Como con todo lo que presenta un resultado directamente en el navegador, se pueden utilizar las funciones de control de salida para capturar el resultado de esta función y grabarlo - por ejemplo - in una cadena literal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pspell_add_to_personal() adds a word to the personal wordlist.</seg></tuv>
      <tuv xml:lang="es"><seg>pspell_add_to_personal() agrega una palabra a la lista personal de palabras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you used pspell_new_config() with pspell_config_personal() to open the dictionary, you can save the wordlist later with pspell_save_wordlist().</seg></tuv>
      <tuv xml:lang="es"><seg>Si usas pspell_new_config() con pspell_config_personal() para abrir el diccionario, puedes salvar la lista de palabras luego, con pspell_save_wordlist().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please, note that this function will not work unless you have pspell .11.2 and aspell .32.5 or later.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no funcionará hasta que tengas pspell .11.2 y aspell .32.5 o superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_add_to_personal()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_add_to_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pspell_add_to_session() adds a word to the wordlist associated with the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>pspell_add_to_session() agrega la palabra a la lista de palabras asociada con la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is very similar to pspell_add_to_personal()</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es muy similar a pspell_add_to_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_check()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_check()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pspell_clear_session() clears the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>pspell_clear_session() limpia la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current wordlist becomes blank, and, for example, if you try to save it with pspell_save_wordlist(), nothing happens.</seg></tuv>
      <tuv xml:lang="es"><seg>La lista de palabras actual queda vacía, y, por ejemplo, si intentas salvarla con pspell_save_wordlist(), nada ocurre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_create()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_config_create()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_ignore()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_config_ignore()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_mode()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_config_mode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_personal()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_config_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_repl()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_config_repl()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_runtogether()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_config_runtogether()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_new_config()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_new_config()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_new()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_new()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_new_personal()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_new_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_store_replacement()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_store_replacement()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_suggest()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. pspell_suggest()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The safe_mode_allowed_env_vars directive contains a comma-delimited list of prefixes.</seg></tuv>
      <tuv xml:lang="es"><seg>Añade setting (valor) al entorno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, users will only be able to set environment variables that begin with PHP_ (e.g.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The safe_mode_protected_env_vars directive contains a comma-delimited list of environment variables, that the end user won' t be able to change using putenv().</seg></tuv>
      <tuv xml:lang="es"><seg>Establecer una Variable de Entorno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>putenv( "UNIQID=$uniqid");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regular Expression Functions (POSIX Extended)</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones para expresiones regulares</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an 8-bit binary string corresponding to the decoded quoted printable string.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve una cadena binaria de 8 bit que se corresponde con la cadena con marcación imprimible decodificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is similar to imap_qprint(), except this one does not require the IMAP module to work.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es similar a imap_qprint(), pero sin requerir que el módulo IMAP funcione.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a version of str with a backslash character (\) before every character that is among these:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una versión de la cadena con una barra invertida (\) antes de cada caracter de este conjunto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addslashes(), htmlentities(), htmlspecialchars(), nl2br(), and stripslashes().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también addslashes(), htmlentities(), htmlspecialchars(), nl2br(), y stripslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want a random number between 5 and 15 (inclusive), for example, use rand (5, 15).</seg></tuv>
      <tuv xml:lang="es"><seg>Si es llamada sin los argumentos opcionales min y max, rand() devuelve un valor pseudo-aleatorio entre 0 y RAND_MAX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since 4.2.0 this is no longer necessary.</seg></tuv>
      <tuv xml:lang="es"><seg>Si quiere un número aleatorio entre 5 y 15 (inclusive), por ejemplo, use rand(5,15).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions before 3.0.7 the meaning of max was range.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde introducir la semilla del generador de números aleatorios antes de usar srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also srand(), getrandmax(), and mt_rand().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también srand(), getrandmax(), mt_rand(), mt_srand() y mt_getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If low high, the sequence will be from high to low.</seg></tuv>
      <tuv xml:lang="es"><seg>(no version information, might be only in CVS)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a step value is given, it will be used as the increment between elements in the sequence. step should be given as a positive number.</seg></tuv>
      <tuv xml:lang="es"><seg>rango() devuelve una matriz de enteros desde bajo hasta alto, ambos inclusive.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for character sequences and decrementing arrays was added in 4.1.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea un ejemplo de su uso en la función shuffle().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. rawurlencode() example 1</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. rawurlencode() example 1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. rawurlencode() example 2</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. rawurlencode() example 2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the filename of the next file from the directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre del siguiente fichero en el directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The filenames are returned in the order in which they are stored by the filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres de ficheros no son devueltos en ningun orden especial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note the fashion in which readdir() 's return value is checked in the examples below.</seg></tuv>
      <tuv xml:lang="es"><seg>Listar todos los ficheros en un directorio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We are explicitly testing whether the return value is identical to (equal to and of the same type as--see Comparison Operators for more information) FALSE since otherwise, any directory entry whose name evaluates to FALSE will stop the loop (e.g. a directory named "0").</seg></tuv>
      <tuv xml:lang="es"><seg>?php $handle=opendir( '.'); echo "Directory handle: $handle\n"; echo "Files:\n"; while ($file = readdir($handle)) {echo "$file\n";} closedir($handle);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List all files in a directory</seg></tuv>
      <tuv xml:lang="es"><seg>Tener en cuenta que readdir() Tener en cuenta que readdir() devolvera tambien. y..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that readdir() will return the. and.. entries.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no quereis estas entradas podeis borrarlas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don 't want these, simply strip them out:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List all files in the current directory and strip out. and..</seg></tuv>
      <tuv xml:lang="es"><seg>Listar todos los ficheros en un directorio excepto. y..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir().</seg></tuv>
      <tuv xml:lang="es"><seg>?php $handle=opendir( '.'); while ($file = readdir($handle)) {if ($file != "." $file != ". .") {echo "$file\n";}} closedir($handle);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads a file and writes it to the output buffer.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de bytes leidos del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of bytes read from the file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, se devuelve FALSE y a menos que la función fuera llamada como @readfile, se imprime un mensaje de error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip:</seg></tuv>
      <tuv xml:lang="es"><seg>Si filename comienzo por "http: / /" (no es sensible a mayúsculas), se abre una conexión HTTP 1.0 al servidor especificado y el texto de la respuesta se escribe a la salida estándar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use a URL as a filename with this function if the fopen wrappers have been enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>No maneja redirecciones HTTP, por eso se debe incluir una barra final cuando se trata de directorios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.</seg></tuv>
      <tuv xml:lang="es"><seg>Si filename comienza con "ftp: / /" (no es sensible a mayúsculas), se abre una conexión ftp al servidor especificado y el fichero que se pide se escribe en la salida estándar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional second parameter and set it to "1", if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="es"><seg>Si filename no comienza con ninguna de las cadenas anteriores, el fichero será abierto del sistema de ficheros y su contenido escrito en la salida estándar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fpassthru(), file(), fopen(), include(), require(), virtual() and Appendix I.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fpassthru(), file(), fopen(), include(), require(), y virtual().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads a file, decompresses it and writes it to standard output.</seg></tuv>
      <tuv xml:lang="es"><seg>Lee el archivo, lo descomprime y lo escribe en la salida estándar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>readgzfile() can be used to read a file which is not in gzip format; in this case readgzfile() will directly read from the file without decompression.</seg></tuv>
      <tuv xml:lang="es"><seg>Readgzfile() puede usarse para leer un archivo comprimido o no con gzip; en cuyo caso readgzfile() leerá directamente el archivo, sin descomprimirlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, FALSE is returned and unless the function was called as @readgzfile, an error message is printed.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el numero de bytes (descomprimidos) leídos del archivo, si ocurre un error, se devuelve falso y hasta que se llame como @readgzfile, se imprime un mensaje de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file filename will be opened from the filesystem and its contents written to standard output.</seg></tuv>
      <tuv xml:lang="es"><seg>El archivo nombre_archivo se abrirá en el sistema de archivos y su contenido enviado a la salida estándar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional second parameter and set it to "1", if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usarse el segundo paametro opcional dándole el valor "1", si se quiere que se busque el archivo también dentro de la trayectoria "include": include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gzpassthru(), gzfile(), and gzopen().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gzpassthru(), gzfile(), y gzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function adds a line to the command line history.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función añade una línea al historial de líneas de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function clears the entire command line history.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función borra por completo el historial de la línea de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function registers a completion function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función registra una función de completitud.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must supply the name of an existing function which accepts a partial command line and returns an array of possible matches.</seg></tuv>
      <tuv xml:lang="es"><seg>Debe proporcionar el nombre de una función existente que acepte una línea de comandos parcial y devuelva una array con posibles coincidencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the same kind of functionality you 'd get if you hit your tab key while using Bash.</seg></tuv>
      <tuv xml:lang="es"><seg>Es el mismo tipo de funcionalidad que se obtiene al pulsar la tecla de tabulación cuando se está usando el Bash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a single string from the user.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve una única cadena del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may specify a string with which to prompt the user.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede especificar una cadena que se mostrará al usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The line returned has the ending newline removed.</seg></tuv>
      <tuv xml:lang="es"><seg>La línea devuelta tiene el indicador final de nueva línea eliminado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must add this line to the history yourself using readline_add_history().</seg></tuv>
      <tuv xml:lang="es"><seg>Necesita añadir esta línea al historial usando la función readline_add_history().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. readline()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. readline()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / get 3 commands from user for ($i=0; $i 3; $i++) {$line = readline ("Command: "); readline_add_history ($line);} / /dump history print_r (readline_list_history()); / /dump variables print_r (readline_info());</seg></tuv>
      <tuv xml:lang="es"><seg>/ / obtiene 3 comandos del usuario for ($i=0; $i 3; $i++) {$line = readline ("Comando: "); readline_add_history ($line);} / /Vuelca el historial print_r (readline_list_history()); / /Vuelca las variables print_r (readline_info());</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GNU Recode functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones GNU Recode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with no parameters, this function returns an array of values for all the setting readline uses.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es llamada sin parámetros, esta función devuelve un array con los valores de todas las opciones que readline usa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The elements will be indexed by the following values: done, end, erase_empty_line, library_version, line_buffer, mark, pending_input, point, prompt, readline_name, and terminal_name.</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos vendrán indexados por los siguientes valores: done, end, erase_empty_line, library_version, line_buffer, mark, pending_input, point, prompt, readline_name, y terminal_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with one parameter, the value of that setting is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es llamada con un parámetros, devuelve el valor de esa opción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with two parameters, the setting will be changed to the given value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es llamada con dos parámetros, el valor de la opción será cambiado al parámetro dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array of the entire command line history.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve un array con el historial de líneas de comandos completo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The elements are indexed by integers starting at zero.</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos están indexados por enteros comenzando por el cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function reads a command history from a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función lee un historial de comandos desde un fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function writes the command history to a file.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función escribe el historial de comandos en un archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>readlink() does the same as the readlink C function and returns the contents of the symbolic link path or 0 in case of error.</seg></tuv>
      <tuv xml:lang="es"><seg>readlink() hace lo mismo que la función C readlink C y devuelve el contenido del path del enlace simbólico o 0 en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_link(), symlink(), and linkinfo().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también symlink(), readlink() y linkinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. realpath() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. realpath() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE, if unable to comply, TRUE otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Recodifica el fichero definido por input a el fichero definido por output, segun la peticion de recodificacion request.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both filehandles must refer to local files.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si no puede realizar la recodificacion, TRUE si todo va bien.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic recode_file() example</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcion no procesa ficheros remotos (URLs).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = fopen ('input.txt', 'r'); $output = fopen ('output.txt', 'w'); recode_file ("us..flat", $input, $output);</seg></tuv>
      <tuv xml:lang="es"><seg>Los dos ficheros deben de ser locales en el sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regular Expression Functions (Perl-Compatible)</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de expresiones regulares compatibles con Perl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recode the string string according to the recode request request.</seg></tuv>
      <tuv xml:lang="es"><seg>Recodifica la cadena string segun una peticion de recodificacion request.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple recode request may be "lat1..iso646-de".</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si no puede realizar la recodificacion, TRUE si todo va bien.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Una simple peticion "recode" podria ser "lat1..iso646-de ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>print recode_string ("us..flat", "The following character has a diacritical mark: aacute ;");</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien la documentacion de GNU Recode de tu instalacion para obtener instrucciones detalladas sobre peticiones de recodificacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Registers the function named by function to be executed when script processing is complete.</seg></tuv>
      <tuv xml:lang="es"><seg>Registra la función nombrada en func para que se ejecute cuando el script procese su finalización.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you call exit() within one registered shutdown function, processing will stop completely and no other registered shutdown functions will be called.</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The registered shutdown functions are called after the request has been completed (including sending any output buffers), so it is not possible to send output to the browser using echo() or print(), or retrieve the contents of any output buffers using ob_get_contents().</seg></tuv>
      <tuv xml:lang="es"><seg>Debido a que no se permite ningún tipo de salida en el navegador en esta función, no será capaz de depurarla utilizando sentencias como print o echo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Trata de renombrar oldname como newname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php rename( "/ tmp / tmp_file.txt"," / home / user / login / docs / my_file.txt");?</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito y FALSE en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The require() statement includes and evaluates the specific file.</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia require() se sustituye a sí misma con el archivo especificado, tal y como funciona la directiva #include de C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require() includes and evaluates a specific file.</seg></tuv>
      <tuv xml:lang="es"><seg>Por esta razón, cualquier código dentro del archivo referenciado que debiera ser ejecutado como código PHP debe ser encerrado dentro de etiquetas válidas de comienzo y fin de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Detailed information on how this inclusion works is described in the documentation for include().</seg></tuv>
      <tuv xml:lang="es"><seg>Está sujeta a algunas reglas distintas de las de funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require() and include() are identical in every way except how they handle failure. include() produces a Warning while require() results in a Fatal Error.</seg></tuv>
      <tuv xml:lang="es"><seg>Por otro lado, no devuelve ningún valor; intentar leer un valor de retorno de una llamada a un require() resulta en un error del intérprete.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, don' t hesitate to use require() if you want a missing file to halt processing of the page. include() does not behave this way, the script will continue regardless.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se quiere incluir condicionalmente un archivo, se usa include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-2.</seg></tuv>
      <tuv xml:lang="es"><seg>No obstante, si la línea en la cual aparece el require() no se ejecuta, tampoco se ejecutará el código del archivo referenciado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic require() examples</seg></tuv>
      <tuv xml:lang="es"><seg>De forma similar, las estructuras de bucle no afectan la conducta de require().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php require 'prepend.php'; require $somefile; require ('somefile.txt');?</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque el código contenido en el archivo referenciado está todavía sujeto al bucle, el propio require() sólo ocurre una vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the include() documentation for more examples.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que no se puede poner una sentencia require() dentro de una estructura de bucle y esperar que incluya el contenido de un archivo distinto en cada iteración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Para hacer esto, usa una sentencia include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.0.2, the following applies: require() will always attempt to read the target file, even if the line it's on never executes.</seg></tuv>
      <tuv xml:lang="es"><seg>When a file is require() ed, the code it contains inherits the variable scope of the line on which the require() When a file is require() ed, the code it contains inherits the variable scope of the line on which the require() occurs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The conditional statement won' t affect require().</seg></tuv>
      <tuv xml:lang="es"><seg>Any variables available at that line in the calling file will be available within the called file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if the line on which the require() occurs is not executed, neither will any of the code in the target file be executed.</seg></tuv>
      <tuv xml:lang="es"><seg>If the require() occurs inside a function within the calling file, then all of the code contained in the called file will behave as though it had been defined inside that function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similarly, looping structures do not affect the behaviour of require().</seg></tuv>
      <tuv xml:lang="es"><seg>This is not strictly speaking the same thing as require() ing the file and having it inherit the parent file's variable scope; the script is actually being run on the remote server and the result is then being included into the local script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although the code contained in the target file is still subject to the loop, the require() itself happens only once.</seg></tuv>
      <tuv xml:lang="es"><seg>/* This example assumes that someserver is configured to parse .php * files and not .txt files.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP3, es posible ejecutar una sentencia return dentro de un archivo referenciado con require(), en tanto en cuanto esa sentencia aparezca en el ámbito global del archivo requerido (require()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP4, no obstante, esta capacidad ha sido desestimada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also include(), require_once(), include_once(), eval(), file(), readfile(), virtual() and include_path.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien include(), require_once(), include_once(), readfile(), y virtual().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return</seg></tuv>
      <tuv xml:lang="es"><seg>switch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The require_once() statement includes and evaluates the specified file during the execution of the script.</seg></tuv>
      <tuv xml:lang="es"><seg>The require_once() statement replaces itself with the specified file, much like the C preprocessor's #include works, and in that respect is similar to the require() statement.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a behavior similar to the require() This is a behavior similar to the require() statement, with the only difference being that if the code from a file has already been included, it will not be included again.</seg></tuv>
      <tuv xml:lang="es"><seg>For example, if you create the following 2 include files utils.inc and foolib.inc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the documentation for require() for more information on how this statement works.</seg></tuv>
      <tuv xml:lang="es"><seg>?php define( PHPVERSION, floor(phpversion())); echo "GLOBALS ARE NICE\n"; function goodTea() {return "Oolong tea tastes good !";}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require_once() should be used in cases where the same file might be included and evaluated more than once during a particular execution of a script, and you want to be sure that it is included exactly once to avoid problems with function redefinitions, variable value reassignments, etc.</seg></tuv>
      <tuv xml:lang="es"><seg>?php require ("utils.inc"); function showVar($var) {if (PHPVERSION == 4) {print_r($var);} else {dump_var($var);}} / / bunch of other functions...?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.</seg></tuv>
      <tuv xml:lang="es"><seg>?php require( "foolib.inc"); / * the following will generate an error * / require("utils.inc"); $foo = array("1",array("complex" ,"quaternion")); echo "this is requiring utils.inc again which is also\n"; echo "required in foolib.inc\n"; echo "Running goodTea: ".goodTea() ."\n"; echo "Printing foo: \n"; showVar($foo);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Cannot redeclare causeerror() in utils.inc on line 5</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be aware, that the behaviour of require_once() and include_once() may not be what you expect on a non case sensitive operating system (such as Windows).</seg></tuv>
      <tuv xml:lang="es"><seg>... require_once( "utils.inc"); function showVar($var) {...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-8. require_once() is case sensitive</seg></tuv>
      <tuv xml:lang="es"><seg>... require_once( "foolib.inc"); require_once("utils.inc"); $foo = array("1",array("complex" ,"quaternion"));...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require_once( "a.php"); / / this will include a.php require_once("A.php"); / / this will include a.php again on Windows!</seg></tuv>
      <tuv xml:lang="es"><seg>Oolong tea tastes good!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Also note that, analogous to the behavior of the #include of the C preprocessor, this statement acts at "compile time", e.g. when the script is parsed and before it is executed, and should not be used for parts of the script that need to be inserted dynamically during its execution.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>For more examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset() rewinds array's internal pointer to the first element.</seg></tuv>
      <tuv xml:lang="es"><seg>reset() rebobina el puntero interno de la matriz a su primer elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset() returns the value of the first array element.</seg></tuv>
      <tuv xml:lang="es"><seg>reset() devuelve el valor del primer elemento de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), each(), next(), and prev().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: current(), each(), next(), prev(), y reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Resets the directory stream indicated by dir_handle to the beginning of the directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Inizializa la secuencia de directorio determinada por dir_handle al principio del directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DOM XML functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de DOM XML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns 0, otherwise it returns 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Fija el indicador de posición del fichero dado por fp al comienzo de del fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen().</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have opened the file in append ("a") mode, any data you write to the file will always be appended, regardless of the file position.</seg></tuv>
      <tuv xml:lang="es"><seg>El apuntador al fichero debe ser válido, y debe apuntar a un fichero abierto con éxito por fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fseek() and ftell().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también fseek() y ftell().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to remove the directory named by dirname.</seg></tuv>
      <tuv xml:lang="es"><seg>Trata de eliminar el directorio indicado por pathname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The directory must be empty, and the relevant permissions must permit this.</seg></tuv>
      <tuv xml:lang="es"><seg>El directorio debe estar vacio, y los permisos relevantes deben permitir esto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mkdir() and unlink().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también mkdir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP doesn' t handle strings like "12,300.2 "correctly by default.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor redondeado de val.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo round( 3.4); / / 3 echo round(3.5); / / 4 echo round(3.6); / / 4 echo round(3.6, 0); / / 4 echo round(1.95583, 2); / / 1.96 echo round(1241757, -3); / / 1242000</seg></tuv>
      <tuv xml:lang="es"><seg>$foo = round( 3.4); / / $foo == 3.0 $foo = round (3.5); / / $foo == 4.0 $foo = round (3.6); / / $foo == 4.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ceil() and floor().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ceil() y floor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array ("lemon", "orange", "banana", "apple"); rsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función ordena una matriz en orden inverso (mayor a menor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 = orange 1 = lemon 2 = banana 3 = apple</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de rsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("limón", "naranja", "plátano", "manzana"); rsort ($frutas); for (reset ($frutas); list ($clave, $valor) = each ($frutas);) {echo "frutas[$clave] = ", $valor, "\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), asort(), ksort(), sort(), and usort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: arsort(), asort(), ksort(), sort(), y usort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the second parameter, rtrim() will strip these characters:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena argumento sin espacios en blanco ni saltos de línea al final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"\t" (ASCII 9 (0x09)), a tab.</seg></tuv>
      <tuv xml:lang="es"><seg>Es un alias para chop().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"\r" (ASCII 13 (0x0D)), a carriage return.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"\x0B" (ASCII 11 (0x0B)), a vertical tab.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de rtrim()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simply list all characters that you want to be stripped.</seg></tuv>
      <tuv xml:lang="es"><seg>$recortada = rtrim ($linea);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también trim(), ltrim().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 13.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 13.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Information may be passed to functions via the argument list, which is a comma-delimited list of variables and / or constants.</seg></tuv>
      <tuv xml:lang="es"><seg>La información puede suministrarse a las funciones mediante la lista de parámetros, una lista de variables y / o constantes separadas por comas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports passing arguments by value (the default), passing by reference, and default argument values.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta pasar parámetros por valor (el comportamiento por defecto), por referencia, y parámetros por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable-length argument lists are supported only in PHP 4 and later; see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Un efecto similar puede conseguirse en PHP3 pasando un array de parámetros a la función:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function takes_array( $input) {echo "$input[0] + $input[1] = ", $input[0]+$input[1];}</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, los parámetros de una función se pasan por valor (de manera que si cambias el valor del argumento dentro de la función, no se ve modificado fuera de ella).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, function arguments are passed by value (so that if you change the value of the argument within the function, it does not get changed outside of the function).</seg></tuv>
      <tuv xml:lang="es"><seg>Si quieres que un parámetro de una función siempre se pase por referencia, puedes anteponer un ampersand () al nombre del parámetro en la definición de la función:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to allow a function to modify its arguments, you must pass them by reference.</seg></tuv>
      <tuv xml:lang="es"><seg>function add_some_extra( $string) {$string .= 'y algo más .';} $str = 'Esto es una cadena,'; add_some_extra($str); echo $str; / / Saca 'Esto es una cadena, y algo más. '</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want an argument to a function to always be passed by reference, you can prepend an ampersand () to the argument name in the function definition:</seg></tuv>
      <tuv xml:lang="es"><seg>Si deseas pasar una variable por referencia a una función que no toma el parámetro por referencia por defecto, puedes anteponer un ampersand al nombre del parámetro en la llamada a la función:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function add_some_extra( $string) {$string .= 'and something extra .';} $str = 'This is a string, '; add_some_extra($str); echo $str; / / outputs'This is a string, and something extra.'</seg></tuv>
      <tuv xml:lang="es"><seg>function foo ($bar) {$bar .= 'y algo más .';} $str = 'Esto es una cadena,'; foo ($str); echo $str; / / Saca 'Esto es una cadena, 'foo ($str); echo $str; / / Saca 'Esto es una cadena, y algo más.'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A function may define C++-style default values for scalar arguments as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>Una función puede definir valores por defecto para los parámetros escalares estilo C++:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function makecoffee ($type = "cappuccino") {return "Making a cup of $type.\n";} echo makecoffee (); echo makecoffee ("espresso");</seg></tuv>
      <tuv xml:lang="es"><seg>function makecoffee ($type = "cappucino") {return "Hacer una taza de $type.\n";} echo makecoffee (); echo makecoffee ("espresso");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output from the above snippet is:</seg></tuv>
      <tuv xml:lang="es"><seg>La salida del fragmento anterior es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Making a cup of cappuccino.</seg></tuv>
      <tuv xml:lang="es"><seg>Hacer una taza de cappucino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Making a cup of espresso.</seg></tuv>
      <tuv xml:lang="es"><seg>Hacer una taza de espresso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default value must be a constant expression, not (for example) a variable or class member.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP 4.0 también es posible especificar unset como parámetro por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that when using default arguments, any defaults should be on the right side of any non-default arguments; otherwise, things will not work as expected.</seg></tuv>
      <tuv xml:lang="es"><seg>Destacar que cuando se usan parámetros por defecto, estos tienen que estar a la derecha de cualquier parámetro sin valor por defecto; de otra manera las cosas no funcionarán de la forma esperada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the following code snippet:</seg></tuv>
      <tuv xml:lang="es"><seg>Considera el siguiente fragmento de código:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function makeyogurt ($type = "acidophilus", $flavour) {return "Making a bowl of $type $flavour.\n";} echo makeyogurt ("raspberry"); / / won't work as expected</seg></tuv>
      <tuv xml:lang="es"><seg>function makeyogurt ($type = "acidophilus", $flavour) {return "Haciendo un bol de $type $flavour.\n";} echo makeyogurt ("mora"); / / No funcionará de la manera esperada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output of the above example is:</seg></tuv>
      <tuv xml:lang="es"><seg>La salida del ejemplo anterior es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Missing argument 2 in call to makeyogurt() in / usr / local / etc / httpd / htdocs / php3test / functest.html on line 41 Making a bowl of raspberry.</seg></tuv>
      <tuv xml:lang="es"><seg>Missing argument 2 in call to makeyogurt() in / usr / local / etc / httpd / htdocs / php3test / functest.html on line 41 Haciendo un bol de mora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Now, compare the above with this:</seg></tuv>
      <tuv xml:lang="es"><seg>Y ahora, compáralo con:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function makeyogurt ($flavour, $type = "acidophilus") {return "Making a bowl of $type $flavour.\n";} echo makeyogurt ("raspberry"); / / works as expected</seg></tuv>
      <tuv xml:lang="es"><seg>function makeyogurt ($flavour, $type = "acidophilus") {return "Haciendo un bol de $type $flavour.\n";} echo makeyogurt ("mora"); / / funciona como se esperaba</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output of this example is:</seg></tuv>
      <tuv xml:lang="es"><seg>La salida de este ejemplo es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Making a bowl of acidophilus raspberry.</seg></tuv>
      <tuv xml:lang="es"><seg>Haciendo un bol de acidophilus mora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 has support for variable-length argument lists in user-defined functions.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP4 soporta las listas de longitud variable de parámetros en las funciones definidas por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is really quite easy, using the func_num_args(), func_get_arg(), and func_get_args() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Es realmente fácil, usando las funciones func_num_args(), func_get_arg(), y func_get_args().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No special syntax is required, and argument lists may still be explicitly provided with function definitions and will behave as normal.</seg></tuv>
      <tuv xml:lang="es"><seg>No necesita de ninguna sintaxis especial, y las listas de parámetros pueden ser escritas en la llamada a la función y se comportarán de la manera esperada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returning values</seg></tuv>
      <tuv xml:lang="es"><seg>Devolver valores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Verdadero si hay éxito, falso si hay errores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sem_acquire() blocks (if necessary) until the semaphore can be acquired.</seg></tuv>
      <tuv xml:lang="es"><seg>sem_acquire() Produce un bloqueo (de ser necesario) hasta que el semáforo puede adquirirse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A process attempting to acquire a semaphore which it has already acquired will block forever if acquiring the semaphore would cause its max_acquire value to be exceeded.</seg></tuv>
      <tuv xml:lang="es"><seg>Un proceso intentando adquirir un semáforo ya adquirido, se bloqueará permanentemente si adquiriendo el semáforo, excede su valor de max_acquire.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After processing a request, any semaphores acquired by the process but not explicitly released will be released automatically and a warning will be generated.</seg></tuv>
      <tuv xml:lang="es"><seg>Despues de procesar una petición, cualquier semáforo adquirido por un proceso, que no sea explícitamente liberado, será liberado automñaticamente, generando un mensaje de alerta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sem_get() and sem_release().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase tambien: sem_get() and sem_release().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive semaphore identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador positivo de semáforo en caso de éxito, o falso en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sem_get() returns an id that can be used to access the System V semaphore with the given key.</seg></tuv>
      <tuv xml:lang="es"><seg>sem_get() Devuelve un id que puede usarse para acceder al semáforo de System V con la llave dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The semaphore is created if necessary using the permission bits specified in perm (defaults to 0666).</seg></tuv>
      <tuv xml:lang="es"><seg>El semáforo se usa si es necesario usando los bits de permisos especificados en perm (por defecto 0666).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of processes that can acquire the semaphore simultaneously is set to max_acquire (defaults to 1).</seg></tuv>
      <tuv xml:lang="es"><seg>El número de procesos que pueden adquirir el semáforo simultáneamente, se define en max_acquire (por defecto es 1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Actually this value is set only if the process finds it is the only process currently attached to the semaphore.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente este valor se fija sólo si el proceso determina que es el único relacionado actualmente al semáforo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sem_acquire(), sem_release() and ftok().</seg></tuv>
      <tuv xml:lang="es"><seg>Una segunda llamada a sem_get() para la misma llave, devolverá un id de semáforo diferente, pero con ambos identificadoes, se accederá al mismo semáforo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también: sem_acquire() y sem_release().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE on success, FALSE on error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase tambien: sem_get() y sem_acquire().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To make the serialized string into a PHP value again, use unserialize(). serialize() handles all types, except the resource -type.</seg></tuv>
      <tuv xml:lang="es"><seg>To make the serialized string into a PHP value again, use unserialize(). serialize() To make the serialized string into a PHP value again, use unserialize(). serialize() handles all types, except the resource-type.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. serialize() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. serialize() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The connection is always "persistent" in the sense that only the very first invocation will actually load the driver from the configured SESAM OML PLAM library.</seg></tuv>
      <tuv xml:lang="es"><seg>The connection is always "persistant" in the sense that only the very first invocation will actually load the driver from the configured SESAM OML PLAM library.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if (!sesam_connect ("mycatalog", "myschema", "otto") die("Unable to connect to SESAM");?</seg></tuv>
      <tuv xml:lang="es"><seg>?php if (!sesam_connect ("mycatalog", "myschema", "otto") die("Unable to connect to SESAM";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>integer</seg></tuv>
      <tuv xml:lang="es"><seg>"integer"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>float</seg></tuv>
      <tuv xml:lang="es"><seg>"double"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>string</seg></tuv>
      <tuv xml:lang="es"><seg>"string"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session handling functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones para el manejo de sesiones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_cache_expire() returns the current setting of session.cache_expire from php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>session_cache_expire() devuelve la caducidad actual del caché.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also see the session.cache_expire configuration directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se proporciona nueva_caducidad_cache, se reemplazará la caducidad actual con nueva_caducidad_cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_cache_limiter() returns the name of the current cache limiter.</seg></tuv>
      <tuv xml:lang="es"><seg>session_cache_limiter() devuelve el nombre del limitador de caché actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If cache_limiter is specified, the name of the current cache limiter is changed to the new value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica limitador_del_cache, el nombre del limitador de caché actual se cambia al nuevo valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cache limiter defines which cache control HTTP headers are sent to the client.</seg></tuv>
      <tuv xml:lang="es"><seg>El limitador de caché controla las cabeceras HTTP de control del caché enviadas al cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These headers determine the rules by which the page content may be cached by the client and intermediate proxies.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas cabeceras determinan las reglas por las que el contenido de la página puede ser guardado en el caché local del cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting the cache limiter to nocache disallows any client / proxy caching.</seg></tuv>
      <tuv xml:lang="es"><seg>Cambiando el limitador de caché a nocache, por ejemplo, impedirá cualquier tipo de almacenamiento en el caché por parte del cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A value of public permits caching by proxies and the client, whereas private disallows caching by proxies and permits the client to cache the contents.</seg></tuv>
      <tuv xml:lang="es"><seg>Tambié se puede cambiar a private, que es un poco más restrictivo que el public.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In private mode, the Expire header sent to the client may cause confusion for some browsers, including Mozilla.</seg></tuv>
      <tuv xml:lang="es"><seg>En el modo private, la cabecera Expire (caducidad) enviada al cliente puede confundir a algunos navegadores incluyendo Mozilla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can avoid this problem by using private_no_expire mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede evitar este problema con el modo private_no_expire.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The expire header is never sent to the client in this mode.</seg></tuv>
      <tuv xml:lang="es"><seg>La cabecera Expire nunca se envía al cliente en este modo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cache limiter is reset to the default value stored in session.cache_limiter at request startup time.</seg></tuv>
      <tuv xml:lang="es"><seg>Al comenzar la ejecución del script, el limitador de caché se reestablece al valor por defecto guardado en session.cache_limiter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, you need to call session_cache_limiter() for every request (and before session_start() is called).</seg></tuv>
      <tuv xml:lang="es"><seg>De este modo, es necesario llamar a session_cache_limiter() en cada petición (y antes de llamar a session_start()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. session_cache_limiter() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos con session_cache_limiter()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also see the session.cache_limiter configuration directive.</seg></tuv>
      <tuv xml:lang="es"><seg>?php # cambia el limitador del cach eacute; a 'private 'session_cache_limiter('private'); $cache_limiter = session_cache_limiter(); echo "El limitador de cach eacute; est aacute; puesto ahora en $cache_limiter p ";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Voir aussi session_encode()</seg></tuv>
      <tuv xml:lang="es"><seg>session_decode() decodifica los datos de una sesión que se encuentran en datos, creando las variables guardadas en la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_destroy() destroys all of the data associated with the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>session_destroy() destruye todos los datos asociados con la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not unset any of the global variables associated with the session, or unset the session cookie.</seg></tuv>
      <tuv xml:lang="es"><seg>No destruye ninguna de las variables globales asociadas a la sesión ni la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE on success and FALSE on failure to destroy the session data.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve TRUE si se ha destruido la sesión correctamente y FALSE si ha habido algún problema al intentarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Destroying a session</seg></tuv>
      <tuv xml:lang="es"><seg>Destrucción de una sesión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Initialize the session. / / If you are using session_name( "something"), don't forget it now! session_start(); / / Unset all of the session variables. session_unset(); / / Finally, destroy the session. session_destroy();?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Inicializa de la sesi oacute; n. / / Si est aacute; usando session_name("algo"), iexcl;no lo olvide ahora! session_start(); / / Destruye todas las variables de la sesi oacute;n session_unset(); / / Finalmente, destruye la sesi oacute;n session_destroy();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Destroying a session with $_SESSION</seg></tuv>
      <tuv xml:lang="es"><seg>Destrucción de una sesión con $_SESSION</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Initialize the session. / / If you are using session_name( "something"), don't forget it now! session_start(); / / Unset all of the session variables. $_SESSION = array(); / / Finally, destroy the session. session_destroy();?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Inicializa la sesi oacute; n. / / Si est aacute; usando session_name("algo"), iexcl;no lo olvide ahora! session_start(); / / Destruye todas las variables de la sesi oacute;n $_SESSION = array(); / / Finalmente, destruye la sesi oacute;n session_destroy();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_decode()</seg></tuv>
      <tuv xml:lang="es"><seg>session_encode() devuelve una cadena con el contenido de la sesión actual en su interior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"lifetime" - The lifetime of the cookie.</seg></tuv>
      <tuv xml:lang="es"><seg>La función session_get_cookie_params() devuelve un vector con información sobre la cookie de la sesión actual, conteniendo los siguientes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"path" - The path where information is stored.</seg></tuv>
      <tuv xml:lang="es"><seg>"lifetime" - La duración de la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"domain" - The domain of the cookie.</seg></tuv>
      <tuv xml:lang="es"><seg>"path" - La ruta donde se guarda la información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"secure" - The cookie should only be sent over secure connections. (This item was added in PHP 4.0.4.)</seg></tuv>
      <tuv xml:lang="es"><seg>"domain" - El dominio de la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the configuration directives session.cookie_lifetime, session.cookie_path, session.cookie_domain, session.cookie_secure, and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="es"><seg>"secure" - La cookie debe ser enviada sólo bajo conexiones seguras. (Este elemento fue añadido en PHP 4.0.4.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If id is specified, it will replace the current session id. session_id() needs to be called before session_start() for that purpose.</seg></tuv>
      <tuv xml:lang="es"><seg>session_id() devuelve el session id de la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the file session handler only allows characters in the range a-z, A-Z and 0-9!</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica un id, reemplazará el session id actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that SID is only defined if the client didn 't send the right cookie.</seg></tuv>
      <tuv xml:lang="es"><seg>También se puede utilizar la constante SID para recuperar el nombre y el session id de la sesión actual como una cadena adecuada para añadir a las URLs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_is_registered() returns TRUE if there is a global variable with the name name registered in the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>session_is_registered() devuelve TRUE si hay una variable registrada en la sesión actual cuyo nombre es nombre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, use isset() to check a variable is registered in $_SESSION.</seg></tuv>
      <tuv xml:lang="es"><seg>Si utiliza $_SESSION (o $HTTP_SESSION_VARS con PHP 4.0.6 o inferior), use isset() para comprobar si una variable está registrada en $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using $_SESSION (or $HTTP_SESSION_VARS), do not use session_register(), session_is_registered() and session_unregister().</seg></tuv>
      <tuv xml:lang="es"><seg>Si utiliza $HTTP_SESSION_VARS / $_SESSION, no use session_register(), session_is_registered() ni session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_module_name() returns the name of the current session module.</seg></tuv>
      <tuv xml:lang="es"><seg>session_module_name() devuelve el nombre del módulo de la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If module is specified, that module will be used instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica módulo, se usará ese módulo en su lugar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_name() returns the name of the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>session_name() devuelve el nombre de la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If name is specified, the name of the current session is changed to its value.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica un nombre, el nombre de de la sesión actual se cambia a este valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session name references the session id in cookies and URLs.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de la sesión hace referencia al session id utilizado en las cookies y en las URLs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It should contain only alphanumeric characters; it should be short and descriptive (i.e. for users with enabled cookie warnings).</seg></tuv>
      <tuv xml:lang="es"><seg>Debería contener únicamente caracteres alfanuméricos; también debería ser corto y descriptivo (p.ej. para usuarios con los avisos de las cookies activados).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session name is reset to the default value stored in session.name at request startup time.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de la sesión se restaura al valor guardado por defecto en session.name al comenzar la petición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, you need to call session_name() for every request (and before session_start() or session_register() are called).</seg></tuv>
      <tuv xml:lang="es"><seg>Así, pues, es necesario llamar a session_name() en cada petición (y antes de llamar a session_start() o a session_register()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. session_name() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the session.name configuration directive.</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Cambiar el nombre de la sesi oacute; n a WebsiteID $nombre_anterior = session_name("WebsiteID"); echo "El anterior nombre de la sesi oacute;n era $nombre_anterior p ";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read in session data without locking the session data.</seg></tuv>
      <tuv xml:lang="es"><seg>Lee los datos de una sesión sin bloquearlos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changing session data is not possible, but frameset performance will be improved.</seg></tuv>
      <tuv xml:lang="es"><seg>No es posible cambiar los datos de la sesión, pero el rendimiento de los framesets mejorará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_save_path() returns the path of the current directory used to save session data.</seg></tuv>
      <tuv xml:lang="es"><seg>session_save_path() devuelve la ruta del directorio usado actualmente para guardar los datos de la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If path is specified, the path to which data is saved will be changed. session_save_path() needs to be called before session_start() for that purpose.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica path, se cambiará la ruta donde se guardan los datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, on Linux, reiserfs may provide better performance than ext2fs.</seg></tuv>
      <tuv xml:lang="es"><seg>En algunos sistemas operativos, puede que quiera especificar una ruta en un sistema de ficheros que maneja muchos ficheros pequeños de forma eficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the session.save_path configuration directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, en Linux, reiserfs puede dar un rendimiento mejor que ext2fs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The effect of this function only lasts for the duration of the script.</seg></tuv>
      <tuv xml:lang="es"><seg>Cambia los parámetros de la cookie definidos en el archivo php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The secure parameter was added in PHP 4.0.4.</seg></tuv>
      <tuv xml:lang="es"><seg>El efecto de esta función sólo dura hasta que termina el script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the configuration directives session.cookie_lifetime, session.cookie_path, session.cookie_domain, session.cookie_secure, and session_get_cookie_params().</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro segura fue añadido en PHP 4.0.4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_set_save_handler() sets the user-level session storage functions which are used for storing and retrieving data associated with a session.</seg></tuv>
      <tuv xml:lang="es"><seg>session_set_save_handler() session_set_save_handler() establece las funciones que se utilizan a nivel de usuario para el almacenamiento y recuperación de los datos asociados a una sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is most useful when a storage method other than those supplied by PHP sessions is preferred. i.e.</seg></tuv>
      <tuv xml:lang="es"><seg>Es lo más útil cuando se prefiere utilizar otro método de almacenamiento distinto del proporcionaddo por las sesiones de PHP. p.ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Storing the session data in a local database.</seg></tuv>
      <tuv xml:lang="es"><seg>Almacenar los datos de la sesión en una base de datos local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The "write" handler is not executed until after the output stream is closed.</seg></tuv>
      <tuv xml:lang="es"><seg>Debe cambiar la opción session.save_handler en la configuración a user en su archivo php.ini para que session_set_save_handler() tenga efecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, output from debugging statements in the "write" handler will never be seen in the browser.</seg></tuv>
      <tuv xml:lang="es"><seg>El manejador "escribir" no se ejecuta hasta que se cierra la salida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ello, la salida de las sentencias que coloquemos en el manejador "escribir" para el depurado nunca será enviadas al navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The write handler is not executed if the session contains no data; this applies even if empty session variables are registered.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se necesita producir una salida para el depurado, se sugiere que la salida se produzca en un archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This differs to the default file-based session save handler, which creates empty session files.</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente ejemplo proporciona almacenamiento de las sesiones basado en archivos de forma similar al manejador de sesiones por defecto de PHP files.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example provides file based session storage similar to the PHP sessions default save handler files.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo puede ser extendido fácilmente para cubrir el almacenamiento en bases de datos usando su motor de soporte de bases de datos de PHP favorito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example could easily be extended to cover database storage using your favorite PHP supported database engine.</seg></tuv>
      <tuv xml:lang="es"><seg>La función de lectura debe devolver siempre una cadena para que el manejador de escritura funcione como se espera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read function must return string value always to make save handler work as expected.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelva una cadena vacía si no hay ningún dato a leer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return empty string if there is no data to read.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores devueltos de otros manejadores son convertidos a una expresión booleana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return values from other handlers are converted to boolean expression.</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si todo ha ido correctamente, FALSE si ha habido algún problema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE for success, FALSE for failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. session_set_save_handler() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de session_set_save_handler()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the session.save_handler configuration directive.</seg></tuv>
      <tuv xml:lang="es"><seg>?php function abrir ($save_path, $session_name) {global $sess_save_path, $sess_session_name; $sess_save_path = $save_path; $sess_session_name = $session_name; return(true);} function cerrar() {return(true);} function leer ($id) {global $sess_save_path, $sess_session_name; $sess_file = "$sess_save_path / sess_$id"; if ($fp = @fopen($sess_file, "r")) {$sess_data = fread($fp, filesize($sess_file)); return($sess_data);} else {return(""); / / Debe devolver "" aqu iacute;.}} function escribir ($id, $sess_data) {global $sess_save_path, $sess_session_name; $sess_file = "$sess_save_path / sess_$id"; if ($fp = @fopen($sess_file, "w")) {return(fwrite($fp, $sess_data));} else {return(false);}} function destruir ($id) {global $sess_save_path, $sess_session_name; $sess_file = "$sess_save_path / sess_$id"; return(@unlink($sess_file));} / *********************************************** * ATENCI Oacute;N - Necesitar aacute; implementar alg uacute;n * * tipo de rutinas recolectoras de basura aqu iacute; * *********************************************** / function rb ($maxlifetime) {return true;} session_set_save_handler ("abrir", "cerrar", "leer", "escribir", "destruir", "rb"); session_start(); / / proceed to use sessions normally?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_start() creates a session or resumes the current one based on the current session id that's being passed via a request, such as GET, POST, or a cookie.</seg></tuv>
      <tuv xml:lang="es"><seg>session_start() crea una sesió (o la continúa basandose en el session id pasado por GET o mediante una cookie).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to use a named session, you must call session_name() before calling session_start().</seg></tuv>
      <tuv xml:lang="es"><seg>Si desea usar una sesión con un nombre en concreto, debe llamar a session_name() antes de llamar a session_start().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function always returns TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función siempre devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using cookie-based sessions, you must call session_start() before anything is output to the browser.</seg></tuv>
      <tuv xml:lang="es"><seg>Si está usando sesiones basadas en las cookies, debe llamar a session_start() antes de que haya ninguna salida al navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_start() will register internal output handler for URL rewriting when trans-sid is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>session_start() registrará un manejador de salida interno para la reescritura de las URL 's si trans-sid está activado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a user uses ob_gzhandler or like with ob_start(), the order of output handler is important for proper output.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un usuario utiliza ob_gzhandler o algo como ob_start(), el orden del manejador de salida es importante para que la salida sea la adecuada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, user must register ob_gzhandler before session start.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el usuario debe registrar ob_gzhandler antes de iniciar la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of zlib.output_compression is recommended rather than ob_gzhandler()</seg></tuv>
      <tuv xml:lang="es"><seg>Se recomienda utilizar zlib.output_compression en lugar de ob_gzhandler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_unregister() unregisters the global variable named name from the current session.</seg></tuv>
      <tuv xml:lang="es"><seg>session_unregister() desregistra (olvida) la variable global llamada nombre de la sesión actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE when the variable is successfully unregistered from the session.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve TRUE cuando la variable es eliminada de la sesión correctamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, use unset() to unregister a session variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not unset the corresponding global variable for name, it only prevents the variable from being saved as part of the session.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no borra la variable global correspondiente a nombre, sólo evita que la variable sea guardada como parte de la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must call unset() to remove the corresponding global variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Debe llamar a unset() para eliminar la variable global correspondiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using $_SESSION (or $HTTP_SESSION_VARS), do not use session_register(), session_is_registered() and session_unregister().</seg></tuv>
      <tuv xml:lang="es"><seg>Si está trabajando con $HTTP_SESSION_VARS / $_SESSION, no utilice session_register(), session_is_registered() ni session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session_unset() function frees all session variables currently registered.</seg></tuv>
      <tuv xml:lang="es"><seg>La función session_unset() elimina y libera el espacio ocupado por todas las variables de la sesión actual registradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, use unset() to unregister session variable. i.e. $_SESSION = array();</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>End the current session and store session data.</seg></tuv>
      <tuv xml:lang="es"><seg>Finaliza la sesión actual y guarda sus datos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session data is usually stored after your script terminated without the need to call session_write_close(), but as session data is locked to prevent concurrent writes only one script may operate on a session at any time.</seg></tuv>
      <tuv xml:lang="es"><seg>Los datos de la sesió se suelen guardar tras finalizar la ejecución de su script sin necesidad de llamar a session_write_close(), pero como los datos de la sesió están bloqueados para evitar escrituras concurrentes, sólo un script puede trabajar con una sesión a la vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using framesets together with sessions you will experience the frames loading one by one due to this locking.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se usan framesets junto con sesiones, podrá comprobar que los frames se cargan uno a uno debido a este bloqueo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can reduce the time needed to load all the frames by ending the session as soon as all changes to session variables are done.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede reducir el tiempo necesario para cargar los frames finalizando la sesión tan pronto como haya terminado los cambios a las variables de la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This requires that you place calls to this function prior to any output, including html and head tags as well as any whitespace.</seg></tuv>
      <tuv xml:lang="es"><seg>setcookie() define una cookie para ser enviada con el resto de la información de la cabecera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If setcookie() successfully runs, it will return TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Las cookies deben enviarse antes de mandar cualquier otra cabecera (esta es una restricción de las cookies, no de PHP).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All the arguments except the name argument are optional.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto requiere que sitúe las llamadas a esta función antes de cualquier etiqueta html o head.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may also replace an argument with an empty string ("") in order to skip that argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los parámetros excepto name son opcionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following table explains each parameter of the setcookie() function, be sure to read the Netscape cookie specification for specifics.</seg></tuv>
      <tuv xml:lang="es"><seg>Si sólo se especifica el parámetro name, la cookie con ese nombre se borrará del cliente remoto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assuming the name is' cookiename', this value is retrieved through $_COOKIE['cookiename']</seg></tuv>
      <tuv xml:lang="es"><seg>También puede sustituir cualquier parámetro por una cadena de texto vacía ("") y saltar así ese parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In otherwords, you' ll most likely set this with the time() function plus the number of seconds before you want it to expire.</seg></tuv>
      <tuv xml:lang="es"><seg>Los parámetros expire y secure son números enteros y no se pueden saltar con una cadena de texto vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not set, the cookie will expire at the end of the session (when the browser closes).</seg></tuv>
      <tuv xml:lang="es"><seg>En su lugar utilice un cero (0).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If set to '/', the cookie will be available within the entire domain.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro expire es un entero de tiempo típico de UNIX tal como lo devuelven las funciones time() o mktime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default value is the current directory that the cookie is being set in.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro secure indica que la cookie se debe transmitir única y exclusivamente sobre una conexión segura HTTPS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The domain that the cookie is available.</seg></tuv>
      <tuv xml:lang="es"><seg>Fallos habituales:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The. is not required but makes it compatible with more browsers.</seg></tuv>
      <tuv xml:lang="es"><seg>Las cookies no se hacen visibles hasta la siguiente carga de una página para la que la cookie deba estar visible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to tail matching in the spec for details.</seg></tuv>
      <tuv xml:lang="es"><seg>Las llamadas múltiples a setcookie() en el mismo script se ejecutarán en orden inverso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When set to 1, the cookie will only be set if a secure connection exists.</seg></tuv>
      <tuv xml:lang="es"><seg>Si está intentando borrar una cookie antes de insertar otra, debe situar la llamada de inserción antes de la de borrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookie values also exist in $_REQUEST.</seg></tuv>
      <tuv xml:lang="es"><seg>A continuación se muestran algunos ejemplos::</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In our examples below, $TextCookie will exist.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. setcookie(), ejemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To test if a cookie was successfully set, check for the cookie on a next loading page before the cookie expires.</seg></tuv>
      <tuv xml:lang="es"><seg>setcookie( "TestCookie" ,"Test Value"); setcookie("TestCookie",$value,time()+3600); / * expire in 1 hour * / setcookie("TestCookie",$value,time()+3600 ," / ~rasmus / ",".utoronto.ca",1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies must be deleted with the same parameters as they were set with.</seg></tuv>
      <tuv xml:lang="es"><seg>Tenga en cuenta que el campo value de la cookie se codifica como URL (urlencode) automáticamente cuando envía la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider explode() or serialize() to set one cookie with multiple names and values.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando ésta se recibe, se descodifica autómaticamente y se asigna a una variable con el mismo nombre que el nombre de la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are trying to delete one cookie before inserting another you should put the insert before the delete.</seg></tuv>
      <tuv xml:lang="es"><seg>Para ver el contenido de nuestra cookie de prueba en un script, simplemente utilice uno de los siguientes ejemplos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples follow how to send cookies:</seg></tuv>
      <tuv xml:lang="es"><seg>echo $TestCookie; echo $HTTP_COOKIE_VARS["TestCookie"];</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $value = 'something from somewhere'; setcookie ("TestCookie", $value); setcookie ("TestCookie", $value,time()+3600); / * expire in 1 hour * / setcookie ("TestCookie", $value,time()+3600, "/ ~rasmus /", ".example.com", 1);?</seg></tuv>
      <tuv xml:lang="es"><seg>También puede utilizar arrays de cookies empleando la notación de array en el nombre de la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To see the contents of our test cookie in a script, simply use one of the following examples:</seg></tuv>
      <tuv xml:lang="es"><seg>Esto tiene como efecto establecer tantas cookies como elementos de array, pero cuando el script recibe la cookie, se guardan los valores en un array con el nombre de la cookie:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When deleting a cookie you should assure that the expiration date is in the past, to trigger the removal mechanism in your browser.</seg></tuv>
      <tuv xml:lang="es"><seg>setcookie( "cookie[three]", "cookiethree "); setcookie ("cookie[two]", "cookietwo"); setcookie ("cookie[one]", "cookieone "); if (isset ($cookie)) {while (list ($name, $value) = each ($cookie)) {echo "$name == $value br \n";}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / set the expiration date to one hour ago setcookie ("TestCookie", "", time() - 3600); setcookie ("TestCookie","", time() - 3600, "/ ~rasmus /", ".example.com", 1);?</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener más información sobre las cookies, consulte la especificación de cookies de Netscape, que se encuentra en http: / /www.netscape.com / newsref / std / cookie_spec.html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has the effect of setting as many cookies as you have array elements, but when the cookie is received by your script, the values are all placed in an array with the cookie 's name:</seg></tuv>
      <tuv xml:lang="es"><seg>Microsoft Internet Explorer 4 con Service Pack 1 no funciona correctamente con las cookies que tienen asociado el parámetro path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Netscape Communicator 4.05 and Microsoft Internet Explorer 3.x appear to handle cookies incorrectly when the path and time are not set.</seg></tuv>
      <tuv xml:lang="es"><seg>Netscape Communicator 4.05 y Microsoft Internet Explorer 3.x funcionan aparentemente de manera incorrecta cuando no se especifican los parámetros path y time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones para Hyperwave</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>E_ERROR, E_PARSE, E_CORE_ERROR, E_CORE_WARNING, E_COMPILE_ERROR and E_COMPILE_WARNING.</seg></tuv>
      <tuv xml:lang="es"><seg>The example below shows the handling of internal execptions by triggering errors and handling them with a user defined function:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The example below shows the handling of internal exceptions by triggering errors and handling them with a user defined function:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>vector a Array ([0] = 2 [1] = 3 [2] = foo [3] = 5.5 [4] = 43.3 [5] = 21.11) --- - vector b - a warning (b = log(PI) * a) b WARNING / b [1024] Value at position 2 is not a number, using 0 (zero) br Array ([0] = 2.2894597716988 [1] = 3.4341896575482 [2] = 0 [3] = 6.2960143721717 [4] = 49.566804057279 [5] = 24.165247890281) --- - vector c - an error b ERROR / b [512] Incorrect input vector, array of values expected br NULL --- - vector d - fatal error b FATAL / b [256] log(x) for x = 0 is undefined, you used: scale = -2.5 br Fatal error in line 36 of file trigger_error.php, PHP 4.0.2 (Linux) br Aborting... br</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / redefine the user error constants - PHP4 only define (FATAL,E_USER_ERROR); define (ERROR,E_USER_WARNING); define (WARNING,E_USER_NOTICE); / / set the error reporting level for this script error_reporting (FATAL + ERROR + WARNING); / / error handler function function myErrorHandler ($errno, $errstr) {switch ($errno) {case FATAL: echo "b FATAL / b [$errno] $errstr br \n"; echo" Fatal error in line ".__LINE__. "of file ".__FILE__; echo", PHP ".PHP_VERSION. "(".PHP_OS .") br \n"; echo "Aborting... br \n"; exit -1; break; case ERROR: echo" b ERROR / b [$errno] $errstr br \n"; break; case WARNING: echo "b WARNING / b [$errno] $errstr br \n"; break; default: echo "Unkown error type: [$errno] $errstr br \n"; break;}} / / function to test the error handling function scale_by_log ($vect, $scale) {if (!is_numeric($scale) _BAR_ _BAR_ $scale = 0) trigger_error("log(x) for x = 0 is undefined, you used: scale = $scale", FATAL); if (!is_array($vect)) {trigger_error("Incorrect input vector, array of values expected", ERROR); return null;} for ($i=0; $i count($vect); $i++) {if (!is_numeric($vect[$i])) trigger_error("Value at position $i is not a number, using 0 (zero)", WARNING); $temp[$i] = log($scale) * $vect[$i];} return $temp;} / / set to the user defined error handler $old_error_handler = set_error_handler("myErrorHandler"); / / trigger some errors, first define a mixed array with a non-numeric item echo "vector a\n"; $a = array(2,3 ,"foo",5.5,43.3,21.11); print_r($a); / / now generate second array, generating a warning echo "----\nvector b - a warning (b = log(PI) * a)\n"; $b = scale_by_log($a, M_PI); print_r($b); / / this is trouble, we pass a string instead of an array echo "----\nvector c - an error\n"; $c = scale_by_log("not array",2.3); var_dump($c); / / this is a critical error, log of zero or negative number is undefined echo "----\nvector d - fatal error\n"; $d = scale_by_log($a, -2.5);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of particular note is that this value will be 0 if the statement that caused the error was prepended by the @ error-control operator.</seg></tuv>
      <tuv xml:lang="es"><seg>vector a Array ([0] = 2 [1] = 3 [2] = foo [3] = 5.5 [4] = 43.3 [5] = 21.11) --- - vector b - a warning (b = log(PI) * a) b WARNING / b [1024] Value at position 2 is not a number, using 0 (zero) br Array ([0] = 2.2894597716988 [1] = 3.4341896575482 [2] = 0 [3] = 6.2960143721717 [4] = 49.566804057279 [5] = 24.165247890281) --- - vector c - an error b ERROR / b [512] Incorrect input vector, array of values expected br NULL --- - vector d - fatal error b FATAL / b [256] log(x) for x = 0 is undefined, you used: scale = -2.5 br Fatal error in line 16 of file trigger_error.php, PHP 4.0.1pl2 (Linux) br Aborting... br</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of stream_set_write_buffer().</seg></tuv>
      <tuv xml:lang="es"><seg>Si buffer es 0 entonces las operaciones de escritura no usan un buffer intermedio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LC_ALL for all of the below</seg></tuv>
      <tuv xml:lang="es"><seg>categoria es una cadena que especifica la categoría de las funciones afectadas por el ajuste de localidad:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LC_CTYPE for character classification and conversion, for example strtoupper()</seg></tuv>
      <tuv xml:lang="es"><seg>LC_ALL para todas las funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LC_NUMERIC for decimal separator (See also localeconv())</seg></tuv>
      <tuv xml:lang="es"><seg>LC_COLLATE para la comparación de cadenas - aún no incluída en el PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If locale is the empty string "", the locale names will be set from the values of environment variables with the same names as the above categories, or from "LANG ".</seg></tuv>
      <tuv xml:lang="es"><seg>LC_CTYPE para la conversión y clasificación de caracteres, como por ejemplo strtoupper()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If locale is an array or followed by additional parameters then each array element or parameter is tried to be set as new locale until success.</seg></tuv>
      <tuv xml:lang="es"><seg>LC_MONETARY para localeconv() - aún no incluída en el PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is usefull if a locale is known under different names on different systems or for providing a fallback for a possibly not available locale.</seg></tuv>
      <tuv xml:lang="es"><seg>LC_NUMERIC para el separador decimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing multiple locales is not available before PHP 4.3.0</seg></tuv>
      <tuv xml:lang="es"><seg>LC_TIME para el formato de fecha y hora con strftime()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An invalid category name also causes a warning message.</seg></tuv>
      <tuv xml:lang="es"><seg>Si localidad es la cadena vacía "", los nombres de localidad se fijarán a partir de las variables de entorno con los mismos nombres de las categorías anteriores, o desde "LANG ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns exactly what the system setlocale function returns.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la localidad es cero o "0", el ajuste de localidad no se ve afectado y sólo se devuelve el ajuste actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Set locale to Dutch * / setlocale (LC_ALL, 'nl_NL'); / * Output: vrijdag 22 december 1978 * / echo strftime ("%A %e %B %Y", mktime (0, 0, 0, 12, 22, 1978)); / * try different possible locale names for german as of PHP 4.3.0 * / $loc_de = setlocale (LC_ALL, 'de_DE@euro', 'de_DE', 'de', 'ge'); echo "Preferred locale for german on this system is '$loc_de'";?</seg></tuv>
      <tuv xml:lang="es"><seg>Un nombre de categoría no válido también produce un mensaje de aviso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current active configuration setting of magic_quotes_runtime (0 for off, 1 for on).</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el valor de la configuración activa actual de magic_quotes_runtime. (0 desactivado, 1 activado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: get_magic_quotes_gpc() and get_magic_quotes_runtime().</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también get_magic_quotes_gpc(), get_magic_quotes_runtime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this is reached, the script returns a fatal error.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el número de segundos que se le permite a un script ejecutarse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the configuration file.</seg></tuv>
      <tuv xml:lang="es"><seg>Si éste es alcanzado, el script devuelve un error de tipo fatal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When called, set_time_limit() When called, set_time_limit() restarts the timeout counter from zero.</seg></tuv>
      <tuv xml:lang="es"><seg>El límite por defecto es 30 segundos o, si existe, el valor max_execution_time definido en el fichero de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit( 20) is made, the script will run for a total of 45 seconds before timing out.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se llama, set_time_limit() reinicia el contador del timeout a cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no workaround other than turning off safe mode or changing the time limit in the configuration file.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, si el timeout es el de por defecto de 30 segundos, y después de 25 segundos de ejecución del script se realiza una llamada set_time_limit( 20), el script se ejecutará durante un total de 45 segundos antes de alcanzar su límite.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The set_time_limit() function and the configuration directive max_execution_time only affect the execution time of the script itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Advierta que set_time_limit() no tiene efecto cuando PHP se ejecuta en modo seguro (safe mode).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any time spent on activity that happens outside the execution of the script such as system calls using system(), the sleep() function, database queries, etc. is not included when determining the maximum time that the script has been running.</seg></tuv>
      <tuv xml:lang="es"><seg>No hay otra opción que que desactivar el modo seguro o cambiar el límite de tiempo en el fichero de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"boolean" (or, since PHP 4.2.0, "bool")</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el tipo de la varible var como type.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"float" (only possible since PHP 4.2.0, for older versions use the deprecated variant "double")</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores posibles para type son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"array"</seg></tuv>
      <tuv xml:lang="es"><seg>"integer"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"object"</seg></tuv>
      <tuv xml:lang="es"><seg>"double"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$foo = "5bar"; / / string $bar = true; / / boolean settype($foo, "integer"); / / $foo is now 5 (integer) settype($bar, "string"); / / $bar is now "1" (string)</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si se lleva a cabo con éxito; en otro caso devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gettype(), type-casting and type-juggling.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también gettype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shm_attach() returns an id that that can be used to access the System V shared memory with the given key, the first call creates the shared memory segment with mem_size (default: sysvshm.init_mem in the configuration file, otherwise 10000 bytes) and the optional perm-bits (default:</seg></tuv>
      <tuv xml:lang="es"><seg>shm_attach() devuelve un identificador que puede usarse para acceder a la memoria compartida de SystemV, con la llave dada, la primera llamada creará el segmento de memoria compartida con mem_size de tamaño (por defecto: sysvshm.init_mem en el archivo de configuración, o bien de 10000 bytes) y los bits de permiso mas apropiados (por defecto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Memsize and perm will be ignored.</seg></tuv>
      <tuv xml:lang="es"><seg>Una segunda llamada a shm_attach() con la misma llave devolvera un id diferente de memoria compartida, pero ambos identificadores acceden a la misma porción de memoria compartida. memsize y perm serán ignorados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shm_detach() disconnects from the shared memory given by the shm_identifier created by shm_attach().</seg></tuv>
      <tuv xml:lang="es"><seg>shm_detach() finaliza la conexión con la memoria compartida, especificada por el identificador shm_identifier creado con shm_attach().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shm_detach() always returns TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que recordar que la memoria compartida aún existe en el sistema Unix, y los datos aún están presentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variable is still present in the shared memory.</seg></tuv>
      <tuv xml:lang="es"><seg>shm_get_var() devuelve la variable con la llave variable_key dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>La variable, queda presente en la memoria compartida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All variable-types are supported.</seg></tuv>
      <tuv xml:lang="es"><seg>Inserta o actualiza una variable con una llave variable_key.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Son válidos todos los tipos de variable (doble, entera, cadena, arreglo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Elimina la memoria compartida de un sistema Unix, Todos los datos serán destruídos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Elimina la varible que se corresponde con la llave variable_key dada, liberando la memoria que ocupaba aquella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function foo ($arg_1, $arg_2,..., $arg_n) {echo "Example function.\n"; return $retval;}</seg></tuv>
      <tuv xml:lang="es"><seg>Una función se define con la siguiente sintaxis:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, functions must be defined before they are referenced.</seg></tuv>
      <tuv xml:lang="es"><seg>function foo ($arg_1, $arg_2,..., $arg_n) {echo "Función de ejemplo.\n"; return $retval;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Except when a function is conditionally defined such as shown in the two examples below.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier instrucción válida de PHP puede aparecer en el cuerpo de la función, incluso otras funiones y definiciones de clases.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its definition must be processed prior to being called.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP3, las funciones deben definirse antes de que se referencien.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Conditional functions</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP4 no existe tal requerimiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {function bar() {echo "I don't exist until foo() is called.\n";}} / * We can't call bar() yet since it doesn't exist. * / foo(); / * Now we can call bar(), foo()'s processesing has made it accessable. * / bar();?</seg></tuv>
      <tuv xml:lang="es"><seg>PHP no soporta la sobrecarga de funciones, y tampoco es posible redefinir u ocultar funciones previamente declaradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 does not support variable numbers of arguments to functions, although default arguments are supported (see Default argument values for more information).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP3 no soporta un número variable de parámetros, aunque sí soporta parámetros por defecto (ver Valores por defecto de de los parámetros para más información).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 supports both: see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP4 soporta ambos: ver Listas de longitud variable de parámetros y las referencias de las funciones func_num_args(), func_get_arg(), y func_get_args() para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function arguments</seg></tuv>
      <tuv xml:lang="es"><seg>Parámetros de las funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must use srand() to seed this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función mezcla (cambia aleatoriamente el orden de los elementos de) una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. shuffle() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de shuffle()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$numbers = range (1,20); srand ((float)microtime()*1000000); shuffle ($numbers); while (list (, $number) = each ($numbers)) {echo "$number ";}</seg></tuv>
      <tuv xml:lang="es"><seg>$numeros = range (1,20); srand (time()); shuffle ($numeros); while (list(, $numero) = each ($numeros)) {echo "$numero ";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), asort(), ksort(), rsort(), sort(), and usort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: arsort(), asort(), ksort(), rsort(), sort() y usort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This calculates the similarity between two strings as described in Oliver [1993].</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función calcula la similitud entre dos cadenas según se describe en Oliver [1993].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this implementation does not use a stack as in Oliver 's pseudo code, but recursive calls which may or may not speed up the whole process.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que esta implementación no utiliza una pila como en el pseudo-código de Oliver, sino llamadas recursivas que pueden o no acelerar el proceso completo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note also that the complexity of this algorithm is O( N**3) where N is the length of the longest string.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese también que la complejidad de este algoritmo es O( N**3), donde N es la longitud de la cadena más larga.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By passing a reference as third argument, similar_text() will calculate the similarity in percent for you.</seg></tuv>
      <tuv xml:lang="es"><seg>Pasando una referencia como tercer argumento, similar_text() calculará para usted la similitud como porcentaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the number of matching chars in both strings.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el número de caracteres coincidentes en ambas cadenas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg parameter is in radians.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el seno de arg en radianes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asin(), cos(), tan() and deg2rad().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también cos() y tan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sizeof() function is an alias for count().</seg></tuv>
      <tuv xml:lang="es"><seg>Devueve el número de elementos de la matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also count().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: count()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sleep() function delays program execution for the given number of seconds.</seg></tuv>
      <tuv xml:lang="es"><seg>La función sleep retarda la ejecución del programa durante el número de seconds (segundos) dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also usleep() and set_time_limit()</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también usleep().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns SNMP object value on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el valor de un objeto SNMP en caso de exito y FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The snmpget() function is used to read the value of an SNMP object specified by the object_id.</seg></tuv>
      <tuv xml:lang="es"><seg>La función snmpget() es usada para leer el valor de un objeto SNMP especificado por el object_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SNMP agent is specified by the hostname and the read community is specified by the community parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>El agente SNMP es especificado por el hostname y la comunidad lectora es especificada por el parametro community.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$syscontact = snmpget( "127.0.0.1", "public", "system.SysContact.0");</seg></tuv>
      <tuv xml:lang="es"><seg>$syscontact = snmpget( "127.0.0.1", "public", "system.SysContact.0")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current value stored in the UCD Library for quick_print. quick_print is off by default.</seg></tuv>
      <tuv xml:lang="es"><seg>Delvuele el valor actual almacenado en la biblioteca UCD para quick_print. quick_print está desactivado por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Above function call would return FALSE if quick_print is off, and TRUE if quick_print is on.</seg></tuv>
      <tuv xml:lang="es"><seg>La llamada a la función superior podría devolver FALSE si quick_print está activo, y TRUE si quick_print está activo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>snmp_get_quick_print() is only available when using the UCD SNMP library.</seg></tuv>
      <tuv xml:lang="es"><seg>snmp_get_quick_print() está solamente disponible cuando estemos usando la biblioteca UCD SNMP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not available when using the Windows SNMP library.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función no está disponible cuando estemos usando la biblioteca Windows SNMP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See: snmp_set_quick_print() for a full description of what quick_print does.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver: snmp_get_quick_print() para una descripción completa de lo que hace quick_print.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SNMP functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones SNMP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the specified SNMP object value, returning TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el valor especificado para el objeto SNMP, devolviendo TRUE en caso de exito o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The snmpset() function is used to set the value of an SNMP object specified by the object_id.</seg></tuv>
      <tuv xml:lang="es"><seg>La función snmpset() es usada para establecer el valor de un objeto SNMP especificado por el object_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SNMP agent is specified by the hostname and the read community is specified by the community parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>El agente SNMP es espcificado por el hostname y la comunidad lectora por el parametro community.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the value of quick_print within the UCD SNMP library.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece el valor de quick_print con la biblioteca UCD SNMP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When this is set (1), the SNMP library will return'quick printed 'values.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando esto está establecido (1), la biblioteca SNMP devolverá valores 'quick printed '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that just the value will be printed.</seg></tuv>
      <tuv xml:lang="es"><seg>De esta manera sólo el valor será impreso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When quick_print is not enabled (default) the UCD SNMP library prints extra information including the type of the value (i.e.</seg></tuv>
      <tuv xml:lang="es"><seg>Ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>IpAddress or OID).</seg></tuv>
      <tuv xml:lang="es"><seg>IPAddress o OID).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, if quick_print is not enabled, the library prints additional hex values for all strings of three characters or less.</seg></tuv>
      <tuv xml:lang="es"><seg>Adicionalmente, si quick_print no está activado, la biblioteca imprime valores hexadecimales adicionales para todas las cadenas de 3 o menos caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting quick_print is often used when using the information returned rather then displaying it.</seg></tuv>
      <tuv xml:lang="es"><seg>El ajuste de quick_print es generalmente usado cuando usando la información devuelta con anterioridad se muestra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first value printed might be: 'Timeticks: (0) 0:00:00.00', whereas with quick_print enabled, just '0:00:00.00' would be printed.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer valor impreso debe de ser: 'Timeticks: (0) 0:00:00.00', donde qick_print se activa, solo se imprimira '0:00:00.00'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default the UCD SNMP library returns verbose values, quick_print is used to return only the value.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto la biblioteca UCD SNMP devuelve valores detallados, quick_print es usado para devolver solamente el valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently strings are still returned with extra quotes, this will be corrected in a later release.</seg></tuv>
      <tuv xml:lang="es"><seg>Las cadenas son mantenidas normalmente con comillas extra, esto será corregido en versiones posteriores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>snmp_set_quick_print() is only available when using the UCD SNMP library.</seg></tuv>
      <tuv xml:lang="es"><seg>snmp_get_quick_print() está sólo disponible cuando estemos usando la biblioteca UCD SNMP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of SNMP object values starting from the object_id as root and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz de valores de objetos SMNP comenzando por el object_id() como raíz y FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>snmpwalk() function is used to read all the values from an SNMP agent specified by the hostname.</seg></tuv>
      <tuv xml:lang="es"><seg>La función snmpwalk() es usada para leer todos los valores de un agente SNMP especificado por el hostname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Community specifies the read community for that agent.</seg></tuv>
      <tuv xml:lang="es"><seg>Community especifica la comunidad lectora para el agente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A NULL object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Un object_id nulo se toma como la raíz del arbol de los objetos SNMP y todos los objetos por debajo de ese arbol son devueltos como una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If object_id is specified, all the SNMP objects below that object_id are returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si object_id es especificado, todos los objetos SNMP por debajo de object_id son devueltos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Above function call would return all the SNMP objects from the SNMP agent running on localhost.</seg></tuv>
      <tuv xml:lang="es"><seg>Encima de una función de llamada podrían devolverse todos los objetos SNMP del agente SNMP en ejecución en el servidor local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One can step through the values with a loop</seg></tuv>
      <tuv xml:lang="es"><seg>Uno puede pasar por todos los valores con un bucle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array with object ids and their respective object value starting from the object_id as root and FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una matriz asociativa con los identificadores de los objetos y sus respectivos valores comenzando por el object_id como raíz y FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>snmpwalkoid() function is used to read all object ids and their respective values from an SNMP agent specified by the hostname.</seg></tuv>
      <tuv xml:lang="es"><seg>La función snmpwalkoid() es usada para leer todos los identificadores de objetos y sus respectivos valores de un agente SNMP especificado por el nombre del servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Community specifies the read community for that agent.</seg></tuv>
      <tuv xml:lang="es"><seg>La lectura de community especifica la comunidad para el agente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A NULL object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Un object_id nulo es tomado como la raíz del arbol de objetos SNMP y todos los objetos por debajo de este arbol son devueltos como una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If object_id is specified, all the SNMP objects below that object_id are returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si object_id es especificado, todos los objetos SNMP inferiores al object_id son devueltos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The existence of snmpwalkoid() and snmpwalk() has historical reasons.</seg></tuv>
      <tuv xml:lang="es"><seg>La existencia de snmpwalkoid() y snmpwalk() tiene razones historicas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both functions are provided for backward compatibility.</seg></tuv>
      <tuv xml:lang="es"><seg>Ambas funciones son proporcionadas para compatibilidad hacia atrás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Above function call would return all the SNMP objects from the SNMP agent running on localhost.</seg></tuv>
      <tuv xml:lang="es"><seg>La llamada a las funciones superiores devuelve todos los objetos SNMP del agente SNMP en ejecución en el servidor local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si todo fue bien, FALSE en caso de fallo. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si todo fue bien, FALSE en caso de fallo. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. socket_strerror() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. socket_strerror() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The old_function statement allows you to declare a function using a syntax identical to PHP / FI2 (except you must replace'function 'with'old_function'.</seg></tuv>
      <tuv xml:lang="es"><seg>La instrucción old_function permite declarar una función usando una sintaxis idéntica a la de PHP / FI2 (excepto que debes reemplazar 'function 'por 'old_function').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a deprecated feature, and should only be used by the PHP / FI2 - PHP 3 convertor.</seg></tuv>
      <tuv xml:lang="es"><seg>Es una característica obsoleta, y debería ser usada únicamente por el conversor PHP / FI2 - PHP3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions declared as old_function cannot be called from PHP 's internal code.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones declaradas como old_function no pueden llamarse desde el código interno de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, this means you can' t use them in functions such as usort(), array_walk(), and register_shutdown_function().</seg></tuv>
      <tuv xml:lang="es"><seg>Entre otras cosas, esto significa que no puedes usarlas en funciones como usort(), array_walk(), y register_shutdown_function().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can get around this limitation by writing a wrapper function (in normal PHP 3 form) to call the old_function.</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes solventar esta limitación escribiendo un "wrapper" (en PHP3 normal) que a su vez llame a la función declarada como old_function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones variable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sort() example</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función ordena una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos estarán ordenados de menor a mayor cuando la función termine.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fruits have been sorted in alphabetical order.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting type flags:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de sort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), asort(), ksort(), natsort(), natcasesort(), rsort(), usort(), array_multisort(), and uksort().</seg></tuv>
      <tuv xml:lang="es"><seg>$frutas = array ("limón", "naranja", "plátano", "manzana"); sort ($frutas); for (reset ($frutas); $clave = key ($frutas); next ($frutas)) {echo "frutas[$clave] = ".$frutas[$clave] ."\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter was added in PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: arsort(), asort(), ksort(), rsort(), y usort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the soundex key of str.</seg></tuv>
      <tuv xml:lang="es"><seg>Calcula la clave soundex de cad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Soundex keys have the property that words pronounced similarly produce the same soundex key, and can thus be used to simplify searches in databases where you know the pronunciation but not the spelling.</seg></tuv>
      <tuv xml:lang="es"><seg>Las claves soundex tienen la propiedad de que las palabras que se pronuncian de forma parecida tienen la misma clave, de modo que se pueden usar para simplificar la búsqueda en las bases de datos cuando se conoce la pronunciación pero no la transcripción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This soundex function returns a string 4 characters long, starting with a letter.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función soundex devuelve una cadena de 4 caracteres que comienza por una letra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This particular soundex function is one described by Donald Knuth in "The Art Of Computer Programming, vol.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función soundex en particular es la descrita por Donald Knuth en "The Art Of Computer Programming, vol.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Soundex Examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos de Soundex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also levenshtein(), metaphone(), and similar_text().</seg></tuv>
      <tuv xml:lang="es"><seg>soundex ("Euler") == soundex ("Ellery") == 'E460'; soundex ("Gauss") == soundex ("Ghosh") == 'G200'; soundex ("Knuth") == soundex ("Kant") == 'H416'; soundex ("Lloyd") == soundex ("Ladd") == 'L300'; soundex ("Lukasiewicz") == soundex ("Lissajous") == 'L222';</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If limit is set, the returned array will contain a maximum of limit elements with the last element containing the whole rest of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array de cadenas, cada una de las cuales es una subcadena de string formada al dividir esta en los límites formados por la expresión regular pattern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, split() returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ocurre un error, devuelve un valor falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. split() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener los cinco primeros campos de una línea de / etc / passwd:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>list( $user,$pass,$uid,$gid,$extra)= split (" :", $passwd_line, 5);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. split() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are n occurrences of pattern, the returned array will contain n +1 items.</seg></tuv>
      <tuv xml:lang="es"><seg>$passwd_list = split( ":", $passwd_line, 5);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, this is also true if string is empty.</seg></tuv>
      <tuv xml:lang="es"><seg>Para examinar una fecha que puede estar delimitada por barras, puntos o guiones:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To parse a date which may be delimited with slashes, dots, or hyphens:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. split() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$date = "04 / 30 / 1973"; / / Delimiters may be slash, dot, or hyphen list ($month, $day, $year) = split ('[ /. -]', $date); echo "Month: $month; Day: $day; Year: $year br \n";</seg></tuv>
      <tuv xml:lang="es"><seg>$date = "04 / 30 / 1973"; / / Los delimitadores pueden ser barras, puntos o guiones list ($month, $day, $year) = split ('[ /. -]', $date); echo "Month: $month; Day: $day; Year: $year br \n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that pattern is case-sensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>Observar que pattern distingue entre mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that if you don' t require the power of regular expressions, it is faster to use explode(), which doesn't incur the overhead of the regular expression engine.</seg></tuv>
      <tuv xml:lang="es"><seg>Observar que si no se necesita la potencia de las expresiones regulares, es más rápido utilizar explode(), que no carga el motor de expresiones regulares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For users looking for a way to emulate Perl' s @chars = split('', $str) behaviour, please see the examples for preg_split().</seg></tuv>
      <tuv xml:lang="es"><seg>Por favor, observar que pattern es una expresión regular.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to split on any of the characters which are considered special by regular expressions, you 'll need to escape them first.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se quiere dividir con alguno de los caracteres especiales de las expresiones regulares, se necesita protegerlo antes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you think split() (or any other regex function, for that matter) is doing something weird, please read the file regex.7, included in the regex / subdirectory of the PHP distribution.</seg></tuv>
      <tuv xml:lang="es"><seg>Si pareciera que split() (o cualquier otra función de regex) está haciendo algo irregular, léase el archivo regex.7, incluido en el subdirectorio regex de la distribución de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s in manpage format, so you'll want to do something along the lines of man / usr / local / src / regex / regex.7 in order to read it.</seg></tuv>
      <tuv xml:lang="es"><seg>Está en formato de página de manual, por lo que para leerlo es necesaria una orden como man / usr / local / src / regex / regex.7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: preg_split(), spliti(), explode(), implode(), chunk_split(), and wordwrap().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también: explode() e implode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string produced according to the formatting string format.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena producida de acuerdo a la cadena de formato.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format string is composed of zero or more directives: ordinary characters (excluding%) that are copied directly to the result, and conversion specifications, each of which results in fetching its own parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena de formato está compuesta por cero o más directivas: caracteres ordinarios (excepto%) que son copiados directamente al resultado, y especificaciones de conversión, cada una de las cuales provoca la obtención de su propio parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This applies to both sprintf() and printf().</seg></tuv>
      <tuv xml:lang="es"><seg>Esto se aplica tanto a sprintf() como a printf().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each conversion specification consists of a percent sign (%), followed by one or more of these elements, in order:</seg></tuv>
      <tuv xml:lang="es"><seg>Cada especificación de conversión consiste en uno de estos elementos, por orden:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may be a space character or a 0 (zero character).</seg></tuv>
      <tuv xml:lang="es"><seg>Un especificador de relleno opcional que indica qué caracter se utilizará para rellenar el resultado hasta el tamaño de cadena correcto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is to pad with spaces.</seg></tuv>
      <tuv xml:lang="es"><seg>Este puede ser un espacio o un 0 (caracter cero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An alternate padding character can be specified by prefixing it with a single quote (').</seg></tuv>
      <tuv xml:lang="es"><seg>El valor por defecto es rellenar con espacios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An optional alignment specifier that says if the result should be left-justified or right-justified.</seg></tuv>
      <tuv xml:lang="es"><seg>Un caracter de relleno alternativo se puede especificar prefijándolo con una comilla simple (').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is right-justified; a - character here will make it left-justified.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea los ejemplos más abajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An optional precision specifier that says how many decimal digits should be displayed for floating-point numbers.</seg></tuv>
      <tuv xml:lang="es"><seg>Un especificador de alineación opcional que indica si el resultado debe ser alineado a la izquierda o a la derecha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option has no effect for other types than float. (Another function useful for formatting numbers is number_format().)</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto se alinea a la derecha; un caracter - aquí lo justificará a la izquierda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible types:</seg></tuv>
      <tuv xml:lang="es"><seg>Un número opcional, un especificador de ancho que dice el número de caracteres (mínimo) en que debería resultar esta conversión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No argument is required.</seg></tuv>
      <tuv xml:lang="es"><seg>Un especificador de precisión opcional que indica cuántos dígitos decimales deben mostrarse para los números en coma flotante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>c - the argument is treated as an integer, and presented as the character with that ASCII value.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta opción no tienen efecto para otros tipos que no sean double. (Otra función útil para formatear números es number_format()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>u - the argument is treated as an integer, and presented as an unsigned decimal number.</seg></tuv>
      <tuv xml:lang="es"><seg>Un especificador de tipo que indica el tipo a usar para tratar los datos de los argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>f - the argument is treated as a float, and presented as a floating-point number.</seg></tuv>
      <tuv xml:lang="es"><seg>Los tipos posibles son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>o - the argument is treated as an integer, and presented as an octal number.</seg></tuv>
      <tuv xml:lang="es"><seg>% - un caracter literal de porcentaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>s - the argument is treated as and presented as a string.</seg></tuv>
      <tuv xml:lang="es"><seg>No se precisa argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>x - the argument is treated as an integer and presented as a hexadecimal number (with lowercase letters).</seg></tuv>
      <tuv xml:lang="es"><seg>b - el argumento es tratado como un entero y presentado como un número binario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>X - the argument is treated as an integer and presented as a hexadecimal number (with uppercase letters).</seg></tuv>
      <tuv xml:lang="es"><seg>c - el argumento es tratado como un entero, y presentado como el caracter con dicho valor ASCII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP version 4.0.6 the format string supports argument numbering / swapping.</seg></tuv>
      <tuv xml:lang="es"><seg>d - el argumento es tratado como un entero y presentado como un número decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>f - el argumento es tratado como un doble y presentado como un número de coma flotante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$format = "There are %d monkeys in the %s"; printf($format,$num,$location);</seg></tuv>
      <tuv xml:lang="es"><seg>o - el argumento es tratado como un entero, y presentado como un número octal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Argument swapping</seg></tuv>
      <tuv xml:lang="es"><seg>s - el argumento es tratado como una cadena y es presentado como tal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3.</seg></tuv>
      <tuv xml:lang="es"><seg>x - el argumento es tratado como un entero y presentado como un número hexadecimal (con minúsculas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$format = "The %2\$s contains %1\$d monkeys"; printf($format,$num,$location);</seg></tuv>
      <tuv xml:lang="es"><seg>X - el argumento es tratado como un entero y presentado como un número hexadecimal (con mayúsculas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Argument swapping</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: printf(), sscanf(), fscanf(), y number_format().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$format = "The %2\$s contains %1\$d monkeys.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That' s a nice %2\$s full of %1\$d monkeys ."; printf($format, $num, $location);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de sprintf(): enteros rellenos con ceros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also printf(), sscanf(), fscanf(), vsprintf(), and number_format().</seg></tuv>
      <tuv xml:lang="es"><seg>$fechaiso = sprintf ("%04d-%02d-%02d", $anno, $mes, $dia);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. sprintf(): zero-padded integers</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$isodate = sprintf( "%04d-%02d-%02d", $year, $month, $day);</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de sprintf(): formateando monedas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$money1 = 68.75; $money2 = 54.35; $money = $money1 + $money2; / / echo $money will output "123.1"; $formatted = sprintf("%01.2f", $money); / / echo $formatted will output "123.10 "</seg></tuv>
      <tuv xml:lang="es"><seg>$pelas1 = 68.75; $pelas2 = 54.35; $pelas = $pelas1 + $pelas2; / / echo $pelas mostrará "123.1"; $formateado = sprintf ("%01.2f", $pelas); / / echo $formateado mostrará "123.10 "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a valid regular expression which will match string, ignoring case.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una expresión regular válida que coincide con string sin distinguir mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This expression is string with each character converted to a bracket expression; this bracket expression contains that character's uppercase and lowercase form if applicable, otherwise it contains the original character twice.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta expresión es string con cada carácter convertido a una expresión entre corchetes que contiene el carácter en mayúscula y minúscula, si es posible; en caso contrario, contiene el carácter original dos veces.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sql_regcase() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. sql_regcase() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo sql_regcase ("Foo bar");</seg></tuv>
      <tuv xml:lang="es"><seg>echo sql_regcase( "Foo bar ");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>[Ff][Oo][Oo] [Bb][Aa][Rr]</seg></tuv>
      <tuv xml:lang="es"><seg>[Ff][Oo][Oo] [][Bb][Aa][Rr]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be used to achieve case insensitive pattern matching in products which support only case sensitive regular expressions.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede utilizar para lograr coincidencias que no diferencien mayúsculas de minúsculas en productos que sólo soportan expresiones regulares que sí distinguen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Semaphore, Shared Memory and IPC Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones Semáforo y de memoria compartida</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pow().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la raíz cuadrada de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeds the random number generator with seed.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicializa el generador de números aleatorios con seed.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>/ / seed son los microsegundos desde el último segundo "entero" srand((double)microtime()*1000000); $randval = rand();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rand(), getrandmax() and mt_srand().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también rand(), getrandmax(), mt_rand(), mt_srand() y mt_getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any type may be returned, including lists and objects.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores se retornan usando la instrucción opcional return.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See return() for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede devolverse cualquier tipo de valor, incluyendo listas y objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can 't return multiple values from a function, but similar results can be obtained by returning a list.</seg></tuv>
      <tuv xml:lang="es"><seg>function square ($num) {return $num * $num;} echo square (4); / / saca '16 '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To return a reference from a function, you have to use the reference operator in both the function declaration and when assigning the returned value to a variable:</seg></tuv>
      <tuv xml:lang="es"><seg>No puedes devolver múltiples valores desde una función, pero un efecto similar se puede conseguir devolviendo una lista.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If only two parameters were passed to this function, the values parsed will be returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>La función sscanf() es la función de entrada análoga de printf(). sscanf() lee del parámetro de cadena cad y lo interpreta según el formato especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any whitespace in the format string matches any whitespace in the input string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si sólo se pasan dos parámetros a esta función, los valores devueltos se harán en una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that even a tab \t in the format string can match a single space character in the input string.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de sscanf()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / getting the serial number $serial = sscanf( "SN / 2350001" ,"SN / %d"); / / and the date of manufacturing $mandate = "January 01 2000"; list($month, $day, $year) = sscanf($mandate ,"%s %d %d"); echo "Item $serial was manufactured on: $year -".substr($month,0,3) ."-$day\n";</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. sscanf() - using optional parameters</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de sscanf() - usando parámetros opcionales</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / get author info and generate DocBook entry $auth = "24\tLewis Carroll"; $n = sscanf($auth ,"%d\t%s %s", $id, $first, $last); echo" author id='$id 'firstname $first / firstname surname $last / surname / author \n";</seg></tuv>
      <tuv xml:lang="es"><seg>/ / obtener autor y generar la ficha DocBook $autor = "24\tLewis Carroll"; $n = sscanf($autor ,"%d\t%s %s", $id, $nombre, $apell); echo" autor id='$id 'firstname $nombre / firstname surname $apell / surname / author \n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fscanf(), printf(), and sprintf().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: fscanf(), printf(), y sprintf().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gathers the statistics of the file named by filename.</seg></tuv>
      <tuv xml:lang="es"><seg>Recoje los datos sobre el fichero indicado por filename.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>device</seg></tuv>
      <tuv xml:lang="es"><seg>dispositivo (device)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>inode protection mode</seg></tuv>
      <tuv xml:lang="es"><seg>modo de protección del inode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>group id owner</seg></tuv>
      <tuv xml:lang="es"><seg>id de usuario del propietario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>device type if inode device *</seg></tuv>
      <tuv xml:lang="es"><seg>id de grupo del propietario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last access</seg></tuv>
      <tuv xml:lang="es"><seg>tipo de dispositivo si es un inode device *</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last modification</seg></tuv>
      <tuv xml:lang="es"><seg>tamaño en bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last change</seg></tuv>
      <tuv xml:lang="es"><seg>fecha del último acceso access</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blocksize for filesystem I / O *</seg></tuv>
      <tuv xml:lang="es"><seg>fecha de la última modificación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number of blocks allocated</seg></tuv>
      <tuv xml:lang="es"><seg>fecha del último cambio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE in case of error.</seg></tuv>
      <tuv xml:lang="es"><seg>tamaño del bloque para el sistema I / O *</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>stat() cannot be used on remote files.</seg></tuv>
      <tuv xml:lang="es"><seg>número de bloques ocupados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve 0 si cad1 es menor que cad2; 0 si cad1 es mayor que cad2, y 0 si son iguales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strcasecmp() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strcasecmp()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$var1 = "Hello"; $var2 = "hello"; if (!strcasecmp($var1, $var2)) {echo '$var1 is equal to $var2 in a case-insensitive string comparison';}</seg></tuv>
      <tuv xml:lang="es"><seg>$var1 = "Hello"; $var2 = "hello"; if (!strcasecmp ($var1, $var2)) {echo '$var1 es igual a $var2 en una comparación sin tener en cuenta '.'mayúsculas o minúsculas';}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strcmp(), substr(), stristr(), strncasecmp(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg(), strcmp(), substr(), stristr(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias for strstr(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es un alias para strstr(), y es idéntica en todo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this comparison is case sensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que esta comparación es sensible a mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg(), strcasecmp(), substr(), stristr(), strncmp(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the length of the initial segment of str1 which does not contain any of the characters in str2.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la longitud del segmento inicial de cad1 que no contiene ninguno de los caracteres de cad2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strspn().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strspn().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for more information about wrappers.</seg></tuv>
      <tuv xml:lang="es"><seg>See Apéndice I for more information about wrappers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for more information about wrappers and their wrapper data.</seg></tuv>
      <tuv xml:lang="es"><seg>See Apéndice I for more information about wrappers and their wrapper data.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. stream_set_timeout() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. stream_set_timeout() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. stream_set_write_buffer() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. stream_set_write_buffer() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Month and weekday names and other language dependent strings respect the current locale set with setlocale().</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena formateada según la cadena de formato dada utilizando el valor timestamp o la hora local actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%a - abbreviated weekday name according to the current locale</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres del mes y el día de la semana y otras cadenas dependientes del idioma respetan lo establecido con setlocale().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%b - abbreviated month name according to the current locale</seg></tuv>
      <tuv xml:lang="es"><seg>Se reconocen los siguientes especificadores de conversión en la cadena de formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%c - preferred date and time representation for the current locale</seg></tuv>
      <tuv xml:lang="es"><seg>%a - nombre del día de la semana abreviado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%d - day of the month as a decimal number (range 01 to 31)</seg></tuv>
      <tuv xml:lang="es"><seg>%A - nombre del día de la semana completo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%e - day of the month as a decimal number, a single digit is preceded by a space (range '1' to '31')</seg></tuv>
      <tuv xml:lang="es"><seg>%b - nombre del mes abreviado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%G - The 4-digit year corresponding to the ISO week number (see %V).</seg></tuv>
      <tuv xml:lang="es"><seg>%B - nombre del mes completo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%h - same as %b</seg></tuv>
      <tuv xml:lang="es"><seg>%c - representación de fecha y hora preferidas en el idioma actual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%I - hour as a decimal number using a 12-hour clock (range 01 to 12)</seg></tuv>
      <tuv xml:lang="es"><seg>%d - día del mes en número (de 00 a 31)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%m - month as a decimal number (range 01 to 12)</seg></tuv>
      <tuv xml:lang="es"><seg>%H - hora como un número de 00 a 23</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%n - newline character</seg></tuv>
      <tuv xml:lang="es"><seg>%I - hora como un número de 01 a 12</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%r - time in a.m. and p.m. notation</seg></tuv>
      <tuv xml:lang="es"><seg>%j - día del año como un número de 001 a 366</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%S - second as a decimal number</seg></tuv>
      <tuv xml:lang="es"><seg>%m - mes como un número de 01 a 12</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%u - weekday as a decimal number [1,7], with 1 representing Monday</seg></tuv>
      <tuv xml:lang="es"><seg>%M - minuto en número</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sun Solaris seems to start with Sunday as 1 although ISO 9889:1999 (the current C standard) clearly specifies that it should be Monday.</seg></tuv>
      <tuv xml:lang="es"><seg>%p - `am' o `pm ', según la hora dada, o las cadenas correspondientes en el idioma actual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%V - The ISO 8601:1988 week number of the current year as a decimal number, range 01 to 53, where week 1 is the first week that has at least 4 days in the current year, and with Monday as the first day of the week. (Use %G or %g for the year component that corresponds to the week number for the specified timestamp.)</seg></tuv>
      <tuv xml:lang="es"><seg>%S - segundos en número</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%w - day of the week as a decimal, Sunday being 0</seg></tuv>
      <tuv xml:lang="es"><seg>%U - número de la semana en el año, empezando con el primer domingo como el primer día de la primera semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%X - preferred time representation for the current locale without the date</seg></tuv>
      <tuv xml:lang="es"><seg>%W - número de la semana en el año, empezando con el primer lunes como el primer día de la primera semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%Y - year as a decimal number including the century</seg></tuv>
      <tuv xml:lang="es"><seg>%w - día de la semana en número (el domingo es el 0)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%% - a literal `% 'character</seg></tuv>
      <tuv xml:lang="es"><seg>%x - representación preferida de la fecha sin la hora</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all conversion specifiers may be supported by your C library, in which case they will not be supported by PHP' s strftime().</seg></tuv>
      <tuv xml:lang="es"><seg>%X - representación preferida de la hora sin la fecha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strftime() locale examples</seg></tuv>
      <tuv xml:lang="es"><seg>%y - año en número de 00 a 99</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albiet correct) results if the numbering system is not thoroughly understood.</seg></tuv>
      <tuv xml:lang="es"><seg>%Y - año en número de cuatro cifras</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ISO 8601:1988 week number example</seg></tuv>
      <tuv xml:lang="es"><seg>%Z - nombre o abreviatura de la zona horaria</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>12 / 28 / 2002 - %V,%G,%Y = 52,2002,2002 print "12 / 28 / 2002 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("12 / 28 / 2002")). "\n"; / / Outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>%% - carácter `% '</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 / 3/2003 - %V,%G,%Y = 1,2003,2003 print "1 / 3/2003 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("1 / 3/2003")). "\n"; / / Outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>12 / 23 / 2004 - %V,%G,%Y = 52,2004,2004 print "12 / 23 / 2004 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("12 / 23 / 2004")). "\n"; / / Outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strftime()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 / 2/2005 - %V,%G,%Y = 53,2004,2005 print "1 / 2/2005 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("1 / 2/2005")). "\n"; / / Outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>setlocale ("LC_TIME", "C"); print(strftime("%A in Finnish is ")); setlocale ("LC_TIME", "fi_FI"); print(strftime("%A, in French ")); setlocale ("LC_TIME", "fr_CA"); print(strftime("%A and in German ")); setlocale ("LC_TIME", "de_DE"); print(strftime("%A.\n"));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also setlocale() and mktime() and the Open Group specification of strftime().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también setlocale() y mktime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes stripped off.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena con las barras invertidas eliminadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recognizes C-like \n, \r..., octal and hexadecimal representation.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addcslashes().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también addcslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes stripped off. (\ 'becomes' and so on.) Double backslashes are made into a single backslash.</seg></tuv>
      <tuv xml:lang="es"><seg>Las barras invertidas dobles se convierten en sencillas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addslashes().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también addslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It errors on the side of caution in case of incomplete or bogus tags.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función intenta eliminar todas las etiquetas HTML y PHP de la cadena dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional second parameter to specify tags which should not be stripped.</seg></tuv>
      <tuv xml:lang="es"><seg>Causa error por precaución en caso de etiquetas incompletas o falsas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$string = strip_tags( $string, 'a b i u ');</seg></tuv>
      <tuv xml:lang="es"><seg>Utiliza la misma máquina de estados para eliminar las etiquetas que la función fgetss().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not modify any attributes on the tags that you allow using allowable_tags, including the style and onmouseover attributes that a mischievous user may abuse when posting text that will be shown to other users.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar el parámetro opcional para especificar las etiquetas que no deben eliminarse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns all of haystack from the first occurrence of needle to the end. needle and haystack are examined in a case-insensitive manner.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve todo el pajar desde la primera aparición de la aguja, siendo el pajar examinado sin tener en cuenta mayúsculas o minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle is not found, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no se encuentra, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no es una cadena, es convertida a entero y usada como código de un carácter ASCII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strchr(), strrchr(), substr(), and ereg().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strchr(), strrchr(), substr(), y ereg().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the length of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la longitud de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función implementa un algoritmo de comparación que ordena las cadenas alfanuméricas como lo haría un ser humano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this function is similar to strnatcmp(), except that the comparison is not case sensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>El comportamiento de esta función es similar a strnatcmp(), pero la comparación no es sensible a mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Martin Pool 's Natural Order String Comparison page.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información, vea la página de Martin Pool sobre Comparación de Cadenas en Orden Natural.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to other string comparison functions, this one returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.</seg></tuv>
      <tuv xml:lang="es"><seg>De forma similar a otras funciones de comparación de cadenas, esta devuelve 0 si cad1 es menor que cad2; 0 si cad1 es mayor que cad2, y 0 si son iguales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strcasecmp(), substr(), stristr(), strcmp(), strncmp(), strncasecmp(), strnatcmp(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg(), strcasecmp(), substr(), stristr(), strcmp(), strncmp(), strnatcmp(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would, this is described as a "natural ordering".</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función implementa un algoritmo de comparación que ordena las cadenas alfanuméricas como lo haría un ser humano, que es lo que se denomina "orden natural".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example of the difference between this algorithm and the regular computer string sorting algorithms (used in strcmp()) can be seen below:</seg></tuv>
      <tuv xml:lang="es"><seg>A continuación se puede ver un ejemplo de la diferencia entre este algoritmo y los algoritmos de ordenación de cadenas habituales en los ordenadores (utilizados en strcmp()):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$arr1 = $arr2 = array( "img12.png" ,"img10.png" ,"img2.png" ,"img1.png"); echo "Standard string comparison\n"; usort($arr1 ,"strcmp"); print_r($arr1); echo "\nNatural order string comparison\n"; usort($arr2 ,"strnatcmp"); print_r($arr2);</seg></tuv>
      <tuv xml:lang="es"><seg>$matriz1 = $matriz2 = array ("img12.png" ,"img10.png" ,"img2.png" ,"img1.png"); echo "Comparación de cadenas estándar\n"; usort($matriz1 ,"strcmp"); print_r($matriz1); echo "\nComparación de cadenas en orden natural\n"; usort($matriz2 ,"strnatcmp"); print_r($matriz2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Standard string comparison Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Natural order string comparison Array ([0] = img1.png [1] = img2.png [2] = img10.png [3] = img12.png)</seg></tuv>
      <tuv xml:lang="es"><seg>Comparación de cadenas estándar Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Comparación de cadenas en orden natural Array ([0] = img1.png [1] = img2.png [2] = img10.png [3] = img12.png)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strcasecmp(), substr(), stristr(), strcmp(), strncmp(), strncasecmp(), strnatcasecmp(), strstr(), natsort() and natcasesort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg(), strcasecmp(), substr(), stristr(), strcmp(), strncmp(), strnatcasecmp(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is similar to strcmp(), with the difference that you can specify the (upper limit of the) number of characters (len) from each string to be used in the comparison.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es similar a strcmp(), con la diferencia que se puede especificar el (límite superior del) número de caractares (largo) de cada cadena que se usarán en la comparación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If any of the strings is shorter than len, then the length of that string will be used for the comparison.</seg></tuv>
      <tuv xml:lang="es"><seg>Si alguna de las cadenas es menor que el largo, se usará su longitud para la comparación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strncasecmp(), strcasecmp(), substr(), stristr(), strcmp(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg(), strcasecmp(), substr(), stristr(), strcmp(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functions returns the input string padded on the left, the right, or both sides to the specified padding length.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función rellena la cadena entrada por la derecha, la izquierda o por ambos lados hasta el largo indicado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional argument pad_string is not supplied, the input is padded with spaces, otherwise it is padded with characters from pad_string up to the limit.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso contrario, será rellenada con los caracteres de cad_relleno hasta el límite.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Optional argument pad_type can be STR_PAD_RIGHT, STR_PAD_LEFT, or STR_PAD_BOTH.</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento opcional tipo_relleno puede valer STR_PAD_RIGHT, STR_PAD_LEFT, o STR_PAD_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pad_type is not specified it is assumed to be STR_PAD_RIGHT.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica, se asume que vale STR_PAD_RIGHT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the value of pad_length is negative or less than the length of the input string, no padding takes place.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el valor de tama_relleno es negativo o menor que la longitud de la cadena de entrada, no se produce rellenado alguno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_pad() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de str_pad()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = "Alien"; print str_pad($input, 10); / / produces "Alien" print str_pad($input, 10, "-=", STR_PAD_LEFT); / / produces "-=-=-Alien "print str_pad($input, 10, "_", STR_PAD_BOTH); / / produces "__Alien___"</seg></tuv>
      <tuv xml:lang="es"><seg>$entrada = "Alien"; print str_pad($entrada, 10); / / produce "Alien" print str_pad($entrada, 10, "-=", STR_PAD_LEFT); / / produce "-=-=-Alien "print str_pad($entrada, 10, "_", STR_PAD_BOTH); / / produce "__Alien___"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the numeric position of the first occurrence of needle in the haystack string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la posición numérica de la primera aparición de la aguja en la cadena pajar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike the strrpos(), this function can take a full string as the needle parameter and the entire string will be used.</seg></tuv>
      <tuv xml:lang="es"><seg>A diferencia de strrpos(), esta función puede tomar una cadena completa como aguja y se utilizará en su totalidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle is not found, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no es hayada, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is easy to mistake the return values for "character found at position 0" and "character not found ".</seg></tuv>
      <tuv xml:lang="es"><seg>Es fácil confundir los valores de retorno para "caracter encontrado en la posición 0" y "caracter no encontrado ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here 's how to detect the difference:</seg></tuv>
      <tuv xml:lang="es"><seg>Aquí se indica cómo detectar la diferencia:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / in PHP 4.0b3 and newer: $pos = strpos( $mystring, "b"); if ($pos === false) {/ / note: three equal signs / / not found...} / / in versions older than 4.0b3: $pos = strpos($mystring, "b"); if (!is_integer($pos)) {/ / not found...}</seg></tuv>
      <tuv xml:lang="es"><seg>/ / en PHP 4.0b3 y posteriores: $pos = strpos ($micadena, "b"); if ($pos === false) {/ / nota: tres signos igual / / no encontrado...} / / en versiones anteriores a la 4.0b3: $pos = strpos ($micadena, "b"); if (is_string ($pos) !$pos) {/ / no encontrado...}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no es una cadena, se convierte a entero y se aplica como el valor ordinal de un caracter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional offset parameter allows you to specify which character in haystack to start searching.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro opcional desplazamiento le permite especificar a partir de qué caracter del pajar El parámetro opcional desplazamiento le permite especificar a partir de qué caracter del pajar comenzar a buscar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The position returned is still relative to the the beginning of haystack.</seg></tuv>
      <tuv xml:lang="es"><seg>La posición devuelta es aún relativa al comienzo de pajar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strrpos(), strrchr(), substr(), stristr(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strrpos(), strrchr(), substr(), stristr(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the portion of haystack which starts at the last occurrence of needle and goes until the end of haystack.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve la porción del pajar que comienza en la última aparición de la aguja y continúa hasta el final del pajar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE if needle is not found.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE si la aguja no es hallada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle contains more than one character, the first is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja contiene más de un caracter, sólo se usará el primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strrchr() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strrchr()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / get last directory in $PATH $dir = substr( strrchr($PATH, ":"), 1); / / get everything after last newline $text = "Line 1\nLine 2\nLine 3"; $last = substr(strrchr($text, 10), 1);</seg></tuv>
      <tuv xml:lang="es"><seg>/ / obtener el último directorio de $PATH $dir = substr (strrchr ($PATH, ":"), 1); / / obtener todo tras el último salto de línea $texto = "Line 1\nLine 2\nLine 3"; $apell = substr (strrchr ($texto, 10), 1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strchr(), substr(), stristr(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también substr(), stristr(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the multiplier is set to 0, the function will return an empty string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cad_entrada repetida veces. veces debe ser mayor que 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_repeat() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de str_repeat()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo str_repeat( "-=", 10);</seg></tuv>
      <tuv xml:lang="es"><seg>echo str_repeat ("-=", 10);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will output "-=-=-=-=-=-=-=-=-=-=".</seg></tuv>
      <tuv xml:lang="es"><seg>Esto mostrará "-=-=-=-=-=-=-=-=-=-=".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also for, str_pad(), and substr_count().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función fue añadida en el PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don' t need fancy replacing rules, you should always use this function instead of ereg_replace() or preg_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función sustituye todas las apariciones de la aguja en el pajar por la cad dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no precisa reglas especiales de sustitución, deberá usar siempre esta función en lugar de ereg_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If search and replace are arrays, then str_replace() takes a value from each array and uses them to do search and replace on subject.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If replace has fewer values than search, then an empty string is used for the rest of replacement values.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de str_replace()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_replace() example</seg></tuv>
      <tuv xml:lang="es"><seg>$bodytag = str_replace ("%cuerpo%", "negro", "body text=%cuerpo% ");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$bodytag = str_replace( "%body%", "black", "body text=%body% ");</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función tiene seguridad binaria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg_replace(), preg_replace(), and strtr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg_replace() y strtr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php echo strrev( "Hello world !"); / / outputs "!dlrow olleH "?</seg></tuv>
      <tuv xml:lang="es"><seg>Devuele la cadena invertida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the needle in this case can only be a single character.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuele la posición numérica de la última aparición de la aguja en el pajar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle is not found, returns FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que la aguja en este caso sólo puede ser un caracter único.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is easy to mistake the return values for "character found at position 0" and "character not found ".</seg></tuv>
      <tuv xml:lang="es"><seg>Si se pasa una cadena como aguja, sólo se utilizará el primer caracter de la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here 's how to detect the difference:</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no es hayada, devuelve FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / in PHP 4.0b3 and newer: $pos = strrpos( $mystring, "b"); if ($pos === false) {/ / note: three equal signs / / not found...} / / in versions older than 4.0b3: $pos = strrpos($mystring, "b"); if (is_string($pos) !$pos) {/ / not found...}</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no es una cadena, se convierte a entero y se aplica como el valor ordinal de un caracter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strpos(), strrchr(), substr(), stristr(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strpos(), strrchr(), substr(), stristr(), y strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_shuffle() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. str_shuffle() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the length of the initial segment of str1 which consists entirely of characters in str2.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la longitud del segmento inicial de cad1 que consiste por entero en caracteres contenidos en cad2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The line of code:</seg></tuv>
      <tuv xml:lang="es"><seg>devolverá 2 como resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strcspn().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strcspn().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns part of haystack string from the first occurrence of needle to the end of haystack.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve todo el pajar desde la primera aparición de la aguja hasta el final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si la aguja no es una cadena, se convierte a entero y se aplica como el valor ordinal de un caracter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is case-sensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strstr() example</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que esta función es sensible a mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$email = 'user@example.com'; $domain = strstr($email, '@'); print $domain; / / prints @example.com</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strstr()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you only want to determine if a particular needle occurs within haystack, use the faster and less memory intensive function strpos() instead.</seg></tuv>
      <tuv xml:lang="es"><seg>$email = 'sterling@designmultimedia.com'; $dominio = strstr ($email, '@'); print $dominio; / / imprime @designmultimedia.com</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), preg_match(), strchr(), stristr(), strpos(), strrchr(), and substr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también stristr(), strrchr(), substr(), y ereg().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, if you have a string like "This is an example string" you could tokenize this string into its individual words by using the space character as the token.</seg></tuv>
      <tuv xml:lang="es"><seg>strtok() se usa para dividir en elementos una cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$string = "This is\tan example\nstring"; / * Use tab and newline as tokenizing characters as well * / $tok = strtok($string," \n\t"); while ($tok) {echo "Word=$tok br "; $tok = strtok(" \n\t");}</seg></tuv>
      <tuv xml:lang="es"><seg>Es decir, que si tiene una cadena como "Esta es una cadena de ejemplo" podría dividirla en palabras individuales utilizando el espacio como divisor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that only the first call to strtok uses the string argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to strtok only needs the token to use, as it keeps track of where it is in the current string.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strtok()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that you may put multiple tokens in the token parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>$cadena = "Esta es una cadena de ejemplo"; $tok = strtok ($cadena," "); while ($tok) {echo "Palabra=$tok br "; $tok = strtok (" ");}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behavior when an empty part was found changed with PHP 4.1.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que sólo la primera llamada a strtok utiliza el argumento cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada llamada subsiguiente necesita sólo el divisor a utilizar, puesto que ella guarda la posición actual en la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$first_token = strtok( '/ something',' / '); $second_token = strtok(' / '); var_dump ($first_token, $second_token); / * Output: string(0) "" string(9) "something "* /</seg></tuv>
      <tuv xml:lang="es"><seg>Para comenzar de nuevo o para dividir otra cadena, simplemente llame a strtok con el argumento de cadena y se inicializará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>New strtok() behavior</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que puede poner divisores múltiples como parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$first_token = strtok( '/ something',' / '); $second_token = strtok(' / '); var_dump ($first_token, $second_token); / * Output: string(9) "something "bool(false) * /</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena será dividida cuando alguno de los caracteres del argumento sea hallado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This evaluates to FALSE in conditional expressions.</seg></tuv>
      <tuv xml:lang="es"><seg>Además tenga cuidado si sus divisores valen "0", pues evalúa como FALSE en las expresiones condicionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also split() and explode().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también split() y explode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string with all alphabetic characters converted to lowercase.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena con todas sus letras en minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that 'alphabetic' is determined by the current locale.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que las letras son definidad por el locale actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that in i.e. the default "C" locale, characters such as umlaut-A (Ä) will not be converted.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto quiere decir que, por ejemplo, en el locale por defecto ("C"), los caracteres como la Ñ no serán convertidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtolower() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strtolower()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$str = "Mary Had A Little Lamb and She LOVED It So"; $str = strtolower($str); print $str; # Prints mary had a little lamb and she loved it so</seg></tuv>
      <tuv xml:lang="es"><seg>$cad = "María Tenía Un Corderito al que QUERÍA Mucho"; $cad = strtolower($cad); print $cad; # Visualiza maría tenía un corderito al que querÍa mucho</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strtoupper(), ucfirst(), and ucwords().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strtoupper() y ucfirst().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function expects to be given a string containing an English date format and will try to parse that format into a UNIX timestamp relative to the timestamp given in now, or the current time if none is supplied.</seg></tuv>
      <tuv xml:lang="es"><seg>La función espera que se le pase una cadena conteniendo una fecha en formato Inglés e intentará procesarla y convertirla a una timestamp (muestra de tiempo) de UNIX relativa a la timestamp proporcionada en ahora, o la hora actual si no se indica ninguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon failure, -1 is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si falla, devolverá -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because strtotime() behaves according to GNU date syntax, have a look at the GNU manual page titled Date Input Formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Dado que strtotime() obra de acuerdo con la sintaxis de fechas de GNU, puede echar un vistazo a la página del manual GNU titulada Date Input Formats (Formatos de entrada de fechas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Described there is valid syntax for the time parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis descrita ahí es válida para el parátro hora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtotime() examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos con strtotime()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checking for failure</seg></tuv>
      <tuv xml:lang="es"><seg>Comprobando si falla</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$str = 'Not Good'; if (($timestamp = strtotime($str)) === -1) {echo "The string ($str) is bogus";} else {echo "$str == ". date('l dS of F Y h:i:s A',$timestamp);}</seg></tuv>
      <tuv xml:lang="es"><seg>$str = 'No v aacute;lida'; if (($timestamp = strtotime($str)) === -1) {echo "La cadena ($str) no es v aacute;lida .";} else {echo "$str == ". date('l dS of F Y h:i:s A',$timestamp);}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The valid range of a timestamp is typically from Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are the dates that correspond to the minimum and maximum values for a 32-bit signed integer.)</seg></tuv>
      <tuv xml:lang="es"><seg>El rango válido de una timestamp suele ser desde Fri, 13 Dec 1901 20:45:54 GMT (Viernes, 13 de diciembre) a Tue, 19 Jan 2038 03:14:07 GMT (Martes, 19 de enero). (Estas son las fechas que corresponden a los valores mínimo y máximo de un entero con signo de 32 bits.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string with all alphabetic characters converted to uppercase.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la cadena con todas sus letras en mayúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, in the default "C" locale characters such as umlaut-a (ä) will not be converted.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto quiere decir que, por ejemplo, en el locale por defecto ("C"), los caracteres como la ñ no serán convertidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtoupper() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strtoupper()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$str = "Mary Had A Little Lamb and She LOVED It So"; $str = strtoupper($str); print $str; # Prints MARY HAD A LITTLE LAMB AND SHE LOVED IT SO</seg></tuv>
      <tuv xml:lang="es"><seg>$cad = "María Tenía Un Corderito al que QUERÍA Mucho"; $cad = strtoupper ($cad); print $cad; # Visuaiza MARíA TENíA UN CORDERITO AL QUE QUERÍA MUCHO</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strtolower(), ucfirst(), and ucwords().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strtolower() and ucfirst().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a copy of str, translating all occurrences of each character in from to the corresponding character in to and returning the result.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función trabaja sobre cad, traduciendo todas las apariciones de cada caracter en desde por el caracter correspondiente en hasta y devolviendo el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If from and to are different lengths, the extra characters in the longer of the two are ignored.</seg></tuv>
      <tuv xml:lang="es"><seg>Si desde y hasta son de distinta longitud, los caracteres extra en la más larga son ignorados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtr() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de strtr()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>strtr() can be called with only two arguments.</seg></tuv>
      <tuv xml:lang="es"><seg>strtr() puede llamarso sólo con dos argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with two arguments it behaves in a new way: from then has to be an array that contains string - string pairs that will be replaced in the source string. strtr() will always look for the longest possible match first and will *NOT* try to replace stuff that it has already worked on.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se llama de esta manera, se comporta de otro modo: desde debe ser entonces una matriz que contenga pares cadena - cadena que serán sustituídos en la cadena fuente. strtr() siempre buscará la coincidencia más larga primero y *NO* intentará sustituir nada en lo que haya trabajado ya.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$trans = array( "hello "= "hi", "hi" = "hello"); echo strtr("hi all, I said hello", $trans). "\n";</seg></tuv>
      <tuv xml:lang="es"><seg>$trad = array ("hola "= "hey", "hey" = "hola"); echo strtr("hey a todos, dije hola", $trad). "\n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This optional to and from parameters were added in PHP 4.0.0</seg></tuv>
      <tuv xml:lang="es"><seg>Esta característica (2 argumentos) fue añadida en el PHP 4.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg_replace().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también ereg_replace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the documentation on string for more information on converting to string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena con el valor de var.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>var may be any scalar type.</seg></tuv>
      <tuv xml:lang="es"><seg>var puede ser cualquier tipo escalar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot use strval() on arrays or objects.</seg></tuv>
      <tuv xml:lang="es"><seg>No se puede usar strval() sobre arrays u objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also floatval(), intval(), settype() and Type juggling.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también doubleval(), intval(), settype() y Type juggling.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>substr_count() returns the number of times the needle substring occurs in the haystack string.</seg></tuv>
      <tuv xml:lang="es"><seg>substr_count() devuelve el número de veces que la subcadena aguja se encuentra en la cadena pajar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. substr_count() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print substr_count( "This is a test", "is"); / / prints out 2?</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de substr_count()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also count_chars(), strpos(), substr(), and strstr().</seg></tuv>
      <tuv xml:lang="es"><seg>print substr_count( "This is a test", "is"); / / prints out 2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>substr() returns the portion of string specified by the start and length parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>substr devuelve la porción de cadena especificada por los parámetros comienzo y largo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, in the string 'abcdef', the character at position 0 is' a ', the character at position 2 is' c ', and so forth.</seg></tuv>
      <tuv xml:lang="es"><seg>Si comienzo es positivo, la cadena devuelta comenzará en dicho caracter de cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic substr() usage</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If start is negative, the returned string will start at the start 'th character from the end of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si comienzo es negativo, la cadena devuelta comenzará en dicha posición desde el final de cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using a negative start</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $rest = substr( "abcdef", -1); / / returns "f "$rest = substr("abcdef", -2); / / returns "ef" $rest = substr("abcdef", -3, 1); / / returns "d "?</seg></tuv>
      <tuv xml:lang="es"><seg>$resto = substr ("abcdef", -1); / / devuelve "f "$resto = substr ("abcdef", -2); / / devuelve "ef" $resto = substr ("abcdef", -3, 1); / / devuelve "d "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If string is less than start characters long, FALSE will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si esto resulta en una cadena con longitud negativa (porque el comienzo está pasado el final de la cadena), la cadena devuelta contendrá únicamente el caracter que haya en comienzo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is given and is negative, then that many characters will be omitted from the end of string (after the start position has been calculated when a start is negative).</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica largo y es negativo, la cadena devuelta terminará a largo caracteres desde el final de cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If start denotes a position beyond this truncation, an empty string will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si esto resulta en una cadena con longitud negativa, la cadena devuelta contendrá únicamente el caracter que haya en comienzo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using a negative length</seg></tuv>
      <tuv xml:lang="es"><seg>Examples:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $rest = substr( "abcdef", 0, -1); / / returns "abcde "$rest = substr("abcdef", 2, -1); / / returns "cde" $rest = substr("abcdef", 4, -4); / / returns "" $rest = substr("abcdef", -3, -1); / / returns "de "?</seg></tuv>
      <tuv xml:lang="es"><seg>$resto = substr ("abcdef", 1, -1); / / devuelve "bcde "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strrchr() and ereg().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strrchr() y ereg().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>substr_replace() replaces a copy of string delimited by the start and (optionally) length parameters with the string given in replacement.</seg></tuv>
      <tuv xml:lang="es"><seg>substr_replace() sustituye la parte de cadena delimitada por los parámetros comienzo y (opcionalmente) largo por la cadena dada en sustituto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The result is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If start is positive, the replacing will begin at the start 'th offset into string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si comienzo es positivo, la sustitución comenzará en dicha posición dentro de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If start is negative, the replacing will begin at the start 'th character from the end of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si comienzo es negativo, la sustitución comenzará en dicha posición pero contando desde el final de cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is given and is positive, it represents the length of the portion of string which is to be replaced.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se especifica el largo y es positivo, representa el largo de la porción de cadena a sustituir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is negative, it represents the number of characters from the end of string at which to stop replacing.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es negativo, representa el número de caracteres desde el final de cadena en los que dejar de sustituir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is not given, then it will default to strlen( string); i.e. end the replacing at the end of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica, valdrá por defecto strlen( cadena); es decir, que acabará la sustitución al final de cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. substr_replace() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de substr_replace()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $var = 'ABCDEFGH: / MNRPQR /'; echo "Original: $var hr \n"; / * These two examples replace all of $var with'bob'. * / echo substr_replace($var, 'bob', 0). "br \n"; echo substr_replace($var, 'bob', 0, strlen($var))." br \n"; / * Insert'bob 'right at the beginning of $var. * / echo substr_replace($var, 'bob', 0, 0). "br \n"; / * These next two replace'MNRPQR' in $var with'bob'. * / echo substr_replace($var, 'bob', 10, -1)." br \n"; echo substr_replace($var, 'bob', -7, -1). "br \n"; / * Delete'MNRPQR 'from $var. * / echo substr_replace($var, '', 10, -1)." br \n";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $var = 'ABCDEFGH: / MNRPQR /'; echo "Original: $var hr \n"; / * Estos dos ejemplos sustituyen toda $var por 'bob'. * / echo substr_replace ($var, 'bob', 0). "br \n"; echo substr_replace ($var, 'bob', 0, strlen ($var))." br \n"; / * Inserta 'bob 'justo al inicio de $var. * / echo substr_replace ($var, 'bob', 0, 0). "br \n"; / * Los dos siguientes cambian 'MNRPQR' en $var por 'bob'. * / echo substr_replace ($var, 'bob', 10, -1)." br \n"; echo substr_replace ($var, 'bob', -7, -1). "br \n"; / * Borrar 'MNRPQR 'de $var. * / echo substr_replace ($var, '', 10, -1)." br \n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also str_replace() and substr().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también str_replace() y substr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, this can be used to implement callbacks, function tables, and so forth.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta el concepto de funciones variable, esto significa que si una variable tiene unos paréntesis añadidos al final, PHP buscará una función con el mismo nombre que la evaluación de la variable, e intentará ejecutarla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 13-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Entre otras cosas, esto te permite implementar retrollamadas (callbacks), tablas de funciones y demás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also call an object 's method by using the variable functions feature.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 13-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable method example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de función variable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also call_user_func(), variable variables and function_exists().</seg></tuv>
      <tuv xml:lang="es"><seg>?php function foo() {echo "Dentro de foo() br \n";} function bar ($arg = '') {echo "Dentro de bar(); el parámetro fue '$arg'. br \n";} $func = 'foo'; $func(); $func = 'bar'; $func ('test ');?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes and Objects</seg></tuv>
      <tuv xml:lang="es"><seg>Clases y Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfaction() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. swfaction() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. swfaction() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. swfaction() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 4. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Description void swf_actionprevframe (void)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>swf_actionplay</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swf_addbuttonrecord() function example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swf_addbuttonrecord() function example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. swfbitmap() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. swfbitmap() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfbutton() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfbutton() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. swfbutton - addaction() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. swfbutton - addaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfdisplayitem - multcolor() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfdisplayitem - multcolor() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfdisplayitem - rotateto() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfdisplayitem - rotateto() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfdisplayitem - setname() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfdisplayitem - setname() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfgradient() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfgradient() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfmorph() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfmorph() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfmovie - streammp3() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfmovie - streammp3() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The swf_ortho() function defines a orthographic mapping of user coordinates onto the current viewport.</seg></tuv>
      <tuv xml:lang="es"><seg>The swf_ortho() funcion defines a orthographic mapping of user coordinates onto the current viewport.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfshape - addfill() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfshape - addfill() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The swf_shapecurveto() function draws a quadratic bezier curve from the current location, though the x coordinate given by x1 and the y coordinate given by y1 to the x coordinate given by x2 and the y coordinate given by y2.</seg></tuv>
      <tuv xml:lang="es"><seg>The swf_shapecurveto() function draws a quadratic bezier curve from the x coordinate given by x1 and the y coordinate given by y1 to the x coordinate given by x2 and the y coordinate given by y2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfshape() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfshape() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfshape - setline() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfshape - setline() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfsprite() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swfsprite() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swftext() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. swftext() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of affected rows by the last query.</seg></tuv>
      <tuv xml:lang="es"><seg>El número de filas afectadas por la última consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query on the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_affected_rows() devuelve el número de filas afectadas por la última acción e tipo INSERT, UPDATE o DELETE en el servidor asociado al identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn 't specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica un identificador de enlace, se asume el último enlace abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This command is not effective for SELECT statements, only on statements which modify records.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta instrucción no es efectiva para sentencias de tipo SELECT, sólo en sentencias que modifican registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To retrieve the number of rows returned from a SELECT, use sybase_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener el número de filas afectadas por un SELECT, use sybase_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available using the CT library interface to Sybase, and not the DB library.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función sólo esta disponible usando el interface de la librería CT, y no con la librería DB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sybase functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Sybase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si lo consigue, FALSE ante un error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_close() closes the link to a Sybase database that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_close() cierra el enlace a la base de datos Sybase asociada con el identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this isn' t usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Note que esto no es necesario usualmente, ya que los enlaces no persistentes abiertos son cerrados automaticamente al final de la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_close() will not close persistent links generated by sybase_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_close() no cerrará enlaces persistentes generados por sybase_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_connect(), sybase_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_connect(), sybase_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive Sybase link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de enlace Sybase positivo, o FALSE ante un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_connect() establishes a connection to a Sybase server.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_connect() establece una conexión son un servidor Sybase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The servername argument has to be a valid servername that is defined in the 'interfaces' file.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro servername tiene que ser un nombre de servidor válido que esta definido en el fichero 'interfaces'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case a second call is made to sybase_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>En el caso que se haga una segunda llamada a sybase_connect() con los mismos argumentos, no se establecerá un nuevo enlace, en vez de esto, se devolverá el identificador de enlace que ya está abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it' s closed earlier by explicitly calling sybase_close().</seg></tuv>
      <tuv xml:lang="es"><seg>El enlace al servidor será cerrado tan pronto como la ejecución del script finalice, a menos que sea cerrado antes llamando explicitamente a sybase_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sybase_pconnect(), sybase_close().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también sybase_pconnect(), sybase_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on failure</seg></tuv>
      <tuv xml:lang="es"><seg>TRUE si lo hace, FALSE en caso de fallo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_data_seek() moves the internal row pointer of the Sybase result associated with the specified result identifier to pointer to the specifyed row number.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_data_seek() mueve el puntero interno de la fila del resultado asociado con el identificador de resultado especificado hacia el número de fila introducido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next call to sybase_fetch_row() would return that row.</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente llamada a sybase_fetch_row() devolverá esa fila.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_data_seek().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_data_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_fetch_array() is an extended version of sybase_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_fetch_array() es la versión extendida de sybase_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de almacenar los datos en los indices numericos del array de resultados, también almacena los datos en indices asociativos, usando los nombres de campo como claves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important thing to note is that using sybase_fetch_array() is NOT significantly slower than using sybase_fetch_row(), while it provides a significant added value.</seg></tuv>
      <tuv xml:lang="es"><seg>Una cosa importante a remarcar es que el uso de sybase_fetch_array() NO es significativamente más lento que el uso de sybase_fetch_row(), mientrás que proporciona un valor añadido significativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details, also see sybase_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Para más detalles, vea también sybase_fetch_row()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un objeto conteniendo la información del campo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_fetch_field() can be used in order to obtain information about fields in a certain query result.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_fetch_field() puede usarse para obtener información sobre los campos de una consulta determinada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the field offset isn' t specified, the next field that wasn't yet retreived by sybase_fetch_field() is retreived.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica el offset del campo, el siguiente campo que aún no halla sido tomado por sybase_fetch_field() es el que se obtiene.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>name - column name. if the column is a result of a function, this property is set to computed#N, where #N is a serial number.</seg></tuv>
      <tuv xml:lang="es"><seg>name - column name. si la columna es el resultado de una función, esta propiedad se establece a computed#N, donde #N es un número de serie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>column_source - the table from which the column was taken</seg></tuv>
      <tuv xml:lang="es"><seg>column_source - la tabla de la cual se ha cogido la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max_length - maximum length of the column</seg></tuv>
      <tuv xml:lang="es"><seg>max_length - máxima longitud de la columna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sybase_field_seek()</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también sybase_field_seek()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An object with properties that correspond to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Un objeto con las propiedades que corresponden a la fila tomada, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_fetch_object() is similar to sybase_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_fetch_object() es similar a sybase_fetch_array(), con una diferencia - se devuelve un objeto, en vez de un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="es"><seg>Indirectamente, esto significa que sólo se puede acceder a los datos por los nombres de campo, y no por sus offsets (los números son nombres de propiedades ilegales).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to sybase_fetch_array(), and almost as quick as sybase_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="es"><seg>En el tema de velocidad, la función es idéntica a sybase_fetch_array(), y al menos tan rápida como sybase_fetch_row() (la diferencia es insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_fetch_array() and sybase_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_fetch-array() y sybase_fetch-row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Un array que corresponde a la fila obtenida, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_fetch_row() fetches one row of data from the result associated with the specified result identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_fetch_row() obtiene una fila de datos del resultado asociado con el identificador de resultado especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row is returned as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>La fila se devuelve como un array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada columna del resultado es almacenada en un offset del arrat, comenzando en el offset 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent call to sybase_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes llamadas a sybase_fetch_rows() devolverán la siguiente fila del conjunto de resultados, o FALSE si no hay más filas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_fetch_array(), sybase_fetch_object(), sybase_data_seek(), sybase_fetch_lengths(), and sybase_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_fetch_array(), sybase_fetch_object(), sybase_data_seek(), sybase_fetch_lengths(), y sybase_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeks to the specified field offset.</seg></tuv>
      <tuv xml:lang="es"><seg>Localiza el campo especificado por el offset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the next call to sybase_fetch_field() won't include a field offset, this field would be returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la siguiente llamada sybase_fetch_field() no incluye un offset se devuelve este campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_fetch_field().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_free_result() only needs to be called if you are worried about using too much memory while your script is running.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_free_result() sólo se necesita usar en el caso de que este preocupado por el uso de demasiada memoria mientras se ejecuta su script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may call sybase_free_result() with the result identifier as an argument and the associated result memory will be freed.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los resultados en memoria son liberados cuando el script finaliza, puede llamar a sybase_free_result() con el identificador de resultado como argumento y la memoria asociada a ese resultado será liberada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_num_fields() returns the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_num_fields() devuelve el número de campos en un conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_db_query(), sybase_query(), sybase_fetch_field(), sybase_num_rows().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_db_query(), sybase_query(), sybase_fetch_field(), sybase_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_num_rows() returns the number of rows in a result set.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_num_rows() devuelve el número de filas de un conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_db_query(), sybase_query() and, sybase_fetch_row().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_db_query(), sybase_query() and, sybase_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive Sybase persistent link identifier on success, or FALSE on error</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de enlace persistente de Sybase positivo en caso de que pueda abrirlo, en caso de error devuelve FALSE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_pconnect() acts very much like sybase_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_pconnect() actua de una forma muy parecida a sybase_connect() con dos grandes diferencias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password.</seg></tuv>
      <tuv xml:lang="es"><seg>Primera, cuando se conecta, esta función primero tratará de encontrar un enlace (persistente) que ya este abierto con el mismo host, nombre de usuario y contraseña.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one is found, an identifier for it will be returned instead of opening a new connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Si encuentra uno, devolverá un identificador para él en vez de abrir una nueva conexión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="es"><seg>Segunda, la conexión al servidor SQL no se cerrará cuando finalice la ejecución del script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, the link will remain open for future use (sybase_close() will not close links established by sybase_pconnect()()).</seg></tuv>
      <tuv xml:lang="es"><seg>En vez de esto, el enlace permanecerá abierto para un futuro uso (sybase_close() no podrá cerrar enlaces establecidos con sybase_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of links is therefore called 'persistent'.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de enlaces son llamados 'persistentes'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive Sybase result identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="es"><seg>Un identificador de resultado Sybase positivo si va bien, o FALSE ante un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_query() sends a query to the currently active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_query() envía una consulta a la actual base de datos activa en el servidor que está asociada con el identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function tries to establish a link as if sybase_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay un enlace abierto, la función intentará establecer un enlace como si sybase_connect() fuese llamada, y lo usará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_db_query(), sybase_select_db(), and sybase_connect().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_db_query(), sybase_select_db(), y sybase_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The contents of the cell at the row and offset in the specified Sybase result set.</seg></tuv>
      <tuv xml:lang="es"><seg>El contenido de la celda en la fila y el offset especificado de un conjunto de resultados de Sybase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_result() returns the contents of one cell from a Sybase result set.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_result() devuelve el contenido de una celda de un conjunto de resultados de Sybase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field argument can be the field' s offset, or the field's name, or the field's table dot field's name (tablename.fieldname).</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro field puede ser el offset del campo, o el nombre del campo, o el nombre de la tabla, un punto y el nombre del campo (nombre_tabla.nombre_campo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the column name has been aliased ('select foo as bar from.. .'), use the alias instead of the column name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el nombre de la columna tiene un alias ('select foo as bar from.. .'), use el alias en vez del nombre de la columna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below).</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando trabaje con conjuntos de resultados grandes, debe considerar el uso de alguna de las funciones que cargan una fila entera (especificadas abajo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As these functions return the contents of multiple cells in one function call, they' re MUCH quicker than sybase_result().</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que estas funciones devuelven el contenido de multiples celdas en una única llamada, son MUCHO más rápidas que sybase_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, note que especificar un offset númerico en el parámetro field es mucho más rápido que especificar un nombre de campo o nombre_tabla.nombre_campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recommended high-performance alternatives: sybase_fetch_row(), sybase_fetch_array(), and sybase_fetch_object().</seg></tuv>
      <tuv xml:lang="es"><seg>Alternativas recomendadas para alto rendimiento: sybase_fetch_row(), sybase_fetch_array(), y sybase_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_select_db() sets the current active database on the server that's associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="es"><seg>sybase_select_db() establece como activa la base de datos en el servidor asociada con el identificador de enlace especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link identifier is specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se especifica un identificador de enlace, se asume el último enlace abierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function will try to establish a link as if sybase_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay un enlace abierto, la función intentará establecer un enlace como si sybase_connect() fuese llamada, y lo usará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to sybase_query() will be made on the active database.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada llamada subsiguiente a sybase_query() será hecha en la base de datos activa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_connect(), sybase_pconnect(), and sybase_query()</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: sybase_connect(), sybase_pconnect(), y sybase_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>symlink() creates a symbolic link from the existing target with the specified name link.</seg></tuv>
      <tuv xml:lang="es"><seg>symlink() crea un enlace simbólico del objetivo target con el nombre especificado por link.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also link() to create hard links, and readlink() along with linkinfo().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también link() para crear enlaces fuertes, y readlink() junto con linkinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>syslog() generates a log message that will be distributed by the system logger. priority is a combination of the facility and the level, values for which are given in the next section.</seg></tuv>
      <tuv xml:lang="es"><seg>syslog() genera un mensaje que será distribuido por el logger del sistema. priority es una combinación de la facility y el level, los valores se indicarán en la sección siguiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. syslog() Priorities (in descending order)</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento restante es el mensaje a enviar, excepto que los dos caracteres %m sean reemplazados por la cadena de error (strerror) correspondiente al valor actual de errno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Más información acerca de syslog se puede encontrar en las páginas del manual en equipos Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also define_syslog_variables(), openlog() and closelog().</seg></tuv>
      <tuv xml:lang="es"><seg>En Windows NT, el servicio syslog es emulado usando el Log de Eventos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>system() is just like the C version of the function in that it executes the given command and outputs the result.</seg></tuv>
      <tuv xml:lang="es"><seg>system() se parece a la versión C de la función de mismo nombre en que ejecuta la orden indicada en command y muestra el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Si se indica una variable como segundo parámetro, el código de estado devuelto por la orden ejecutada se guardará en esta variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Destacar que si usted va a permitir que se pasen datos provenientes de usuarios a esta función, entonces debería usar EscapeShellCmd() para asegurarse de que los usuarios no pueden engañar al sistema para ejecutar instrucciones arbitrarias.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you start a program using this function and want to leave it running in the background, you have to make sure that the output of that program is redirected to a file or some other output stream or else PHP will hang until the execution of the program ends.</seg></tuv>
      <tuv xml:lang="es"><seg>La llamada a system() también intenta vaciar automáticamente el buffer de salida del servidor web después de cada línea de salida si PHP está funcionando como un módulo del servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The system() call also tries to automatically flush the web server's output buffer after each line of output if PHP is running as a server module.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la última línea de la orden en caso de éxito, y falso en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to execute a command and have all the data from the command passed directly back without any interference, use the passthru() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita ejecutar una orden y obtener de vuelta todo los datos del mismo sin interferencias, use la función PassThru().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also exec(), passthru(), popen(), escapeshellcmd(), and the backtick operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también exec(), PassThru(), popen(), EscapeShellCmd(), y el operador ` (apóstrofe invertido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg parameter is in radians.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la tangente de arg en radianes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also atan(), sin(), cos() and deg2rad().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también sin() y cos().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates a file with a unique filename in the specified directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Crea un fichero temporal de nombre único en el directorio especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the directory does not exist, tempnam() may generate a file in the system's temporary directory, and return the name of that.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el directorio no existe tempnam() puede generar un fichero en el directorio temporal del sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.0.6, the behaviour of the tempnam() function was system dependent.</seg></tuv>
      <tuv xml:lang="es"><seg>El comportamiento de la función tempnam() depende del sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consult your system documentation on the tempnam( 3) function if in doubt.</seg></tuv>
      <tuv xml:lang="es"><seg>En Windows la variable de entorno TMP se impone sobre el parámetro dir, en Linux la variable de entorno TMPDIR tiene preferencia, mientras que en SVR4 siempre se usará el parámetro dir si si el directorio al que apunta existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. tempnam() example</seg></tuv>
      <tuv xml:lang="es"><seg>Consulta la documentación del sistema sobre la función tempnam( 3) en caso de duda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el nombre del nuevo fichero temporal, o una cadena nula en caso de fallo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function 's behavior changed in 4.0.3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, that you need to remove the file in case you need it no more, it is not done automatically.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de tempnam()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also tmpfile() and unlink().</seg></tuv>
      <tuv xml:lang="es"><seg>$tmpfname = tempnam ("/ tmp", "FOO");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sets the domain to search within when calls are made to gettext(), usually the named after an application.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función establece el dominio en el que se realizarán las busquedas provocadas por las llamadas a gettext(), normalmente el nombre dado a la aplicación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The previous default domain is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve el dominio anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Call it with NULL as parameter to get the current setting without changing it.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede llamar a la función sin parámetros para obtener el dominio actual sin necesidad de cambiarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve la hora actual como número de segundos transcurridos desde las 00:00:00 del 1 de enero de 1970 GMT (Unix Epoch).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también date().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dBase functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones para dBase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. tmpfile() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. tmpfile() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is equivalent to what utime (sometimes referred to as utimes) does.</seg></tuv>
      <tuv xml:lang="es"><seg>Trata de fijar la fecha de modificación del fichero indicado por filename al valor dado por time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the access time is always modified, regardless of the number of parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no se pone la opción time, se utiliza la fecha actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el fichero no existe, será creado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (touch ($FileName)) {print "$FileName modification time has been changed to todays date and time";} else {print "Sorry Could Not change modification time of $FileName";}</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE en caso de éxito y FALSE en otro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the second parameter, trim() will strip these characters:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función elimina los espacios en blanco del comienzo y del final de una cadena y devuelve el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With.. you can specify a range of characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también chop() y ltrim().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The comparison function is user-defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función ordena una matriz de modo que los índices de la misma mantengan su correlación con los elementos a los que están asociados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see usort() and uksort() for examples of user-defined comparison functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto se utiliza principalmente para ordenar matrices asociativas en las que el orden de los elementos es importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also usort(), uksort(), sort(), asort(), arsort(), ksort(), and rsort().</seg></tuv>
      <tuv xml:lang="es"><seg>La función de comparación viene definida por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with the first character of str capitalized, if that character is alphabetic.</seg></tuv>
      <tuv xml:lang="es"><seg>Pone en mayúsculas el primer carácter de cad si es alfabético.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that 'alphabetic' is determined by the current locale.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que 'alfabético' está determinado por la localidad actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, in the default "C" locale characters such as umlaut-a (ä) will not be converted.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, en la localidad por defecto "C", los caracteres como la a con diéresis (ä) no serán convertidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ucfirst() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de ucfirst()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$foo = 'hello world !'; $foo = ucfirst($foo); / / Hello world! $bar = 'HELLO WORLD !'; $bar = ucfirst($bar); / / HELLO WORLD! $bar = ucfirst(strtolower($bar)); / / Hello world!</seg></tuv>
      <tuv xml:lang="es"><seg>Susanita tiene un / / ratón, un ratón chiquitín.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strtolower(), strtoupper(), and ucwords().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strtoupper() y strtolower()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with the first character of each word in str capitalized, if that character is alphabetic.</seg></tuv>
      <tuv xml:lang="es"><seg>Pasa a mayúsculas la primera letra de cada palabra en cad si dicho caracter es alfabético.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ucwords() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>$texto = "susanita tiene un ratón, un ratón chiquitín ."; $texto = ucwords($texto); / / $texto vale ahora:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The definition of a word is any string of characters that is immediately after a whitespace (These are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab).</seg></tuv>
      <tuv xml:lang="es"><seg>Susanita Tiene Un / / Ratón, Un Ratón Chiquitín.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strtoupper(), strtolower() and ucfirst().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también strtoupper(), strtolower() y ucfirst().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will sort the keys of an array using a user-supplied comparison function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función ordenará las claves de una matriz utilizando una función de comparación suministrada por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la matriz a ordenar necesita utilizar un criterio poco trivial, esta es la función que deberá usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. uksort() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de uksort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function cmp ($a, $b) {if ($a == $b) return 0; return ($a $b)? -1:</seg></tuv>
      <tuv xml:lang="es"><seg>function micomparar ($a, $b) {if ($a == $b) return 0; return ($a $b)? -1:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>1;} $a = array (4 = "cuatro", 3 = "tres", 20 = "veinte", 10 = "diez"); uksort ($a, micomparar); while (list ($clave, $valor) = each ($a)) {echo "$clave: $valor\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also usort(), uasort(), sort(), asort(), arsort(), ksort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: arsort(), asort(), uasort(), ksort(), rsort(), y sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>umask() sets PHP's umask to mask 0777 and returns the old umask.</seg></tuv>
      <tuv xml:lang="es"><seg>umask() fija las umask PHP con la mascara 0777 y y devuelve la antigua umask.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When PHP is being used as a server module, the umask is restored when each request is finished.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando PHP se está usando como un módulo del servidor, la umask se restaura cuando cada petición es finalizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>umask() without arguments simply returns the current umask.</seg></tuv>
      <tuv xml:lang="es"><seg>umask() sin argumentos sólamente devuelve la umask actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>uniqid() returns a prefixed unique identifier based on the current time in microseconds.</seg></tuv>
      <tuv xml:lang="es"><seg>uniqid() devuelve un identificador único con un prefijo basado en la hora actual en microsegundos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prefix can be up to 114 characters long.</seg></tuv>
      <tuv xml:lang="es"><seg>El prefijo puede ser práctico por ejemplo si se generan identificadores simultáneamente en varios host que pueden haber generado el identificador en el mismo microsegundo. prefix (prefijo) puede ser de hasta 114 carácteres de longitud.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional lcg parameter is TRUE, uniqid() will add additional "combined LCG "entropy at the end of the return value, which should make the results more unique.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el parámetro opcional lcg es TRUE, uniqid() añadirá entropía "LCG combinada "al final del valor devuelto, que hará el resultado más único.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With an empty prefix, the returned string will be 13 characters long.</seg></tuv>
      <tuv xml:lang="es"><seg>Con un prefix Con un prefix (prefijo) vacío, la cadena devuelta tendrá una longitud de 13 carácteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If lcg is TRUE, it will be 23 characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Si lcg es TRUE, tendrá 23 carácteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The lcg parameter is only available in PHP 4 and PHP 3.0.13 and later.</seg></tuv>
      <tuv xml:lang="es"><seg>El parámetro lcg está disponible sólo en PHP 4 y PHP 3.0.13 y posteriores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need a unique identifier or token and you intend to give out that token to the user via the network (i.e. session cookies), it is recommended that you use something along the lines of</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita un identificador único o testigo, y tiene la intención de hacer público ese testigo al usuario por medio de una red (i.e. cookies de sesión) se recomienda que utilice algo parecido a estas líneas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$token = md5( uniqid("")); / / no prefix $better_token = md5(uniqid(rand(),1)); / / better, difficult to guess</seg></tuv>
      <tuv xml:lang="es"><seg>$token = md5( uniqid("")); / / no random portion $better_token = md5(uniqid(rand())); / / better, difficult to guess</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will create a 32 character identifier (a 128 bit hex number) that is extremely difficult to predict.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto creará un identificador de 32 carácteres (un número hexadecimal de 128 bits) que es extremadamente difícil de predecir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the Julian Day for a UNIX timestamp (seconds since 1.1.1970), or for the current day if no timestamp is given.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el dia Juliano correspondiente a un UNIX timestamp (segundos desde 01.01.1970), ó al dia actual si no se especifica timestamp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also jdtounix().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien jdtounix().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes filename.</seg></tuv>
      <tuv xml:lang="es"><seg>Borra el fichero filename.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to the Unix C unlink() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Es similar a la función unlink() del Unix C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve 0 o FALSE en caso de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rmdir() for removing directories.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también rmdir() para borrar directorios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Forms Data Format functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones Forms Data Format (Formato de Datos de Formularios)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unpack() from binary string into array according to format.</seg></tuv>
      <tuv xml:lang="es"><seg>Desempaqueta datos de una cadena binaria en un array, de acuerdo al formato format.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns array containing unpacked elements of binary string.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve un array que contiene los elementos de la cadena binaria desempaquetados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unpack() works slightly different from Perl as the unpacked data is stored in an associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>Unpack funciona de manera ligeramente diferente a Perl, ya que los datos desempaquetados se almacenan en un array asociativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To accomplish this you have to name the different format codes and separate them by a slash /.</seg></tuv>
      <tuv xml:lang="es"><seg>Para conseguir ésto debe nombrar los diferentes códigos de formato y separarlos por una barra inclinada /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. unpack() format string</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. cadena de formato unpack</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = unpack ("c2chars / nint", $binarydata);</seg></tuv>
      <tuv xml:lang="es"><seg>$array = unpack( "c2chars / nint", $binarydata);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting array will contain the entries "chars1", "chars2" and "int ".</seg></tuv>
      <tuv xml:lang="es"><seg>El array resultante contendrá las entradas "chars1", "chars2" y "int ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For an explanation of the format codes see also: pack()</seg></tuv>
      <tuv xml:lang="es"><seg>Para una explicación de los códigos de formato véase también: pack()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that PHP internally stores integral values as signed.</seg></tuv>
      <tuv xml:lang="es"><seg>Advierta que PHP almacena internamente los valores enteros con signo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you unpack a large unsigned long and it is of the same size as PHP internally stored values the result will be a negative number even though unsigned unpacking was specified.</seg></tuv>
      <tuv xml:lang="es"><seg>Si desempaqueta un unsigned long (largo sin signo) demasiado grande y es del mismo tamaño tal como PHP almacena internamente los valores, el resultado será un número negativo a pesar de que se especificara desempaquetamiento sin signo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. unserialize_callback_func example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. unserialize_callback_func example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. unserialize() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. unserialize() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As such no value is returned, and attempting to take the value of unset() results in a parse error.</seg></tuv>
      <tuv xml:lang="es"><seg>unset() destruye la variable especificada y devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behavior of unset() inside of a function can vary depending on what type of variable you are attempting to destroy.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variable in the calling environment will retain the same value as before unset() was called.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de unset()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function foo( $bar) {unset($bar); $bar = "blah";} $bar = 'something'; echo "$bar\n"; foo($bar); echo "$bar\n";</seg></tuv>
      <tuv xml:lang="es"><seg>unset( $foo); unset ($bar['quux']);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function foo() {static $a; $a++; echo "$a\n"; unset($a);} foo(); foo(); foo();</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también isset() y empty().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decodes any% ## encoding in the given string.</seg></tuv>
      <tuv xml:lang="es"><seg>Decodifica cualquier% ## cifrado en la cadena dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The decoded string is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve la cadena decodificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. urldecode() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo urldecode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = explode( '', $QUERY_STRING); $i = 0; while ($i count($a)) {$b = split('=', $a[$i]); echo'Value for parameter ', htmlspecialchars(urldecode($b[0])),' is', htmlspecialchars(urldecode($b[1])), "br / \n"; $i++;}</seg></tuv>
      <tuv xml:lang="es"><seg>$a = split ('', $querystring); $i = 0; while ($i count ($a)) {$b = split ('=', $a [$i]); echo 'El valor para el parámetro ', htmlspecialchars (urldecode ($b [0])),' es ', htmlspecialchars (urldecode ($b [1])), "BR"; $i++;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also urlencode(), rawurlencode(), rawurldecode().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también urlencode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is encoded the same way that the posted data from a WWW form is encoded, that is the same way as in application / x-www-form-urlencoded media type.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena en la que todos los carácteres no alfanuméricos excepto -_. han sido reemplazados con un signo de porcentaje (%) seguido por dos dígitos hexadecimales y los espacios han sido codificados como signos positivos (+).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is convenient when encoding a string to be used in a query part of an URL, as a convenient way to pass variables to the next page:</seg></tuv>
      <tuv xml:lang="es"><seg>Está codificado de la misma manera que los datos que se envian desde un formulario WWW, es decir de la misma forma que el tipo application / x-www-form-urlencoded.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo 'a href="mycgi?foo=', urlencode($userinput),' "';</seg></tuv>
      <tuv xml:lang="es"><seg>Esto difiere del cifrado RFC1738 (vea rawurlencode()) en el que por razones históricas, los espacios son codificados como signos positivos (+).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an obvious hassle that the W3C has been telling people about for years.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función es conveniente para codificar una cadena de texto que va a ser usada como parte de una consulta de una URL, y es una forma adecuada de pasar variables a la página siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unfortunately most user agents do not send form data in this semi-colon separated format.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don' t need to change PHP's arg_separator for this.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo urlencode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. urlencode / htmlentities() example</seg></tuv>
      <tuv xml:lang="es"><seg>echo 'A HREF="mycgi?foo=', urlencode ($userinput),' "';</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also urldecode(), htmlentities(), rawurldecode(), rawurlencode().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también urldecode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones sobre variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sleep() and set_time_limit().</seg></tuv>
      <tuv xml:lang="es"><seg>La función usleep retrasa la ejecución del programa durante un número de micro_seconds (microsegundos) dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="es"><seg>Véase también sleep().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función ordenará una matriz por sus valores utilizando una función suministrada por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Si la matriz que desea ordenar necesita utilizar un criterio poco trivial, esta es la función que deberá usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up to PHP 4.0.6 the user defined functions would keep the original order for those elements, but with the new sort algorithm intruduced with 4.1.0 this is no longer the case as there is no solution to do so in an efficient way.</seg></tuv>
      <tuv xml:lang="es"><seg>La función de comparación deberá devolver un entero menor, igual, o mayor que cero, si el primer argumento se considera respectivamente menor que, igual que, o mayor que el segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1;} $a = array (3, 2, 5, 6, 1); usort ($a, "cmp"); while (list ($key, $value) = each ($a)) {echo "$key: $value\n";}</seg></tuv>
      <tuv xml:lang="es"><seg>Si dos miembros resultan ser iguales, su orden en la matriz ordenada será cualquiera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>5 2:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de usort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. usort() example using multi-dimensional array</seg></tuv>
      <tuv xml:lang="es"><seg>1;} $a = array (3, 2, 5, 6, 1); usort ($a, cmp); while (list ($clave, $valor) = each ($a)) {echo "$clave: $valor\n";}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When sorting a multi-dimensional array, $a and $b contain references to the first index of the array.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits[ 0]: apples $fruits[1]: grapes $fruits[2]: lemons</seg></tuv>
      <tuv xml:lang="es"><seg>Obviamente en este caso trivial la función rsort() habría sido más apropiada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. usort() example using a member function of an object</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>La función quicksort subyacente en ciertas librerías de C (tales como las de Solaris) pueden hacer que el PHP falle si la función de comparación no devuelve valores consistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also uasort(), uksort(), sort(), asort(), arsort(), ksort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también: arsort(), asort(), ksort(), rsort() y sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function decodes data, assumed to be UTF-8 encoded, to ISO-8859-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función decodifica data, asume codificación UTF-8, a ISO-8859-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See utf8_encode() for an explaination of UTF-8 encoding.</seg></tuv>
      <tuv xml:lang="es"><seg>Mira utf8_encode() para una explicación de codificación UTF-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML parser functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de intérprete XML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function encodes the string data to UTF-8, and returns the encoded version.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función codifica la cadena data a UTF-8, y devuelve la versión codificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UTF-8 is a standard mechanism used by Unicode for encoding wide character values into a byte stream.</seg></tuv>
      <tuv xml:lang="es"><seg>UTF-8 es un mecanismo estándar usado por Unicode para codificar valores de caracteres amplios en un chorro de bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UTF-8 is transparent to plain ASCII characters, is self-synchronized (meaning it is possible for a program to figure out where in the bytestream characters start) and can be used with normal string comparison functions for sorting and such.</seg></tuv>
      <tuv xml:lang="es"><seg>UTF-8 es transparente a caracteres de ASCII plano, es auto-sincronizado (significa que es posible para un programa averiguar dónde comienzan los caracteres en el chorro de bytes) y se puede usar con funciones de comparación de cadenas normales para ordenar y otros fines.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP encodes UTF-8 characters in up to four bytes, like this:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP codifica caracteres UTF-8 en hasta cuatro bytes, como esto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UTF-8 encoding</seg></tuv>
      <tuv xml:lang="es"><seg>Codificación UTF-8</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>representation</seg></tuv>
      <tuv xml:lang="es"><seg>representación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. var_dump() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. var_dump() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. version_compare() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. version_compare() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It performs an Apache sub-request.</seg></tuv>
      <tuv xml:lang="es"><seg>virtual() es una función específica del Apache que es equivalente a !--#include virtual...- - en mod_include.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that for a CGI script, the script must generate valid CGI headers.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto ejecuta una sup-petición al Apache .Esto, es util para incluir CGI-scripts o páginas .shtml o cualquier tipo de fichero que puedas procesar mediante el Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At the minimum that means it must generate a Content-type header.</seg></tuv>
      <tuv xml:lang="es"><seg>Los CGI-scripts deberán generar cabeceras válidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To run the sub-request, all buffers are terminated and flushed to the browser, pending headers are sent too.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto, implica como mínimo un include() ó un require(); La función virtual() no puede ser usada para incluir un documento que sea por si mismo un documento PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>WDDX Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones WDDX</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddx_add_vars() is used to serialize passed variables and add the result to the packet specified by the packet_id.</seg></tuv>
      <tuv xml:lang="es"><seg>wddx_add_vars() se utiliza para serializar las variables dadas e incorporar el resultado al paquete especificado por packet_id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variables to be serialized are specified in exactly the same way as wddx_serialize_vars().</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables a serializar se especifican exactamente igual que en wddx_serialize_vars().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddx_deserialize() takes a packet string and deserializes it.</seg></tuv>
      <tuv xml:lang="es"><seg>wddx_deserialized() toma una cadena packet y la desserializa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the result which can be string, number, or array.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve el resultado que puede ser de tipo cadena, numerico o array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that structures are deserialized into associative arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>Las estructuras son desserializadas en forma de arrays asociativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddx_packet_end() ends the WDDX packet specified by the packet_id and returns the string with the packet.</seg></tuv>
      <tuv xml:lang="es"><seg>wddx_packet_end() finaliza el paquete WDDX especificado por el packet_id y devuelve la cadena con el paquete.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use wddx_packet_start() to start a new WDDX packet for incremental addition of variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Utilice wddx_packet_start() para comenzar un nuevo paquete WDDX que permita la adicion sucesiva de variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes an optional comment It takes an optional comment string and returns a packet ID for use in later functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Recibe el parametro opcional comentario y devuelve un identificador de paquete para su uso en posteriores llamadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It automatically creates a structure definition inside the packet to contain the variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Automaticamente define una estructura dentro del paquete para contener las variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddx_serialize_value() is used to create a WDDX packet from a single given value.</seg></tuv>
      <tuv xml:lang="es"><seg>wddx_serialize_value() se utiliza para crear un paquete WDDX desde un valor simple dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes the value contained in var, and an optional comment string that appears in the packet header, and returns the WDDX packet.</seg></tuv>
      <tuv xml:lang="es"><seg>Toma el valor contenido en var, y una cadena comentario opcional que aparecera en la cabecera del paquete, y devuelve el paquete WDDX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddx_serialize_vars() is used to create a WDDX packet with a structure that contains the serialized representation of the passed variables.</seg></tuv>
      <tuv xml:lang="es"><seg>wddx_serialize_vars() se utiliza para crear un paquete WDDX con una estructura que contiene la representacion serializada de las variables pasadas como parametros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddx_serialize_vars() takes a variable number of arguments, each of which can be either a string naming a variable or an array containing strings naming the variables or another array, etc.</seg></tuv>
      <tuv xml:lang="es"><seg>wddx_serialize_vars() toma un numero variable de argumentos, cada uno de los cuales puede ser una cadena con el nombre de una variable o un array con nombres de variables, o de otro array, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. wddx_serialize_vars() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. wddx_serialize_vars example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1; $b = 5.5; $c = array("blue", "orange", "violet"); $d = "colors"; $clvars = array("c", "d"); print wddx_serialize_vars("a", "b", $clvars);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $a = 1; $b = 5.5; $c = array("azul", "naranja", "violeta"); $d = "colores"; $clvars = array("c", "d"); print wddx_serialize_vars("a", "b", $clvars);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo anterior producira:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wddxPacket version=' 1.0 'header / data struct var name='a' number 1 / number / var var name='b 'number 5.5 / number / var var name='c' array length='3 'string blue / string string orange / string string violet / string / array / var var name='d' string colors / string / var / struct / data / wddxPacket</seg></tuv>
      <tuv xml:lang="es"><seg>wddxPacket version=' 0.9 'header / data struct var name='a' number 1 / number / var var name='b 'number 5.5 / number / var var name='c' array length='3 'string azul / string string naranja / string string violeta / string / array / var var name='d' string colores / string / var / struct / data / wddxPacket</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The line is broken using the (optional) break parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Corta la cadena cad en la columna especificada por el parámetro (opcional) ancho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>wordwrap() will automatically wrap at column 75 and break using '\n '(newline) if width or break are not given.</seg></tuv>
      <tuv xml:lang="es"><seg>La línea se rompe utilizando el parámetro (opcional) ruptura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So if you have a word that is larger than the given width, it is broken apart. (See second example).</seg></tuv>
      <tuv xml:lang="es"><seg>wordwrap() automáticamente cortará en la columna 75 y usará '\n '(nueva línea) si no se especifican el ancho o la ruptura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional cut parameter was added in PHP 4.0.3</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. wordwrap() example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de wordwrap()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>$texto = "El veloz murciélago hindú comía feliz cardillo y kiwi ."; $textonuevo = wordwrap ($texto, 20); echo "$textonuevo\n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. wordwrap() example</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo mostraría:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="es"><seg>El veloz murciélago hindú comía feliz cardillo y kiwi.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also nl2br().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea también nl2br().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An error code from xml_get_error_code().</seg></tuv>
      <tuv xml:lang="es"><seg>Un código de error de xml_get_error_code().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with a textual description of the error code code, or FALSE if no description was found.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una cadena con una descripción textual del código de error code, o FALSE si no se encontró descripción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get byte index from.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML del que obtener el índice del byte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns FALSE if parser does not refer to a valid parser, or else it returns which byte index the parser is currently at in its data buffer (starting at 0).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve FALSE si parser no referencia un analizador válido, o si no devuelve en qué índice de byte se encuentra el buffer de datos del analizador (empezando en 0).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get column number from.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML del que obtener el número de columna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns FALSE if parser does not refer to a valid parser, or else it returns which column on the current line (as given by xml_get_current_line_number()) the parser is currently at.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve FALSE si parser no referencia un analizador válido, o si no devuelve en qué columna de la línea actual (como se obtiene de xml_get_current_line_number()) en la que se encuentra el analizador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get line number from.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML del que obtener el número de línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns FALSE if parser does not refer to a valid parser, or else it returns which line the parser is currently at in its data buffer.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve FALSE si parser no referencia un analizador válido, o si no devuelve en qué línea se encuentra actualmente el buffer de datos del analizador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get error code from.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML del que obtener el código de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns FALSE if parser does not refer to a valid parser, or else it returns one of the error codes listed in the error codes section.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve FALSE si parser no referencia un analizador válido, o si no devuelve uno de los códigos de error listados en la sección de códigos de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to use.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML que se va a utilizar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chunk of data to parse.</seg></tuv>
      <tuv xml:lang="es"><seg>Conjunto de información que se analizará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A document may be parsed piece-wise by calling xml_parse() several times with new data, as long as the is_final parameter is set and TRUE when the last data is parsed.</seg></tuv>
      <tuv xml:lang="es"><seg>Un documento puede ser analizado por trozos llamando varias veces a xml_parse() con nueva información, siempre que se establezca el parámetro isFinal y sea TRUE cuando el último dato sea analizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If set and TRUE, data is the last piece of data sent in this parse.</seg></tuv>
      <tuv xml:lang="es"><seg>Si existe y es TRUE, data es el último pedazo de información envíado en este análisis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the XML document is parsed, the handlers for the configured events are called as many times as necessary, after which this function returns TRUE or FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el documento XML es analizado, se hacen llamadas a los gestores para los eventos configurados tantas veces como sea necesario, después de que esta función devuelva TRUE o FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE is returned if the parse was successful, FALSE if it was not successful, or if parser does not refer to a valid parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve TRUE si el análisis se realiza con éxito, FALSE si no tiene éxito, o si parser no referencia a un analizador válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For unsuccessful parses, error information can be retrieved with xml_get_error_code(), xml_error_string(), xml_get_current_line_number(), xml_get_current_column_number() and xml_get_current_byte_index().</seg></tuv>
      <tuv xml:lang="es"><seg>Para análisis fallidos, se puede recuperar información de error con xml_get_error_code(), xml_error_string(), xml_get_current_line_number(), xml_get_current_column_number() y xml_get_current_byte_index().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. moldb.xml - small database of molecular information</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. moldb.xml - small database of molecular information</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. parsemoldb.php - parses moldb.xml into and array of molecular objects</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. parsemoldb.php - parses moldb.xml into and array of molecular objects</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Which character encoding the parser should use.</seg></tuv>
      <tuv xml:lang="es"><seg>Qué codificación de caracteres debería usar el analizador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following character encodings are supported:</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes codificación de caracteres están soportadas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ISO-8859-1 (default)</seg></tuv>
      <tuv xml:lang="es"><seg>ISO-8859-1 (por defecto)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to free.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML que se liberará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns FALSE if parser does not refer to a valid parser, or else it frees the parser and returns TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve FALSE si parser no referencia un analizador válido, o si no libera el analizador y devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get an option from.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML del que obtener opciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Which option to fetch.</seg></tuv>
      <tuv xml:lang="es"><seg>Qué opción recuperar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See xml_parser_set_option() for a list of options.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver xml_parser_set_option() para una lista de opciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns FALSE if parser This function returns FALSE if parser does not refer to a valid parser, or if the option could not be set.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función devuelve FALSE si parser no referencia un analizador válido, o si la opción no pudo ser establecida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Else the option 's value is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no, se devuelve la opción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See xml_parser_set_option() for the list of options.</seg></tuv>
      <tuv xml:lang="es"><seg>Mirar xml_parser_set_option() para la lista de opciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to set an option in.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia al analizador XML en el que establecer opciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Which option to set.</seg></tuv>
      <tuv xml:lang="es"><seg>Opción que se establecerá.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See below.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver más abajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The option 's new value.</seg></tuv>
      <tuv xml:lang="es"><seg>El nuevo valor de la opción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Else the option is set and TRUE is returned.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no, la opción se establece y devuelve TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following options are available:</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones siguientes están disponibles:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML parser options</seg></tuv>
      <tuv xml:lang="es"><seg>Opciones de analizador XML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Option constant</seg></tuv>
      <tuv xml:lang="es"><seg>Opción constante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Data type</seg></tuv>
      <tuv xml:lang="es"><seg>Tipo de Datos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Controls whether case-folding is enabled for this XML parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Controla si case-folding Controla si case-folding se habilita para este analizador XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enabled by default.</seg></tuv>
      <tuv xml:lang="es"><seg>Habilitado por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets which target encoding Sets which target encoding to use in this XML parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece qué codificación destino se usa en este analizador XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, it is set to the same as the source encoding used by xml_parser_create().</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, esta puesta al mismo que la codificación fuente usada por xml_parser_create().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Supported target encodings are ISO-8859-1, US-ASCII and UTF-8.</seg></tuv>
      <tuv xml:lang="es"><seg>Las codificaciones de destino soportadas son ISO-8859-1, US-ASCII y UTF-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the character data handler function for the XML parser parser. handler is a string containing the name of a function that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece la función gestora de datos de caracteres para el analizador XML parser. handler es un string que contiene el nombre de la función que debe existir cuando xml_parse() es llamado por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by handler must accept two parameters: handler (resource parser, string data)</seg></tuv>
      <tuv xml:lang="es"><seg>La función nombrada en handler debe aceptar dos parámetros: handler (int parser, string data)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first parameter, parser, is a reference to the XML parser calling the handler.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer parámetro, parser, es una referencia al analizador XML que llama al gestor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter, data, contains the character data as a string.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, data, contiene los datos caracteres como string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a handler function is set to an empty string, or FALSE, the handler in question is disabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Si una función gestora se establece como la cadena vacía, o FALSE, el gestor en cuestión se deshabilita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE is returned if the handler is set up, FALSE if parser is not a parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve TRUE si se estableció el gestor, FALSE si parser no es un analizador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of a function name, an array containing an object reference and a method name can also be supplied.</seg></tuv>
      <tuv xml:lang="es"><seg>En la actualidad no hay soporte para gestores objeto / método.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the default handler function for the XML parser parser. handler is a string containing the name of a function that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece la función gestora por defecto para un analizador XML parser. handler es un string que contiene el nombre de la función que debe existir cuando xml_parse() es llamado por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter, data, contains the character data.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, data, contiene los caracteres de dato.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may be the XML declaration, document type declaration, entities or other data for which no other handler exists.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede ser la declaración XML, la declaración de tipo de documento, entidades u otros datos para los cuales no existe otro gestor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the element handler functions for the XML parser parser. start_element_handler and end_element_handler are strings containing the names of functions that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece las funciones de gestion de elementos para el analizador XML parser. startElementHandler y endElementHandler son strings que contienen los nombres de las funciones que deben existir cuando xml_parse() es llamado por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by start_element_handler must accept three parameters: start_element_handler (resource parser, string name, array attribs)</seg></tuv>
      <tuv xml:lang="es"><seg>La función denominada startElementHandler debe aceptar tres parámetros: startElementHandler (int parser, string name, string attribs)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter, name, contains the name of the element for which this handler is called.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, name, contiene el nombre del elemento para el que se llama a este gestor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If case-folding is in effect for this parser, the element name will be in uppercase letters.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la propiedad de case-folding tiene efecto para este analizador, el nombre del elemento estará en mayúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third parameter, attribs, contains an associative array with the element' s attributes (if any).</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer parámetro, attribs, contiene un array asociativo con los atributos de los elementos (si hay).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys of this array are the attribute names, the values are the attribute values.</seg></tuv>
      <tuv xml:lang="es"><seg>Las claves de este array son los nombres de los atributos, los valores son los valores de los atributos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attribute names are case-folded on the same criteria as element names.</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres de los atributos están en mayúsculas (case-folded) con el mismo criterio que los nombres de los elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attribute values are not case-folded.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores de los atributos no sufren las consecuencias de case-folding.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The original order of the attributes can be retrieved by walking through attribs the normal way, using each().</seg></tuv>
      <tuv xml:lang="es"><seg>El orden original de los atributos se puede recuperar recorriendo attribs del modo usual, usando each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first key in the array was the first attribute, and so on.</seg></tuv>
      <tuv xml:lang="es"><seg>La primera clave del array es el el primer atributo, y así sucesivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by end_element_handler must accept two parameters: end_element_handler (resource parser, string name)</seg></tuv>
      <tuv xml:lang="es"><seg>La función llamada endElementHandler debe aceptar dos parámetros: endElementHandler (int parser, string name)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE is returned if the handlers are set up, FALSE if parser is not a parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Se devuelve TRUE si se establecieron los gestores, FALSE si parser no es un analizador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of a function name, an array containing an object reference and a method name can also be supplied.</seg></tuv>
      <tuv xml:lang="es"><seg>En lugar de un nombre de función, se pueden proporcionar una matriz que contenga una referencia a un objeto o el nombre de un método.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the external entity reference handler function for the XML parser parser. handler is a string containing the name of a function that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece la función gestora de declaraciones de notación para el analizador XML parser. handler es un string que contiene el nombre de una función que debe existir cuando xml_parse() es llamado por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by handler must accept five parameters, and should return an integer value.</seg></tuv>
      <tuv xml:lang="es"><seg>La función llamada por handler debe aceptar cinco parámetros, y debería devolver un valor entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. handler (resource parser, string open_entity_names, string base, string system_id, string public_id)</seg></tuv>
      <tuv xml:lang="es"><seg>Si el valor devuelto desde el gestor (handler) es falso (lo cual ocurrirá si no se devuelve un valor), el analizador XML dejará de analizar y xml_get_error_code() devolverá XML_ERROR_EXTERNAL_ENTITY_HANDLING. int handler (int parser, string openEntityNames, string base, string systemId, string publicId)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter, open_entity_names, is a space-separated list of the names of the entities that are open for the parse of this entity (including the name of the referenced entity).</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, openEntityNames, es una lista, separada por espacios, de los nombres de las entidades que se abren para el análisis de esta entidad (incluido el nombre de la entidad referenciada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the base for resolving the system identifier (system_id) of the external entity.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es la base para resolver el identificador de sistema (systemid) de la entidad externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently this parameter will always be set to an empty string.</seg></tuv>
      <tuv xml:lang="es"><seg>En la actualidad este parámetro es siempre la cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fourth parameter, system_id, is the system identifier as specified in the entity declaration.</seg></tuv>
      <tuv xml:lang="es"><seg>El cuarto parámetro, systemId, es el identificador del sistema tal como se especificó en la declaración de la entidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fifth parameter, public_id, is the public identifier as specified in the entity declaration, or an empty string if none was specified; the whitespace in the public identifier will have been normalized as required by the XML spec.</seg></tuv>
      <tuv xml:lang="es"><seg>El quinto parámetro, publicId, es el identificador público como se especificó en la declaración de la entidad, o una cadena vacía si no se especificó ninguno; el espacio en blanco en el identificador público se habrá normalizado como se requiere en las especificaciones XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the notation declaration handler function for the XML parser parser. handler is a string containing the name of a function that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece las funciones gestoras de declaraciones de notación para el analizador XML parser. handler es un string que contiene el nombre de una función que debe existir cuando xml_parse() es llamado por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A notation declaration is part of the document 's DTD and has the following format:</seg></tuv>
      <tuv xml:lang="es"><seg>Una declaración de notación es parte del DTD del documento y tiene el siguiente formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>!NOTATION name {system_id _BAR_ public_id}</seg></tuv>
      <tuv xml:lang="es"><seg>!NOTATION name {systemId _BAR_ publicId}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by handler must accept five parameters: handler (resource parser, string notation_name, string base, string system_id, string public_id)</seg></tuv>
      <tuv xml:lang="es"><seg>La función llamada por handler debe aceptar cinco parámetros: handler (int parser, string notationName, string base, string systemId, string publicId)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the notation 's name, as per the notation format described above.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es el nombre de la notación, como se describió arriba en el formato de notación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the base for resolving the system identifier (system_id) of the notation declaration.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es la base para resolver el identificador de sistema (systemId) de la declaración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>System identifier of the external notation declaration.</seg></tuv>
      <tuv xml:lang="es"><seg>Identificador de sistema de la declaración de notación externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Public identifier of the external notation declaration.</seg></tuv>
      <tuv xml:lang="es"><seg>Identificador público de la declaración de notación externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function allows to use parser inside object.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función hace a parser utilizable dentro de object.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All callback functions could be set with xml_set_element_handler() etc and assumed to be methods of object.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las funciones de callback establecidas por xml_set_element_handler() etc se asumen como métodos de object.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class xml {var $parser; function xml() {$this - parser = xml_parser_create(); xml_set_object($this - parser, $this); xml_set_element_handler($this - parser, "tag_open", "tag_close"); xml_set_character_data_handler($this - parser, "cdata");} function parse($data) {xml_parse($this - parser, $data);} function tag_open($parser, $tag, $attributes) {var_dump($parser, $tag, $attributes);} function cdata($parser, $cdata) {var_dump($parser, $cdata);} function tag_close($parser, $tag) {var_dump($parser, $tag);}} / / end of class xml $xml_parser = new xml(); $xml_parser - parse( "A ID='hallo 'PHP / A ");?</seg></tuv>
      <tuv xml:lang="es"><seg>?php class xml {var $parser; function xml() {$this - parser = xml_parser_create(); xml_set_object($this - parser, $this); xml_set_element_handler($this - parser ,"tag_open" ,"tag_close"); xml_set_character_data_handler($this - parser ,"cdata");} function parse($data) {xml_parse($this - parser,$data);} function tag_open($parser,$tag,$attributes) {var_dump($parser,$tag,$attributes);} function cdata($parser,$cdata) {var_dump($parser,$cdata);} function tag_close($parser,$tag) {var_dump($parser,$tag);}} / / end of class xml $xml_parser = new xml(); $xml_parser - parse( "A ID=\"hallo\" PHP / A ");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the processing instruction (PI) handler function for the XML parser parser. handler is a string containing the name of a function that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece ela función de gestión de instrucciones de procesado (PI) para el analizador XML parser. handler es un string que contiene el nombre de una función que debe existir cuando xml_parse() es llamada por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A processing instruction has the following format:</seg></tuv>
      <tuv xml:lang="es"><seg>Una instrucción de procedado tiene el siguiente formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by handler must accept three parameters: handler (resource parser, string target, string data)</seg></tuv>
      <tuv xml:lang="es"><seg>La función nombrada en handler debe aceptar tres parámetros: handler (int parser, string target, string data)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter, target, contains the PI target.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo parámetro, target, contiene el objetivo PI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third parameter, data, contains the PI data.</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer parámetro, data, contiene los datos PI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the unparsed entity declaration handler function for the XML parser parser. handler is a string containing the name of a function that must exist when xml_parse() is called for parser.</seg></tuv>
      <tuv xml:lang="es"><seg>Establece la función gestora de declaración de entidades no analizadas para el analizador XML parser. handler es una cadena que contiene el nombre de una función que debe existir cuando xml_parse() es llamada por parser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This handler will be called if the XML parser encounters an external entity declaration with an NDATA declaration, like the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Este gestor será llamado si el analizador XML encuentra una declaración de entidades externas con una declaración NDATA, como la siguiente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See section 4.2.2 of the XML 1.0 spec for the definition of notation declared external entities.</seg></tuv>
      <tuv xml:lang="es"><seg>Mira la sección 4.2.2 de las especificaciones XML 1.0 para la definición de entidades externas de notación declarada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function named by handler must accept six parameters: handler (resource parser, string entity_name, string base, string system_id, string public_id, string notation_name)</seg></tuv>
      <tuv xml:lang="es"><seg>La función nombrada en handler debe aceptar seis parámetros: handler (int parser, string entityName, string base, string systemId, string publicId, string notationName)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the entity that is about to be defined.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de la entidad que va a ser definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the base for resolving the system identifier (systemId) of the external entity.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es la base para resolver el identificador de sistema (systemId) de la entidad externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently this parameter will always be set to an empty string.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente este parámetro siempre será una cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>System identifier for the external entity.</seg></tuv>
      <tuv xml:lang="es"><seg>Identificador de Sistema para la entidad externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Public identifier for the external entity.</seg></tuv>
      <tuv xml:lang="es"><seg>Identificador público para la entidad externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name of the notation of this entity (see xml_set_notation_decl_handler()).</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre de la notación de esta entidad (ver xml_set_notation_decl_handler()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Create and return a new XSLT processor resource for manipulation by the other XSLT functions.</seg></tuv>
      <tuv xml:lang="es"><seg>This handle is needed in all subsequent calls to XSL functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return an error code describing the last error that occured on the passed XSLT processor.</seg></tuv>
      <tuv xml:lang="es"><seg>If no handle is given, the last error number that occured anywhere is returned.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling errors using the xslt_error() and xslt_errno() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Return the current error string of the given XSL processor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $xh = xslt_create(); $result = xslt_process($xh, 'dog.xml', 'pets.xsl'); if (!$result) {die(sprintf("Cannot process XSLT document [%d]: %s", xslt_errno($xh), xslt_error($xh)));} print($result); xslt_free($xh);?</seg></tuv>
      <tuv xml:lang="es"><seg>If no handle is given, the last error string that occured anywhere is returned.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>xslt_process</seg></tuv>
      <tuv xml:lang="es"><seg>xslt_output_process</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In these cases you 'll have the XML and / or XSLT data in a variable - - and in production applications the overhead of dumping these to file may be too much.</seg></tuv>
      <tuv xml:lang="es"><seg>(no version information, might be only in CVS)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / $xml and $xsl contain the XML and XSL data $arguments = array( '/ _xml' = $xml, '/ _xsl' = $xsl); / / Allocate a new XSLT processor $xh = xslt_create(); / / Process the document $result = xslt_process($xh, 'arg: / _xml', 'arg: / _xsl', NULL, $arguments); if ($result) {print "SUCCESS, sample.xml was transformed by sample.xsl into the \$result"; print "variable, the \$result variable has the following contents\n br \n"; print" pre \n"; print $result; print "/ pre \n";} else {print "Sorry, sample.xml could not be transformed by sample.xsl into"; print" the \$result variable the reason is that ". xslt_error($xh). print" and the error code is ". xslt_errno($xh);} xslt_free($xh);?</seg></tuv>
      <tuv xml:lang="es"><seg>This function lacks a prototype definition.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SAX handlers should be a two dimensional array with the format (all top level elements are optional):</seg></tuv>
      <tuv xml:lang="es"><seg>Set SAX handlers on the ressource handle given by xh.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>YAZ functions</seg></tuv>
      <tuv xml:lang="es"><seg>YAZ</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes connection given by id.</seg></tuv>
      <tuv xml:lang="es"><seg>Closes a connection to a target.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The id is a connection resource as returned by a previous yaz_connect() call.</seg></tuv>
      <tuv xml:lang="es"><seg>The application can no longer refer to the target with the given id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error code is either a Z39.50 diagnostic code (usually a Bib-1 diagnostic) or a client side error code which is generated by PHP / YAZ itself, such as "Connect failed", "Init Rejected ", etc.</seg></tuv>
      <tuv xml:lang="es"><seg>A positive value is returned if the target returned a diagnostic code; a value of zero is returned if no errors occurred (success); negative value is returned for other errors targets didn 't indicate the error in question.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns error text message for target (last request).</seg></tuv>
      <tuv xml:lang="es"><seg>Returns error message for target (last request).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>yaz_error() returns an english text message corresponding to the last error number as returned by yaz_errno().</seg></tuv>
      <tuv xml:lang="es"><seg>yaz_error() returns a english message corresponding to the last error number as returned by yaz_errno().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The start specifies position of first record to be retrieved and number is the number records.</seg></tuv>
      <tuv xml:lang="es"><seg>This function is used in conjunction with yaz_search() to specify the maximum number of records to retrieve (number) and the first record position (start).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Records in a result set are numbered 1, 2,... $hits where $hits is the count returned by yaz_hits().</seg></tuv>
      <tuv xml:lang="es"><seg>If this function is not invoked (only yaz_search()) start is set to 1 and number is set to 10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns record at position pos or empty string if no record exists at given position.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns record at position or empty string if no record exists at given position.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If type is "string" the record is returned in a string representation suitable for printing (for XML and SUTRS).</seg></tuv>
      <tuv xml:lang="es"><seg>The argument, type, specifies the form of the returned record.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like yaz_connect() this function is non-blocking and only prepares for a search to be executed later when yaz_wait() is called.</seg></tuv>
      <tuv xml:lang="es"><seg>yaz_search() prepares for a search on the target with given id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, in the text representation as used by YAZ a prefix notation is used, that is the operater precedes the operands.</seg></tuv>
      <tuv xml:lang="es"><seg>The type represents the query type - only "rpn" is supported now in which case the third argument is a prefix notation query as used by YAZ.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function should be called before yaz_search() or yaz_present().</seg></tuv>
      <tuv xml:lang="es"><seg>This function is used in conjunction with yaz_search() to specify the preferred record syntax for retrieval.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the options array is given that holds options that change the behaviour of yaz_wait().</seg></tuv>
      <tuv xml:lang="es"><seg>This function carries out networked (blocked) activity for outstanding requests which have been prepared by the functions yaz_connect(), yaz_search(). yaz_wait() returns when all targets have either completed all requests or otherwise completed (in case of errors).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>YP / NIS Functions</seg></tuv>
      <tuv xml:lang="es"><seg>NIS funciona</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>yp_errno() returns the error code of the previous operation.</seg></tuv>
      <tuv xml:lang="es"><seg>yp_errno() retorna el codigo de error de la operacion previa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible errors are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los errores posibles son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 args to function are bad</seg></tuv>
      <tuv xml:lang="es"><seg>1 args para funcionar son malos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 RPC failure - domain has been unbound</seg></tuv>
      <tuv xml:lang="es"><seg>2 fallo de RPC - dominio ha sido unbound</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3 can 't bind to server on this domain</seg></tuv>
      <tuv xml:lang="es"><seg>3 no puede unir a servidor en este dominio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>4 no such map in server 's domain</seg></tuv>
      <tuv xml:lang="es"><seg>4 ningun tal mapa en dominio de servidor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>5 no such key in map</seg></tuv>
      <tuv xml:lang="es"><seg>5 ninguna tal llave en</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>6 internal yp server or client error</seg></tuv>
      <tuv xml:lang="es"><seg>6 interno yp error de cliente o servidor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>7 resource allocation failure</seg></tuv>
      <tuv xml:lang="es"><seg>7 fallo de asignacion de recurso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>8 no more records in map database</seg></tuv>
      <tuv xml:lang="es"><seg>8 ningunos más registros en base de datos de mapa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>9 can 't communicate with portmapper</seg></tuv>
      <tuv xml:lang="es"><seg>9 no puede comunicar wiTh portmapper</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>10 can 't communicate with ypbind</seg></tuv>
      <tuv xml:lang="es"><seg>10 no puede comunicar con ypbind</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>11 can 't communicate with ypserv</seg></tuv>
      <tuv xml:lang="es"><seg>11 no puede comunicar con ypserv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>12 local domain name not set</seg></tuv>
      <tuv xml:lang="es"><seg>12 nombre de dominio local no conjunto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>13 yp database is bad</seg></tuv>
      <tuv xml:lang="es"><seg>13 yp base de datos es malo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>14 yp version mismatch</seg></tuv>
      <tuv xml:lang="es"><seg>14 yp La version mismatch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>15 access violation</seg></tuv>
      <tuv xml:lang="es"><seg>15 violacion de acceso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>16 database busy</seg></tuv>
      <tuv xml:lang="es"><seg>16 base de datos ocupar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also yp_err_string().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: yp_err_string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Useful to indicate what exactly went wrong.</seg></tuv>
      <tuv xml:lang="es"><seg>yp_err_string() Retorna el mensaje de error asociado con la operacion previa.Util para indicar que salio mal exactamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example for NIS errors</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo para errores de NIS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also yp_errno().</seg></tuv>
      <tuv xml:lang="es"><seg>Vea tambien: yp errno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>yp_first() returns the first key-value pair from the named map in the named domain, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>yp_first - - devuelve la primera clave emparejada con el nombrado mapa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example for the NIS first</seg></tuv>
      <tuv xml:lang="es"><seg>string[] yp_first (cadena dominio, cadena mapa)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $entry = yp_first( $domain, "passwd.byname"); $key = $entry ["key"]; $value = $entry ["value"]; echo "First entry in this map has key ". $key." and value ". $value;?</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also yp-get-default-domain()</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: yp_get_default_domain yp_errno y yp_err_string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>yp_get_default_domain() returns the default domain of the node or FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>yp_ get_default_domain() Retorna el valor por omision del dominio del nodo o FALSO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Can be used as the domain parameter for successive NIS calls.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede ser usado el parametro de dominio para sucesivas llamadas a NIS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A NIS domain can be described a group of NIS maps.</seg></tuv>
      <tuv xml:lang="es"><seg>Un dominio de NIS puede ser descrito en un grupo de mapas NIS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every host that needs to look up information binds itself to a certain domain.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada host necesita buscar uniones de informacion en un mismo dominio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to the documents mentioned at the beginning for more detailed information.</seg></tuv>
      <tuv xml:lang="es"><seg>Acudir a los documentos mencionados en el comienzo para mas informacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example for the default domain</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo para el dominio por omision</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $domain = yp_get_default_domain(); echo "Default NIS domain is: ". $domain;?</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: yp_ errno (nombre de la funcion) y yp_err_string (nombre de la funcion)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This key must be exact.</seg></tuv>
      <tuv xml:lang="es"><seg>yp_match( nombre de la funcion)() Retorna el valor asociado con la llave pasada fuera del mapa especificado o FALSO. esta llave tiene que ser exacta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example for NIS match</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo para NIS parejo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $entry = yp_match ($domain, "passwd.byname", "joe"); echo "Matched entry is: ". $entry;?</seg></tuv>
      <tuv xml:lang="es"><seg>Joe:##joe:11111:100:joe usuario: / hogar / j/joe:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case this could be: joe:##joe:11111:100:Joe User: / home / j/joe: / usr / local / bin / bash</seg></tuv>
      <tuv xml:lang="es"><seg>User: / usr / local / bin / bash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>yp_next() returns the next key-value pair in the named map after the specified key or FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>yp_next() devuelve el siguiente par de valor tecleado en el mapa de nombres despues de la clave especificada o FALSO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example for NIS next</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo para NIS siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also yp-get-default-domain().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien: yp_get_default_domain yp_errno y yp_err_string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functionality was added in PHP 4.0.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta funcionalidad fue añadida en PHP4 Beta 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. zend_version() Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. zend_version() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Zlib Compression Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones de Compresión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Seguridad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Preface</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Introduction</seg></tuv>
      <tuv xml:lang="es"><seg>Introducción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has come a long way in the last few years.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP ha recorrido un largo camino en los últimos años.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Growing to be one of the most prominent languages powering the Web was not an easy task.</seg></tuv>
      <tuv xml:lang="es"><seg>Crecer hasta ser uno de los más importantes lenguajes de programación en entornos Web no ha sido tarea fácil.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those of you interested in briefly seeing how PHP grew out to what it is today, read on.</seg></tuv>
      <tuv xml:lang="es"><seg>Aquellos interesados en ver brevemente cómo creció PHP hasta lo que es hoy en día, sigan leyendo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP succeeds an older product, named PHP / FI.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP es el heredero de un producto anterior, llamado PHP / FI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP / FI was created by Rasmus Lerdorf in 1995, initially as a simple set of Perl scripts for tracking accesses to his online resume.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP / FI fue creado por Rasmus Lerdorf en 1995, inicialmente como un simple conjunto de scripts de Perl para controlar los accesos a su trabajo online.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>He named this set of scripts' Personal Home Page Tools'.</seg></tuv>
      <tuv xml:lang="es"><seg>Llamó a ese conjunto de scripts 'Personal Home Page Tools'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As more functionality was required, Rasmus wrote a much larger C implementation, which was able to communicate with databases, and enabled users to develop simple dynamic Web applications.</seg></tuv>
      <tuv xml:lang="es"><seg>Según se requería más funcionalidad, Rasmus fue escribiendo una implementación C mucho mayor, que era capaz de comunicarse con bases de datos, y permitía a los usuarios desarrollar sencillas aplicaciones Web dinámicas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rasmus chose to release the source code for PHP / FI for everybody to see, so that anybody can use it, as well as fix bugs in it and improve the code.</seg></tuv>
      <tuv xml:lang="es"><seg>Rasmus eligió liberar el código fuente de PHP / FI para que cualquiera pudiese utilizarlo, así como arreglar errores y mejorar el código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP / FI, which stood for Personal Home Page / Forms Interpreter, included some of the basic functionality of PHP as we know it today.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP / FI, que se mantuvo para páginas personales y como intérprete de formularios, incluía algunas de las funcionalidads básicas de PHP tal y como lo conocemos hoy.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It had Perl-like variables, automatic interpretation of form variables and HTML embedded syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>Tenía variables como las de Perl, interpretación automática de variables de formulario y sintaxis embebida HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax itself was similar to that of Perl, albeit much more limited, simple, and somewhat inconsistent.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis por sí misma era similar a la de Perl, aunque mucho más limitada, simple y algo inconsistente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By 1997, PHP / FI 2.0, the second write-up of the C implementation, had a cult of several thousand users around the world (estimated), with approximately 50,000 domains reporting as having it installed, accounting for about 1% of the domains on the Internet.</seg></tuv>
      <tuv xml:lang="es"><seg>Por 1997, PHP / FI 2.0, la segunda escritura de la implementación en C, tuvo un seguimiento estimado de varios miles de usuarios en todo el mundo, con aproximadamente 50.000 dominios informando que lo tenían instalado, sumando alrededor del 1% de los dominios de Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While there were several people contributing bits of code to this project, it was still at large a one-man project.</seg></tuv>
      <tuv xml:lang="es"><seg>Mientras había mucha gente contribuyendo con bits de código a este proyecto, era todavía en su mayor parte el proyecto de una sola persona.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP / FI 2.0 was officially released only in November 1997, after spending most of its life in beta releases.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP / FI 2.0 no se liberó oficialmente hasta Noviembre de 1997, después de gastar la mayoría de su vida en desarrollos beta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was shortly afterwards succeeded by the first alphas of PHP 3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Fue sucedido en breve tiempo por las primeras versiones alfa de PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3.0 was the first version that closely resembles PHP as we know it today.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP 3.0 era la primera versión que se parecía fielmente al PHP tal y como lo conocemos hoy en día.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was created by Andi Gutmans and Zeev Suraski in 1997 as a complete rewrite, after they found PHP / FI 2.0 severely underpowered for developing their own eCommerce application.</seg></tuv>
      <tuv xml:lang="es"><seg>Fue creado por Andi Gutmans y Zeev Zuraski en 1997 reescribiéndolo completamente, después de que encontraran que PHP / FI 2.0 tenía pocas posibilidades para desarrollar su propia aplicación comercial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In an effort to cooperate and start building upon PHP / FI 's existing user-base, Andi, Rasmus and Zeev decided to cooperate and announce PHP 3.0 as the official successor of PHP / FI 2.0, and development of PHP / FI 2.0 was mostly halted.</seg></tuv>
      <tuv xml:lang="es"><seg>En un esfuerzo para cooperar y empezar a construir sobre la base de PHP / FI existente, Andi, Rasmus y Zeev decidieron cooperar y anunciar PHP 3.0 como el sucesor oficial de PHP / FI 2.0, interrumpiéndose en su mayor parte el desarrollo de PHP / FI 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the biggest strengths of PHP 3.0 was its strong extensibility features.</seg></tuv>
      <tuv xml:lang="es"><seg>Una de las mejores características de PHP 3.0 era su gran extensibilidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to providing end users with a solid infrastructure for lots of different databases, protocols and APIs, PHP 3.0 's extensibility features attracted dozens of developers to join in and submit new extension modules.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de proveer a los usuarios finales de una sólida infraestructura para muchísimas bases de datos, protocolos y APIs, las características de extensibilidad de PHP 3.0 atrajeron a docenas de desarrolladores a unirse y enviar nuevos módulos de extensión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguably, this was the key to PHP 3.0 's tremendous success.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin duda, ésta fue la clave del enorme éxito de PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other key features introduced in PHP 3.0 were the object oriented syntax support and the much more powerful and consistent language syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>Otras características clave introducidas en PHP 3.0 fueron el soporte de sintáxis orientado a objetos y una sintáxis de lenguaje mucho más potente y consistente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The whole new language was released under a new name, that removed the implication of limited personal use that the PHP / FI 2.0 name held.</seg></tuv>
      <tuv xml:lang="es"><seg>Todo el nuevo lenguaje fue liberado bajo un nuevo nombre, que borraba la implicación de uso personal limitado que tenía el nombre PHP / FI 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was named plain 'PHP', with the meaning being a recursive acronym - PHP:</seg></tuv>
      <tuv xml:lang="es"><seg>Se llamó 'PHP' a secas, con el significado de ser un acrónimo recursivo - PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By the end of 1998, PHP grew to an install base of tens of thousands of users (estimated) and hundreds of thousands of Web sites reporting it installed.</seg></tuv>
      <tuv xml:lang="es"><seg>A finales de 1998, PHP creció hasta una base de instalación de decenas de millares de usuarios (estimados) y cientos de miles de sitios Web informando de su instalación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At its peak, PHP 3.0 was installed on approximately 10% of the Web servers on the Internet.</seg></tuv>
      <tuv xml:lang="es"><seg>En su apogeo, PHP 3.0 estaba instalado en aproximadamente un 10% de los servidores Web en Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3.0 was officially released in June 1998, after having spent about 9 months in public testing.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP 3.0 se liberó oficialmente en Junio de 1998, después de haber gastado unos 9 meses en pruebas públicas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By the winter of 1998, shortly after PHP 3.0 was officially released, Andi Gutmans and Zeev Suraski had begun working on a rewrite of PHP 's core.</seg></tuv>
      <tuv xml:lang="es"><seg>En el invierno de 1998, poco después del lanzamiento oficial de PHP 3.0, Andi Gutmans y Zeev Suraski comenzaron a trabajar en la reescritura del núcleo de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The design goals were to improve performance of complex applications, and improve the modularity of PHP 's code base.</seg></tuv>
      <tuv xml:lang="es"><seg>Los objetivos de diseño fueron mejorar la ejecución de aplicaciones complejas, y mejorar la modularidad del código base de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Such applications were made possible by PHP 3.0 's new features and support for a wide variety of third party databases and APIs, but PHP 3.0 was not designed to handle such complex applications efficiently.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas aplicaciones se hicieron posibles por las nuevas características de PHP 3.0 y el apoyo de una gran variedad de bases de datos y APIs de terceros, pero PHP 3.0 no fue diseñado para el mantenimiento tan complejo de aplicaciones eficientemente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The new engine, dubbed 'Zend Engine' (comprised of their first names, Zeev and Andi), met these design goals successfully, and was first introduced in mid 1999.</seg></tuv>
      <tuv xml:lang="es"><seg>El nuevo motor, apodado 'Motor Zend' (comprimido de sus apellidos, Zeev y Andi), alcanzó estos objetivos de diseño satisfactoriamente, y se introdujo por primera vez a mediados de 1999.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4.0, based on this engine, and coupled with a wide range of additional new features, was officially released in May 2000, almost two years after its predecessor, PHP 3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP 4.0, basado en este motor, y acoplado con un gran rango de nuevas características adicionales, fue oficialmente liberado en Mayo de 2000, casi dos años después que su predecesor, PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 is currently the latest released version of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de la mejora de ejecución de esta versión, PHP 4.0 incluía otras características clave como el soporte para la mayoría de los servidores Web, sesiones HTTP, buffers de salida, formas más seguras de controlar las entradas de usuario y muchas nuevas construcciones de lenguaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Work has already begun on modifying and improving the Zend Engine to integrate the features which were designed for PHP 5.0.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP 4 es actualmente la última versión liberada de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Today, PHP is being used by hundreds of thousands of developers (estimated), and several million sites report as having it installed, which accounts for over 20% of the domains on the Internet.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya se está trabajando en modificar y mejorar el motor Zend para integrar las características que se diseñarían para PHP 5.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The future of PHP is mainly driven by it 's core, the Zend Engine.</seg></tuv>
      <tuv xml:lang="es"><seg>Hoy, se estima que PHP es usado por cientos de miles de programadores y muchos millones de sitios informan que lo tienen instalado, sumando más del 20% de los dominios en Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get more information on this engine, see it 's webpage.</seg></tuv>
      <tuv xml:lang="es"><seg>El equipo de desarrollo de PHP incluye docenas de programadores, así como otras docenas de personas trabajando en proyectos relacionados con PHP como PEAR y el proyecto de documentación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendixes</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndices</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>History of PHP related projects</seg></tuv>
      <tuv xml:lang="es"><seg>Historia de los proyectos relacionados con PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix A.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice A.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As PHP grew, it began to be recognized as a world-wide popular development platform.</seg></tuv>
      <tuv xml:lang="es"><seg>Según crecía PHP, empezo a ser reconocido como una popular plataforma de desarrollo web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the most interesting ways of seeing this trend was by observing the books about PHP that came out throughout the years.</seg></tuv>
      <tuv xml:lang="es"><seg>Una de las más interesantes formas de ver esta tendencia era observando los libros sobre PHP que han ido llegando a lo largo de los años.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next month followed a German book authored by Egon Schmid, Christian Cartus and Richard Blume.</seg></tuv>
      <tuv xml:lang="es"><seg>Por lo que nosotros sabemos, el primer libro dedicado a PHP fue 'php - dynamische webauftritte professionell realisieren' - un libro alemán publicado en 1999, siendo los autores Egon Schmid, Christian Cartus y Richard Blume.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first book in English about PHP was published shortly afterwards, and was' Core PHP Programming 'by Leon Atkinson.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer libro en inglés sobre PHP se publicó poco después, y fue 'Core PHP Programming' de Leon Atkinson.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both of these books covered PHP 3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Los dos libros cubrían PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are over 40 books in English, 50 books in German, and over 20 books in French!</seg></tuv>
      <tuv xml:lang="es"><seg>Mientras estos dos libros fueron los primeros de su tipo - fueron seguidos por un gran número de libros de una multitud de autores y editores. ¡Existen más 40 libros en inglés, 50 libros en alemán, y más de 20 libros en francés!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition, you can find books about PHP in many other languages, including Spanish, Korean, Japanese and Hebrew.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, se pueden encontrar libros sobre PHP en la mayoría de las demás lenguas, incluyendo español, coreano, japonés y hebreo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Clearly, this large number of books, written by different authors, published by many publishers, and their availability in so many languages - are a strong testimony for PHP 's world-wide success.</seg></tuv>
      <tuv xml:lang="es"><seg>Evidentemente, este gran número de libros, escritos por diferentes autores, publicados por muchos editores, y su disponibilidad en tantas lenguas - son un fuerte testimonio del éxito mundial de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Publications about PHP</seg></tuv>
      <tuv xml:lang="es"><seg>Publicaciones sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To the best of our knowledge, the first article about PHP in a hard-copy magazine was published in the Czech mutation of Computerworld in the spring of 1998, and covered PHP 3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Por lo que sabemos, el primer artículo sobre PHP en una revista impresa se publicó en French Informatiques Magazines, hacia finales de 1998, y cubría PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As with books, this was the first in a series of many articles published about PHP in various prominent magazines.</seg></tuv>
      <tuv xml:lang="es"><seg>Como con los libros, fue el primero en una serie de muchos artículos publicados sobre PHP en varias revistas importantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Articles about PHP appeared in Dr.</seg></tuv>
      <tuv xml:lang="es"><seg>Artículos sobre PHP han aparecido en Dr.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dobbs, Linux Enterprise, Linux Magazine and many more.</seg></tuv>
      <tuv xml:lang="es"><seg>Dobbs, Linux Enterprise, Linux Magazine y muchas otras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Articles about migrating ASP-based applications to PHP under Windows even appear on Microsoft 's very own MSDN!</seg></tuv>
      <tuv xml:lang="es"><seg>Artículos sobre migración de aplicaciones basadas en PHP bajo Windows ¡han aparecido incluso en el MSDN de Microsoft!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Books about PHP</seg></tuv>
      <tuv xml:lang="es"><seg>Libros sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PEAR, the PHP Extension and Application Repository (originally, PHP Extension and Add-on Repository) is PHP's version of foundation classes, and may grow in the future to be one of the key ways to distribute both PHP and C-based PHP extensions among developers.</seg></tuv>
      <tuv xml:lang="es"><seg>PEAR, el PHP Extension and Application Repository (originalmente, PHP Extension and Add-on Repository) es la versión de clases de creación de PHP, y puede crecer en el futuro para ser una de las vías clave para distribuir tanto PHP como extensiones PHP basados en C entre desarrolladores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PEAR was born in discussions held in the PHP Developers' Meeting (PDM) held in January 2000 in Tel Aviv.</seg></tuv>
      <tuv xml:lang="es"><seg>PEAR nació de las discusiones mantenidas en el PHP Developers' Meeting (PDM) transcurrido en Enero de 2000 en Tel Aviv.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was created by Stig S.</seg></tuv>
      <tuv xml:lang="es"><seg>Fue creado por Stig S.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bakken, and is dedicated to his first-born daughter, Malin Bakken.</seg></tuv>
      <tuv xml:lang="es"><seg>Bakken, y lo dedicó a su primogénita, Malin Bakken.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since early 2000, PEAR has grown to be a big, significant project with a large number of developers working on implementing common, reusable functionality for the benefit of the entire PHP community.</seg></tuv>
      <tuv xml:lang="es"><seg>Hasta principios de 2000, PEAR fue creciendo hasta ser un gran y significativo proyecto con un gran número de programadores trabajando en la implementación común, funcionalidad reutilizable para el beneficio de toda la comunidad PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PEAR today includes a wide variety of infrastructure foundation classes for database access, content caching, mathematical calculations, eCommerce and much more.</seg></tuv>
      <tuv xml:lang="es"><seg>PEAR hoy incluye una gran variedad de clases de infraestructura para acceso a bases de datos, caché de contenido, cálculos matemáticos, comercio electrónico y mucho más.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP Quality Assurance Initiative was set up in the summer of 2000 in response to criticism that PHP releases were not being tested well enough for production environments.</seg></tuv>
      <tuv xml:lang="es"><seg>La Iniciativa para la Garantía de Calidad de PHP se configuró en el verano de 2000 en respuesta a los que criticaban que las versiones de PHP se liberaban sin que fueran comprobadas suficientemente para entornos de producción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The team now consists of a core group of developers with a good understanding of the PHP code base.</seg></tuv>
      <tuv xml:lang="es"><seg>El equipo ahora consiste en un grupo central de desarrolladores con un buen entendimiento del código base de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These developers spend a lot of their time localizing and fixing bugs within PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos desarrolladores gastan mucho tiempo localizando y solucionando problemas con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition there are many other team members who test and provide feedback on these fixes using a wide variety of platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, hay muchos miembros de otros equipos que testean y prueban estas soluciones usando una gran variedad de plataformas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP-GTK is the PHP solution for writing client side GUI applications.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP-GTK es la solución PHP para escribir las aplicaciones GUI del lado del cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Andrei Zmievski remembers the planing and creation process of PHP-GTK:</seg></tuv>
      <tuv xml:lang="es"><seg>Andrei Zmievski recuerda la planificación y la creación del proceso de PHP-GTK:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GUI programming has always been of my interests, and I found that Gtk + is a very nice toolkit, except that programming with it in C is somewhat tedious.</seg></tuv>
      <tuv xml:lang="es"><seg>Programar GUI siempre ha estado entre mis intereses, y he encontrado que Gtk + es una herramienta muy buena, salvo que programar con ella en C es algo tedioso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After witnessing PyGtk and GTK-Perl implementations, I decided to see if PHP could be made to interface with Gtk+, even minimally.</seg></tuv>
      <tuv xml:lang="es"><seg>Tras presenciar las implementaciones de PyGtk y GTK-Perl, decidí ver si PHP se podría hacer con la interfaz Gtk+, incluso mínimamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting in August of 2000, I began to have a bit more free time so that is when I started experimenting.</seg></tuv>
      <tuv xml:lang="es"><seg>En Agosto de 2000 empecé a tener más tiempo libre, con lo que comencé a experimentar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>My main guideline was the PyGtk implementation as it was fairly feature complete and had a nice object-oriented interface.</seg></tuv>
      <tuv xml:lang="es"><seg>Mi principal guía fue la implementación PyGtk con características completas bastante buenas y con un buen interfaz orientado a objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>James Henstridge, the author of PyGtk, provided very helpful advice during those initial stages.</seg></tuv>
      <tuv xml:lang="es"><seg>James Henstridge, el autor de PyGtk, proveyó mucha ayuda adicional durante esos estados iniciales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hand-writing the interfaces to all the Gtk + functions was out of the question, so I seized upon the idea of code-generator, similar to how PyGtk did it.</seg></tuv>
      <tuv xml:lang="es"><seg>Escribir las interfaces de todas las funciones Gtk + estaba fuera de cuestión, por lo que mantuve la idea de generador de código, similar a cómo PyGtk lo hizo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The code generator is a PHP program that reads a set of .defs file containing the Gtk + classes, constants, and methods information and generates C code that interfaces PHP with them.</seg></tuv>
      <tuv xml:lang="es"><seg>El generador de código es un programa PHP que lee un conjunto de ficheros .defs que contienen las clases Gtk+, constantes e información de métodos y genera código C que interactúa PHP con ellos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What cannot be generated automatically can be written by hand in .overrides file.</seg></tuv>
      <tuv xml:lang="es"><seg>Lo que no se puede generar automáticamente puede escribirse a mano en ficheros .overrides.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Working on the code generator and the infrastructure took some time, because I could spend little time on PHP-GTK during the fall of 2000.</seg></tuv>
      <tuv xml:lang="es"><seg>Trabajar en el generador de código y la infraestructura llevó algo de tiempo, porque pude dedicar poco tiempo a PHP-GTK durante el otoño de 2000.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After I showed PHP-GTK to Frank Kromann, he got interested and started helping me out with code generator work and Win32 implementation.</seg></tuv>
      <tuv xml:lang="es"><seg>Después mostré PHP-GTK a Frank Kromann, que se interesó y empezó a ayudarme con el trabajo del generador de código y con la implementación para Win32.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When we wrote the first Hello World program and fired it up, it was extremely exciting.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando escribimos el primer programa Hola Mundo y funcionó, fue extremadamente excitante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It took a couple more months to get the project to a presentable condition and the initial version was released on March 1, 2001.</seg></tuv>
      <tuv xml:lang="es"><seg>Llevó un par de meses más llevar el proyecto a una condición presentable y la versión inicial se liberó el 1 de Marzo de 2001.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The story promptly hit SlashDot.</seg></tuv>
      <tuv xml:lang="es"><seg>La historia rápidamente llegó a SlashDot.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sensing that PHP-GTK might be extensive, I set up separate mailing lists and CVS repositories for it, as well as the gtk.php.net website with the help of Colin Viebrock.</seg></tuv>
      <tuv xml:lang="es"><seg>Sintiendo que PHP-GTK podría extenderse, configuré listas de correo separadas y repositorios CVS para ello, así como el sitio web gtk.php.net con la ayuda de Colin Viebrock.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The documentation would also need to be done and James Moore came in to help with that.</seg></tuv>
      <tuv xml:lang="es"><seg>La documentación también tuvo que hacerse y James Moore llegó para ayudar en esto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since its release PHP-GTK has been gaining popularity.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde su lanzamiento PHP-GTK fue ganando popularidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We have our own documentation team, the manual keeps improving, people start writing extensions for PHP-GTK, and more and more exciting applications with it.</seg></tuv>
      <tuv xml:lang="es"><seg>Tenemos nuestro propio equipo de documentación, el manual sigue mejorando, la gente ha comenzado a escribir extensiones para PHP-GTK, y con ello más y mejores aplicaciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>27-01-2003</seg></tuv>
      <tuv xml:lang="es"><seg>Víctor Fernández</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Copyright © 1997, 1998, 1999, 2000, 2001, 2002, 2003 the PHP Documentation Group</seg></tuv>
      <tuv xml:lang="es"><seg>Duplicating Variable Contents:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="es"><seg>Materia que falta</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Preface</seg></tuv>
      <tuv xml:lang="es"><seg>Prefacio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While setting up the server and PHP on your own, you have two choices for the method of connecting PHP to the server.</seg></tuv>
      <tuv xml:lang="es"><seg>El código fuente y las distribuciones binarias para algunas plataformas (incluído Windows) se pueden encontrar en http: / /www.php.net /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unix / HP-UX installs</seg></tuv>
      <tuv xml:lang="es"><seg>Instalación en sistemas UNIX</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP (recursive acronym for "PHP:</seg></tuv>
      <tuv xml:lang="es"><seg>Qué se puede hacer con PHP?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hypertext Preprocessor") is a widely-used Open Source general-purpose scripting language that is especially suited for Web development and can be embedded into HTML.</seg></tuv>
      <tuv xml:lang="es"><seg>Hypertext Preprocessor") es un lenguaje "open source "interpretado de alto nivel embebido en páginas HTML y ejecutado en el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple answer, but what does that mean?</seg></tuv>
      <tuv xml:lang="es"><seg>Una respuesta corta y concisa, pero que significa realmente?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example:</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo nos aclarará las cosas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An introductory example</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo introductorio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice how this is different from a script written in other languages like Perl or C - - instead of writing a program with lots of commands to output HTML, you write an HTML script with some embedded code to do something (in this case, output some text).</seg></tuv>
      <tuv xml:lang="es"><seg>Podemos ver que no es lo mismo que un script escrito en otro lenguaje de programación como Perl o C - - En vez de escribir un programa con muchos comandos para crear una salida en HTML, escribimos el código HTML con cierto código PHP embebido (introducido) en el mismo, que producirá cierta salida (en nuestro ejemplo, producir un texto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP code is enclosed in special start and end tags that allow you to jump into and out of "PHP mode".</seg></tuv>
      <tuv xml:lang="es"><seg>El código PHP se incluye entre etiquetas especiales de comienzo y final que nos permitirán entrar y salir del modo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What distinguishes PHP from something like client-side JavaScript is that the code is executed on the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Lo que distingue a PHP de la tecnología Javascript, la cual se ejecuta en la máquina cliente, es que el código PHP es ejecutado en el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can even configure your web server to process all your HTML files with PHP, and then there 's really no way that users can tell what you have up your sleeve.</seg></tuv>
      <tuv xml:lang="es"><seg>El servidor web puede ser incluso configurado para que procese todos los ficheros HTML con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The best things in using PHP are that it is extremely simple for a newcomer, but offers many advanced features for a professional programmer.</seg></tuv>
      <tuv xml:lang="es"><seg>Lo mejor de usar PHP es que es extremadamente simple para el principiante, pero a su vez, ofrece muchas caracteristicas avanzadas para los programadores profesionales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can jump in, in a short time, and start writing simple scripts in a few hours.</seg></tuv>
      <tuv xml:lang="es"><seg>No tengais miedo de leer la larga lista de caracteristicas de PHP, en poco tiempo podreis empezar a escribir vuestros primeros scripts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although PHP 's development is focused on server-side scripting, you can do much more with it.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque el desarrollo de PHP está concentrado en la programación de scripts en la parte del servidor, se puede utilizar para muchas otras cosas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read on, and see more in the What can PHP do? section.</seg></tuv>
      <tuv xml:lang="es"><seg>Sigue leyendo y descubre más sobre PHP en la sección Qué se puede hacer con PHP?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getting Started</seg></tuv>
      <tuv xml:lang="es"><seg>Conceptos Básicos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What can PHP do?</seg></tuv>
      <tuv xml:lang="es"><seg>Qué se puede hacer con PHP?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is mainly focused on server-side scripting, so you can do anything any other CGI program can do, such as collect form data, generate dynamic page content, or send and receive cookies.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP puede hacer cualquier cosa que se pueda hacer con un script CGI, como procesar la información de formularios, generar páginas con contenidos dinámicos, o mandar y recibir cookies.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But PHP can do much more.</seg></tuv>
      <tuv xml:lang="es"><seg>Y esto no es todo, se puede hacer mucho más.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are three main fields where PHP scripts are used.</seg></tuv>
      <tuv xml:lang="es"><seg>Existen tres campos en los que scripts escritos en PHP son usados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Server-side scripting.</seg></tuv>
      <tuv xml:lang="es"><seg>Scripts en la parte del servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the most traditional and main target field for PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es el campo más tradicional y el principal campo de trabajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need three things to make this work.</seg></tuv>
      <tuv xml:lang="es"><seg>Se necesitan tres cosas para que esto funcione.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP parser (CGI or server module), a webserver and a web browser.</seg></tuv>
      <tuv xml:lang="es"><seg>El analizador PHP (CGI ó módulo), un servidor web y un navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need to run the webserver, with a connected PHP installation.</seg></tuv>
      <tuv xml:lang="es"><seg>Se necesita correr el servidor web con PHP instalado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can access the PHP program output with a web browser, viewing the PHP page through the server.</seg></tuv>
      <tuv xml:lang="es"><seg>El resultado del programa PHP se puede obtener a través del navegador, conectando con el servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the installation instructions section for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Consultar la sección Instrucciones de instalación para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Command line scripting.</seg></tuv>
      <tuv xml:lang="es"><seg>Scripts en linea de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can make a PHP script to run it without any server or browser.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis crear un script PHP y correrlo sin ningún servidor web ó navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You only need the PHP parser to use it this way.</seg></tuv>
      <tuv xml:lang="es"><seg>Solamente necesitais el parseador PHP para usarlo de esta manera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of usage is ideal for scripts regularly executed using cron (on *nix or Linux) or Task Scheduler (on Windows).</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de uso es ideal para scripts ejecutados regularmente desde cron (en *nix ó Linux) ó el Planificador de tareas (en Windows).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These scripts can also be used for simple text processing tasks.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos scripts tambien pueden ser usados para tareas simples de procesado de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the section about Command line usage of PHP for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Consultar la sección Usos de PHP en la linea de comandos para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writing client-side GUI applications.</seg></tuv>
      <tuv xml:lang="es"><seg>Escribir aplicaciones gráficas clientes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is probably not the very best language to write windowing applications, but if you know PHP very well, and would like to use some advanced PHP features in your client-side applications you can also use PHP-GTK to write such programs.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP no es probablemente el mejor lenguaje para escribir aplicaciones gráficas, pero si sabeis bien PHP, y os gustaria utilizar algunas características avanzadas en programas clientes, podeis utilizar PHP-GTK para escribir dichos programas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You also have the ability to write cross-platform applications this way.</seg></tuv>
      <tuv xml:lang="es"><seg>Es tambien posible escribir aplicaciones independientes de una plataforma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP-GTK is an extension to PHP, not available in the main distribution.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP-GTK es una extensión de PHP, no disponible en la distribución principal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are interested in PHP-GTK, visit it 's own website.</seg></tuv>
      <tuv xml:lang="es"><seg>Si te interesa PHP-GTK, puedes visitar las páginas web del projecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has also support for most of the web servers today.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP puede ser utilizado en cualquiera de los principales sistemas operativos del mercado, incluyendo Linux, muchas variantes Unix (incluido HP-UX, Solaris y OpenBSD), Microsoft Windows, Mac OS X, RISC OS y probablemente alguno más.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This includes Apache, Microsoft Internet Information Server, Personal Web Server, Netscape and iPlanet servers, Oreilly Website Pro server, Caudium, Xitami, OmniHTTPd, and many others.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta la mayoría de servidores web de hoy en día, incluyendo Apache, Microsoft Internet Information Server, Personal Web Server, Netscape y iPlanet, Oreilly Website Pro server, Caudium, Xitami, OmniHTTPd y muchos otros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the majority of the servers PHP has a module, for the others supporting the CGI standard, PHP can work as a CGI processor.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP tiene módulos disponibles para la mayoría de los servidores, para aquellos otros que soporten el estándar CGI, PHP puede usarse como procesador CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So with PHP, you have the freedom of choosing an operating system and a web server.</seg></tuv>
      <tuv xml:lang="es"><seg>Asi que, con PHP teneis la libertad de escoger el sistema operativo y el servidor de vuestro gusto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Furthermore, you also have the choice of using procedural programming or object oriented programming, or a mixture of them.</seg></tuv>
      <tuv xml:lang="es"><seg>Tambien teneis la posibilidad de usar programación de procediminetos ó programación orientada a objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although not every standard OOP feature is realized in the current version of PHP, many code libraries and large applications (including the PEAR library) are written only using OOP code.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque no todas la características estándares de la programación orientada a objetos están implementadas en la versión actual de PHP, muchas librerías y aplicaciones grandes (incluyendo la libreria PEAR) están escritas íntegramente usando programación orientada a objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP you are not limited to output HTML.</seg></tuv>
      <tuv xml:lang="es"><seg>Con PHP no estais limitados a resultados en HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP' s abilities includes outputting images, PDF files and even Flash movies (using libswf and Ming) generated on the fly.</seg></tuv>
      <tuv xml:lang="es"><seg>Entre las habilidades de PHP se incluyen, creación de imágenes, ficheros PDF y películas Flash (usando libswf y Ming) sobre la marcha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also output easily any text, such as XHTML and any other XML file.</seg></tuv>
      <tuv xml:lang="es"><seg>Tambien podeis presentar otros resultados, como XHTM y ficheros XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP can autogenerate these files, and save them in the file system, instead of printing it out, forming a server-side cache for your dynamic content.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP puede autogenerar estos ficheros y grabarlos en el sistema de ficheros en vez de presentarlos en la pantalla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the strongest and most significant feature in PHP is its support for a wide range of databases.</seg></tuv>
      <tuv xml:lang="es"><seg>Quizas la característica más potente y destacable de PHP es su soporte para una gran cantidad de bases de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writing a database-enabled web page is incredibly simple.</seg></tuv>
      <tuv xml:lang="es"><seg>Escribir un interfaz via web para una base de datos es una tarea simple con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following databases are currently supported:</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes bases de datos están soportadas actualmente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also has support for talking to other services using protocols such as LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (on Windows) and countless others.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP tambien tiene soporte para comunicarse con otros servicios usando protocolos tales como LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (en Windows) y muchos otros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also open raw network sockets and interact using any other protocol.</seg></tuv>
      <tuv xml:lang="es"><seg>Tambien se pueden crear raw sockets.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has support for the WDDX complex data exchange between virtually all Web programming languages.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta WDDX para intercambio de datos entre lenguajes de programación en web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use our CORBA extension to access remote objects.</seg></tuv>
      <tuv xml:lang="es"><seg>Y hablando de interconexión, PHP puede utilizar objetos Java de forma transparente como objetos PHP Y la extensión de CORBA puede ser utilizada para acceder a objetos remotos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has extremely useful text processing features, from the POSIX Extended or Perl regular expressions to parsing XML documents.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP tiene unas características muy útiles para el proceso de texto, desde expresiones regulares POSIX Extended ó Perl hasta parseador de documentos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For parsing and accessing XML documents, we support the SAX and DOM standards.</seg></tuv>
      <tuv xml:lang="es"><seg>Para parsear y acceder documentos XML, soportamos los estandares SAX y DOM.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use our XSLT extension to transform XML documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis utilizar la extensión XSLT para transformar documentos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While using PHP in the ecommerce field, you 'll find the Cybercash payment, CyberMUT, VeriSign Payflow Pro and CCVS functions useful for your online payment programs.</seg></tuv>
      <tuv xml:lang="es"><seg>Si usais PHP en el campo del comercio electrónico, encontrareis muy útiles las funciones Cybercash, CyberMUT, VeriSign Payflow Pro y CCVS para vuestros programas de pago.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At last but not least, we have many other interesting extensions, the mnoGoSearch search engine functions, the IRC Gateway functions, many compression utilities (gzip, bz2), calendar conversion, translation...</seg></tuv>
      <tuv xml:lang="es"><seg>Para terminar, tenemos muchas otras extensiones muy interesantes, las funciones del motor de búsquedas mnoGoSearch, funciones para pasarelas de IRC, utilidades de compresión (gzip, bz2),, conversión de calendarios, traducción.....</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As you can see this page is not enough to list all the features and benefits PHP can offer.</seg></tuv>
      <tuv xml:lang="es"><seg>Como podeis ver esta página no es suficiente para enumerar todas las características y beneficios que PHP ofrece.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read on in the sections about installing PHP, and see the function reference part for explanation of the extensions mentioned here.</seg></tuv>
      <tuv xml:lang="es"><seg>Consultar las secciones Instalando PHP y Referencia de las funciones para una explicación de las extensiones mencionadas aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>References Explained</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keeping Current</seg></tuv>
      <tuv xml:lang="es"><seg>Modulo Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Síntaxis básica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 6.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports' C', 'C++ 'and Unix shell-style comments.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta el estilo de comentarios de 'C', 'C++' y de la interfaz de comandos de Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The "one-line" comment styles actually only comment to the end of the line or the current block of PHP code, whichever comes first.</seg></tuv>
      <tuv xml:lang="es"><seg>Los estilos de comentarios de una linea actualmente sólo comentan hasta el final de la linea o el bloque actual de código PHP, lo primero que ocurra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should be careful not to nest 'C' style comments, which can happen when commenting out large blocks.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que tener cuidado con no anidar comentarios de estilo 'C', algo que puede ocurrir al comentar bloques largos de código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The one-line comment styles actually only comment to the end of the line or the current block of PHP code, whichever comes first.</seg></tuv>
      <tuv xml:lang="es"><seg>Los estilos de comentarios de una linea actualmente sólo comentan hasta el final de la linea o del bloque actual de código PHP, lo primero que ocurra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>WILL be printed:? skips out of the PHP mode and returns to HTML mode, and / / cannot influence that.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto implica que el código HTML tras / /? seráa impreso:? sale del modo PHP, retornando al modo HTML, el comentario / / no le influye.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instruction separation</seg></tuv>
      <tuv xml:lang="es"><seg>Separación de instrucciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When PHP parses a file, it simply passes the text of the file through until it encounters one of the special tags which tell it to start interpreting the text as PHP code.</seg></tuv>
      <tuv xml:lang="es"><seg>Para interpretar un archivo, php símplemente interpreta el texto del archivo hasta que encuentra uno de los carácteres especiales que delimitan el inicio de código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parser then executes all the code it finds, up until it runs into a PHP closing tag, which tells the parser to just start passing the text through again.</seg></tuv>
      <tuv xml:lang="es"><seg>El intérprete ejecuta entonces todo el código que encuentra, hasta que encuentra una etiqueta de fin de código, que le dice al intérprete que siga ignorando el código siguiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the mechanism which allows you to embed PHP code inside HTML: everything outside the PHP tags is left utterly alone, while everything inside is parsed as code.</seg></tuv>
      <tuv xml:lang="es"><seg>Este mecanismo permite embeber código PHP dentro de HTML: todo lo que está fuera de las etiquetas PHP se deja tal como está, mientras que el resto se interpreta como código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are four sets of tags which can be used to denote blocks of PHP code.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay cuatro conjuntos de etiquetas que pueden ser usadas para denotar bloques de código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While the short-form tags and ASP-style tags may be convenient, they are not as portable as the longer versions.</seg></tuv>
      <tuv xml:lang="es"><seg>Mientras que el formato corto de etiquetas (short-form tags) y el estilo ASP (ASP-style tags) pueden ser convenientes, no son portables como la versión de formato largo de etiquetas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, if you intend to embed PHP code in XML or XHTML, you will need to use the ?php...? form to conform to the XML.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, si se pretende embeber código PHP en XML o XHTML, será obligatorio el uso del formato ?php...? para la compatibilidad con XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The tags supported by PHP are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las etiquetas soportadas por PHP son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 6-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ways of escaping from HTML</seg></tuv>
      <tuv xml:lang="es"><seg>Formas de escapar de HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1. ?php echo( "if you want to serve XHTML or XML documents, do like this\n");?</seg></tuv>
      <tuv xml:lang="es"><seg>1. ?php echo( "si quieres servir documentos XHTML o XML, haz como aqu iacute;\n");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2.? echo ("this is the simplest, an SGML processing instruction\n");? ?= expression?</seg></tuv>
      <tuv xml:lang="es"><seg>2.? echo ("esta es la m aacute;s simple, una instrucci oacute;n de procesado SGML \n");? ?= expression?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a shortcut for "? echo expression?" 3. script language="php "echo ("some editors (like FrontPage) don't like processing instructions"); / script 4.% echo ("You may optionally use ASP-style tags");% %= $variable; # This is a shortcut for"% echo... "%</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es una abreviatura de "? echo expression?" 3. script language="php "echo ("muchos editores (como FrontPage) no aceptan instrucciones de procesado"); / script 4.% echo ("Opcionalmente, puedes usar las etiquetas ASP");% %= $variable; # Esto es una abreviatura de"% echo... "%</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first way, ?php...?, is the preferred method, as it allows the use of PHP in XML-conformant code such as XHTML.</seg></tuv>
      <tuv xml:lang="es"><seg>El método primero, ?php...?, es el más conveniente, ya que permite el uso de PHP en código XML como XHTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second way is not available always.</seg></tuv>
      <tuv xml:lang="es"><seg>El método segundo no siempre está disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be done via the short_tags() function (PHP 3 only), by enabling the short_open_tag configuration setting in the PHP config file, or by compiling PHP with the --enable-short-tags option to configure.</seg></tuv>
      <tuv xml:lang="es"><seg>El formato corto de etiquetas está disponible con la función short_tags() (sólo PHP 3), activando el parámetro del fichero de configuración de PHP short_open_tag, o compilando PHP con la opción --enable-short-tags del comando configure.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Even if it is enabled by default in php.ini-dist, use of short tags are discouraged.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque esté activa por defecto en php.ini-dist, se desaconseja el uso del formato de etiquetas corto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fourth way is only available if ASP-style tags have been enabled using the asp_tags configuration setting.</seg></tuv>
      <tuv xml:lang="es"><seg>El método cuarto sólo está disponible si se han activado las etiquetas ASP en el fichero de configuración: asp_tags.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for ASP-style tags was added in 3.0.4.</seg></tuv>
      <tuv xml:lang="es"><seg>El soporte de etiquetas ASP se añadió en la versión 3.0.4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using short tags should be avoided when developing applications or libraries that are meant for redistribution, or deployment on PHP servers which are not under your control, because short tags may not be supported on the target server.</seg></tuv>
      <tuv xml:lang="es"><seg>No se debe usar el formato corto de etiquetas cuando se desarrollen aplicaciones o librerías con intención de redistribuirlas, o cuando se desarrolle para servidores que no están bajo nuestro control, porque puede ser que el formato corto de etiquetas no esté soportado en el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For portable, redistributable code, be sure not to use short tags.</seg></tuv>
      <tuv xml:lang="es"><seg>Para generar código portable y redistribuíble, asegúrate de no usar el formato corto de etiquetas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The closing tag for the block will include the immediately trailing newline if one is present.</seg></tuv>
      <tuv xml:lang="es"><seg>La etiqueta de fin de bloque incluirá tras ella la siguiente línea si hay alguna presente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, the closing tag automatically implies a semicolon; you do not need to have a semicolon terminating the last line of a PHP block.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, la etiqueta de fin de bloque lleva implícito el punto y coma; no necesitas por lo tanto añadir el punto y coma final de la última línea del bloque PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP allows you to use structures like this:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP permite estructurar bloques como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 6-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Advanced escaping</seg></tuv>
      <tuv xml:lang="es"><seg>Métodos avanzados de escape</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Language Reference</seg></tuv>
      <tuv xml:lang="es"><seg>Referencia del Lenguaje</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instructions are separated the same as in C or Perl - terminate each statement with a semicolon.</seg></tuv>
      <tuv xml:lang="es"><seg>Las separación de instrucciones se hace de la misma manera que en C o Perl - terminando cada declaración con un punto y coma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The closing tag (?) also implies the end of the statement, so the following are equivalent:</seg></tuv>
      <tuv xml:lang="es"><seg>La etiqueta de fin de bloque (?) implica el fin de la declaración, por lo tanto lo siguiente es equivalente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comments</seg></tuv>
      <tuv xml:lang="es"><seg>Comentarios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A constant is a identifier (name) for a simple value.</seg></tuv>
      <tuv xml:lang="es"><seg>Una constante es un identificador para expresar un valor simple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As the name suggests, that value cannot change during the execution of the script (except the magic constants As the name suggests, that value cannot change during the execution of the script (except the magic constants which aren't actually constants).</seg></tuv>
      <tuv xml:lang="es"><seg>Como el nombre sugiere, este valor no puede variar durante la ejecución del script. (Las constantes especiales __FILE__ y __LINE__ son una excepción a esto, ya que actualmente no lo soin).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A constant is case-sensitive by default.</seg></tuv>
      <tuv xml:lang="es"><seg>Una constante es sensible a mayúsculas por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By convention constant identifiers are always uppercase.</seg></tuv>
      <tuv xml:lang="es"><seg>Por convención, los identificadores de constantes suelen declararse en mayúsculas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of a constant follows the same rules as any label in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de una constante sigue las mismas reglas que cualquier etiqueta en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A valid constant name starts with a letter or underscore, followed by any number of letters, numbers, or underscores.</seg></tuv>
      <tuv xml:lang="es"><seg>Un nombre de constante válido empieza con una letra o un caracter de subrayado, seguido por cualquier número de letras, números, o subrayados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As a regular expression, it would be expressed thus: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff ]*</seg></tuv>
      <tuv xml:lang="es"><seg>Se podrían expresar mediante la siguiente expresión regular: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff ]*</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</seg></tuv>
      <tuv xml:lang="es"><seg>Para nuestros propósitos, entenderemos como letra los carácteres a-z, A-Z, y los ASCII del 127 hasta el 255 (0x7f-0xff).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The scope of a constant is global--you can access it anywhere in your script without regard to scope.</seg></tuv>
      <tuv xml:lang="es"><seg>El alcanze de una constante es global, Es decir, es posible acceder a ellas sin preocuparse por el ámbito de alcance.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can define a constant by using the define() -function.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede definir una constante usando la función define().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once a constant is defined, it can never be changed or undefined.</seg></tuv>
      <tuv xml:lang="es"><seg>Una vez definida, no puede ser modificada ni eliminada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only scalar data (boolean, integer, float and string) can be contained in constants.</seg></tuv>
      <tuv xml:lang="es"><seg>Solo se puede definir como constantes valores escalares (boolean, integer, float y string).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can get the value of a constant by simply specifying its name.</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener el valor de una constante solo es necesario especificar su nombre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike with variables, you should not prepend a constant with a $.</seg></tuv>
      <tuv xml:lang="es"><seg>A diferencia de las variables, no se tiene que especificar el prefijo $.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use get_defined_constants() to get a list of all defined constants.</seg></tuv>
      <tuv xml:lang="es"><seg>Tambien se puede utilizar la función constant(), para obtener el valor de una constante, en el caso de que queramos expresarla de forma dinámica Usa la función get_defined_constants() parar obtener una lista de todas las constantes definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants and (global) variables are in a different namespace.</seg></tuv>
      <tuv xml:lang="es"><seg>Las contantes y las variables (globales) se encuentran en un espacio de nombres distinto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This implies that for example TRUE and $TRUE are generally different.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto implica que por ejemplo TRUE y $TRUE son diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use an undefined constant, PHP assumes that you mean the name of the constant itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Si usas una constante todavia no definida, PHP asume que estás refiriéndote al nombre de la constante en si.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A notice will be issued when this happens.</seg></tuv>
      <tuv xml:lang="es"><seg>Se lanzará un aviso si esto sucede.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the defined() -function if you want to know if a constant is set.</seg></tuv>
      <tuv xml:lang="es"><seg>Usa la función defined() para comprobar la existencia de dicha constante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are the differences between constants and variables:</seg></tuv>
      <tuv xml:lang="es"><seg>Estas son las diferencias entre constantes y variables:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants do not have a dollar sign ($) before them;</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes no son precedidas por un símbolo de dolar ($)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may only be defined using the define() function, not by simple assignment;</seg></tuv>
      <tuv xml:lang="es"><seg>Las contantes solo pueden ser definidas usando la función() define, nunca por simple asignación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may be defined and accessed anywhere without regard to variable scoping rules;</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes pueden ser definidas y accedidas sin tener en cuenta las reglas de alcanze del ámbito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may not be redefined or undefined once they have been set; and</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes no pueden ser redefinidas o eliminadas despues de establecerse; y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may only evaluate to scalar values.</seg></tuv>
      <tuv xml:lang="es"><seg>Las constantes solo puede albergar valores escalares</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 9-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 9-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defining Constants</seg></tuv>
      <tuv xml:lang="es"><seg>Definiendo constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables from outside PHP</seg></tuv>
      <tuv xml:lang="es"><seg>Variables externas a PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined constants</seg></tuv>
      <tuv xml:lang="es"><seg>Constantes predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 9.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants</seg></tuv>
      <tuv xml:lang="es"><seg>Constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many of these constants, however, are created by various extensions, and will only be present when those extensions are available, either via dynamic loading or because they have been compiled in.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP ofrece un largo número de constantes predefinidas a cualquier script en ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the value of __LINE__ depends on the line that it 's used on in your script.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchas de estas constantes, sin embargo, son creadas por diferentes extensiones, y solo estarán presentes si dichas extensiones están disponibles, bien por carga dinámica o porque has sido compiladas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A list of predefined constants is available in the section Reserved predefined constants.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede encontrar una lista de constantes predefinidas en la seccion Constantes predefinidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Expressions</seg></tuv>
      <tuv xml:lang="es"><seg>Expresiones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Expressions are the most important building stones of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Las expresiones son la piedra angular de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, almost anything you write is an expression.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP, casi cualquier cosa que escribes es una expresión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The simplest yet most accurate way to define an expression is "anything that has a value".</seg></tuv>
      <tuv xml:lang="es"><seg>La forma más simple y ajustada de definir una expresión es "cualquier cosa que tiene un valor".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most basic forms of expressions are constants and variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Las formas más básicas de expresiones son las constantes y las variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you type "$a = 5", you're assigning '5 'into $a. '5', obviously, has the value 5, or in other words '5' is an expression with the value of 5 (in this case, '5 'is an integer constant).</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando escribes "$a = 5", estás asignando '5 'a $a. '5', obviamente, tiene el valor 5 o, en otras palabras '5' es una expresión con el valor 5 (en este caso, '5 'es una constante entera).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this assignment, you' d expect $a's value to be 5 as well, so if you wrote $b = $a, you'd expect it to behave just as if you wrote $b = 5.</seg></tuv>
      <tuv xml:lang="es"><seg>Después de esta asignación, esperarás que el valor de $a sea 5 también, de manera que si escribes $b = $a, esperas que se comporte igual que si escribieses $b = 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, $a is an expression with the value of 5 as well.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, $a es una expresión también con el valor 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If everything works right, this is exactly what will happen.</seg></tuv>
      <tuv xml:lang="es"><seg>Si todo va bien, eso es exactamente lo que pasará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Slightly more complex examples for expressions are functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones son un ejemplo algo más complejo de expresiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, consider the following function:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, considera la siguiente función:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assuming you' re familiar with the concept of functions (if you're not, take a look at the chapter about functions), you'd assume that typing $c = foo() is essentially just like writing $c = 5, and you're right.</seg></tuv>
      <tuv xml:lang="es"><seg>Suponiendo que estés familiarizado con el concepto de funciones (si no lo estás échale un vistazo al capítulo sobre funciones), asumirás que teclear $c = foo() es esencialmente lo mismo que escribir $c = 5, y has acertado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions are expressions with the value of their return value.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones son expresiones que valen el valor que retornan.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since foo() returns 5, the value of the expression'foo() 'is 5.</seg></tuv>
      <tuv xml:lang="es"><seg>Como foo() devuelve 5, el valor de la expresión 'foo() 'es 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usually functions don 't just return a static value but compute something.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente las funciones no devuelven un valor fijo, sino que suele ser calculado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, values in PHP don' t have to be integers, and very often they aren't.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde luego, los valores en PHP no se limitan a enteros, y lo más normal es que no lo sean.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports three scalar value types: integer values, floating point values and string values (scalar values are values that you can't'break 'into smaller pieces, unlike arrays, for instance).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta tres tipos escalares: enteros, punto flotante y cadenas (los tipos escalares son aquellos cuyos valores no pueden 'dividirse 'en partes menores, no como los arrays, por ejemplo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also supports two composite (non-scalar) types: arrays and objects.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP también soporta dos tipos compuestos (no escalares): arrays y objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of these value types can be assigned into variables or returned from functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede asignar cada uno de estos tipos de valor a variables o bien retornarse de funciones, sin ningún tipo de limitación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So far, users of PHP / FI 2 shouldn 't feel any change.</seg></tuv>
      <tuv xml:lang="es"><seg>Hasta aquí, los usuarios de PHP / FI 2 no deberían haber notado ningún cambio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, PHP takes expressions much further, in the same way many other languages do.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, PHP lleva las expresiones mucho más allá, al igual que otros lenguajes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is an expression-oriented language, in the sense that almost everything is an expression.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP es un lenguaje orientado a expresiones, en el sentido de que casi todo es una expresión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the example we' ve already dealt with, '$a = 5 '.</seg></tuv>
      <tuv xml:lang="es"><seg>Considera el ejemplo anterior '$a = 5'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s easy to see that there are two values involved here, the value of the integer constant '5 ', and the value of $a which is being updated to 5 as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Es sencillo ver que hay dos valores involucrados, el valor de la constante entera '5', y el valor de $a que está siendo actualizado también a 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But the truth is that there' s one additional value involved here, and that's the value of the assignment itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Pero la verdad es que hay un valor adicional implicado aquí, y es el valor de la propia asignación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The assignment itself evaluates to the assigned value, in this case 5.</seg></tuv>
      <tuv xml:lang="es"><seg>La asignación misma se evalúa al valor asignado, en este caso 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In practice, it means that '$a = 5', regardless of what it does, is an expression with the value 5.</seg></tuv>
      <tuv xml:lang="es"><seg>En la práctica, quiere decir que '$a = 5', independientemente de lo que hace, es una expresión con el valor 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, writing something like '$b = ($a = 5)' is like writing '$a = 5; $b = 5; '(a semicolon marks the end of a statement).</seg></tuv>
      <tuv xml:lang="es"><seg>De esta manera, escribir algo como '$b = ($a = 5)' es como escribir '$a = 5; $b = 5; '(un punto y coma marca el final de una instrucción).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since assignments are parsed in a right to left order, you can also write '$b = $a = 5'.</seg></tuv>
      <tuv xml:lang="es"><seg>Como las asignaciones se evalúan de derecha a izquierda, puedes escribir también '$b = $a = 5'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another good example of expression orientation is pre - and post-increment and decrement.</seg></tuv>
      <tuv xml:lang="es"><seg>Otro buen ejemplo de orientación a expresiones es el pre y post incremento y decremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users of PHP / FI 2 and many other languages may be familiar with the notation of variable+ + and variable--.</seg></tuv>
      <tuv xml:lang="es"><seg>Los usuarios de PHP / FI 2 y los de otros muchos lenguajes les sonará la notación variable+ + y variable--.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are increment and decrement operators.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto son las operaciones de incremento y decremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP / FI 2, the statement '$a++' has no value (is not an expression), and thus you can't assign it or use it in any way.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP / FI 2, la instrucción '$a++' no tiene valor (no es una expresión), y no puedes asignarla o usarla de ningún otro modo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP enhances the increment / decrement capabilities by making these expressions as well, like in C.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP mejora las características del incremento / decremento haciéndolos también expresiones, como en C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, like in C, there are two types of increment - pre-increment and post-increment.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP, como en C, hay dos tipos de incremento - pre-incremento y post-incremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both pre-increment and post-increment essentially increment the variable, and the effect on the variable is idential.</seg></tuv>
      <tuv xml:lang="es"><seg>Ambos, en esencia, incrementan la variable y el efecto en la variable es idéntico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The difference is with the value of the increment expression.</seg></tuv>
      <tuv xml:lang="es"><seg>La diferencia radica en el valor de la propia expresion incremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pre-increment, which is written '++$variable', evaluates to the incremented value (PHP increments the variable before reading its value, thus the name'pre-increment').</seg></tuv>
      <tuv xml:lang="es"><seg>El preincremento, escrito '++$variable', se evalúa al valor incrementado (PHP incrementa la variable antes de leer su valor, de ahí el nombre 'preincremento').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Post-increment, which is written '$variable++' evaluates to the original value of $variable, before it was incremented (PHP increments the variable after reading its value, thus the name'post-increment').</seg></tuv>
      <tuv xml:lang="es"><seg>El postincremento, escrito '$variable++', se evalúa al valor original de $variable antes de realizar el incremento (PHP incrementa la variable después de leer su valor, de ahí el nombre 'postincremento').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A very common type of expressions are comparison expressions.</seg></tuv>
      <tuv xml:lang="es"><seg>Un tipo muy corriente de expresiones son las expresiones de comparación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These expressions evaluate to either 0 or 1, meaning FALSE or TRUE (respectively).</seg></tuv>
      <tuv xml:lang="es"><seg>Estas expresiones se evalúan a 0 o 1, significando FALSO (FALSE) o CIERTO (TRUE), respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports (bigger than), = (bigger than or equal to), == (equal), != (not equal), (smaller than) and = (smaller than or equal to).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta (mayor que), = (mayor o igual que), == (igual que), != (distinto), (menor que) y = (menor o igual que).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These expressions are most commonly used inside conditional execution, such as if statements.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas expresiones se usan frecuentemente dentro de la ejecución condicional como la instrucción if.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last example of expressions we 'll deal with here is combined operator-assignment expressions.</seg></tuv>
      <tuv xml:lang="es"><seg>El último tipo de expresiones que trataremos, es la combinación operador-asignación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You already know that if you want to increment $a by 1, you can simply write '$a++' or '++$a '.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya sabes que si quieres incrementar $a en 1, basta con escribir '$a++' o ++$a '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But what if you want to add more than one to it, for instance 3?</seg></tuv>
      <tuv xml:lang="es"><seg>Pero qué pasa si quieres añadir más de 1, por ejemplo 3?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You could write '$a++' multiple times, but this is obviously not a very efficient or comfortable way.</seg></tuv>
      <tuv xml:lang="es"><seg>Podrías escribir '$a++' múltiples veces, pero no es una forma de hacerlo ni eficiente ni cómoda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A much more common practice is to write '$a = $a + 3'. '$a + 3' evaluates to the value of $a plus 3, and is assigned back into $a, which results in incrementing $a by 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Una práctica mucho más corriente es escribir '$a = $a + 3'. '$a + 3' se evalúa al valor de $a más 3, y se asigna de nuevo a $a, lo que resulta en incrementar $a en 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, as in several other languages like C, you can write this in a shorter way, which with time would become clearer and quicker to understand as well.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP, como en otros lenguajes como C, puedes escribir esto de una forma más concisa, que con el tiempo será más clara y también fácil de entender.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding 3 to the current value of $a can be written '$a += 3'.</seg></tuv>
      <tuv xml:lang="es"><seg>Añadir 3 al valor actual de $a se puede escribir como '$a += 3'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means exactly "take the value of $a, add 3 to it, and assign it back into $a".</seg></tuv>
      <tuv xml:lang="es"><seg>Esto quiere decir exactamente "toma el valor de $a, súmale 3, y asígnalo otra vez a $a".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to being shorter and clearer, this also results in faster execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Además de ser más corto y claro, también resulta en una ejecución más rápida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of '$a += 3', like the value of a regular assignment, is the assigned value.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de '$a += 3', como el valor de una asignación normal y corriente, es el valor asignado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice that it is NOT 3, but the combined value of $a plus 3 (this is the value that's assigned into $a).</seg></tuv>
      <tuv xml:lang="es"><seg>Ten en cuenta que NO es 3, sino el valor combinado de $a más 3 (ése es el valor asignado a $a).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any two-place operator can be used in this operator-assignment mode, for example '$a -= 5' (subtract 5 from the value of $a), '$b *= 7 '(multiply the value of $b by 7), etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier operación binaria puede ser usada en forma de operador-asignación, por ejemplo '$a -= 5' (restar 5 del valor de $a), '$b *= 7 '(multiplicar el valor de $b por 5), etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is one more expression that may seem odd if you haven 't seen it in other languages, the ternary conditional operator:</seg></tuv>
      <tuv xml:lang="es"><seg>Hay otra expresión que puede parecer extraña si no la has visto en otros lenguaes, el operador condicional ternario:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example should help you understand pre - and post-increment and expressions in general a bit better:</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente ejemplo te ayudará a comprender un poco mejor el pre y post incremento y las expresiones en general:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function double( $i) {return $i*2;} $b = $a = 5; / * assign the value five into the variable $a and $b * / $c = $a++; / * post-increment, assign original value of $a (5) to $c * / $e = $d = ++$b; / * pre-increment, assign the incremented value of $b (6) to $d and $e * / / * at this point, both $d and $e are equal to 6 * / $f = double($d++); / * assign twice the value of $d emphasis before / emphasis the increment, 2*6 = 12 to $f * / $g = double(++$e); / * assign twice the value of $e emphasis after / emphasis the increment, 2*7 = 14 to $g * / $h = $g += 10; / * first, $g is incremented by 10 and ends with the value of 24. the value of the assignment (24) is then assigned into $h, and $h ends with the value of 24 as well. * /</seg></tuv>
      <tuv xml:lang="es"><seg>function double( $i) {return $i*2;} $b = $a = 5; / * asignar el valor cinco a las variables $a y $b * / $c = $a++; / * postincremento, asignar el valor original de $a (5) a $c * / $e = $d = ++$b; / * preincremento, asignar el valor incrementado de $b (6) a $d y a $e * / / * en este punto, tanto $d como $e son iguales a 6 * / $f = double($d++); / * asignar el doble del valor de $d antes del incremento, 2*6 = 12 a $f * / $g = double(++$e); / * asignar el doble del valor de $e después del incremento, 2*7 = 14 a $g * / $h = $g += 10; / * primero, $g es incrementado en 10 y termina valiendo 24. después el valor de la asignación (24) se asigna a $h, y $h también acaba valiendo 24. * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the beginning of the chapter we said that we 'll be describing the various statement types, and as promised, expressions can be statements.</seg></tuv>
      <tuv xml:lang="es"><seg>Al principio del capítulo hemos dicho que describiríamos los distintos tipos de instrucciones y, como prometimos, las expresiones pueden ser instrucciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, not every expression is a statement.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, no todas las expresiones son instrucciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case, a statement has the form of 'expr' ';' that is, an expression followed by a semicolon.</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso, una instrucción tiene la forma 'expr' ';', es decir, una expresión seguida de un punto y coma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In '$b=$a=5 ;', $a=5 is a valid expression, but it's not a statement by itself. '$b=$a=5;' however is a valid statement.</seg></tuv>
      <tuv xml:lang="es"><seg>Por otro lado '$b=$a=5:' sí es una instrucción válida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One last thing worth mentioning is the truth value of expressions.</seg></tuv>
      <tuv xml:lang="es"><seg>Una última cosa que vale la pena mencionar, es el valor booleano de las expresiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In many events, mainly in conditional execution and loops, you 're not interested in the specific value of the expression, but only care about whether it means TRUE or FALSE.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de verdad de las expresiones en PHP se calcula de forma similar a perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants TRUE and FALSE The constants TRUE and FALSE (case-insensitive) are the two possible boolean values.</seg></tuv>
      <tuv xml:lang="es"><seg>Fíjate en que los valores negativos son distinto de cero y considerados CIERTO (TRUE)!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When necessary, an expression is automatically converted to boolean.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena vacía y la cadena "0" son FALSO (FALSE); todas las demás cadenas son TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the section about type-casting for details about how.</seg></tuv>
      <tuv xml:lang="es"><seg>Con los tipos no escalares (arrays y objetos) - si el valor no contiene elementos se considera FALSO (FALSE), en caso contrario se considera CIERTO (TRUE).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides a full and powerful implementation of expressions, and documenting it entirely goes beyond the scope of this manual.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP te brinda una completa y potente implementación de expresiones, y documentarla enteramente está más allá del objetivo de ete manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above examples should give you a good idea about what expressions are and how you can construct useful expressions.</seg></tuv>
      <tuv xml:lang="es"><seg>Los ejemplos anteriores, deberían darte una buena idea de qué son las expresiones y cómo construir expresiones útiles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Throughout the rest of this manual we 'll write expr to indicate any valid PHP expression.</seg></tuv>
      <tuv xml:lang="es"><seg>A lo largo del resto del manual, escribiremos expr para indicar una expresión PHP válida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A class is a collection of variables and functions working with these variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Una clase es una colección de variables y de funciones que acceden a esas variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A class is defined using the following syntax:</seg></tuv>
      <tuv xml:lang="es"><seg>Una clase se define con la siguiente sintaxis:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class Cart {var $items; / / Items in our shopping cart / / Add $num articles of $artnr to the cart function add_item ($artnr, $num) {$this - items[$artnr] += $num;} / / Take $num articles of $artnr out of the cart function remove_item ($artnr, $num) {if ($this - items[$artnr] $num) {$this - items[$artnr] -= $num; return true;} else {return false;}}}?</seg></tuv>
      <tuv xml:lang="es"><seg>?php class Cart {var $items; / / Items en nuestro carro de la compra / / Añadir $num artículos de tipo $artnr al carro function add_item ($artnr, $num) {$this - items[$artnr] += $num;} / / Sacar $num artículos del tipo $artnr del carro function remove_item ($artnr, $num) {if ($this - items[$artnr] $num) {$this - items[$artnr] -= $num; return true;} else {return false;}}}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Caution</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo define una clase llamada Cart que consiste en un array asociativo de artículos en el carro y dos funciones para meter y sacar ítems del carro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name stdClass is used interally by Zend and is reserved.</seg></tuv>
      <tuv xml:lang="es"><seg>Las clases son tipos, es decir, son plantillas para variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function names __sleep and __wakeup The function names __sleep and __wakeup are magical in PHP classes.</seg></tuv>
      <tuv xml:lang="es"><seg>Tienes que crear una variable del tipo deseado con el operador new.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot have functions with these names in any of your classes unless you want the magic functionality associated with them.</seg></tuv>
      <tuv xml:lang="es"><seg>$cart = new Cart; $cart - add_item("10", 1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP reserves all function names starting with __ as magical.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo crea un objeto $cart de clase Cart.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>La función add_item() de ese objeto se llama para añadir un item del artículo número 10 al carro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, only constant initializers for var variables are allowed.</seg></tuv>
      <tuv xml:lang="es"><seg>Las Clases pueden ser extensiones de otras clases.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Such a function is called a constructor (see below).</seg></tuv>
      <tuv xml:lang="es"><seg>Las clases extendidas o derivadas tienen todas las variables y funciones de la clase base y lo que les añadas al extender la definición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes are types, that is, they are blueprints for actual variables.</seg></tuv>
      <tuv xml:lang="es"><seg>La herencia múltiple no está soportada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $cart = new Cart; $cart - add_item("10", 1); $another_cart = new Cart; $another_cart - add_item("0815", 3);</seg></tuv>
      <tuv xml:lang="es"><seg>class Named_Cart extends Cart {var $owner; function set_owner ($name) {$this - owner = $name;}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function add_item() of the $cart object is being called to add 1 item of article number 10 to the $cart.</seg></tuv>
      <tuv xml:lang="es"><seg>Ese ejemplo define una clase Named_Cart (carro con nombre o dueño) que tiene todas las variables y funciones de Cart, y además añade la variable $owner y una función adicional set_owner().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both, $cart and $another_cart, have functions add_item(), remove_item() and a variable items.</seg></tuv>
      <tuv xml:lang="es"><seg>Un carro con nombre se crea de la forma habitual y, una vez hecho, puedes acceder al propietario del carro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can think of the objects as something similar to directories in a filesystem.</seg></tuv>
      <tuv xml:lang="es"><seg>En los carros con nombre también puedes acceder a las funciones normales del carro:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Just like with directories where you 'll have to type the full pathname in order to reach each file from the toplevel directory, you have to specify the complete name of the function you want to call:</seg></tuv>
      <tuv xml:lang="es"><seg>$ncart = new Named_Cart; / / Creamos un carro con nombre $ncart - set_owner ("kris"); / / Nombramos el carro print $ncart - owner; / / Imprimimos el nombre del propietario $ncart - add_item ("10", 1); / / Funcionalidad heredada de Cart</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP terms, the toplevel directory would be the global namespace, and the pathname separator would be -.</seg></tuv>
      <tuv xml:lang="es"><seg>Entre funciones de una clase, la variable $this hace referencia al propio objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, the names $cart - items and $another_cart - items name two different variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Tienes que usar $this - loquesea para acceder a una variable o función llamada loquesea del objeto actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the variable is named $cart - items, not $cart - $items, that is, a variable name in PHP has only a single dollar sign.</seg></tuv>
      <tuv xml:lang="es"><seg>Los constructores son funciones de una clase que se llaman automáticamente al crear una nueva instancia (objeto) de una clase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / correct, single $$cart - items = array( "10 "= 1); / / invalid, because $cart - $items becomes $cart -" "$cart - $items = array("10" = 1); / / correct, but may or may not be what was intended: / / $cart - $myvar becomes $cart - items $myvar = 'items'; $cart - $myvar = array("10 "= 1);</seg></tuv>
      <tuv xml:lang="es"><seg>class Auto_Cart extends Cart {function Auto_Cart () {$this - add_item ("10", 1);}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Within a class definition, you do not know under which name the object will be accessible in your program: at the time the Cart class was written, it was unknown that the object will be named $cart or $another_cart later.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo define una clase Auto_Cart que es un Cart junto con un constructor que inicializa el carro con un item del tipo de artículo "10" cada vez que se crea un nuevo Auto_Cart con "new ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, you cannot write $cart - items within the Cart class itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Los constructores también pueden recibir parámetros y estos parámetros pueden ser opcionales, lo que los hace más útiles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, '$this - items[$artnr] += $num' can be read as'add $num to the $artnr counter of my own items array 'or'add $num to the $artnr counter of the items array within the current object'.</seg></tuv>
      <tuv xml:lang="es"><seg>class Constructor_Cart extends Cart {function Constructor_Cart ($item = "10", $num = 1) {$this - add_item ($item, $num);}} / / Compramos las mismas cosas aburridas de siempre $default_cart = new Constructor_Cart; / / Compramos las cosas interesantes $different_cart = new Constructor_Cart ("20", 17);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Atención</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You might want to take a look at the Class / Object Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Para las clases derivadas, el constructor de la clase padre no es llamado automáticamente cuando se llama al constructor de la clase derivada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>extends</seg></tuv>
      <tuv xml:lang="es"><seg>References Explained</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 11.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The basic assignment operator is "=".</seg></tuv>
      <tuv xml:lang="es"><seg>El operador básico de asignación es "=".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Your first inclination might be to think of this as "equal to".</seg></tuv>
      <tuv xml:lang="es"><seg>A primera vista podrías pensar que es el operador de comparación "igual que".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don 't.</seg></tuv>
      <tuv xml:lang="es"><seg>Pero no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It really means that the the left operand gets set to the value of the expression on the rights (that is, "gets set to").</seg></tuv>
      <tuv xml:lang="es"><seg>Realmente significa que el operando de la izquierda toma el valor de la expresión a la derecha, (esto es, "toma el valor de").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of an assignment expression is the value assigned.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de una expresión de asignación es el propio valor asignado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, the value of "$a = 3" is 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es, el valor de "$a = 3" es 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This allows you to do some tricky things:</seg></tuv>
      <tuv xml:lang="es"><seg>Esto permite hacer cosas curiosas como</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = ($b = 4) + 5; / / $a is equal to 9 now, and $b has been set to 4.</seg></tuv>
      <tuv xml:lang="es"><seg>$a = ($b = 4) + 5; / / ahora $a es igual a 9, y $b vale 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to the basic assignment operator, there are "combined operators" for all of the binary arithmetic and string operators that allow you to use a value in an expression and then set its value to the result of that expression.</seg></tuv>
      <tuv xml:lang="es"><seg>Este operador combinado te permite, de una sola vez, usar una variable en una expresión y luego establecer el valor de esa variable al resultado de la expresión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = 3; $a += 5; / / sets $a to 8, as if we had said: $a = $a + 5; $b = "Hello "; $b .= "There !"; / / sets $b to "Hello There !", just like $b = $b. "There !";</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 3; $a += 5; / / establece $a a 8, como si hubiésemos escrito: $a = $a + 5; $b = "Hola "; $b .= "Ahí !"; / / establece $b a "Hola Ahí !", igual que si hiciésemos $b = $b. "Ahí !";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the assignment copies the original variable to the new one (assignment by value), so changes to one will not affect the other.</seg></tuv>
      <tuv xml:lang="es"><seg>Fíjate en que la asignación realiza una nueva copia de la variable original (asignación por valor), por lo que cambios a la variable original no afectan a la copia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may also have relevance if you need to copy something like a large array inside a tight loop.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede tener interés si necesitas copiar algo como un array con muchos elementos dentro de un bucle que se repita muchas veces (cada vez se realizará una nueva copia del array).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To learn more about references, please read References explained.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP4 soporta asignación por referencia, usando la sintaxis $var = $othervar;, pero esto no es posible en PHP3. 'Asignación por referencia 'quiere decir que ambas variables acabarán apuntando al mismo dato y que nada es realmente copiado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arithmetic Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bitwise Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores Bit a bit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If both the left - and right-hand parameters are strings, the bitwise operator will operate on the characters in this string.</seg></tuv>
      <tuv xml:lang="es"><seg>Los operadores bit a bit te permiten activar o desactivar bits individuales de un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 11-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example</seg></tuv>
      <tuv xml:lang="es"><seg>ejemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>nombre</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Result</seg></tuv>
      <tuv xml:lang="es"><seg>resultado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And</seg></tuv>
      <tuv xml:lang="es"><seg>Y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in both $a and $b are set.</seg></tuv>
      <tuv xml:lang="es"><seg>Se activan los bits que están activos tanto en $a como $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Or</seg></tuv>
      <tuv xml:lang="es"><seg>O</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in either $a or $b are set.</seg></tuv>
      <tuv xml:lang="es"><seg>Se activan los bits que están activos en $a o que lo están en $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Xor</seg></tuv>
      <tuv xml:lang="es"><seg>Xor ("o exclusiva")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in $a or $b but not both are set.</seg></tuv>
      <tuv xml:lang="es"><seg>Se activan los bits que están activos en $a o en $b pero no en ambos a la vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not</seg></tuv>
      <tuv xml:lang="es"><seg>No</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in $a are not set, and vice versa.</seg></tuv>
      <tuv xml:lang="es"><seg>Se activan los bits que no están activos en $a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift left</seg></tuv>
      <tuv xml:lang="es"><seg>Desplazamiento a la izquierda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift the bits of $a $b steps to the left (each step means "multiply by two")</seg></tuv>
      <tuv xml:lang="es"><seg>Desplaza los bits de $a, $b posiciones hacia la izquierda (por aritmética binaria, cada posición desplazada equivale a multiplicar por dos el valor de $a)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift right</seg></tuv>
      <tuv xml:lang="es"><seg>Desplazamiento a la derecha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift the bits of $a $b steps to the right (each step means "divide by two")</seg></tuv>
      <tuv xml:lang="es"><seg>Desplaza los bits de $a, $b posiciones hacia la derecha (por aritmética binaria, cada posición desplazada equivale a dividir entre dos el valor de $a)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assignment Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Asignación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comparison Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Comparación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comparison operators, as their name implies, allow you to compare two values.</seg></tuv>
      <tuv xml:lang="es"><seg>Los operadores de comparación, como su nombre indica, permiten comparar dos valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 11-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Equal</seg></tuv>
      <tuv xml:lang="es"><seg>Igualdad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is equal to $b.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es igual a $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical</seg></tuv>
      <tuv xml:lang="es"><seg>Identidad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a != $b</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es igual a $b y si son del mismo tipo (sólo PHP4)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a $b</seg></tuv>
      <tuv xml:lang="es"><seg>Desigualdad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is not equal to $b.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a no es igual a $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not identical</seg></tuv>
      <tuv xml:lang="es"><seg>Menor que</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is not equal to $b, or they are not of the same type. (PHP 4 only)</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es estrictamente menor que $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Less than</seg></tuv>
      <tuv xml:lang="es"><seg>Mayor que</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is strictly less than $b.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es estrictamente mayor que $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Greater than</seg></tuv>
      <tuv xml:lang="es"><seg>Menor o igual que</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = $b</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es menor o igual que $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is less than or equal to $b.</seg></tuv>
      <tuv xml:lang="es"><seg>Mayor o igual que</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Greater than or equal to</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es mayor o igual que $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another conditional operator is the "?:" (or ternary) operator, which operates as in C and many other languages.</seg></tuv>
      <tuv xml:lang="es"><seg>Otro operador condicional es el operador "?:" (o ternario), que funciona como en C y otros muchos lenguajes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error Control Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operador de ejecución</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that these are not single-quotes!</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta un operador de ejecución: el apóstrofe invertido (``). ¡Fíjate que no son apostrofes normales!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$output = `ls -al`; echo "pre $output / pre";</seg></tuv>
      <tuv xml:lang="es"><seg>PHP intentará ejecutar la instrucción contenida dentro de los apóstrofes invertidos como si fuera un comando del shell; y su salida devuelta como el valor de esta expresión (i.e., no tiene por qué ser simplemente volcada como salida; puede asignarse a una variable).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also escapeshellcmd(), exec(), passthru(), popen(), shell_exec(), and system().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver también system(), passthru(), exec(), popen(), y escapeshellcmd().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error Control Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Comparación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Incrementing / Decrementing Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Incremento / decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, in the expression 1 + 5 * 3, the answer is 16 and not 18 because the multiplication ("*") operator has a higher precedence than the addition ("+") operator.</seg></tuv>
      <tuv xml:lang="es"><seg>¿Recuerdas la aritmética básica del colegio?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance: (1 + 5) * 3 evaluates to 18.</seg></tuv>
      <tuv xml:lang="es"><seg>Pues estos operadores funcionan exactamente igual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 11-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Associativity</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores Aritméticos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>left</seg></tuv>
      <tuv xml:lang="es"><seg>ejemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>or</seg></tuv>
      <tuv xml:lang="es"><seg>nombre</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>xor</seg></tuv>
      <tuv xml:lang="es"><seg>resultado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>and</seg></tuv>
      <tuv xml:lang="es"><seg>$a + $b</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>print</seg></tuv>
      <tuv xml:lang="es"><seg>Adición</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>= += -= *= / = .= %= = _BAR_ = ^= ~= = =</seg></tuv>
      <tuv xml:lang="es"><seg>Suma de $a y $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?:</seg></tuv>
      <tuv xml:lang="es"><seg>$a - $b</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>_BAR_ _BAR_</seg></tuv>
      <tuv xml:lang="es"><seg>Substracción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>left</seg></tuv>
      <tuv xml:lang="es"><seg>Diferencia entre $a y $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>left</seg></tuv>
      <tuv xml:lang="es"><seg>$a * $b</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>non-associative</seg></tuv>
      <tuv xml:lang="es"><seg>Multiplicación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>non-associative</seg></tuv>
      <tuv xml:lang="es"><seg>Producto de $a and $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>+ -.</seg></tuv>
      <tuv xml:lang="es"><seg>$a / $b</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>* /%</seg></tuv>
      <tuv xml:lang="es"><seg>División</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>! ~ + + - - (int) (float) (string) (array) (object) @</seg></tuv>
      <tuv xml:lang="es"><seg>Cociente de $a entre $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>[</seg></tuv>
      <tuv xml:lang="es"><seg>$a% $b</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>new</seg></tuv>
      <tuv xml:lang="es"><seg>Módulo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although! has a higher precedence than =, PHP will still allow expressions similar to the following: if (!$a = foo()), in which case the output from foo() is put into $a.</seg></tuv>
      <tuv xml:lang="es"><seg>Resto de $a dividido entre $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arithmetic Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Asignación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports C-style pre - and post-increment and decrement operators.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta los operadores de predecremento y post incremento al estilo de C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-5.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 11-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Increment / decrement Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Incremento / decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Effect</seg></tuv>
      <tuv xml:lang="es"><seg>efecto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pre-increment</seg></tuv>
      <tuv xml:lang="es"><seg>Preincremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Increments $a by one, then returns $a.</seg></tuv>
      <tuv xml:lang="es"><seg>Incrementa $a en uno y después devuelve $a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Post-increment</seg></tuv>
      <tuv xml:lang="es"><seg>Postincremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns $a, then increments $a by one.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve $a y después incrementa $a en uno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pre-decrement</seg></tuv>
      <tuv xml:lang="es"><seg>Predecremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decrements $a by one, then returns $a.</seg></tuv>
      <tuv xml:lang="es"><seg>Decrementa $a en uno y después devuelve $a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Post-decrement</seg></tuv>
      <tuv xml:lang="es"><seg>Postdecremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns $a, then decrements $a by one.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve $a y después decrementa $a en uno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here 's a simple example script:</seg></tuv>
      <tuv xml:lang="es"><seg>He aquí un listado de ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo "h3 Postincrement / h3"; $a = 5; echo "Should be 5: ". $a+ +." br / \n"; echo "Should be 6: ". $a." br / \n"; echo "h3 Preincrement / h3"; $a = 5; echo "Should be 6: ". ++$a." br / \n"; echo "Should be 6: ". $a." br / \n"; echo "h3 Postdecrement / h3"; $a = 5; echo "Should be 5: ". $a- -." br / \n"; echo "Should be 4: ". $a." br / \n"; echo "h3 Predecrement / h3"; $a = 5; echo "Should be 4: ". --$a." br / \n"; echo "Should be 4: ". $a." br / \n";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php echo "h3 Postincremento / h3"; $a = 5; echo "Debería ser 5: ". $a+ +." br \n"; echo "Debería ser 6: ". $a." br \n"; echo "h3 Preincremento / h3"; $a = 5; echo "Debería ser 6: ". ++$a." br \n"; echo "Debería ser 6: ". $a." br \n"; echo "h3 Postdecremento / h3"; $a = 5; echo "Debería ser 5: ". $a- -." br \n"; echo "Debería ser 4: ". $a." br \n"; echo "h3 Predecremento / h3"; $a = 5; echo "Debería ser 4: ". --$a." br \n"; echo "Debería ser 4: ". $a." br \n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Execution Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operador de ejecución</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Logical Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores Lógicos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-6.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 11-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if both $a and $b are TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si tanto $a como $b son ciertos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if either $a or $b is TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a o $b son ciertos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Xor</seg></tuv>
      <tuv xml:lang="es"><seg>O exclusiva</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if either $a or $b is TRUE, but not both.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a es cierto o $b es cierto, pero no ambos a la vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not</seg></tuv>
      <tuv xml:lang="es"><seg>Negación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is not TRUE.</seg></tuv>
      <tuv xml:lang="es"><seg>Cierto si $a no es cierto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The reason for the two different variations of "and" and "or "operators is that they operate at different precedences. (See Operator Precedence.)</seg></tuv>
      <tuv xml:lang="es"><seg>La razón de las dos variaciones de "y" y "o "es que operan con distinta precedencia (ver Precedencia de Operadores.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Precedencia de Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two string operators.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos operadores de cadenas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first is the concatenation operator ('.'), which returns the concatenation of its right and left arguments.</seg></tuv>
      <tuv xml:lang="es"><seg>El primero es el operador de concatenación ('.'), que devuelve el resultado de concatenar sus operandos izquierdo y derecho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second is the concatenating assignment operator ('.='), which appends the argument on the right side to the argument on the left side.</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo es el operador de concatenación y asignación ('.=').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read Assignment Operators for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Consulta Operadores de Asignación para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = "Hello"; $b = $a. "World !"; / / now $b contains "Hello World! "$a = "Hello"; $a .= "World !"; / / now $a contains "Hello World! "</seg></tuv>
      <tuv xml:lang="es"><seg>$a = "Hola"; $b = $a. "Mundo !"; / / ahora $b contiene "Hola Mundo! "$a = "Hola"; $a .= "Mundo !"; / / ahora $a contiene "Hola Mundo! "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Logical Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Precedencia de Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array Operators</seg></tuv>
      <tuv xml:lang="es"><seg>Estructuras de Control</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 15.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 15.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References inside the constructor</seg></tuv>
      <tuv xml:lang="es"><seg>Clases y Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Features</seg></tuv>
      <tuv xml:lang="es"><seg>Características</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 7.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because you can have another PHP-array as a value, you can also quite easily simulate trees.</seg></tuv>
      <tuv xml:lang="es"><seg>Los arrays actualmente actúan tanto como tablas hash (arrays asociativos) como arrays indexados (vectores).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information we refer you to external literature about this broad topic.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta tanto arrays escalares como asociativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes a certain number of comma-separated key = value pairs.</seg></tuv>
      <tuv xml:lang="es"><seg>De hecho, no hay diferencias entre los dos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $arr = array( "foo "= "bar", 12 = true); echo $arr["foo"]; / / bar echo $arr[12]; / / 1?</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede crear una array usando las funciones list() o array(), o se puede asignar el valor de cada elemento del array de manera explícita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a key is the standard representation of an integer, it will be interpreted as such (i.e. "8 "will be interpreted as 8, while "08" will be interpreted as "08 ").</seg></tuv>
      <tuv xml:lang="es"><seg>$a[ 0] = "abc"; $a[1] = "def"; $b["foo"] = 13;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A value can be of any PHP type.</seg></tuv>
      <tuv xml:lang="es"><seg>También se puede crear un array simplemente añadiendo valores al array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you omit a key, the maximum of the integer-indices is taken, and the new key will be that maximum + 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se asigna un valor a una variable array usando corchetes vacíos, el valor se añadirá al final del array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Having e.g. the highest index being -6 will result in -5 being the new key.</seg></tuv>
      <tuv xml:lang="es"><seg>$a[] = "hola"; / / $a[2] == "hola "$a[] = "mundo"; / / $a[3] == "mundo"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / This array is the same as... array( 5 = 43, 32, 56, "b "= 12); / / ...this array array(5 = 43, 6 = 32, 7 = 56, "b" = 12);?</seg></tuv>
      <tuv xml:lang="es"><seg>Los arrays se pueden ordenar usando las funciones asort(), arsort(), ksort(), rsort(), sort(), uasort(), usort(), y uksort() dependiendo del tipo de ordenación que se desee.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using FALSE as a key will evalute to integer 0 as key.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede contar el número de elementos de un array usando la función count().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using an emptry string as key will create (or overwrite) a key with an empty string and its value, it is not the same as using empty brackets.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede recorrer un array usando las funciones next() y prev().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done by assigning values to the array while specifying the key in brackets.</seg></tuv>
      <tuv xml:lang="es"><seg>Otra forma habitual de recorrer un array es usando la función each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$arr[ key] = value; $arr[] = value; / / key is either string or nonnegative integer / / value can be anything</seg></tuv>
      <tuv xml:lang="es"><seg>Los arrays multidimensionales son bastante simples actualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you only use "usual integer indices" (starting from zero, increasing by one), you can achive the reindex effect by using array_values().</seg></tuv>
      <tuv xml:lang="es"><seg>Para cada dimensión del array, se puede añadir otro valor [clave] al final:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This works but also throws a PHP error of / / level E_NOTICE because of an undefined constant named fruit / / / / Notice:</seg></tuv>
      <tuv xml:lang="es"><seg>$a[ 1] = $f; # ejemplos de una sola dimensión $a["foo"] = $f; $a[1][0] = $f; # bidimensional $a["foo"][2] = $f; # (se pueden mezclar índices numéricos y asociativos) $a[3]["bar"] = $f; # (se pueden mezclar índices numéricos y asociativos) $a["foo"][4]["bar"][0] = $f; # tetradimensional!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of undefined constant fruit - assumed 'fruit' in... print $arr[fruit]; / / apple / / Let's define a constant to demonstrate what's going on.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP3 no es posible referirse a arrays multidimensionales directamente dentro de cadenas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants are not / / looked for within strings so no E_NOTICE error here print "Hello $arr[fruit]"; / / Hello apple / / With one exception, braces surrounding arrays within strings / / allows constants to be looked for print "Hello {$arr[fruit]}"; / / Hello carrot print "Hello {$arr['fruit']}"; / / Hello apple / / This will not work, results in a parse error such as: / / Parse error: parse error, expecting T_STRING 'or T_VARIABLE' or T_NUM_STRING '/ / This of course applies to using autoglobals in strings as well print "Hello $arr['fruit']"; print "Hello $_GET['foo']"; / / Concatenation is another option print "Hello". $arr['fruit']; / / Hello apple?</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, lo siguiente no tendrá el resultado deseado:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, error_reporting is turned down to not show them.</seg></tuv>
      <tuv xml:lang="es"><seg>$a[ 3]['bar'] = 'Bob'; echo "Esto no va a funcionar: $a[3][bar]";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means that you can write things like this:</seg></tuv>
      <tuv xml:lang="es"><seg>$a[ 3]['bar'] = 'Bob'; echo "Esto no va a funcionar: ". $a[3][bar];</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $error_descriptions[ 1] = "A fatal error has occured"; $error_descriptions[2] = "PHP issued a warning"; $error_descriptions[8] = "This is just an informal notice";?</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP4, sin embargo, todo el problema se puede circunvenir encerrando la referencia al array (dentro de la cadena) entre llaves:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP now assumes that you meant bar literally, as the string "bar", but that you forgot to write the quotes.</seg></tuv>
      <tuv xml:lang="es"><seg>$a[ 3]['bar'] = 'Bob'; echo "Esto va a funcionar: {$a[3][bar]}";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, you already cannot use the words empty and default this way, since they are special reserved keywords.</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden "rellenar" arrays multidimensionales de muchas formas, pero la más difícil de comprender es cómo usar el comando array() para arrays asociativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the above examples for details on why as well as the section on variable parsing in strings.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos dos trozos de código rellenarán el array unidimensional de la misma manera:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you convert an object If you convert an object to an array, you get the properties (member variables) of that object as the array's elements.</seg></tuv>
      <tuv xml:lang="es"><seg># Ejemplo 1: $a[ "color"] = "rojo"; $a["sabor"] = "dulce"; $a["forma"] = "redondeada"; $a["nombre"] = "manzana"; $a[3] = 4; # Example 2: $a = array ("color "= "rojo", "sabor" = "dulce", "forma "= "redondeada", "nombre" = "manzana", 3 = 4);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = RED [1] = BLUE [2] = GREEN [3] = YELLOW) * /?</seg></tuv>
      <tuv xml:lang="es"><seg>La función array() se puede anidar para arrays multidimensionales:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $arr1 = array( 2, 3); $arr2 = $arr1; $arr2[] = 4; / / $arr2 is changed, / / $arr1 is still array(2,3) $arr3 = $arr1; $arr3[] = 4; / / now $arr1 and $arr3 are the same?</seg></tuv>
      <tuv xml:lang="es"><seg>? $a = array( "manzana "= array ("color" = "rojo", "sabor "= "dulce", "forma" = "redondeada "), "naranja" = array ("color "= "naranja", "sabor" = "ácido", "forma "= "redondeada"), "plátano "= array ("color" = "amarillo", "sabor "= "paste-y", "forma" = "aplatanada ")); echo $a["manzana"]["sabor"]; # devolverá "dulce"?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Strings</seg></tuv>
      <tuv xml:lang="es"><seg>Cadenas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Objects</seg></tuv>
      <tuv xml:lang="es"><seg>Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1.234; $b = 1.2e3; $c = 7E-10;?</seg></tuv>
      <tuv xml:lang="es"><seg>Los números en punto flotante ("double") se pueden especificar utilizando cualquiera de las siguientes sintaxis:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can lead to confusing results: for example, floor( (0.1+0.7)*10) will usually return 7 instead of the expected 8 as the result of the internal representation really being something like 7.9999999999....</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1.234; $a = 1.2e3;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Four scalar types:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta los siguientes tipos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>string</seg></tuv>
      <tuv xml:lang="es"><seg>números en punto flotante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>object</seg></tuv>
      <tuv xml:lang="es"><seg>entero</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL</seg></tuv>
      <tuv xml:lang="es"><seg>objeto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number</seg></tuv>
      <tuv xml:lang="es"><seg>cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The type of a variable is usually not set by the programmer; rather, it is decided at runtime by PHP depending on the context in which that variable is used.</seg></tuv>
      <tuv xml:lang="es"><seg>El tipo de una variable normalmente no lo indica el programador; en su lugar, lo decide PHP en tiempo de ejecución dependiendo del contexto en el que se utilice esa variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to check out the type and value of a certain expression, use var_dump().</seg></tuv>
      <tuv xml:lang="es"><seg>Si se quisiese obligar a que una variable se convierta a un tipo concreto, se podría forzar la variable o usar la función settype() para ello.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you simply want a human-readable representation of the type for debugging, use gettype().</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que una variable se puede comportar de formas diferentes en ciertas situaciones, dependiendo de qué tipo sea en ese momento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples:</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información, vea la sección Conversión de Tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to force a variable to be converted to a certain type, you may either cast the variable or use the settype() function on it.</seg></tuv>
      <tuv xml:lang="es"><seg>Los enteros se puede especificar usando una de las siguientes sintaxis:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see the section on Type Juggling.</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1234; # número decimal $a = -123; # un número negativo $a = 0123; # número octal (equivalente al 83 decimal) $a = 0x12; # número hexadecimal (equivalente al 18 decimal)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Booleans</seg></tuv>
      <tuv xml:lang="es"><seg>Números en punto flotante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class foo {function do_foo() {echo "Doing foo .";}} $bar = new foo; $bar - do_foo();?</seg></tuv>
      <tuv xml:lang="es"><seg>Para inicializar un objeto, se usa la sentencia new para instanciar el objeto a una variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a value of any other type is converted to an object, a new instace of the stdClass built in class is created.</seg></tuv>
      <tuv xml:lang="es"><seg>class foo {function do_foo () {echo "Doing foo .";}} $bar = new foo; $bar - do_foo();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Resource</seg></tuv>
      <tuv xml:lang="es"><seg>Type juggling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A string literal can be specified in three different ways.</seg></tuv>
      <tuv xml:lang="es"><seg>Las cadenas de caracteres se pueden especificar usando uno de dos tipos de delimitadores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To specify a literal single quote, you will need to escape it with a backslash (\), like in many other languages.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la cadena está encerrada entre dobles comillas ("), las variables que estén dentro de la cadena serán expandidas (sujetas a ciertas limitaciones de interpretación).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that if you try to escape any other character, the backslash will also be printed!</seg></tuv>
      <tuv xml:lang="es"><seg>Como en C y en Perl, el carácter de barra invertida ("\") se puede usar para especificar caracteres especiales:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 7-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Caracteres protegidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo 'this is a simple string'; echo'You can also have embedded newlines in strings this way as it is okay to do'; / / Outputs: "I'll be back "echo'Arnold once said: "I\'ll be back"'; / / Outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>secuencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You deleted C:\*.*? echo 'You deleted C:\*.* ?'; / / Outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>significado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 7-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Nueva línea</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>horizontal tab (HT or 0x09 (9) in ASCII)</seg></tuv>
      <tuv xml:lang="es"><seg>Retorno de carro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Again, if you try to escape any other character, the backslash will be printed too!</seg></tuv>
      <tuv xml:lang="es"><seg>Tabulación horizontal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One should provide an identifier after, then the string, and then the same identifier to close the quotation.</seg></tuv>
      <tuv xml:lang="es"><seg>Barra invertida</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is very important to note that the line with the closing identifier contains no other characters, except possibly a semicolon (;).</seg></tuv>
      <tuv xml:lang="es"><seg>Signo del dólar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If in this case a proper closing identifier is not found then a parse error will result with the line number being at the end of the script.</seg></tuv>
      <tuv xml:lang="es"><seg>Comillas dobles</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables are expanded, but the same care must be taken when expressing complex variables inside a here doc as with strings.</seg></tuv>
      <tuv xml:lang="es"><seg>la secuencia de caracteres que coincida con la expresión regular es un carácter en notación octal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This should print a capital 'A': \x41 EOT;?</seg></tuv>
      <tuv xml:lang="es"><seg>la secuencia de caracteres que coincida con la expresión regular es un carácter en notación hexadecimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two types of syntax, a simple one and a complex one.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede proteger cualquier otro carácter, pero se producirá una advertencia en el nivel de depuración más alto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The complex syntax was introduced in PHP 4, and can be recognised by the curly braces surrounding the expression.</seg></tuv>
      <tuv xml:lang="es"><seg>La segunda forma de delimitar una cadena de caracteres usa el carácter de comilla simple ("'").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enclose the variable name in curly braces if you want to explicitly specify the end of the name.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando una cadena va encerrada entre comillas simples, los únicos caracteres de escape que serán comprendidos son "\\" y "\' ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For object properties the same rules apply as to simple variables, though with object properties there doesn 't exist a trick like the one with variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es por convenio, así que se pueden tener comillas simples y barras invertidas en una cadena entre comillas simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This results in a parse error. echo "A banana is $fruits['banana'] ."; / / Works echo "A banana is". $fruits['banana']. "."; / / Works echo "This square is $square - width meters broad ."; / / Won't work.</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables no se expandirán dentro de una cadena entre comillas simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For anything more complex, you should use the complex syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>Otra forma de delimitar cadenas es usando la sintaxis de documento incrustado ("").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact, you can include any value that is in the namespace in strings with this syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>Se debe proporcionar un identificador después de, después la cadena, y después el mismo identificador para cerrar el entrecomillado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You simply write the expression the same way as you would outside the string, and then include it in {and}.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 7-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples to make it clear:</seg></tuv>
      <tuv xml:lang="es"><seg>He aquí un ejemplo de entrecomillado de cadenas con sintaxis de documento incrustado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is {fantastic} echo "This is {$great}"; / / Works, outputs:</seg></tuv>
      <tuv xml:lang="es"><seg>$str = EOD Ejemplo de cadena Expandiendo múltiples líneas usando sintaxis de documento incrustado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In otherwords, it will still work but / / because PHP first looks for a constant named foo, it will / / throw an error of level E_NOTICE (undefined constant). echo "This is wrong: {$arr[foo][3]}"; / / Works.</seg></tuv>
      <tuv xml:lang="es"><seg>EOD;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Characters within strings may be accessed by specifying the zero-based offset of the desired character after the string in curly braces.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, this syntax is deprecated as of PHP 4.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis de documento incristado fue añadida en PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the '+' (addition) operator will not work for this.</seg></tuv>
      <tuv xml:lang="es"><seg>Las cadenas se pueden concatenar usando el operador '.' (punto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the string functions section for general functions, the regular expression functions for advanced find replacing (in two tastes:</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que el operador '+' (suma) no sirve para esto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are also functions for URL-strings, and functions to encrypt / decrypt strings (mcrypt and mhash).</seg></tuv>
      <tuv xml:lang="es"><seg>Por favor mire Operadores de cadena para más información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can convert a value to a string using the (string) cast, or the strval() You can convert a value to a string using the (string) cast, or the strval() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede acceder a los caracteres dentro de una cadena tratándola como un array de caracteres indexado numéricamente, usando una sintaxis similar a la de C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String conversion is automatically done in the scope of an expression for you where a string is needed.</seg></tuv>
      <tuv xml:lang="es"><seg>Vea un ejemplo más abajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This happens when you use the echo() or print() This happens when you use the echo() or print() functions, or when you compare a variable value to a string.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 7-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also settype().</seg></tuv>
      <tuv xml:lang="es"><seg>Algumos ejemplos de cadenas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This way you can convert back and forth between boolean and string values.</seg></tuv>
      <tuv xml:lang="es"><seg>?php / * Asignando una cadena. * / $str = "Esto es una cadena"; / * Añadiendo a la cadena. * / $str = $str." con algo más de texto"; / * Otra forma de añadir, incluye un carácter de nueva línea protegido. * / $str .= "Y un carácter de nueva línea al final.\n"; / * Esta cadena terminará siendo 'p Número:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays are always converted to the string "Array", so you cannot dump out the contents of an array with echo() or print() to see what is inside them.</seg></tuv>
      <tuv xml:lang="es"><seg>9 / p '* / $num = 9; $str = "p Número: $num / p"; / * Esta será' p Número: $num / p '* / $num = 9; $str =' p Número: $num / p '; / * Obtener el primer carácter de una cadena * / $str = 'Esto es una prueba .'; $first = $str[0]; / * Obtener el último carácter de una cadena. * / $str = 'Esto es aún una prueba .'; $last = $str[strlen($str)-1];?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See below for tips on dumping / viewing the entire contents.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando una cadena se evalúa como un valor numérico, el valor resultante y el tipo se determinan como sigue.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to find out the class name of which an object is an instance of, use get_class().</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena se evaluará como un doble si contiene cualquiera de los caracteres '.', 'e', o 'E'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to get the type of the resource, use get_resource_type().</seg></tuv>
      <tuv xml:lang="es"><seg>En caso contrario, se evaluará como un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As you can see above, printing out the arrays, objects or resources does not provide you any useful information about the values themselfs.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor viene dado por la porción inicial de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also convert PHP values to strings to store them permanently.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la cadena comienza con datos de valor numérico, este será el valor usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also serialize PHP values to XML structures, if you have WDDX support in your PHP setup.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso contrario, el valor será 0 (cero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The string will evaluate as a float if it contains any of the characters' .', 'e', or'E '.</seg></tuv>
      <tuv xml:lang="es"><seg>Los datos numéricos válidos son un signo opcional, seguido por uno o más dígitos (que opcionalmente contengan un punto decimal), seguidos por un exponente opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the string starts with valid numeric data, this will be the value used.</seg></tuv>
      <tuv xml:lang="es"><seg>El exponente es una 'e' o una 'E 'seguidos por uno o más dígitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid numeric data is an optional sign, followed by one or more digits (optionally containing a decimal point), followed by an optional exponent.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando la primera expresión es una cadena, el tipo de la variable dependerá de la segunda expresión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = 1 + "10.5"; / / $foo is float (11.5) $foo = 1 + "-1.3e3"; / / $foo is float (-1299) $foo = 1 + "bob-1.3e3"; / / $foo is integer (1) $foo = 1 + "bob3"; / / $foo is integer (1) $foo = 1 + "10 Small Pigs"; / / $foo is integer (11) $foo = 4 + "10.2 Little Piggies"; / / $foo is float (14.2) $foo = "10.0 pigs" + 1; / / $foo is float (11) $foo = "10.0 pigs "+ 1.0; / / $foo is float (11)?</seg></tuv>
      <tuv xml:lang="es"><seg>$foo = 1 + "10.5"; / / $foo es doble (11.5) $foo = 1 + "-1.3e3"; / / $foo es doble (-1299) $foo = 1 + "bob-1.3e3"; / / $foo es entero (1) $foo = 1 + "bob3"; / / $foo es entero (1) $foo = 1 + "10 Cerditos"; / / $foo es entero (11) $foo = 1 + "10 Cerditos"; / / $foo es entero (11) $foo = "10.0 cerdos" + 1; / / $foo es entero (11) $foo = "10.0 cerdos "+ 1.0; / / $foo es double (11)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to test any of the examples in this section, you can cut and paste the examples and insert the following line to see for yourself what 's going on:</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información sobre esta conversión, mire en la página del manual de Unix strtod( 3).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do not expect to get the code of one character by converting it to integer (as you would do in C for example).</seg></tuv>
      <tuv xml:lang="es"><seg>Si quisiera probar cualquiera de los ejemplos de esta sección, puede cortar y pegar los ejemplos e insertar la siguiente línea para ver por sí mismo lo que va ocurriendo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the functions ord() and chr() to convert between charcodes and characters.</seg></tuv>
      <tuv xml:lang="es"><seg>echo "\$foo==$foo; el tipo es". gettype ($foo). "br \n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Floating point numbers</seg></tuv>
      <tuv xml:lang="es"><seg>Números en punto flotante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP does not require (or support) explicit type definition in variable declaration; a variable's type is determined by the context in which that variable is used.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP no requiere (o soporta) la declaración explícita del tipo en la declaración de variables; el tipo de una variable se determina por el contexto en el que se usa esa variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is to say, if you assign a string value to variable $var, $var becomes a string.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto quiere decir que si se asigna un valor de cadena a la variable var, var se convierte en una cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you then assign an integer value to $var, it becomes an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>Si después se asigna un valor entero a la variable var, se convierte en una variable entera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example of PHP' s automatic type conversion is the addition operator '+ '.</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo de conversión de tipo automática en PHP3 es el operador suma '+'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If any of the operands is a float, then all operands are evaluated as floats, and the result will be a float.</seg></tuv>
      <tuv xml:lang="es"><seg>Si cualquiera de los operandos es un doble, entonces todos los operandos se evalúan como dobles, y el resultado será un doble.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, the operands will be interpreted as integers, and the result will also be an integer.</seg></tuv>
      <tuv xml:lang="es"><seg>En caso contrario, los operandos se interpretarán como enteros, y el resultado será también un entero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this does NOT change the types of the operands themselves; the only change is in how the operands are evaluated.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que esto NO cambia los tipos de los operandos propiamente dichos; el único cambio está en cómo se evalúan los operandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = "0"; / / $foo is string (ASCII 48) !- - bad example, no real operator (must be used with variable, modifies it too) $foo++; / / $foo is the string "1" (ASCII 49) - - $foo += 2; / / $foo is now an integer (2) $foo = $foo + 1.3; / / $foo is now a float (3.3) $foo = 5 + "10 Little Piggies"; / / $foo is integer (15) $foo = 5 + "10 Small Pigs"; / / $foo is integer (15) !- - TODO: explain ++ / - - behaviour with strings examples: ++'001 '= '002' ++'abc '= 'abd' ++'xyz '= 'xza' ++'9.9 '= '9.0' ++'-3 '= '-4' - -'9 '= 8 (integer!) - -'5.5' = '5.5 '- -'-9' = -10 (integer) - -'09 '= 8 (integer) - -'abc' = 'abc '- -?</seg></tuv>
      <tuv xml:lang="es"><seg>Si los últimos dos ejemplos anteriores parecen confusos, vea Conversión de cadenas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the last two examples above seem odd, see String conversion to numbers.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se desea obligar a que una variable sea evaluada con un tipo concreto, mire la sección Forzado de tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to force a variable to be evaluated as a certain type, see the section on Type casting.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se desea cambiar el tipo de una variable, vea la función settype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to test any of the examples in this section, you can use the var_dump() function.</seg></tuv>
      <tuv xml:lang="es"><seg>echo "\$foo==$foo; el tipo es". gettype ($foo). "br \n";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of an automatic conversion to array is currently undefined.</seg></tuv>
      <tuv xml:lang="es"><seg>La posibilidad de una conversión automática a array no está definida actualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What happens??</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1; / / $a es un entero $a[0] = "f"; / / $a se convierte en un array, en el que $a[0] vale "f "</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP (for historical reasons) supports indexing into strings via offsets using the same syntax as array indexing, the example above leads to a problem: should $a become an array with its first element being "f", or should "f "become the first character of the string $a?</seg></tuv>
      <tuv xml:lang="es"><seg>$a = "1"; / / $a es una cadena $a[0] = "f"; / / ¿Qué pasa con los índices de las cadenas? ¿Qué ocurre?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 introduced the new curly bracket syntax to access characters in string, use this syntax instead of the one presented above:</seg></tuv>
      <tuv xml:lang="es"><seg>Dado que PHP soporta indexación en las cadenas vía offsets usando la misma sintaxis que la indexación de arrays, el ejemplo anterior nos conduce a un problema: ¿debería convertirse $a en un array cuyo primer elemento sea "f", o debería convertirse "f" en el primer carácter de la cadena $a?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type casting in PHP works much as it does in C: the name of the desired type is written in parentheses before the variable which is to be cast.</seg></tuv>
      <tuv xml:lang="es"><seg>Los parches se están discutiendo, de todas formas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The casts allowed are:</seg></tuv>
      <tuv xml:lang="es"><seg>El forzado de tipos en PHP funciona como en C: el nombre del tipo deseado se escribe entre paréntesis antes de la variable a la que se pretende forzar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(bool), (boolean) - cast to boolean</seg></tuv>
      <tuv xml:lang="es"><seg>$foo = 10; / / $foo es un entero $bar = (double) $foo; / / $bar es un doble</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(float), (double), (real) - cast to float</seg></tuv>
      <tuv xml:lang="es"><seg>Los forzados de tipo permitidos son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(string) - cast to string</seg></tuv>
      <tuv xml:lang="es"><seg>(int), (integer) - fuerza a entero (integer)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(object) - cast to object</seg></tuv>
      <tuv xml:lang="es"><seg>(real), (double), (float) - fuerza a doble (double)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that tabs and spaces are allowed inside the parentheses, so the following are functionally equivalent:</seg></tuv>
      <tuv xml:lang="es"><seg>(array) - fuerza a array (array)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = (int) $bar; $foo = (int) $bar;?</seg></tuv>
      <tuv xml:lang="es"><seg>(object) - fuerza a objeto (object)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of casting a variable to string, you can also enclose the variable in double quotes.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que las tabulaciones y espacios se permiten dentro de los paréntesis, así que los siguientes ejemplos son funcionalmente equivalentes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = 10; / / $foo is an integer $str = "$foo"; / / $str is a string $fst = (string) $foo; / / $fst is also a string / / This prints out that "they are the same "if ($fst === $str) {echo "they are the same";}?</seg></tuv>
      <tuv xml:lang="es"><seg>Puede no ser obvio que ocurrirá cuando se fuerce entre ciertos tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may not be obvious exactly what will happen when casting between certain types.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, lo siguiente debería ser tenido en cuenta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to boolean</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se fuerza el cambio de un escalar o una variable de cadena a un array, la variable se convertirá en el primer elemento del array:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to float</seg></tuv>
      <tuv xml:lang="es"><seg>$var = 'ciao'; $arr = (array) $var; echo $arr[0]; / / produce la salida 'ciao'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to array</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se fuerza el tipo de una variable escalar o de una cadena a un objeto, la variable se convertirá en un atributo del objeto; el nombre del atributo será 'scalar ':</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to resource</seg></tuv>
      <tuv xml:lang="es"><seg>$var = 'ciao'; $obj = (object) $var; echo $obj - scalar; / / produce la salida 'ciao'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pseudo-types used in this documentation</seg></tuv>
      <tuv xml:lang="es"><seg>Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 8.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a form is submitted to a PHP script, the information from that form is automatically made available to the script.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se envía un formulario a un script PHP, las variables de dicho formulario pasan a estar automáticamente disponibles en el script gracias a PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are many ways to access this information, for example:</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, consideremos el siguiente formulario:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 8-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple HTML form</seg></tuv>
      <tuv xml:lang="es"><seg>Variables de formulario simples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>form action=" foo.php "method="post" Name: input type="text "name="username" br Email: input type="text "name="email" br input type="submit "name="submit" value="Submit me! "/ form</seg></tuv>
      <tuv xml:lang="es"><seg>form action=" foo.php3 "method="post" Name: input type="text "name="name" br input type="submit "/ form</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples are:</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando es enviado, PHP creará la variable $name, que contendrá lo que sea que se introdujo en el campo Name: del formulario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Accessing data from a simple POST HTML form</seg></tuv>
      <tuv xml:lang="es"><seg>PHP también maneja arrays en el contexto de variables de formularios, pero sólo en una dimensión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Available since PHP 4.1.0 print $_POST[ 'username']; print $_REQUEST['username']; import_request_variables('p', 'p_'); print $p_username; / / Available since PHP 3. print $HTTP_POST_VARS['username']; / / Available if the PHP directive register_globals = on.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede, por ejemplo, agrupar juntas variables relacionadas, o usar esta característica para recuperar valores de un campo select input múltiple:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of / / PHP 4.2.0 the default value of register_globals = off. / / Using / relying on this method is not preferred. print $username;?</seg></tuv>
      <tuv xml:lang="es"><seg>Variables de formulario más complejas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GET also applies to the QUERY_STRING (the information after the '?' in an URL).</seg></tuv>
      <tuv xml:lang="es"><seg>form action=" array.php "method="post" Name: input type="text "name="personal[name]" br Email: input type="text "name="personal[email]" br Beer: br select multiple name="beer[] "option value="warthog" Warthog option value="guinness "Guinness option value="stuttgarter" Stuttgarter Schwabenbräu / select input type="submit "/ form</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also $_REQUEST and import_request_variables().</seg></tuv>
      <tuv xml:lang="es"><seg>Si la posibilidad de PHP de track_vars está activada, ya sea mediante la opción de configuración track_vars o mediante la directiva ?php_track_vars?, las variables enviadas con los métodos POST o GET también se encontrarán en los arrays asociativos globales $HTTP_POST_VARS y $HTTP_GET_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Superglobal arrays, like $_POST and $_GET, became available in PHP 4.1.0</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se envía un formulario, es posible usar una imagen en vez del botón submit estándar con una etiqueta como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As shown, before PHP 4.2.0 the default value for register_globals was on.</seg></tuv>
      <tuv xml:lang="es"><seg>input type=image src=" image.gif "name="sub"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP community is encouraging all to not rely on this directive as it' s preferred to assume it's off and code accordingly.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el usuario hace click en cualquier parte de la imagen, el formulario que la acompaña se transmitirá al servidor con dos variables adicionales, sub_x y sub_y.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The magic_quotes_gpc configuration directive affects Get, Post and Cookie values.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas contienen las coordenadas del click del usuario dentro de la imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Escaping is needed for DB insertion.</seg></tuv>
      <tuv xml:lang="es"><seg>Los más experimentados puede notar que los nombres de variable enviados por el navegador contienen un guión en vez de un subrayado (guión bajo), pero PHP convierte el guión en subrayado automáticamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also understands arrays in the context of form variables (see the related faq).</seg></tuv>
      <tuv xml:lang="es"><seg>PHP soporta cookies de HTTP de forma transparente tal y como están definidas en en las Netscape 's Spec.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, let 's post a form to itself and upon submission display the data:</seg></tuv>
      <tuv xml:lang="es"><seg>Las cookies son un mecanismo para almacenar datos en el navegador y así rastrear o identificar a usuarios que vuelven.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More complex form variables</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden crear cookies usando la función SetCookie().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, no such restriction applies.</seg></tuv>
      <tuv xml:lang="es"><seg>Las cookies son parte de la cabecera HTTP, así que se debe llamar a la función SetCookie antes de que se envíe cualquier salida al navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When submitting a form, it is possible to use an image instead of the standard submit button with a tag like:</seg></tuv>
      <tuv xml:lang="es"><seg>Es la misma restricción que para la función header().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the user clicks somewhere on the image, the accompanying form will be transmitted to the server with two additional variables, sub_x and sub_y.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier cookie que se reciba procedente del cliente será convertida automáticamente en una variable de PHP como con los datos en los métodos GET y POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The experienced may note that the actual variable names sent by the browser contains a period rather than an underscore, but PHP converts the period to an underscore automatically.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP transparently supports HTTP cookies as defined by Netscape 's Spec.</seg></tuv>
      <tuv xml:lang="es"><seg>SetCookie ("MyCookie[]", "Testing", time()+3600);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can set cookies using the setcookie() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que una cookie reemplazará a una cookie anterior que tuviese el mismo nombre en el navegador a menos que el camino (path) o el dominio fuesen diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are part of the HTTP header, so the SetCookie function must be called before any output is sent to the browser.</seg></tuv>
      <tuv xml:lang="es"><seg>Así, para una aplicación de carro de la compra se podría querer mantener un contador e ir pasándolo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the same restriction as for the header() function.</seg></tuv>
      <tuv xml:lang="es"><seg>P.ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookie data is then available in the appropriate cookie data arrays, such as $_COOKIE, $HTTP_COOKIE_VARS as well as in $_REQUEST.</seg></tuv>
      <tuv xml:lang="es"><seg>SetCookie Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to assign multiple values to a single cookie variable, you may assign it as an array.</seg></tuv>
      <tuv xml:lang="es"><seg>$Count++; SetCookie ("Count", $Count, time()+3600); SetCookie ("Cart[$Count]", $item, time()+3600);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php setcookie( "MyCookie[foo]", "Testing 1", time()+3600); setcookie("MyCookie[bar]", "Testing 2", time()+3600);?</seg></tuv>
      <tuv xml:lang="es"><seg>PHP hace accesibles las variables de entorno automáticamente tratándolas como variables normales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That will create two seperate cookies although MyCookie will now be a single array in your script.</seg></tuv>
      <tuv xml:lang="es"><seg>echo $HOME; / * Shows the HOME environment variable, if set. * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that a cookie will replace a previous cookie by the same name in your browser unless the path or domain is different.</seg></tuv>
      <tuv xml:lang="es"><seg>Dado que la información que llega vía mecanismos GET, POST y Cookie crean automáticamente variables de PHP, algunas veces es mejor leer variables del entorno explícitamente para asegurarse de que se está trabajando con la versión correcta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-5.</seg></tuv>
      <tuv xml:lang="es"><seg>La función getenv() La función getenv() se puede usar para ello.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $count++; setcookie("count", $count, time()+3600); setcookie("Cart[$count]", $item, time()+3600);?</seg></tuv>
      <tuv xml:lang="es"><seg>También se puede asignar un valor a una variable de entorno con la función putenv().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Typically, PHP does not alter the names of variables when they are passed into a script.</seg></tuv>
      <tuv xml:lang="es"><seg>Típicamente, PHP no altera los nombres de las variables cuando se pasan a un script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, it should be noted that the dot (period, full stop) is not a valid character in a PHP variable name.</seg></tuv>
      <tuv xml:lang="es"><seg>De todas formas, hay que notar que el punto no es un carácter válido en el nombre de una variable PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the reason, look at it:</seg></tuv>
      <tuv xml:lang="es"><seg>Por esta razón, mire esto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $varname.ext; / * invalid variable name * /?</seg></tuv>
      <tuv xml:lang="es"><seg>$varname.ext; / * nombre de variable no válido * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For this reason, it is important to note that PHP will automatically replace any dots in incoming variable names with underscores.</seg></tuv>
      <tuv xml:lang="es"><seg>Por esta razón, es importante hacer notar que PHP reemplazará automáticamente cualquier punto en los nombres de variables de entrada por guiones bajos (subrayados).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time.</seg></tuv>
      <tuv xml:lang="es"><seg>Dado que PHP determina los tipos de las variables y los convierte (generalmente) según necesita, no siempre resulta obvio de qué tipo es una variable dada en un momento concreto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the chapter on Types.</seg></tuv>
      <tuv xml:lang="es"><seg>Son gettype(), is_long(), is_double(), is_string(), is_array(), y is_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable variables</seg></tuv>
      <tuv xml:lang="es"><seg>Variables variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variable name is case-sensitive.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP las variables se representan como un signo de dólar seguido por el nombre de la variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable names follow the same rules as other labels in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de la variable es sensible a minúsculas y mayúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A valid variable name starts with a letter or underscore, followed by any number of letters, numbers, or underscores.</seg></tuv>
      <tuv xml:lang="es"><seg>$var = "Bob"; $Var = "Joe"; echo "$var, $Var"; / / produce la salida "Bob, Joe"</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As a regular expression, it would be expressed thus: '[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*'</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP3, las variables siempre se asignan por valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que cuando se asigna una expresión a una variable, el valor íntegro de la expresión original se copia en la variable de destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, variables are always assigned by value.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto quiere decir que, por ejemplo, después e asignar el valor de una variable a otra, los cambios que se efectúen a una de esas variables no afectará a la otra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is to say, when you assign an expression to a variable, the entire value of the original expression is copied into the destination variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información sobre este tipo de asignación, vea Expresiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means, for instance, that after assigning one variable 's value to another, changing one of those variables will have no effect on the other.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP4 ofrece otra forma de asignar valores a las variables: asignar por referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 offers another way to assign values to variables: assign by reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que la nueva variable simplemente referencia (en otras palabras, "se convierte en un alias de "o "apunta a") la variable original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that the new variable simply references (in other words, "becomes an alias for "or "points to") the original variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Los cambios a la nueva variable afectan a la original, y viceversa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This also means that no copying is performed; thus, the assignment happens more quickly.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto también significa que no se produce una copia de valores; por tanto, la asignación ocurre más rápidamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To assign by reference, simply prepend an ampersand () to the beginning of the variable which is being assigned (the source variable).</seg></tuv>
      <tuv xml:lang="es"><seg>De cualquier forma, cualquier incremento de velocidad se notará sólo en los bucles críticos cuando se asignen grandes arrays u objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = 'Bob'; / / Assign the value'Bob' to $foo $bar = $foo; / / Reference $foo via $bar. $bar = "My name is $bar"; / / Alter $bar... echo $bar; echo $foo; / / $foo is altered too.?</seg></tuv>
      <tuv xml:lang="es"><seg>Para asignar por referencia, simplemente se antepone un ampersand () al comienzo de la variable cuyo valor se está asignando (la variable fuente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One important thing to note is that only named variables may be assigned by reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el siguiente trozo de código produce la salida 'Mi nombre es Bob' dos veces:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP follows Perl' s convention when dealing with arithmetic operations on character variables and not C's.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $foo = 'Bob'; / / Asigna el valor 'Bob' a $foo $bar = $foo; / / Referencia $foo vía $bar. $bar = "Mi nombre es $bar"; / / Modifica $bar... echo $foo; / / $foo también se modifica. echo $bar;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Algo importante a tener en cuenta es que sólo las variables con nombre pueden ser asignadas por referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $i = 'W'; for($n=0; $n 6; $n++) echo ++$i. "\n"; / * Produces the output similar to the following:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $foo = 25; $bar = $foo; / / Esta es una asignación válida. $bar = (24 * 7); / / Inválida; referencia una expresión sin nombre. function test() {return 25;} $bar = test(); / / Inválida.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type Juggling</seg></tuv>
      <tuv xml:lang="es"><seg>Type juggling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined variables</seg></tuv>
      <tuv xml:lang="es"><seg>Variables predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides a large number of predefined variables to any script which it runs.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP proporciona una gran cantidad de variables predefinidas a cualquier script que se ejecute.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many of these variables, however, cannot be fully documented as they are dependent upon which server is running, the version and setup of the server, and other factors.</seg></tuv>
      <tuv xml:lang="es"><seg>De todas formas, muchas de esas variables no pueden estar completamente documentadas ya que dependen de sobre qué servidor se esté ejecutando, la versión y configuración de dicho servidor, y otros factores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some of these variables will not be available when PHP is run on the command line.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunas de estas variables no estarán disponibles cuando se ejecute PHP desde la línea de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>A pesar de estos factores, aquí tenemos una lista de variables predefinidas disponibles en una instalación por defecto de PHP 3 corriendo como modulo de un Apache 1.3.6 con su configuración también por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.2.0 and later, the default value for the PHP directive register_globals is off.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a major change in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta lista no es exhaustiva ni pretende serlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Having register_globals off affects the set of predefined variables available in the global scope.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas variables son creadas por el servidor web Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, to get DOCUMENT_ROOT you' ll use $_SERVER['DOCUMENT_ROOT'] instead of $DOCUMENT_ROOT, or $_GET['id'] from the URL http: / /www.example.com / test.php?id=3 instead of $id, or $_ENV['HOME'] instead of $HOME.</seg></tuv>
      <tuv xml:lang="es"><seg>Dicho esto, también están presentes las variables de la especificación CGI 1.1, por lo que también se deben tener en cuenta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related information on this change, read the configuration entry for register_globals, the security chapter on Using Register Globals, as well as the PHP 4.1.0 and 4.2.0 Release Announcements.</seg></tuv>
      <tuv xml:lang="es"><seg>Qué revisión de la especificación CGI está usando el servidor; por ejemplo 'CGI / 1.1 '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the available PHP Reserved Predefined Variables, like the superglobal arrays, is preferred.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el script se está ejecutando en un servidor virtual, este será el valor definido para dicho servidor virtual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From version 4.1.0 onward, PHP provides an additional set of predefined arrays containing variables from the web server (if applicable), the environment, and user input.</seg></tuv>
      <tuv xml:lang="es"><seg>Nombre y revisión del protocolo a través del que se solicitó la página; p.ej. 'HTTP / 1.0';</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These new arrays are rather special in that they are automatically global--i.e., automatically available in every scope.</seg></tuv>
      <tuv xml:lang="es"><seg>La cadena de la petición, si la hubo, mediante la que se accedió a la página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For this reason, they are often known as' autoglobals' or'superglobals'. (There is no mechanism in PHP for user-defined superglobals.) The superglobals are listed below; however, for a listing of their contents and further discussion on PHP predefined variables and their natures, please see the section Reserved Predefined Variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Los contenidos de la cabecera Accept: de la petición actual, si hay alguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, you' ll notice how the older predefined variables ($HTTP_*_VARS) still exist.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo: 'iso-8859-1,*,utf-8'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable variables:</seg></tuv>
      <tuv xml:lang="es"><seg>Los contenidos de la cabecera Accept-Encoding: de la petición actual, si la hay.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Superglobals cannot be used as variable variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Los contenidos de la cabecera Accept-Language: de la petición actual, si hay alguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If certain variables in variables_order are not set, their appropriate PHP predefined arrays are also left empty.</seg></tuv>
      <tuv xml:lang="es"><seg>Los contenidos de la cabecera Connection: de la petición actual, si hay alguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Superglobals</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo: 'Keep-Alive'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contains a reference to every variable which is currently available within the global scope of the script.</seg></tuv>
      <tuv xml:lang="es"><seg>La dirección de la página (si la hay) desde la que el navegador saltó a la página actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys of this array are the names of the global variables. $GLOBALS has existed since PHP 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Los contenidos de la cabecera User_Agent: de la petición actual, si hay alguna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables set by the web server or otherwise directly related to the execution environment of the current script.</seg></tuv>
      <tuv xml:lang="es"><seg>Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_SERVER_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>Entre otras cosas, se puede usar este valor con get_browser() para adaptar la funcionalidad de la página a las posibilidades del navegador del usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP GET.</seg></tuv>
      <tuv xml:lang="es"><seg>La dirección IP desde la que el usuario está viendo la página actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_GET_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>La vía de acceso absoluta del script que se está ejecutando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP POST.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor que se haya dado a la directiva SERVER_ADMIN (en Apache) en el fichero de configuración del servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_POST_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>El puerto del equipo servidor que está usando el servidor web para la comunicación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP cookies.</seg></tuv>
      <tuv xml:lang="es"><seg>Para configuraciones por defecto, será '80'; al usar SSL, por ejemplo, cambiará al puerto que se haya definido como seguro para HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_COOKIE_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>Una cadena que contiene la versión del servidor y el nombre del servidor virtual que es añadida a las páginas generadas por el servidor, si está característica está activa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP post file uploads.</seg></tuv>
      <tuv xml:lang="es"><seg>Contiene la vía de acceso del script actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_POST_FILES array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>La URI que se dió para acceder a esta página; por ejemplo, '/ index.html'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See POST method uploads for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchas son proporcionadas por el intérprete de comandos en el que se está ejecutando PHP, y dado que a sistemas diferentes les gusta ejecutar diferentes tipos de intérpretes de comandos, es imposible hacer una lista definitiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via the environment.</seg></tuv>
      <tuv xml:lang="es"><seg>Por favor, mire la documentación de su intérprete de comandos para ver una lista de las variables de entorno definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_ENV_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>Estas variables son creadas por el propio PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via any user input mechanism, and which therefore cannot be trusted.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el script se ejecuta desde la línea de comandos, esto da un acceso, al estilo de C, a los parámetros pasados en línea de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The presence and order of variable inclusion in this array is defined according to the variables_order configuration directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Contiene el número de parámetros de la línea de comandos pasados al script (si se ejecuta desde la línea de comandos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This array has no direct analogue in versions of PHP prior to 4.1.0.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre del fichero que contiene el script que se esta ejecutando, relativo al directorio raíz de los documentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also import_request_variables().</seg></tuv>
      <tuv xml:lang="es"><seg>Si PHP se está ejecutando como intérprete de línea de comandos, esta variable no está disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Un array asociativo de variables pasadas al script actual mediante cookies HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When running on the command line, this will not include the argv and argc entries; these are present in the $_SERVER array.</seg></tuv>
      <tuv xml:lang="es"><seg>Un array asociativo de variables pasadas al script actual mediante el método HTTP GET.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables which are currently registered to a script 's session.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo está disponible si --variable tracking- - ha sido activado mediante la directiva de configuración track_vars o la directiva ?php_track_vars?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_SESSION_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>Un array asociativo de variables pasadas al script actual mediante el método HTTP POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Session handling functions section for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo está disponible si --variable tracking- - ha sido activado mediante la directiva de configuración track_vars o la directiva ?php_track_vars?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable scope</seg></tuv>
      <tuv xml:lang="es"><seg>Ambito de las variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the most part all PHP variables only have a single scope.</seg></tuv>
      <tuv xml:lang="es"><seg>El ámbito de una variable es el contexto dentro del que la variable está definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="es"><seg>La mayor parte de las variables PHP sólo tienen un ámbito simple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here the $a variable will be available within the included b.inc Here the $a variable will be available within the included b.inc script.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ámbito simple también abarca los ficheros incluidos y los requeridos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, within user-defined functions a local function scope is introduced.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any variable used inside a function is by default limited to the local function scope.</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1; include "b.inc";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1; / * global scope * / function Test() {echo $a; / * reference to local scope variable * /} Test();?</seg></tuv>
      <tuv xml:lang="es"><seg>Aquí, la variable $a dentro del script incluido b.inc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This script will not produce any output because the echo statement refers to a local version of the $a variable, and it has not been assigned a value within this scope.</seg></tuv>
      <tuv xml:lang="es"><seg>De todas formas, dentro de las funciones definidas por el usuario aparece un ámbito local a la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may notice that this is a little bit different from the C language in that global variables in C are automatically available to functions unless specifically overridden by a local definition.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier variables que se use dentro de una función está, por defecto, limitada al ámbito local de la función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can cause some problems in that people may inadvertently change a global variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example:</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1; / * ámbito global * / Function Test () {echo $a; / * referencia a una variable de ámbito local * /} Test ();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above script will output "3".</seg></tuv>
      <tuv xml:lang="es"><seg>Este script no producirá salida, ya que la orden echo utiliza una versión local de la variable $a, a la que no se ha asignado ningún valor en su ámbito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no limit to the number of global variables that can be manipulated by a function.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede que usted note que hay una pequeña diferencia con el lenguaje C, en el que las variables globales están disponibles automáticamente dentro de la función a menos que sean expresamente sobreescritas por una definición local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A second way to access variables from the global scope is to use the special PHP-defined $GLOBALS array.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede causar algunos problemas, ya que la gente puede cambiar variables globales inadvertidamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1; $b = 2; function Sum() {$GLOBALS["b"] = $GLOBALS["a"] + $GLOBALS["b"];} Sum(); echo $b;?</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP, las variables globales deben ser declaradas globales dentro de la función si van a ser utilizadas dentro de dicha función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $GLOBALS array is an associative array with the name of the global variable being the key and the contents of that variable being the value of the array element.</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1; $b = 2; Function Sum () {global $a, $b; $b = $a + $b;} Sum (); echo $b;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice how $GLOBALS exists in any scope, this is because $GLOBALS is a superglobal.</seg></tuv>
      <tuv xml:lang="es"><seg>El script anterior producirá la salida "3".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function test_global() {/ / Most predefined variables aren't "super "and require / / 'global 'to be available to the functions local scope. global $HTTP_POST_VARS; print $HTTP_POST_VARS['name']; / / Superglobals are available in any scope and do / / not require'global'.</seg></tuv>
      <tuv xml:lang="es"><seg>No hay límite al número de variables globales que se pueden manipular dentro de una función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another important feature of variable scoping is the static Another important feature of variable scoping is the static variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Un segundo método para acceder a las variables desde un ámbito global es usando el array $GLOBALS propio de PHP3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A static variable exists only in a local function scope, but it does not lose its value when program execution leaves this scope.</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo anterior se puede reescribir así:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function Test () {$a = 0; echo $a; $a++;}?</seg></tuv>
      <tuv xml:lang="es"><seg>$a = 1; $b = 2; Function Sum () {$GLOBALS["b"] = $GLOBALS["a"] + $GLOBALS["b"];} Sum (); echo $b;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $a + + which increments the variable serves no purpose since as soon as the function exits the $a variable disappears.</seg></tuv>
      <tuv xml:lang="es"><seg>El array $GLOBALS es un array asociativo con el nombre de la variable global como clave y los contenidos de dicha variable como el valor del elemento del array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To make a useful counting function which will not lose track of the current count, the $a variable is declared static:</seg></tuv>
      <tuv xml:lang="es"><seg>Otra característica importante del ámbito de las variables es la variable static.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Now, every time the Test() function is called it will print the value of $a and increment it.</seg></tuv>
      <tuv xml:lang="es"><seg>Una variable estática existe sólo en el ámbito local de la función, pero no pierde su valor cuando la ejecución del programa abandona este ámbito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Static variables also provide one way to deal with recursive functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Consideremos el siguiente ejemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A recursive function is one which calls itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Function Test () {$a = 0; echo $a; $a++;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must make sure you have an adequate way of terminating the recursion.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta función tiene poca utilidad ya que cada vez que es llamada asigna a $a el valor 0 y representa un "0".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function Test() {static $count = 0; $count++; echo $count; if ($count 10) {Test ();} $count--;}?</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia $a++, que incrementa la variable, no sirve para nada, ya que en cuanto la función termina la variable $a desaparece.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, a true global variable imported inside a function scope with the global statement actually creates a reference to the global variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Para hacer una función útil para contar, que no pierda la pista del valor actual del conteo, la variable $a debe declararse como estática:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can lead to unexpected behaviour which the following example addresses:</seg></tuv>
      <tuv xml:lang="es"><seg>Function Test () {static $a = 0; echo $a; $a++;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function test_global_ref() {global $obj; $obj = new stdclass;} function test_global_noref() {global $obj; $obj = new stdclass;} test_global_ref(); var_dump($obj); test_global_noref(); var_dump($obj);?</seg></tuv>
      <tuv xml:lang="es"><seg>Ahora, cada vez que se llame a la función Test(), se representará el valor de $a y se incrementará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL object( stdClass)(0) {}</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables estáticas también proporcionan una forma de manejar funciones recursivas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References are not stored statically:</seg></tuv>
      <tuv xml:lang="es"><seg>Una función recursiva es la que se llama a sí misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Executing this example will result in the following output:</seg></tuv>
      <tuv xml:lang="es"><seg>Se debe tener cuidado al escribir una función recursiva, ya que puede ocurrir que se llame a sí misma indefinidamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL Static object:</seg></tuv>
      <tuv xml:lang="es"><seg>Hay que asegurarse de implementar una forma adecuada de terminar la recursión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL Static object: object( stdClass)(1) {["property"]= int(1)}</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente función cuenta recursivamente hasta 10, usando la variable estática $count para saber cuándo parar:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example demonstrates that when assigning a reference to a static variable, it' s not remembered when you call the get_instance_ref() function a second time.</seg></tuv>
      <tuv xml:lang="es"><seg>Function Test () {static $count = 0; $count++; echo $count; if ($count 10) {Test ();} $count--;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes it is convenient to be able to have variable variable names.</seg></tuv>
      <tuv xml:lang="es"><seg>A veces es conveniente tener nombres de variables variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, a variable name which can be set and used dynamically.</seg></tuv>
      <tuv xml:lang="es"><seg>Dicho de otro modo, son nombres de variables que se pueden establecer y usar dinámicamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A normal variable is set with a statement such as:</seg></tuv>
      <tuv xml:lang="es"><seg>Una variable normal se establece con una sentencia como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = "hello";?</seg></tuv>
      <tuv xml:lang="es"><seg>$a = "hello";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A variable variable takes the value of a variable and treats that as the name of a variable.</seg></tuv>
      <tuv xml:lang="es"><seg>Una variable variable toma el valor de una variable y lo trata como el nombre de una variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the above example, hello, can be used as the name of a variable by using two dollar signs. i.e.</seg></tuv>
      <tuv xml:lang="es"><seg>En el ejemplo anterior, hello, se puede usar como el nombre de una variable utilizando dos signos de dólar. p.ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $$a = "world";?</seg></tuv>
      <tuv xml:lang="es"><seg>$$a = "world";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, this statement:</seg></tuv>
      <tuv xml:lang="es"><seg>En este momento se han definido y almacenado dos variables en el árbol de símbolos de PHP: $a, que contiene "hello", y $hello, que contiene "world".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo "$a ${$a}";?</seg></tuv>
      <tuv xml:lang="es"><seg>Es más, esta sentencia:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>produces the exact same output as:</seg></tuv>
      <tuv xml:lang="es"><seg>echo "$a ${$a}";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>i.e. they both produce: hello world.</seg></tuv>
      <tuv xml:lang="es"><seg>produce el mismo resultado que:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use variable variables with arrays, you have to resolve an ambiguity problem.</seg></tuv>
      <tuv xml:lang="es"><seg>echo "$a $hello";</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, if you write $$a[ 1] then the parser needs to know if you meant to use $a[1] as a variable, or if you wanted $$a as the variable and then the [1] index from that variable.</seg></tuv>
      <tuv xml:lang="es"><seg>p.ej. ambas producen el resultado: hello world.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Para usar variables variables con arrays, hay que resolver un problema de ambigüedad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means you cannot do things like ${$_GET}.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se escribe $$a[ 1] el intérprete necesita saber si nos referimos a utilizar $a[1] como una variable, o si se pretendía utilizar $$a como variable y el índice [1] como índice de dicha variable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are looking for a way to handle availability of superglobals and the old HTTP_*_VARS, you might want to try referencing them.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis para resolver esta ambiguedad es: ${$a[1]} para el primer caso y ${$a}[1] para el segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix B.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice B.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example B-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo B-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Migrating from PHP / FI 2 to PHP 3</seg></tuv>
      <tuv xml:lang="es"><seg>Migrando de PHP / FI 2.0 a PHP 3.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3.0 is rewritten from the ground up.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP 3.0 ha sido reescrito desde cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It has a proper parser that is much more robust and consistent than 2.0 's.</seg></tuv>
      <tuv xml:lang="es"><seg>Tiene un intérprete propio, que es mucho mas robusto y consistente que el de 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3.0 is also significantly faster, and uses less memory.</seg></tuv>
      <tuv xml:lang="es"><seg>3.0 es también significativamente mas rápido, y usa menos memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, some of these improvements have not been possible without compatibility changes, both in syntax and functionality.</seg></tuv>
      <tuv xml:lang="es"><seg>De cualquier modo, algunas de estas mejoras no fueron posibles sin alterar la compatibilidad, tanto de sintaxis como de funcionamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition, PHP' s developers have tried to clean up both PHP's syntax and semantics in version 3.0, and this has also caused some incompatibilities.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, los desarrolladores de PHP han intentado clarificar la sintaxis y la semántica de PHP 3.0, y eso ha causado también algunas incompatibilidades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the long run, we believe that these changes are for the better.</seg></tuv>
      <tuv xml:lang="es"><seg>Creemos que, a la larga, estos cambios serán para mejor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This chapter will try to guide you through the incompatibilities you might run into when going from PHP / FI 2.0 to PHP 3.0 and help you resolve them.</seg></tuv>
      <tuv xml:lang="es"><seg>Este capítulo, intentará guiarle a través de las incompatibilidades que encontrará si migra de PHP / FI 2.0 a PHP 3.0, además de ayudarle a resolverlas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>New features are not mentioned here unless necessary.</seg></tuv>
      <tuv xml:lang="es"><seg>No se mencionarán aquí las herramientas nuevas, hasta que sea necesario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A conversion program that can automatically convert your old PHP / FI 2.0 scripts exists.</seg></tuv>
      <tuv xml:lang="es"><seg>Existe un programa que convierte automáticamente sus viejos guiones PHP / FI 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This program only catches the syntax changes though, so you should read this chapter carefully anyway.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede hallarlo en el subdirectorio convertor de la distribucion 3.0 de PHP Este programa, solo actúa en referencia a los cambios sintácticos, así que debería leer este capítulo detenidamente, de todos modos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Start / end tags</seg></tuv>
      <tuv xml:lang="es"><seg>Tags de inicio y fin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Manual</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Translations</seg></tuv>
      <tuv xml:lang="es"><seg>Sobre la traducción al español</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The names in parentheses refer to internal PCRE names for these modifiers.</seg></tuv>
      <tuv xml:lang="es"><seg>Modificadores de Patrones - - describe los modificadores posibles en los patrones de expresiones regulares (regex)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this modifier is set, letters in the pattern match both upper and lower case letters.</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres entre paréntesis se refieren a nombres internos PCRE para dichos modificadores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, PCRE treats the subject string as consisting of a single "line" of characters (even if it actually contains several newlines).</seg></tuv>
      <tuv xml:lang="es"><seg>Si es usado, no se distinguirá entre mayúsculas y minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When this modifier is set, the "start of line" and "end of line "constructs match immediately following or immediately before any newline in the subject string, respectively, as well as at the very start and end.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, PCRE trata la cadena de entrada como si fuera una sola línea de caracteres (aun cuando tenga varias).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are no "\n" characters in a subject string, or no occurrences of ^ or $in a pattern, setting this modifier has no effect.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es lo mismo que en Perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without it, newlines are excluded.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando este modificador es utilizado, los constructores de "inicio de línea" y "fin de línea "son emparejados con el carácter de nueva línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This modifier is equivalent to Perl 's / s modifier.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es equivalente al modificador / m del Perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A negative class such as [^a] always matches a newline character, independent of the setting of this modifier.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no hay caracteres "\n" en la cadena de entrada, o no existen ^ o $en el patrón, entonces este modificador no alterará el resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this modifier is set, whitespace data characters in the pattern are totally ignored except when escaped or inside a character class, and characters between an unescaped # outside a character class and the next newline character, inclusive, are also ignored.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se usa, el carácter especial de un punto en el patrón emparejará todos los caracteres, incluyendo el de nueva línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is equivalent to Perl 's / x modifier, and makes it possible to include comments inside complicated patterns.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin él, el carácter de nueva línea es excluido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, however, that this applies only to data characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Este modificador equivale a / s en Perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whitespace characters may never appear within special character sequences in a pattern, for example within the sequence (? (which introduces a conditional subpattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Una cláusula como [^a] siempre casa con un carácter de nueva línea, independientemente de la utilización de este modificador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this modifier is set, preg_replace() does normal substitution of backreferences in the replacement string, evaluates it as PHP code, and uses the result for replacing the search string.</seg></tuv>
      <tuv xml:lang="es"><seg>Los caracteres de espacio en blanco nunca pueden aparecer en la secuencia de caracteres especiales de un patrón, por ejemplo en la secuencia (? (la cual introduce un subpatrón condicional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only preg_replace() uses this modifier; it is ignored by other PCRE functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es usado, preg_replace() hace las sustituciones\\ de forma habitual, evalúa el código PHP y usa el resultado para realizar una sustitución en la cadena de búsqueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This modifier was not available in PHP3.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo preg_replace() hace uso de este modificador y es ignorado por las otras funciones PCRE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this modifier is set, the pattern is forced to be "anchored", that is, it is constrained to match only at the start of the string which is being searched (the "subject string").</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This effect can also be achieved by appropriate constructs in the pattern itself, which is the only way to do it in Perl.</seg></tuv>
      <tuv xml:lang="es"><seg>Este modificador fue añadido en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without this modifier, a dollar also matches immediately before the final character if it is a newline (but not before any other newlines).</seg></tuv>
      <tuv xml:lang="es"><seg>Si es definido, el patrón es forzado a ser "anclado", esto es, es obligado a emparejar sólo desde el inicio de la cadena (el "subject string").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no equivalent to this modifier in Perl.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta característica también puede realizarse con el apropiado patrón, y esta es la única manera de hacerlo en Perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this modifier is set, then this extra analysis is performed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es usado, el carácter del dólar en el patrón casará sólo con fin de la cadena de entrada (subject).Sin este modificador, un dólar es también emparejado con el carácter inmediatamente antes del de una nueva línea (pero no antes de cualquier otra nueva línea).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At present, studying a pattern is useful only for non-anchored patterns that do not have a single fixed starting character.</seg></tuv>
      <tuv xml:lang="es"><seg>No hay equivalente en Perl para este modificador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This modifier inverts the "greediness" of the quantifiers so that they are not greedy by default, but become greedy if followed by "?".</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando un patrón va a ser usado varias veces, es mejor dedicar más tiempo a analizarlo para acelerar el proceso de casamientos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not compatible with Perl.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es definido entonces se realizar un análisis adicional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can also be set by a (?U) modifier setting within the pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Estudiar a un patrón es sólo útil para los no anclados, esto es, no tienen un carácter de inicio fijado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any backslash in a pattern that is followed by a letter that has no special meaning causes an error, thus reserving these combinations for future expansion.</seg></tuv>
      <tuv xml:lang="es"><seg>Este modificador invierte la "codicia" de los cuantificadores aunque no son ansiosos por defecto, se vuelven codiciosos si son seguidos por un "?".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are at present no other features controlled by this modifier.</seg></tuv>
      <tuv xml:lang="es"><seg>No es compatible con Perl. también puede usarse dentro del patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pattern strings are treated as UTF-8.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier barra invertida en el patrón que sea seguida por una letra que no tenga una interpretación especial provocará un error, estas combinaciones están reservado para futuras ampliaciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This modifier is available from PHP 4.1.0 or greater on Unix and from PHP 4.2.3 on win32.</seg></tuv>
      <tuv xml:lang="es"><seg>No hay otras características controladas por este modificador a la fecha de hoy.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pattern Syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Sintaxis de los Patrones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current implementation corresponds to Perl 5.005.</seg></tuv>
      <tuv xml:lang="es"><seg>La librería PCRE es un conjunto de funciones que implementan emparejamientos dados patrones de expresiones regulares usando la misma sintaxis y semántica queLa librería PCRE es un conjunto de funciones que implementan emparejamientos dados patrones de expresiones regulares usando la misma sintaxis y semántica que Perl 5, con unas pocas diferencias (ver más adelante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The differences described here are with respect to Perl 5.005.</seg></tuv>
      <tuv xml:lang="es"><seg>Las diferencias descritas aquí son con respecto a Perl 5.005.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Normally isspace() matches space, formfeed, newline, carriage return, horizontal tab, and vertical tab.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, un carácter de espacio en blanco es cualquier carácter que la función isspace() de la librería C reconozca, así es posiblePor defecto, un carácter de espacio en blanco es cualquier carácter que la función isspace() de la librería C reconozca, así es posible compilar PCRE con tablas alternativas de tipos de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The \v escape that was in the Perl documentation for a long time was never in fact recognized.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente isspace() casa con el espacio, salto de pagina, nueva línea, retorno de carro,Normalmente isspace() casa con el espacio, salto de pagina, nueva línea, retorno de carro, tabulador horizontal y vertical.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In 5.004 and 5.005 it does not match \s.</seg></tuv>
      <tuv xml:lang="es"><seg>Perl 5 ya no incluye el tabulador verticalPerl 5 ya no incluye el tabulador vertical en su conjunto de caracteres de espacio en blanco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Perl permits them, but they do not mean what you might think.</seg></tuv>
      <tuv xml:lang="es"><seg>La secuencia de escape \n que estuvo durante mucho tiempo en la documentación de Perl nuncaLa secuencia de escape \n que estuvo durante mucho tiempo en la documentación de Perl nunca fue reconocida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It just asserts that the next character is not "a" three times.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, el carácter fue tratado como espacio en blancoSin embargo, el carácter fue tratado como espacio en blanco hasta la 5.002.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Capturing subpatterns that occur inside negative looka - head assertions are counted, but their entries in the offsets vector are never set.</seg></tuv>
      <tuv xml:lang="es"><seg>En 5.004 y 5.005 no casa \s.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Perl sets its numerical vari - ables from any such patterns that are matched before the assertion fails to match something (thereby succeeding), but only if the negative lookahead assertion contains just one branch.</seg></tuv>
      <tuv xml:lang="es"><seg>Perl las permite, pero no de la forma que puedas pensar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Though binary zero characters are supported in the subject string, they are not allowed in a pattern string because it is passed as a normal C string, terminated by zero.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, (?!a){3} no dice que los próximos tres caracteres no son "a ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The escape sequence "\\x00" can be used in the pattern to represent a binary zero.</seg></tuv>
      <tuv xml:lang="es"><seg>3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact these are implemented by Perl 's general string-handling and are not part of its pat - tern matching engine.</seg></tuv>
      <tuv xml:lang="es"><seg>Los subpatrones encontrados dentro de sentencias de más adelante negativas son contados, pero sus entradas en el vector de desplazamientosLos subpatrones encontrados dentro de sentencias de más adelante negativas son contados, pero sus entradas en el vector de desplazamientos no son definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fairly obviously, PCRE does not support the (?{code}) construction.</seg></tuv>
      <tuv xml:lang="es"><seg>Perl define sus variables numéricas desde cualquiera de tales patrones que son casados antes de que la sentencia falle emparejar algo, pero solo si las sentencies de más adelante negativas contienen una opción sola.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, matching "aba" against the pattern / ^(a(b) ?)+$ / sets $2 to the value "b", but matching "aabbaa "against / ^(aa(bb)? )+$ / leaves $2 unset.</seg></tuv>
      <tuv xml:lang="es"><seg>Aunque los caracteres de cero binario son soportados en la cadena de entrada, no son permitidos en un patrón porque son pasados como un cadenaAunque los caracteres de cero binario son soportados en la cadena de entrada, no son permitidos en un patrón porque son pasados como un cadena típica de C, terminada por cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if the pattern is changed to / ^( aa(b(b)) ?)+$ / then $2 (and $3) get set.</seg></tuv>
      <tuv xml:lang="es"><seg>La secuencia de escape "\0" puede ser usada en el patrón para representar el cero binario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If in the future Perl changes to a consistent state that is different, PCRE may change to follow.</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes secuencias de Perl no son soportadas:Las siguientes secuencias de Perl no son soportadas: \l, \u, \L, \U, \E, \Q.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another as yet unresolved discrepancy is that in Perl 5.005_02 the pattern / ^( a) ?(?(1)a_BAR_b)+$ / matches the string "a ", whereas in PCRE it does not.</seg></tuv>
      <tuv xml:lang="es"><seg>En efecto, estas son implementadas por manipuladores de cadenas típicos de Perl y no son parte de los patrones del motor de búsqueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PCRE provides some extensions to the Perl regular expression facilities:</seg></tuv>
      <tuv xml:lang="es"><seg>La secuencia \G de Perl no es soportada ya que no es relevante para emparejamientos de patrones sencillos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although lookbehind assertions must match fixed length strings, each alternative branch of a lookbehind assertion can match a different length of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Obviamente, PCRE no soporta el constructor (?{code})Obviamente, PCRE no soporta el constructor (?{code}) 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PCRE_DOLLAR_ENDONLY is set and PCRE_MULTILINE is not set, the $meta - character matches only at the very end of the string.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay algunas diferencias en Perl 5.005_02 respecto a las definicionesHay algunas diferencias en Perl 5.005_02 respecto a las definiciones de las cadenas de captura cuando parte de un patrón es repetido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PCRE_UNGREEDY is set, the greediness of the repeti - tion quantifiers is inverted, that is, by default they are not greedy, but if followed by a question mark they are.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, casando "aba" con el patrón / ^(a(b) ?)+$ / define $2 al valor "b",Por ejemplo, casando "aba "con el patrón / ^(a(b) ?)+$ / define $2 al valor "b", pero emparejando "aabbaa" con / ^(aa(bb)? )+$ / deja $2 sin definir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax and semantics of the regular expressions sup - ported by PCRE are described below.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si el patrón es cambiado a / ^( aa(b(b)) ?)+$ / entones $2 (y $3) son definidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regular expressions are also described in the Perl documentation and in a number of other books, some of which have copious examples.</seg></tuv>
      <tuv xml:lang="es"><seg>En Perl 5.004 $2 es definido en ambos casos, y también es cierto en PCRE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Jeffrey Friedl' s "Mastering Regular Expressions", published by O'Reilly (ISBN 1-56592-257-3), covers them in great detail.</seg></tuv>
      <tuv xml:lang="es"><seg>9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A regular expression is a pattern that is matched against a subject string from left to right.</seg></tuv>
      <tuv xml:lang="es"><seg>Otra discrepancia aún no resuelta es que en Perl 5.005_02 el patrónOtra discrepancia aún no resuelta es que en Perl 5.005_02 el patrón / ^( a) ?(?(1)a_BAR_b)+$ / casa la cadena "a ", pero en PCRE eso no es así.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most characters stand for themselves in a pattern, and match the corresponding charac - ters in the subject.</seg></tuv>
      <tuv xml:lang="es"><seg>10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As a trivial example, the pattern The quick brown fox matches a portion of a subject string that is identical to itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Perl 5.005 requiere que todas ellas tengan la misma longitud. (b) Si es definido PCRE_DOLLAR_ENDONLY y PCRE_MULTILINE no lo es, el carácter especial $sólo casa con el final de la cadena. (c) Si se define PCRE_EXTRA, una barra invertida seguida de una letra sin un significado especial provoca un error. (d) Si defines PCRE_UNGREEDY, la voracidad de los cuantificadores de repetición es invertida, esto es, por defecto son no codiciosos, pero seguidos por una interrogación si lo son.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The power of regular expressions comes from the ability to include alternatives and repetitions in the pat - tern.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis y la semántica de las expresiones soportadas por PCRE esLa sintaxis y la semántica de las expresiones soportadas por PCRE es descrita a continuación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two different sets of meta-characters: those that are recognized anywhere in the pattern except within square brackets, and those that are recognized in square brackets.</seg></tuv>
      <tuv xml:lang="es"><seg>Las expresiones son descritas en la documentación del Perl y en numerosos libros, algunos de los cuales tienen mucho ejemplares, Jeffrey Friedl' s "Mastering Regular Expressions", publicadoLas expresiones son descritas en la documentación del Perl y en numerosos libros, algunos de los cuales tienen mucho ejemplares, Jeffrey Friedl's "Mastering Regular Expressions", publicado por O'Reilly (ISBN 1-56592-257-3), las cubre con gran detalle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>general escape character with several uses</seg></tuv>
      <tuv xml:lang="es"><seg>La presente descripción es propuesta como documentación de referencia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>assert end of subject (or line, in multiline mode)</seg></tuv>
      <tuv xml:lang="es"><seg>Una expresión es un patrón que es emparejada repetidamente, dada una cadenaUna expresión es un patrón que es emparejada repetidamente, dada una cadena de entrada, de izquierda a derecha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>start character class definition</seg></tuv>
      <tuv xml:lang="es"><seg>Muchos caracteres se representan a ellosMuchos caracteres se representan a ellos mismos en el patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>start of alternative branch</seg></tuv>
      <tuv xml:lang="es"><seg>Como un ejemplo trivial, el patrón The quick brown foxComo un ejemplo trivial, el patrón The quick brown fox casa una parte de una cadena de entrada que es idéntica a ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>end subpattern</seg></tuv>
      <tuv xml:lang="es"><seg>El poder de las expresiones proviene de la posibilidad de incluir alternativas yEl poder de las expresiones proviene de la posibilidad de incluir alternativas y repeticiones en el patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 or more quantifier</seg></tuv>
      <tuv xml:lang="es"><seg>Éstos son codificados en el patrón usando meta - characters (caracteres especiales también llamados meta caracteres), los cuales no se representan a ellos mismos, en vez de eso, son interpretados de una manera especial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>start min / max quantifier</seg></tuv>
      <tuv xml:lang="es"><seg>Fuera de los corchetes, los caracteres especiales son:\ carácter de escape genérico con diferentes usos ^ secuencia de inicio de la cadena de entrada (o línea, en modo multilínea) $secuencia de fin de la cadena de entrada (o línea, en modo multilínea). empareja cualquier carácter excepto el de nueva línea (por defecto) [inicia definición de clase de caracteres _BAR_ inicio de opción alternativa (inicio de subpatrón) fin de subpatrón? amplia el significado de (también es el cuantificador 0 ó 1 también es el cuantificador minimizado * cero o más cuantificadores + uno o más cuantificadores {inicia el cuantificador min / max Parte de un patrón dentro de corchetes ([]) es llamado un "character class"Fuera de los corchetes, los caracteres especiales son:\ carácter de escape genérico con diferentes usos ^ secuencia de inicio de la cadena de entrada (o línea, en modo multilínea) $secuencia de fin de la cadena de entrada (o línea, en modo multilínea). empareja cualquier carácter excepto el de nueva línea (por defecto) [inicia definición de clase de caracteres _BAR_ inicio de opción alternativa (inicio de subpatrón) fin de subpatrón? amplia el significado de (también es el cuantificador 0 ó 1 también es el cuantificador minimizado * cero o más cuantificadores + uno o más cuantificadores {inicia el cuantificador min / max Parte de un patrón dentro de corchetes ([]) es llamado un "character class "(clase de caracteres).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>general escape character</seg></tuv>
      <tuv xml:lang="es"><seg>En una clase de caracteres los únicos caracteres especiales son:\ carácter de escape genérico ^ niega la clase, pero sólo si el primer carácter - indica un rango de caracteres] finaliza la clase de caracteres Las secciones siguientes describen el uso de cada uno de los caracteres especiales (meta caracteres).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>indicates character range</seg></tuv>
      <tuv xml:lang="es"><seg>BARRA INVERTIDABARRA INVERTIDA El carácter de barra invertida tiene varios usos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The backslash character has several uses.</seg></tuv>
      <tuv xml:lang="es"><seg>Primero, si es seguido por un carácter que no sea alfanumérico, toma el significado que elPrimero, si es seguido por un carácter que no sea alfanumérico, toma el significado que el carácter pueda tener.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Firstly, if it is followed by a non-alphanumeric character, it takes away any special meaning that character may have.</seg></tuv>
      <tuv xml:lang="es"><seg>Este uso de la barra invertida, como un carácter de escape, se aplica tanto dentro como fuera de las clases de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This use of backslash as an escape character applies both inside and outside character classes.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si quieres casar un carácter "*", debes escribir "\*" en el patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This applies whether or not the follow - ing character would otherwise be interpreted as a meta - character, so it is always safe to precede a non-alphanumeric with "\" to specify that it stands for itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es aplicable ya sea o no el carácter siguiente interpretado como un carácter especial, por eso siempre es aconsejable preceder un carácterEsto es aplicable ya sea o no el carácter siguiente interpretado como un carácter especial, por eso siempre es aconsejable preceder un carácter no alfanumérico con "\" para especificar que se representa a él mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In particu - lar, if you want to match a backslash, you write "\\".</seg></tuv>
      <tuv xml:lang="es"><seg>En particular, si quieres casar una barra invertida, escribe "\\".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An escaping backslash can be used to include a whitespace or "#" character as part of the pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el patrón es compilado con la opción PCRE_EXTENDED, los espacios en blanco en el patrón (fuera de una clase de caracteres) y los caracteres entre un "# "fuera de una clase de caracteres y el carácter de nueva líneaSi el patrón es compilado con la opción PCRE_EXTENDED, los espacios en blanco en el patrón (fuera de una clase de caracteres) y los caracteres entre un "#" fuera de una clase de caracteres y el carácter de nueva línea son ignorado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A second use of backslash provides a way of encoding non - printing characters in patterns in a visible manner.</seg></tuv>
      <tuv xml:lang="es"><seg>Una barra invertida de escape puede usarse para incluir un espacio en blanco o el carácter "#" como parte del patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no restriction on the appearance of non-printing characters, apart from the binary zero that terminates a pattern, but when a pattern is being prepared by text editing, it is usually easier to use one of the following escape sequences than the binary character it represents:</seg></tuv>
      <tuv xml:lang="es"><seg>Un segundo uso de la barra invertida sirve para codificar caracteres noUn segundo uso de la barra invertida sirve para codificar caracteres no imprimibles en los patrones de una manera visible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"control-x", where x is any character</seg></tuv>
      <tuv xml:lang="es"><seg>No hay restricciones sobre la apariencia de los caracteres no imprimibles, quitando el cero binario de terminación de un patrón, pero cuando un patrón es preparado con un editor de texto, normalmente es fácil utilizar una de las siguientes secuencias de escape que representan sus caracteres binarios: \a alarma, esto es, el carácter BEL (07 en hexadecimal) \cx "control-x", donde x es cualquier carácter \e escape (1B en hexadecimal) \f nueva página (0C en hexadecimal) \n nueva línea (0A en hexadecimal) \r retorno de carro (0D en hexadecimal) \t tabulador (09 en hexadecimal) \xhh carácter con código hh en hexadecimal \ddd carácter con código ddd en octal El efecto de "\cx "es como sigue: si "x" es una letra minúscula,No hay restricciones sobre la apariencia de los caracteres no imprimibles, quitando el cero binario de terminación de un patrón, pero cuando un patrón es preparado con un editor de texto, normalmente es fácil utilizar una de las siguientes secuencias de escape que representan sus caracteres binarios: \a alarma, esto es, el carácter BEL (07 en hexadecimal) \cx "control-x", donde x es cualquier carácter \e escape (1B en hexadecimal) \f nueva página (0C en hexadecimal) \n nueva línea (0A en hexadecimal) \r retorno de carro (0D en hexadecimal) \t tabulador (09 en hexadecimal) \xhh carácter con código hh en hexadecimal \ddd carácter con código ddd en octal El efecto de "\cx "es como sigue: si "x" es una letra minúscula, es convertida a mayúscula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>formfeed (hex 0C)</seg></tuv>
      <tuv xml:lang="es"><seg>Entonces el sexto bit del carácter (40 enEntonces el sexto bit del carácter (40 en hexadecimal) es invertido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>carriage return (hex 0D)</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es, "\cz" es 1A en hexadecimal, pero "\c{ "es 3B en hexadecimal, mientras "\c;" es 7B en hexadecimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>character with hex code hh</seg></tuv>
      <tuv xml:lang="es"><seg>Después de "\x", hasta dos dígitos hexadecimales son leídos (las letras pueden ser mayúsculas o minúsculas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>character with octal code ddd, or backreference</seg></tuv>
      <tuv xml:lang="es"><seg>Después de "\0" son leídos dos dígitos octales más.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The precise effect of "\cx" is as follows: if "x" is a lower case letter, it is converted to upper case.</seg></tuv>
      <tuv xml:lang="es"><seg>En ambos casos, si hayEn ambos casos, si hay menos de dos dígitos, se usrará lo que haya.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus "\cz" becomes hex 1A, but "\c {" becomes hex 3B, while "\c;" becomes hex 7B.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es, la secuencia "\0\x\07"Esto es, la secuencia "\0\x\07" indica dos ceros binarios seguidos por un carácter BEL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After "\x", up to two hexadecimal digits are read (letters can be in upper or lower case).</seg></tuv>
      <tuv xml:lang="es"><seg>Asegúrate dar dos dígitos después del inicial cero si el carácter que sigue es un dígito octal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In both cases, if there are fewer than two digits, just those that are present are used.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de una barra invertida seguido por otro dígito que no sea el ceroEl uso de una barra invertida seguido por otro dígito que no sea el cero es complejo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure you supply two digits after the initial zero if the character that follows is itself an octal digit.</seg></tuv>
      <tuv xml:lang="es"><seg>Fuera de una clase carácter, PCRE interpreta cualquier dígitoFuera de una clase carácter, PCRE interpreta cualquier dígito como un número decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Outside a character class, PCRE reads it and any following digits as a decimal number.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el número es menor que diez, o si ha habido al menos tantos paréntesis capturados a la izquierda en la expresión, entonces la secuencia entera es tomada como una back reference (referencia atrás).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the number is less than 10, or if there have been at least that many previous capturing left parentheses in the expression, the entire sequence is taken as a back reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Una descripción de como trabaja esto es dada después, siguiendo la discusión de subpatrones con paréntesis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inside a character class, or if the decimal number is greater than 9 and there have not been that many capturing subpatterns, PCRE re-reads up to three octal digits following the backslash, and generates a single byte from the least significant 8 bits of the value.</seg></tuv>
      <tuv xml:lang="es"><seg>Dentro de una clase carácter, o si el número decimal es mayor que nueve y no ha habido tantos subpatrones capturados PCRE relee los tres dígitos octales siguientes a la barra invertida y genera un byte desde los ochoDentro de una clase carácter, o si el número decimal es mayor que nueve y no ha habido tantos subpatrones capturados PCRE relee los tres dígitos octales siguientes a la barra invertida y genera un byte desde los ocho bits menos significativos del valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier dígito a continuación seCualquier dígito a continuación se representa a él mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is another way of writing a space</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo: \040 es otro modo de escribir un espacio \40 es lo mismo, siempre que haya menos de cuarenta subpatrones abiertos \7 siempre es una referencia atrás \11 puede ser una referencia atrás o un tabulador \011 siempre es un tabulador \0113 es el carácter con código octal 113 (ya que no puede haber más de noventa y nueve referencias atrás) \377 es un byte con todos sus bits a uno \81 puede ser una referencia atrás o un cero binario seguido por dos caracteres "8 "y "1" Ten en cuenta que el valor octal de un número mayor o igual a cien no debe ser precedido por un cero ya que no son leídos más de tres dígitos octales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is always a back reference</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las secuencias que definen el valor de un byte pueden ser usadasTodas las secuencias que definen el valor de un byte pueden ser usadas tanto dentro como fuera de la clase carácter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is always a tab</seg></tuv>
      <tuv xml:lang="es"><seg>Además, la secuenciaAdemás, la secuencia "\b" es interpretada como el carácter backspace (hex 08) dentro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is a tab followed by the character "3"</seg></tuv>
      <tuv xml:lang="es"><seg>Fuera es definido de otra manera (ver más adelante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is a byte consisting entirely of 1 bits</seg></tuv>
      <tuv xml:lang="es"><seg>El tercer uso de la barra invertida es para especificar los tipos de caracteres genéricos: \d cualquier un dígito decimal \D cualquier carácter que no sea un dígito decimal \s cualquier carácter de espacio en blanco (whitespace) \S cualquier carácter que no sea un espacio en blanco \w cualquier carácter de "palabra "\W cualquier carácter que no se de "palabra" Cada pareja de secuencia de escape divide el conjunto global de caracteresEl tercer uso de la barra invertida es para especificar los tipos de caracteres genéricos: \d cualquier un dígito decimal \D cualquier carácter que no sea un dígito decimal \s cualquier carácter de espacio en blanco (whitespace) \S cualquier carácter que no sea un espacio en blanco \w cualquier carácter de "palabra "\W cualquier carácter que no se de "palabra" Cada pareja de secuencia de escape divide el conjunto global de caracteres en dos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is either a back reference, or a binary zero followed by the two characters "8" and "1 "</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier carácter dado empareja en uno y sólo uno de cada pareja.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All the sequences that define a single byte value can be used both inside and outside character classes.</seg></tuv>
      <tuv xml:lang="es"><seg>Un carácter de "palabra" es cualquier letra o dígito o el carácter subrayado,Un carácter de "palabra "es cualquier letra o dígito o el carácter subrayado, esto es, cualquier carácter puede ser parte de una "palabra" en Perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Outside a character class it has a different meaning (see below).</seg></tuv>
      <tuv xml:lang="es"><seg>La definición de letras y dígitos es controlada por la tabla de caracteres de PERL, y puede ser variada si las especificaciones regionales son tomadas enLa definición de letras y dígitos es controlada por la tabla de caracteres de PERL, y puede ser variada si las especificaciones regionales son tomadas en cuenta (ver "Soporte regional más adelante").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>any decimal digit</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, en Francia algunos caracteres tienen un código superior a 128, para representar las letras acentuadas, y son emparejados por \w.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>any whitespace character</seg></tuv>
      <tuv xml:lang="es"><seg>Estas secuencias de tipos de caracteres pueden aparecer tanto dentro comoEstas secuencias de tipos de caracteres pueden aparecer tanto dentro como fuera de las clases carácter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>any "word" character</seg></tuv>
      <tuv xml:lang="es"><seg>Cada una casa un carácter del tipo apropiado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each pair of escape sequences partitions the complete set of characters into two disjoint sets.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el punto de casamiento actual es el final de la cadena, todo ello falla, ya que no hay más caracteres que casar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A "word" character is any letter or digit or the underscore character, that is, any character which can be part of a Perl "word".</seg></tuv>
      <tuv xml:lang="es"><seg>El cuarto uso de la barra invertida es para ciertas sentencias (assertions).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, in the "fr" (French) locale, some char - acter codes greater than 128 are used for accented letters, and these are matched by \w.</seg></tuv>
      <tuv xml:lang="es"><seg>Una sentencia especifica una condición que tiene que ser encontrada en un punto particular de un emparejamiento, sin utilizar ningún carácter de laUna sentencia especifica una condición que tiene que ser encontrada en un punto particular de un emparejamiento, sin utilizar ningún carácter de la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They each match one character of the appropriate type.</seg></tuv>
      <tuv xml:lang="es"><seg>El uso de subpatrones para sentencias más complicadasEl uso de subpatrones para sentencias más complicadas es descrito después.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fourth use of backslash is for certain simple asser - tions.</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentencias de barra invertida son \b limites de palabra \B no sean limites de palabra \A inicio de la cadena de entrada (independiente del modo multilínea) \Z fin de la cadena de entrada o de una nueva línea delante del final (independiente del modo multilínea) \z fin de la cadena de entrada (independiente de modo multilínea) Estas sentencias no pueden aparecer dentro de una clase carácter (pero ten en cuenta que "\b "tiene un significado diferente, quiere decir el carácter backspace dentro de una clase carácter) Un límite de palabra es una posición en la cadena de entrada donde un carácter y el anterior no emparejan con \w o \W (por ejemplo, uno casa con \w y el otro con \W), o el principio o el final de la cadena si el primero o el último carácter emparejan con \w, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The use of subpatterns for more complicated assertions is described below.</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentencias \A, \Z y \z se diferencian de los tradicionales circunflejo y dólar (ver más adelante) en que sólo emparejan el inicio y fin de laLas sentencias \A, \Z y \z se diferencian de los tradicionales circunflejo y dólar (ver más adelante) en que sólo emparejan el inicio y fin de la cadena de entrada sin tener en cuenta las opciones definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>start of subject (independent of multiline mode)</seg></tuv>
      <tuv xml:lang="es"><seg>No les afectanNo les afectan las opciones PCRE_NOTBOL o PCRE_NOTEOL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>end of subject( independent of multiline mode)</seg></tuv>
      <tuv xml:lang="es"><seg>La diferencia entre \Z y \z es que \Z casa antes una nueva línea que es el último carácter de la cadena como también el final de la cadena, sin embargo \z sólo casa el final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A word boundary is a position in the subject string where the current character and the previous character do not both match \w or \W (i.e. one matches \w and the other matches \W), or the start or end of the string if the first or last character matches \w, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>CIRCUNFLEJO Y DOLAR Fuera de una clase carácter, en el modo de emparejamiento por defecto, el carácter circunflejo es una sentencia la cual es verdadera sólo si el puntoCIRCUNFLEJO Y DOLAR Fuera de una clase carácter, en el modo de emparejamiento por defecto, el carácter circunflejo es una sentencia la cual es verdadera sólo si el punto de casamiento actual es el inicio de la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The \A, \Z, and \z assertions differ from the traditional circumflex and dollar (described below) in that they only ever match at the very start and end of the subject string, whatever options are set.</seg></tuv>
      <tuv xml:lang="es"><seg>Dentro de una clase carácter, el circunflejo tiene significado completamente distinto (ver más adelante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The difference between \Z and \z is that \Z matches before a newline that is the last character of the string as well as at the end of the string, whereas \z matches only at the end.</seg></tuv>
      <tuv xml:lang="es"><seg>El circunflejo no necesita ser el primer carácter del patrón si son posibles un número de alternativas, pero será la primera cosa en cada alternativa en la cual aparezca si el patrón casa esa opción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Outside a character class, in the default matching mode, the circumflex character is an assertion which is true only if the current matching point is at the start of the subjectOutside a character class, in the default matching mode, the circumflex character is an assertion which is true only if the current matching point is at the start of the subject string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si todas las alternativas posibles empiezan con un circunflejo, esto es, si el patrón es obligado a casar sólo con en el inicio de la cadena de entrada,Si todas las alternativas posibles empiezan con un circunflejo, esto es, si el patrón es obligado a casar sólo con en el inicio de la cadena de entrada, se dice que es un patrón "anclado".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inside a character class, circumflex has an entirely different meaning (see below).</seg></tuv>
      <tuv xml:lang="es"><seg>También hay otros constructores que pueden hacer que un patrón sea anclado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If all possible alter - natives start with a circumflex, that is, if the pattern is constrained to match only at the start of the subject, it is said to be an "anchored" pattern. (There are also other con - structs that can cause a pattern to be anchored.) A dollar character is an assertion which is TRUE only if the current matching point is at the end of the subject string, or immediately before a newline character that is the lastIf all possible alter - natives start with a circumflex, that is, if the pattern is constrained to match only at the start of the subject, it is said to be an "anchored "pattern. (There are also other con - structs that can cause a pattern to be anchored.) A dollar character is an assertion which is TRUE only if the current matching point is at the end of the subject string, or immediately before a newline character that is the last character in the string (by default).</seg></tuv>
      <tuv xml:lang="es"><seg>Un carácter de dólar es una sentencia que es verdadera sólo si el punto de emparejamiento actual es el final de la cadena de entrada, o inmediatamente antes de un carácter de nueva línea, el cual es el últimoUn carácter de dólar es una sentencia que es verdadera sólo si el punto de emparejamiento actual es el final de la cadena de entrada, o inmediatamente antes de un carácter de nueva línea, el cual es el último carácter en la cadena, por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dollar need not be the last character of the pattern if a number of alternatives are involved, but it should be the last item in any branchDollar need not be the last character of the pattern if a number of alternatives are involved, but it should be the last item in any branch in which it appears.</seg></tuv>
      <tuv xml:lang="es"><seg>El dólar no necesita ser el último carácter del patrón si hay varias alternativas, pero será el último elementoEl dólar no necesita ser el último carácter del patrón si hay varias alternativas, pero será el último elemento en cualquier alternativa en el que aparezca.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dollar has no special meaning in a character class.</seg></tuv>
      <tuv xml:lang="es"><seg>El dólar no tiene un significado especial en una clase carácter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meaning of dollar can be changed so that it matches only at the very end of the string, by setting the PCRE_DOLLAR_ENDONLY The meaning of dollar can be changed so that it matches only at the very end of the string, by setting the PCRE_DOLLAR_ENDONLY option at compile or matching time.</seg></tuv>
      <tuv xml:lang="es"><seg>El significado del dólar puede ser cambiado para que sólo empareje el final de la cadena de entrada definiendo la opción PCRE_DOLLAR_ENDONLY a laEl significado del dólar puede ser cambiado para que sólo empareje el final de la cadena de entrada definiendo la opción PCRE_DOLLAR_ENDONLY a la hora de compilar o tiempo de ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This does not affect the \Z assertion.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto no afecta a la sentencia \Z.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meanings of the circumflex and dollar characters are changed if the PCRE_MULTILINE option is set.</seg></tuv>
      <tuv xml:lang="es"><seg>El significado de los caracteres circunflejo y dólar cambia si la opciónEl significado de los caracteres circunflejo y dólar cambia si la opción PCRE_MULTILINE es definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When this is the case, they match immediately after and immediately before an internal "\n" character, respectively, in additionWhen this is the case, they match immediately after and immediately before an internal "\n "character, respectively, in addition to matching at the start and end of the subject string.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando éste es el caso, casan, respectivamente, inmediatamente antes y después de un carácter "\n" interno,Cuando éste es el caso, casan, respectivamente, inmediatamente antes y después de un carácter "\n "interno, además de emparejar con el inicio y el final de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the pattern / ^abc$ / matches the subject stringFor example, the pattern / ^abc$ / matches the subject string "def\nabc" in multiline mode, but not otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el patrón / ^abc$ / casa con la cadena de entrada "def\nabc" en modo multilínea,Por ejemplo, el patrón / ^abc$ / casa con la cadena de entrada "def\nabc "en modo multilínea, pero en otro modo no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Conse - quently, patterns that are anchored in single line mode because all branches start with "^" are not anchored in mul-Conse - quently, patterns that are anchored in single line mode because all branches start with "^ "are not anchored in mul - tiline mode.</seg></tuv>
      <tuv xml:lang="es"><seg>Consecuentemente, los patrones anclados son en modo línea ya que todas las opciones que empiezan con "^" no son ancladas en modoConsecuentemente, los patrones anclados son en modo línea ya que todas las opciones que empiezan con "^ "no son ancladas en modo multilínea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PCRE_DOLLAR_ENDONLY option is ignored if PCRE_MULTILINE is set.</seg></tuv>
      <tuv xml:lang="es"><seg>La opción PCRE_DOLLAR_ENDONLY es ignorada si PCRE_MULTILINE es definido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the sequences \A, \Z, and \z can be used to match the start and end of the subject in both modes, and if all branches of a pattern start with \A is it always anchored, whether PCRE_MULTILINE is set or not.</seg></tuv>
      <tuv xml:lang="es"><seg>Ten en cuenta que las secuencias \A, \Z y \z pueden ser usadas para casar el inicio y el final de la cadena en ambos modos, y si todas las opciones de un patrón empiezan con \A siempre es anclado, independientemente de si PCRE_MULTILINE es definido o no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PCRE_DOTALL If the PCRE_DOTALL option is set, then dots match newlines as well.</seg></tuv>
      <tuv xml:lang="es"><seg>FINAL (PUNTO) Fuera de una clase carácter, un punto en el patrón casa con un carácter cualquiera en la cadena de entrada, incluyendo un carácter no imprimible,FINAL (PUNTO) Fuera de una clase carácter, un punto en el patrón casa con un carácter cualquiera en la cadena de entrada, incluyendo un carácter no imprimible, exceptuando el de nueva línea (por defecto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dot has no special meaning in a character class.</seg></tuv>
      <tuv xml:lang="es"><seg>El manejo de puntos es completamente independiente del uso del circunflejo y elEl manejo de puntos es completamente independiente del uso del circunflejo y el dólar, la única relación entre ellos son los caracteres de nueva línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An opening square bracket introduces a character class, ter-An opening square bracket introduces a character class, ter - minated by a closing square bracket.</seg></tuv>
      <tuv xml:lang="es"><seg>CORCHETES Un corchete de apertura crea una clase carácter, terminada por uno de cierre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A closing squareA closing square bracket on its own is not special.</seg></tuv>
      <tuv xml:lang="es"><seg>Un corchete de cierre no tiene un significado especial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a closing square bracket is required as a member of the class, it should be the first data character in the class (after an initial cir - cumflex, if present) or escaped with a backslash.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un corchete de cierre es necesitado como un miembro de la clase, será el primer carácter de datos en la clase (después de un circunflejo inicial, si está presente) o con una barra invertida antes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A character class matches a single character in the subject; the character must be in the set of characters defined by the class, unless the first character in the class is a cir - cumflex, in which case the subject character must not be inA character class matches a single character in the subject; the character must be in the set of characters defined by the class, unless the first character in the class is a cir - cumflex, in which case the subject character must not be in the set defined by the class.</seg></tuv>
      <tuv xml:lang="es"><seg>Si una clase carácter casa con un carácter único en la cadena; el carácter debe estar en el conjunto de los caracteres definidos por la clase, a menos que el primero sea un circunflejo, en cuyo caso el carácter de la cadena deSi una clase carácter casa con un carácter único en la cadena; el carácter debe estar en el conjunto de los caracteres definidos por la clase, a menos que el primero sea un circunflejo, en cuyo caso el carácter de la cadena de entrada no debe estar en el conjunto definido por la clase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a circumflex is actually required as a member of the class, ensure it is not the first character, or escape it with a backslash.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un circunflejo es necesitado como un miembro de la clase, asegúrate que no es el primero o es precedido por una barra invertida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the character class [aeiou] matches any lower case vowel, while [^aeiou] matches any character that is notFor example, the character class [aeiou] matches any lower case vowel, while [^aeiou] matches any character that is not a lower case vowel.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, la clase carácter [aeiou] empareja cualquier vocal minúscula, mientras [^aeiou] casa cualquier carácter que no sea una vocal minúscula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that a circumflex is just a con - venient notation for specifying the characters which are inNote that a circumflex is just a con - venient notation for specifying the characters which are in the class by enumerating those that are not.</seg></tuv>
      <tuv xml:lang="es"><seg>Ten en cuenta que un circunflejo es una notación convenida para especificarTen en cuenta que un circunflejo es una notación convenida para especificar los caracteres que están en la clase enumerando los que no lo están.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not an assertion: it still consumes a character from the subject string, and fails if the current pointer is at the end of the string.</seg></tuv>
      <tuv xml:lang="es"><seg>No es una sentencia: consume un carácter de la cadena de entrada y falla si el punto actual es final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The newline character is never treated in any special way in character classes, whatever the setting of the PCRE_DOTALL or PCRE_MULTILINE options is.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se define el emparejamiento sin tener en cuenta mayúsculas y minúsculas (caseless), cualquier letra en una clase representa ambas, por ejemplo, un patrón caseless [aeiou] empareja tanto "A "como "a" y un caseless [^aeiou] no casa con "A "El carácter de nueva línea nunca es tratado de un modo especial en una clase carácter, aunque se hallan definido cualquiera de las opcionesCuando se define el emparejamiento sin tener en cuenta mayúsculas y minúsculas (caseless), cualquier letra en una clase representa ambas, por ejemplo, un patrón caseless [aeiou] empareja tanto "A" como "a "y un caseless [^aeiou] no casa con "A" El carácter de nueva línea nunca es tratado de un modo especial en una clase carácter, aunque se hallan definido cualquiera de las opciones PCRE_DOTALL o PCRE_MULTILINE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A class such as [^a] will always match a newline.</seg></tuv>
      <tuv xml:lang="es"><seg>Una clase como [^a] siempre casa con una nueva línea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The minus (hyphen) character can be used to specify a rangeThe minus (hyphen) character can be used to specify a range of characters in a character class.</seg></tuv>
      <tuv xml:lang="es"><seg>El carácter de menos puede ser usado para especificar un rango de caracteresEl carácter de menos puede ser usado para especificar un rango de caracteres en una clase miembro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, [d-m]For example, [d-m] matches any letter between d and m, inclusive.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, [d-m] casa con cualquier letra entre dPor ejemplo, [d-m] casa con cualquier letra entre d y m ambas incluidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a minus character is required in a class, it must be escaped with a backslash or appear in a position where it cannot be inter - preted as indicating a range, typically as the first or last character in the class.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un carácter de menos es necesitado en una clase, debe ser precedido por una barra invertida o aparecer en una posición donde no pueda ser interpretado como indicador de una rango, normalmente al inicio o al final de la clase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not possible to have the literal character "]" as theIt is not possible to have the literal character "] "as the end character of a range.</seg></tuv>
      <tuv xml:lang="es"><seg>No es posible tener el carácter literal "]" como el de final de un rango.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A pattern such as [W -]46] is interpreted as a class of two characters ("W "and" -") fol - lowed by a literal string "46]", so it would match "W46] "orA pattern such as [W -]46] is interpreted as a class of two characters ("W" and "-") fol - lowed by a literal string "46]", so it would match "W46]" or "-46] ".</seg></tuv>
      <tuv xml:lang="es"><seg>Un patrón como [W -]46] es interpretado como una clase de dos caracteres ("W "y" -") seguido por la cadena literal "46]", por lo que emparejaría conUn patrón como [W -]46] es interpretado como una clase de dos caracteres ("W "y" -") seguido por la cadena literal "46]", por lo que emparejaría con "W46] "o "-46]".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if the "]" is escaped with a backslash it is interpreted as the end of range, so [W-\]46] is inter - preted as a single class containing a range followed by twoHowever, if the "] "is escaped with a backslash it is interpreted as the end of range, so [W-\]46] is inter - preted as a single class containing a range followed by two separate characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si el carácter "]" es precedido con una barra invertida es tomado por el final del rango, así [W-\]46] es interpretadoSin embargo, si el carácter "] "es precedido con una barra invertida es tomado por el final del rango, así [W-\]46] es interpretado como una clase conteniendo un rango seguido por dos caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The octal or hexadecimal representation of "]" can also be used to end a range.</seg></tuv>
      <tuv xml:lang="es"><seg>La representación octal o hexadecimal de "]" puede ser usada para finalizar un rango.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ranges operate in ASCII collating sequence.</seg></tuv>
      <tuv xml:lang="es"><seg>Los rangos trabajan en la secuencia ASCII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They can also be used for characters specified numerically, for exampleThey can also be used for characters specified numerically, for example [\000-\037].</seg></tuv>
      <tuv xml:lang="es"><seg>Se pueden especificar medianteSe pueden especificar mediante la representación numérica de los mismos, por ejemplo [\000-\037].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a range that includes letters is used when caseless matching is set, it matches the letters in eitherIf a range that includes letters is used when caseless matching is set, it matches the letters in either case.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un rango que incluye letras es usado cuando es definida la opción de noSi un rango que incluye letras es usado cuando es definida la opción de no tener en cuenta mayúsculas y minúsculas casan ambas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, [W-c] is equivalent to [][\^_`wxyzabc], matched caselessly, and if character tables for the "fr "locale are in use, [\xc8-\xcb] matches accented E characters in both cases.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, [W-c] es equivalente a [][\^_`wxyzabc], teniendo en cuenta mayúsculas y minúsculas, y si la tabla de caracteres para la región "fr "es usada, entonces [\xc8-\xcb] empareja los caracteres E acentuados en ambos casos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The character types \d, \D, \s, \S, \w, and \W may also appear in a character class, and add the characters thatThe character types \d, \D, \s, \S, \w, and \W may also appear in a character class, and add the characters that they match to the class.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, [\dABCDEF] casa cualquier dígito hexadecimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A circumflex can conveniently be used with the upper case character types to specify a more res - tricted set of characters than the matching lower case type.</seg></tuv>
      <tuv xml:lang="es"><seg>Un circunflejo puede ser usado convenientemente con el tipo de carácter mayúsculo para especificar un conjunto más restrictivo de caracteres que el de un casamientoUn circunflejo puede ser usado convenientemente con el tipo de carácter mayúsculo para especificar un conjunto más restrictivo de caracteres que el de un casamiento con tipo de carácter minúsculo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the class [^\W_] matches any letter or digit, but not underscore.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, la clase [^\W_] empareja cualquier letra o digito pero no el subrayado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All non-alphanumeric characters other than\, -, ^ (at the start) and the terminating] are non-special in character classes, but it does no harm if they are escaped.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los caracteres no alfanuméricos y los diferentes a\, -, ^ (al principio) y] no tienen un significado especial en una clase, y éstos tampoco si son definidos convenientemente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Vertical bar characters are used to separate alternativeVertical bar characters are used to separate alternative patterns.</seg></tuv>
      <tuv xml:lang="es"><seg>BARRA VERTICAL Los caracteres de barra vertical son usados para separar patronesBARRA VERTICAL Los caracteres de barra vertical son usados para separar patrones alternativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the pattern gilbert_BAR_ sullivanFor example, the pattern gilbert_BAR_sullivan matches either "gilbert "or "sullivan".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el patrón gilbert_BAR_ sullivanPor ejemplo, el patrón gilbert_BAR_sullivan casa con "gilbert "o "sullivan".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any number of alternatives may appear, and an empty alternative is permittedAny number of alternatives may appear, and an empty alternative is permitted (matching the empty string).</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier cantidad de opciones pueden ser implementadas, y una alternativa vacía se permite (emparejando laCualquier cantidad de opciones pueden ser implementadas, y una alternativa vacía se permite (emparejando la cadena vacía).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The matching process tries each alternative in turn, from left to right, and the firstThe matching process tries each alternative in turn, from left to right, and the first one that succeeds is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si las alternativas están dentro de un subpatrón, "valga" significa que casa el resto del patrón principal como también la alternativa en el subpatrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the alternatives are within a subpattern (defined below), "succeeds "means matching the rest of the main pattern as well as the alternative in the subpattern.</seg></tuv>
      <tuv xml:lang="es"><seg>DEFINIENDO LAS OPCIONES INTERNAS Las definiciones de PCRE_CASELESS, PCRE_MULTILINE, PCRE_DOTALL, y PCRE_EXTENDED pueden ser cambiadas desde dentro del patrón mediante una secuencia de letras de opciones de Perl encerradas entre "(?" y ") ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The settings of PCRE_CASELESS, PCRE_MULTILINE, PCRE_DOTALL, and PCRE_EXTENDED can be changed from within the pattern by a sequence of Perl option letters enclosed between "(?" andThe settings of PCRE_CASELESS, PCRE_MULTILINE, PCRE_DOTALL, and PCRE_EXTENDED can be changed from within the pattern by a sequence of Perl option letters enclosed between "(? "and ")".</seg></tuv>
      <tuv xml:lang="es"><seg>Las letras de opciones son i para PCRE_CASELESS m para PCRE_MULTILINE s para PCRE_DOTALL x para PCRE_EXTENDED Por ejemplo, (?im) define sin tener en cuenta mayúsculas y minúsculas y modoLas letras de opciones son i para PCRE_CASELESS m para PCRE_MULTILINE s para PCRE_DOTALL x para PCRE_EXTENDED Por ejemplo, (?im) define sin tener en cuenta mayúsculas y minúsculas y modo multilínea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is also possible to unset these options by preceding the letter with a hyphen, and a combined setting and unsetting such as (?im-sx), which sets PCRE_CASELESS and PCRE_MULTILINE while unsetting PCRE_DOTALL and PCRE_EXTENDED, is also permitted.</seg></tuv>
      <tuv xml:lang="es"><seg>Si una letra aparece antes y después del menos, la opción es eliminada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a letter appears both before and after the hyphen, the option is unset.</seg></tuv>
      <tuv xml:lang="es"><seg>El ámbito de estas opciones cambia dependiendo dónde ocurra la definición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The scope of these option changes depends on where in theThe scope of these option changes depends on where in the pattern the setting occurs.</seg></tuv>
      <tuv xml:lang="es"><seg>Las definiciones que son hechas fuera de subpatrones (como antes), el efecto esLas definiciones que son hechas fuera de subpatrones (como antes), el efecto es el mismo que si la opción se define o elimina al inicio del casamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For settings that are outside any subpattern (defined below), the effect is the same as ifFor settings that are outside any subpattern (defined below), the effect is the same as if the options were set or unset at the start of matching.</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes patrones se comportan todos de la misma manera: (?i)abc a(?i)bc ab(?i)c abc(?i) el cual tiene el mismo efecto que compilar el patrón abc con la opciónLos siguientes patrones se comportan todos de la misma manera: (?i)abc a(?i)bc ab(?i)c abc(?i) el cual tiene el mismo efecto que compilar el patrón abc con la opción PCRE_CASELESS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, such "top level" settings apply to the whole pattern (unless there are other changes inside subpatterns).</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, tales definiciones de "nivel superior" se aplican a todo el patrón (a menos que haya otro cambio dentro delEn otras palabras, tales definiciones de "nivel superior "se aplican a todo el patrón (a menos que haya otro cambio dentro del subpatrón).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is more than one setting of the same option at top level, the rightmost setting is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay más de una definición de la misma opción en el mismo nivel superior, la definición más a la derecha se usa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an option change occurs inside a subpattern, the effectIf an option change occurs inside a subpattern, the effect is different.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es un cambio respecto de la conducta de Perl 5.005.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An option change inside a subpattern affects only that part of the subpattern that follows it, so (a(?i)b)c matches abc and aBc and no other strings (assuming PCRE_CASELESS is not used).</seg></tuv>
      <tuv xml:lang="es"><seg>Un cambio de opción dentro de un subpatrón afecta sólo a la parte del subpatrón que lo sigue, por eso (a(?i)b)c empareja abc y aBc y ninguna otra cadena (asumiendo que no es usadoUn cambio de opción dentro de un subpatrón afecta sólo a la parte del subpatrón que lo sigue, por eso (a(?i)b)c empareja abc y aBc y ninguna otra cadena (asumiendo que no es usado PCRE_CASELESS).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By this means, options can be made to have different settings in different parts of theBy this means, options can be made to have different settings in different parts of the pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>De este modo, las opciones pueden ser hechas paraDe este modo, las opciones pueden ser hechas para tener diferente significado en diferente partes del patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, (a(?i)b_BAR_c) matches "ab", "aB", "c", and "C", even though when matching "C "the first branch is abandoned before the option setting.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, (a(?i)b_BAR_c) empareja "ab", "aB", "c", y "C", siempre y cuando case "C "la primeraPor ejemplo, (a(?i)b_BAR_c) empareja "ab", "aB", "c", y "C", siempre y cuando case "C" la primera opción es abandonada antes de definir la opción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is because the effects of option settings happen atThis is because the effects of option settings happen at compile time.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto es porque los efectosEsto es porque los efectos de definiciones de opción ocurren en tiempo de compilación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There would be some very weird behaviour otherwise.</seg></tuv>
      <tuv xml:lang="es"><seg>De otro modo, éstos sería una conducta muy rara.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PCRE-specific options PCRE_UNGREEDY and PCRE_EXTRA can be changed in the same way as the Perl-compatible options byThe PCRE-specific options PCRE_UNGREEDY and PCRE_EXTRA can be changed in the same way as the Perl-compatible options by using the characters U and X respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones específicas PCRE PCRE_UNGREEDY y PCRE_EXTRA pueden ser cambiadas del mismo modo que las opciones compatibles con Perl usandoLas opciones específicas PCRE PCRE_UNGREEDY y PCRE_EXTRA pueden ser cambiadas del mismo modo que las opciones compatibles con Perl usando los caracteres U y X respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The (?X) flag setting is special in that it must always occur earlier in the pattern than any of the additional features it turns on,The (?X) flag setting is special in that it must always occur earlier in the pattern than any of the additional features it turns on, even when it is at top level.</seg></tuv>
      <tuv xml:lang="es"><seg>La bandera (?X) es especial ya que siempre debe aparecer antes que cualquier otra en el patrón, incluso cuandoLa bandera (?X) es especial ya que siempre debe aparecer antes que cualquier otra en el patrón, incluso cuando es definida a nivel superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is best put at the start.</seg></tuv>
      <tuv xml:lang="es"><seg>Es mejor ponerla en el inicio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subpatterns are delimited by parentheses (round brackets),Subpatterns are delimited by parentheses (round brackets), which can be nested.</seg></tuv>
      <tuv xml:lang="es"><seg>SUBPATRONES Los subpatrones son delimitados por paréntesis y pueden estar anidados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Marking part of a pattern as a subpattern does two things:</seg></tuv>
      <tuv xml:lang="es"><seg>Marcando parte de un patrón como un subpatrón permite dos cosas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It localizes a set of alternatives.</seg></tuv>
      <tuv xml:lang="es"><seg>Define un conjunto de opciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the pat - tern cat( aract_BAR_erpillar_BAR_) matches one of the words "cat", "cataract", or "caterpillar ".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el patrón cat( aract_BAR_erpillar_BAR_)Por ejemplo, el patrón cat(aract_BAR_erpillar_BAR_) empareja con "cat", "cataract", or "caterpillar ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the parentheses, it would match "cataract", "erpillar" or the empty string.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin los paréntesis, casaría "cataract", "erpillar" o la cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It sets up the subpattern as a capturing subpattern (asIt sets up the subpattern as a capturing subpattern (as defined above).</seg></tuv>
      <tuv xml:lang="es"><seg>Define el subpatrón como un subpatrón capturado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the whole pattern matches, that portion of the subject string that matched the subpattern is passed back to the caller via the ovector argument of pcre_exec().</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el patrón sea emparejado por completo, esa porción de la cadena de entrada que casa con el subpatrón es devuelta mediante el argumento ovector de pcre_exec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opening parentheses are counted from left to right (starting from 1) to obtain the numbers of the capturing subpatterns.</seg></tuv>
      <tuv xml:lang="es"><seg>Los paréntesis abiertos son contados de izquierda a derecha (empezando por uno) para definir los números de subpatrones capturados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, if the string "the red king" is matched against the pattern the ((red_BAR_white) (king_BAR_queen)) the captured substrings are "red king", "red", and "king ", and are numbered 1, 2, and 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si la cadena "the red king" es casada con el patrón the ((red_BAR_white) (king_BAR_queen)) las subcadenas capturadas son "red king", "red", y "king "y los números son 1,2 y 3 El hecho de que los paréntesis realicen dos funciones no siempre es útil.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fact that plain parentheses fulfil two functions is notThe fact that plain parentheses fulfil two functions is not always helpful.</seg></tuv>
      <tuv xml:lang="es"><seg>A menudo, hay veces que un subpatrón agrupado es necesitado sin unaA menudo, hay veces que un subpatrón agrupado es necesitado sin una querer una captura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are often times when a grouping subpatternThere are often times when a grouping subpattern is required without a capturing requirement.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un paréntesis abierto le sigue "? :", el subpatrón no hace ninguna captura, y no es contado cuando compute elSi un paréntesis abierto le sigue "?:", el subpatrón no hace ninguna captura, y no es contado cuando compute el número de subpatrones capturados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an opening parenthesis is followed by "? :", the subpattern does not do any capturing, and is not counted when computing theIf an opening parenthesis is followed by "?:", the subpattern does not do any capturing, and is not counted when computing the number of any subsequent capturing subpatterns.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, si la cadena "the white queen" es casada con el patrón the ((?:red_BAR_white) (king_BAR_queen)) las subcadenas capturadas son "white queen "y "queen" y son numeradas comoPor ejemplo, si la cadena "the white queen "es casada con el patrón the ((?:red_BAR_white) (king_BAR_queen)) las subcadenas capturadas son "white queen" y "queen "y son numeradas como 1 y 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of captured substrings is 99, and the maximum number of all subpatterns, both capturing and non-capturing, is 200.</seg></tuv>
      <tuv xml:lang="es"><seg>Como un atajo, si cualquier definición de opción es necesitada al inicio de un subpatrón no capturado, las letras de opciones pueden aparecer entreComo un atajo, si cualquier definición de opción es necesitada al inicio de un subpatrón no capturado, las letras de opciones pueden aparecer entre "?" y ":".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus the two patterns (?i:saturday_BAR_sunday) (? :(?i)saturday_BAR_sunday)Thus the two patterns (?i:saturday_BAR_sunday) (? :(?i)saturday_BAR_sunday) match exactly the same set of strings.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que las alternativas son intentadas de izquierda a derecha, y las opciones no son dejadas de tener en cuenta hasta que el final de subpatrón se alcanza, una definición de opción en una alternativa afecta al resto, por eso el patrón anterior empareja tanto con "SUNDAY" como con "Saturday ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Repetition is specified by quantifiers, which can follow any of the following items: a single character, possibly escaped the. metacharacter a character class a back reference (see next section) a parenthesized subpattern (unless it is an assertion - see below) The general repetition quantifier specifies a minimum and maximum number of permitted matches, by giving the two numbers in curly brackets (braces), separated by a comma.</seg></tuv>
      <tuv xml:lang="es"><seg>REPETICION La repetición es especificada por cuantificadores, la cual puede utilizarla cualquiera de los siguientes elementos: un carácter, posiblemente precedido por el meta carácter. una clase carácter una referencia atrás (ver la próxima sección) un subpatrón con paréntesis (a menos que sea una sentencia, ver más adelante) El cuantificador de repetición general indica un número mínimo y un máximo de casamientos permitidos, dando los dos números entre llaves, separadosREPETICION La repetición es especificada por cuantificadores, la cual puede utilizarla cualquiera de los siguientes elementos: un carácter, posiblemente precedido por el meta carácter. una clase carácter una referencia atrás (ver la próxima sección) un subpatrón con paréntesis (a menos que sea una sentencia, ver más adelante) El cuantificador de repetición general indica un número mínimo y un máximo de casamientos permitidos, dando los dos números entre llaves, separados por coma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The numbers must be less than 65536, and the first must beThe numbers must be less than 65536, and the first must be less than or equal to the second.</seg></tuv>
      <tuv xml:lang="es"><seg>El número debe ser menor que 65536, y el primero debe ser menorEl número debe ser menor que 65536, y el primero debe ser menor o igual que el segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example: z{ 2,4}For example: z{2,4} matches "zz", "zzz", or "zzzz ".</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo: z{ 2,4}Por ejemplo: z{2,4} casa con "zz", "zzz", o "zzzz ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A closing brace on its ownA closing brace on its own is not a special character.</seg></tuv>
      <tuv xml:lang="es"><seg>Una llave de cierre por si misma no es unUna llave de cierre por si misma no es un carácter especial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second number is omitted, but the comma is present, there is no upper limit; if the second number and the comma are both omitted, the quantifierIf the second number is omitted, but the comma is present, there is no upper limit; if the second number and the comma are both omitted, the quantifier specifies an exact number of required matches.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el segundo número es omitido, pero aparece la coma, entonces no hay límite superior; si el segundo número y la coma sonSi el segundo número es omitido, pero aparece la coma, entonces no hay límite superior; si el segundo número y la coma son omitidos, el cuantificador indica el número exacto de repeticiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus [aeiou]{3,} matches at least 3 successive vowels, but may match many more, while \d{8}Thus [aeiou]{3,} matches at least 3 successive vowels, but may match many more, while \d{8} matches exactly 8 digits.</seg></tuv>
      <tuv xml:lang="es"><seg>Así [aeiou]{3,} empareja al menos tres vocales seguidas, pero pueden ser muchas más, mientras \d{8}Así [aeiou]{3,} empareja al menos tres vocales seguidas, pero pueden ser muchas más, mientras \d{8} casa exactamente ocho dígitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An opening curly bracket that appears in a position where a quantifier is not allowed, or one that does not match the syntax of a quantifier, is takenAn opening curly bracket that appears in a position where a quantifier is not allowed, or one that does not match the syntax of a quantifier, is taken as a literal character.</seg></tuv>
      <tuv xml:lang="es"><seg>Una llave abierta en una posición donde un cuantificador no es permitido o una que no empareje con la sintaxis de unUna llave abierta en una posición donde un cuantificador no es permitido o una que no empareje con la sintaxis de un cuantificador es tomada como un carácter literal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, {,6} is not a quantifier, but a literal string of four characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, {,6} no es un cuantificador, pero sí una cadena literal de cuatro caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The quantifier {0} is permitted, causing the expression to behave as if the previous item and the quantifier were not present.</seg></tuv>
      <tuv xml:lang="es"><seg>Se permite el cuantificado {0}, provocando que la expresión se comporte como si el elemento anterior y el cuantificador no estuvieran presentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For convenience (and historical compatibility) the three most common quantifiers have single-character abbreviations: * is equivalent to {0,} + is equivalent to {1,}? is equivalent to {0,1} It is possible to construct infinite loops by following a subpattern that can match no characters with a quantifier that has no upper limit, for example: (a ?)* Earlier versions of Perl and PCRE used to give an error atFor convenience (and historical compatibility) the three most common quantifiers have single-character abbreviations: * is equivalent to {0,} + is equivalent to {1,}? is equivalent to {0,1} It is possible to construct infinite loops by following a subpattern that can match no characters with a quantifier that has no upper limit, for example: (a? )* Earlier versions of Perl and PCRE used to give an error at compile time for such patterns.</seg></tuv>
      <tuv xml:lang="es"><seg>Por conveniencia (y compatibilidad histórica) los cuantificadores más comunes tienen abreviaciones de un solo carácter. * es equivalente a {0,} + es equivalente a {1,}? es equivalente a {0,1} Es posible construir bucles infinitos mediante un subpatrón que pueda casar ningún carácter con un cuantificador que no tenga límite superior, por ejemplo: (a ?)* Las primeras versiones de Perl y PCRE dan un error en tiempo de compilaciónPor conveniencia (y compatibilidad histórica) los cuantificadores más comunes tienen abreviaciones de un solo carácter. * es equivalente a {0,} + es equivalente a {1,}? es equivalente a {0,1} Es posible construir bucles infinitos mediante un subpatrón que pueda casar ningún carácter con un cuantificador que no tenga límite superior, por ejemplo: (a? )* Las primeras versiones de Perl y PCRE dan un error en tiempo de compilación para tales patrones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, because there are cases where this can be useful, such patterns are now accepted, but if any repetition of the subpattern does in fact match no characters, the loop is forcibly broken.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, ya que existen casos donde esto puede ser útil, esto patrones son aceptados ahora, pero si cualquier repetición del subpatrón no casa ningún carácter, el bucle es roto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, the quantifiers are "greedy", that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern toBy default, the quantifiers are "greedy", that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern to fail.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, los cuantificadores son "codiciosos", esto es, casan tantas veces como les es posible (hasta el número máximo de veces permitido), sinPor defecto, los cuantificadores son "codiciosos", esto es, casan tantas veces como les es posible (hasta el número máximo de veces permitido), sin provocar que el resto del patrón falle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The classic example of where this gives problems is inThe classic example of where this gives problems is in trying to match comments in C programs.</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo clásico de donde viene este problema es en intentar casar comentarios en los programas en C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These appear between the sequences / * and * / and within the sequence, individualThese appear between the sequences / * and * / and within the sequence, individual * and / characters may appear.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos aparecen entre las secuencias / * y * / y dentro de la secuencia losEstos aparecen entre las secuencias / * y * / y dentro de la secuencia los caracteres * y / pueden aparecer individualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if a quantifier is followed by a question mark, then it ceases to be greedy, and instead matches the minimum number of times possible, so the pattern / \*.*?\* / However, if a quantifier is followed by a question mark, then it ceases to be greedy, and instead matches the minimum number of times possible, so the pattern / \*.*?\* / does the right thing with the C comments.</seg></tuv>
      <tuv xml:lang="es"><seg>Un modo de casar comentarios en C es aplicando el patrón / \*.*\* / para la cadena / * first command * / not comment / * second comment * / falla, porque casa la cadena entera debido a la voracidad del elemento .* Sin embargo, si un cuantificador le siguw un signo de interrogación entonces cesa la voracidad y empareja el mínimo número de veces posibles, así el patrón / \*.*?\* / Un modo de casar comentarios en C es aplicando el patrón / \*.*\* / para la cadena / * first command * / not comment / * second comment * / falla, porque casa la cadena entera debido a la voracidad del elemento .* Sin embargo, si un cuantificador le siguw un signo de interrogación entonces cesa la voracidad y empareja el mínimo número de veces posibles, así el patrón / \*.*?\* / hace las cosas correctamente con los comentarios en C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meaning of the various quantifiers is not otherwise changed, just the preferredThe meaning of the various quantifiers is not otherwise changed, just the preferred number of matches.</seg></tuv>
      <tuv xml:lang="es"><seg>El significado de los cuantificadores variables no es cambiado en otro modo, justo el númeroEl significado de los cuantificadores variables no es cambiado en otro modo, justo el número preferido de casamientos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do not confuse this use of ques - tion mark with its use as a quantifier in its own right.</seg></tuv>
      <tuv xml:lang="es"><seg>No confundas el uso de las interrogaciones conNo confundas el uso de las interrogaciones con su uso como un cuantificador mas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because it has two uses, it can sometimes appear doubled, as in \d??\d which matches one digit by preference, but can match two if that is the only way the rest of the pattern matches.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que tiene dos usos, a veces puede parecer doble, como en \d??\d el cual empareja un dígito normalmente, pero puede casar dos si ese el único modo de casar el resto del patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PCRE_UNGREEDY option is set (an option which is not available in Perl) then the quantifiers are not greedy by default, but individual ones can be made greedy by followingIf the PCRE_UNGREEDY option is set (an option which is not available in Perl) then the quantifiers are not greedy by default, but individual ones can be made greedy by following them with a question mark.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se define la opción PCRE_UNGREEDY (la cual no es posible en Perl) entonces los cuantificadores no son voraces por defecto, pero uno puedeSi se define la opción PCRE_UNGREEDY (la cual no es posible en Perl) entonces los cuantificadores no son voraces por defecto, pero uno puede serlo seguido por una interrogación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, it inverts the default behaviour.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, invierte la conducta por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a parenthesized subpattern is quantified with a minimum repeat count that is greater than 1 or with a limited maximum, more store is required for the compiled pattern, in proportion to the size of the minimum or maximum.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando un subpatrón entre paréntesis es cuantificado con un número mínimo de repeticiones superior a uno o con un límite máximo, se necesita más almacenamiento para compilar el patrón, en proporción al tamaño del mínimo o del máximo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PCRE treats such a pattern as though it were preceded by \A.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un patrón empieza con .* o .{ 0,} y la opción PCRE_DOTALL (equivalente a / s del Perl) es definida, esta permitiendo el. para casar nuevas líneas,Si un patrón empieza con .* o .{0,} y la opción PCRE_DOTALL (equivalente a / s del Perl) es definida, esta permitiendo el. para casar nuevas líneas, entonces el patrón es anclado implícitamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In cases where it is known that the subject string contains no newlines, it is worth setting PCRE_DOTALL when the pattern begins with .* in order to obtain this optimization, or alternatively using ^ to indicate anchoring explicitly.</seg></tuv>
      <tuv xml:lang="es"><seg>PCRE trata tales patronesPCRE trata tales patrones como si estuvieran precedidos por \A.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, after (tweedle[dume]{3}\s*) + has matched "tweedledum tweedledee "the value of the capturedFor example, after (tweedle[dume]{3}\s*) + has matched "tweedledum tweedledee" the value of the captured substring is "tweedledee ".</seg></tuv>
      <tuv xml:lang="es"><seg>En los casos donde se conoce que la cadena de entrada no contiene nuevas líneas, es conveniente definir PCRE_DOTALL cuando el patrón empieza con .* para obtener esta optimización o usar ^ para indicar explícitamente anclamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if there are nested capturing subpatterns, the corresponding capturedHowever, if there are nested capturing subpatterns, the corresponding captured values may have been set in previous iterations.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando un subpatrón capturado es repetido, el valor capturado es laCuando un subpatrón capturado es repetido, el valor capturado es la subcadena que empareja la iteración final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Outside a character class, a backslash followed by a digit greater than 0 (and possibly further digits) is a back reference to a capturing subpattern earlier (i.e. to its left) in the pattern, provided there have been that many previous capturing left parentheses.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el patrón (tweedle[dume]{3}\s*) + con la cadena de entrada "tweedledum tweedledee "el valor de la subcadenaPor ejemplo, el patrón (tweedle[dume]{3}\s*) + con la cadena de entrada "tweedledum tweedledee" el valor de la subcadena capturada es "tweedledee ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if the decimal number following the backslash is less than 10, it is always taken as a back reference, and causes an error only if there are not that many capturingHowever, if the decimal number following the backslash is less than 10, it is always taken as a back reference, and causes an error only if there are not that many capturing left parentheses in the entire pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si hay subpatrones capturados anidadamente, los valores capturados correspondientes pueden haber sidoSin embargo, si hay subpatrones capturados anidadamente, los valores capturados correspondientes pueden haber sido definidos en las iteraciones anteriores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, the parentheses that are referenced need not be to the left ofIn other words, the parentheses that are referenced need not be to the left of the reference for numbers less than 10.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, después de casar "aba" con / (a_BAR_(b))+ / el valor de la segunda subcadena capturada es "b ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A back reference matches whatever actually matched the capturing subpattern in the current subject string, rather thanA back reference matches whatever actually matched the capturing subpattern in the current subject string, rather than anything matching the subpattern itself.</seg></tuv>
      <tuv xml:lang="es"><seg>REFERENCIAS ATRAS Fuera de una clase carácter, una barra invertida seguida por un digito mayor que cero (y posiblemente más dígitos) es una referencia atrás a un subpatrón capturado antes (a su izquierda) en el patrón, siempre que haya habido tantos paréntesis a la izquierda capturados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If caseful matching is in force at the time of the back reference, thenIf caseful matching is in force at the time of the back reference, then the case of letters is relevant.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si el número decimal seguido por la barra invertida es menor que diez, siempre es tomado como una referencia atrás, y da error sólo siSin embargo, si el número decimal seguido por la barra invertida es menor que diez, siempre es tomado como una referencia atrás, y da error sólo si no hay los suficientes subpatrones capturados en todo el patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There may be more than one back reference to the same subpattern.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, los paréntesis que son referidos no necesitan estar a laEn otras palabras, los paréntesis que son referidos no necesitan estar a la izquierda de la referencia para un número menor de diez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a subpattern has not actually been used in a particular match, then any back references to it alwaysIf a subpattern has not actually been used in a particular match, then any back references to it always fail.</seg></tuv>
      <tuv xml:lang="es"><seg>Examina la sección anterior titulada "Barra invertida" para más detalles del manejo de los dígitos con la barra invertida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because there may be up to 99 back references, all digits following the backslash are taken as part of a potentialBecause there may be up to 99 back references, all digits following the backslash are taken as part of a potential back reference number.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia atrás empareja si casa el subpatrón capturado en el actual punto de la cadena de entrada, mejor que casar cualquier subpatrón de laUna referencia atrás empareja si casa el subpatrón capturado en el actual punto de la cadena de entrada, mejor que casar cualquier subpatrón de la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PCRE_EXTENDED option is set, this canIf the PCRE_EXTENDED option is set, this can be whitespace.</seg></tuv>
      <tuv xml:lang="es"><seg>Así el patrón (sens_BAR_respons)e and \1ibility casa con "sense and sensibility "y "response and responsi bility", peroAsí el patrón (sens_BAR_respons)e and \1ibility casa con "sense and sensibility" y "response and responsi bility", pero no "sense and responsibility ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A back reference that occurs inside the parentheses to which it refers fails when the subpattern is first used, so, forA back reference that occurs inside the parentheses to which it refers fails when the subpattern is first used, so, for example, (a\1) never matches.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el casamiento con la distinción entre minúsculas y mayúsculas está activado en el momento de la referencia atrás,Si el casamiento con la distinción entre minúsculas y mayúsculas está activado en el momento de la referencia atrás, entonces la distinción de las letras es relevante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the pattern (a_BAR_b\1)+For example, the pattern (a_BAR_b\1) + matches any number of "a"s and also "aba", "ababaa "etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, ((?i)rah)\s+\1 casa con "rah rah "y "RAH RAH", pero no "RAH rah", pero el subpatrón capturado originalmente es emparejado sin la distinción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At each iteration of the subpattern, the back reference matches the character string corresponding to the previous iteration.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede haber más de una referencia atrás en el mismo subpatrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order for this to work, the pattern must be such that the first iteration does not need to match the backIn order for this to work, the pattern must be such that the first iteration does not need to match the back reference.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un subpatrón no ha sido usado en un emparejamiento particular, entoncesSi un subpatrón no ha sido usado en un emparejamiento particular, entonces cualquier referencia atrás siempre fallara.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be done using alternation, as in the example above, or by a quantifier with a minimum of zero.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el patrón (a_BAR_(bc))\2Por ejemplo, el patrón (a_BAR_(bc))\2 fallará siempre si inicia a casar con "a "mejor que con "bc".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An assertion is a test on the characters following or preceding the current matching point that does not actuallyAn assertion is a test on the characters following or preceding the current matching point that does not actually consume any characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que puede haber hasta 99 referencias atrás, todos los dígitos seguidos por una barra invertida son tomados como parte de número potencial de referencias atrás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More complicatedMore complicated assertions are coded as subpatterns.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el patrón continua con un carácter de dígito, entonces algún delimitadorSi el patrón continua con un carácter de dígito, entonces algún delimitador debe ser usado para terminar la referencia atrás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two kinds: those that look ahead of the current position in the subject string, and those that look behind it.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la opción PCRE_EXTENDEDSi la opción PCRE_EXTENDED es definida, este puede ser el espacio en blanco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lookahead assertions start with (?= for positiveLookahead assertions start with (?= for positive assertions and (?! for negative assertions.</seg></tuv>
      <tuv xml:lang="es"><seg>Una referencia atrás ocurre dentro del paréntesis al cual refiere, falla cuando el subpatrón es usado por primera vez, así por ejemplo, (a\1) nuncaUna referencia atrás ocurre dentro del paréntesis al cual refiere, falla cuando el subpatrón es usado por primera vez, así por ejemplo, (a\1) nunca emparejará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the apparently similar pattern (?!foo)bar does not find an occurrence of "bar "that is preceded by something other than "foo"; it finds any occurrence of "bar" whatsoever, because the assertion (?!foo) is always TRUE Note that the apparently similar pattern (?!foo)bar does not find an occurrence of "bar "that is preceded by something other than "foo"; it finds any occurrence of "bar" whatsoever, because the assertion (?!foo) is always TRUE when the next three characters are "bar ".</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, tal referencia puede ser útil dentro de losSin embargo, tal referencia puede ser útil dentro de los subpatrones repetidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lookbehind assertions start with (? = for positive assertionsLookbehind assertions start with (? = for positive assertions and (?! for negative assertions.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, el patrón (a_BAR_b\1)+Por ejemplo, el patrón (a_BAR_b\1) + casa con cualquier número de "a"s y también con "aba", "ababaa "etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, (? !foo)bar does find an occurrence of "bar "that is not preceded byFor example, (? !foo)bar does find an occurrence of "bar" that is not preceded by "foo ".</seg></tuv>
      <tuv xml:lang="es"><seg>Para cada iteración del subpatrón, la referencia atrás casa la cadena dePara cada iteración del subpatrón, la referencia atrás casa la cadena de caracteres correspondiente a la iteración anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The contents of a lookbehind assertion are restricted such that all the strings it matches must have a fixedThe contents of a lookbehind assertion are restricted such that all the strings it matches must have a fixed length.</seg></tuv>
      <tuv xml:lang="es"><seg>Para que esto trabaje, el patrón debe ser tal que la primera iteración no necesite casar la referenciaPara que esto trabaje, el patrón debe ser tal que la primera iteración no necesite casar la referencia atrás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if there are several alternatives, they doHowever, if there are several alternatives, they do not all have to have the same fixed length.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede hacerse usando alternativas, como en el ejemplo anterior, o por medio de cuantificadores con un número mínimo de cero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Branches that match different length strings are permitted only at the top level ofBranches that match different length strings are permitted only at the top level of a lookbehind assertion.</seg></tuv>
      <tuv xml:lang="es"><seg>SENTENCIAS Una sentencia es un test sobre los caracteres siguiendo o precediendo elSENTENCIAS Una sentencia es un test sobre los caracteres siguiendo o precediendo el punto actual de emparejamiento que no consume caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an extension compared with Perl 5.005, which requires all branches to match the sameThis is an extension compared with Perl 5.005, which requires all branches to match the same length of string.</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentenciasLas sentencias codificadas como \b, \B, \A, \Z, \z, ^ y $son descritas después.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are insufficient characters before the current position, theIf there are insufficient characters before the current position, the match is deemed to fail.</seg></tuv>
      <tuv xml:lang="es"><seg>LasLas sentencias más complejas son codificadas como subpatrones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Several assertions (of any sort) may occur in succession.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos clases: aquellas que condicionan más adelante de la posición actual en la cadena de entrada (lookahead)y las que lo hacen en este punto (lookbehind).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice that each of the assertions is applied independentlyNotice that each of the assertions is applied independently at the same point in the subject string.</seg></tuv>
      <tuv xml:lang="es"><seg>Un subpatrón de sentencia es emparejado del modo típico, excepto que noUn subpatrón de sentencia es emparejado del modo típico, excepto que no hace que el punto actual de emparejamiento cambie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This pattern does not match "foo" preceded by six characters, the first of which are digits and the last threeThis pattern does not match "foo "preceded by six characters, the first of which are digits and the last three of which are not "999".</seg></tuv>
      <tuv xml:lang="es"><seg>Sentencias que condicionan más adelante empiezan con (?= para sentencias afirmativas y (?! para las negativas \w+(?=;) empareja una palabra seguida por un punto y coma. pero no incluye el punto y coma en el casamiento, y foo(?!bar)Sentencias que condicionan más adelante empiezan con (?= para sentencias afirmativas y (?! para las negativas \w+(?=;) empareja una palabra seguida por un punto y coma. pero no incluye el punto y coma en el casamiento, y foo(?!bar) casa cualquier ocurrencia de "foo "que no es seguida por "bar".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A pattern to do that is (? =\d{3}.. .)(? !999)foo This time the first assertion looks at the preceding six characters, checking that the first three are digits, and then the second assertion checks that the preceding three characters are not "999 ".</seg></tuv>
      <tuv xml:lang="es"><seg>Ten en cuenta que el patrón similar (?!foo)bar no encuentra una ocurrencia de "bar "que es precedida por algo que no sea "foo"; encuentra cualquier ocurrencia de "bar", ya que la sentencia (?!foo) es siempreTen en cuenta que el patrón similar (?!foo)bar no encuentra una ocurrencia de "bar" que es precedida por algo que no sea "foo"; encuentra cualquier ocurrencia de "bar", ya que la sentencia (?!foo) es siempre verdadera cuando los tres primeros caracteres son "bar ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, (? =(? !foo)bar)baz matches an occurrence of "baz "that is preceded by "bar" which in turn is not preceded by "foo", while (? =\d{3}(?!999).. .)foo is another pattern which matches "foo "preceded by three digits and any three characters that are not "999".</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentencias de punto actual empiezan con (? = para sentencias afirmativas y (?! para lasLas sentencias de punto actual empiezan con (? = para sentencias afirmativas y (?! para las negativas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assertion subpatterns are not capturing subpatterns, and may not be repeated, because it makes no sense to assert theAssertion subpatterns are not capturing subpatterns, and may not be repeated, because it makes no sense to assert the same thing several times.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, (? !foo)bar encuentra una ocurrencia de "bar "que no es precedida por "foo".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If any kind of assertion contains capturing subpatterns within it, these are counted for the purposes of numbering the capturing subpatterns in the wholeIf any kind of assertion contains capturing subpatterns within it, these are counted for the purposes of numbering the capturing subpatterns in the whole pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>Los contenidos de un sentencia de punto actual están limitados para que todasLos contenidos de un sentencia de punto actual están limitados para que todas las cadenas que emparejen deban tener una longitud fijada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, substring capturing is carried out only for positive assertions, because it does not make sense for negative assertions.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, siSin embargo, si hay varias alternativas, no todas tienen que tener la misma longitud.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With both maximizing and minimizing repetition, failure of what follows normally causes the repeated item to be re - evaluated to see if a different number of repeats allows theWith both maximizing and minimizing repetition, failure of what follows normally causes the repeated item to be re - evaluated to see if a different number of repeats allows the rest of the pattern to match.</seg></tuv>
      <tuv xml:lang="es"><seg>Opciones que emparejen diferentes longitudes de cadenas son permitidas sólo a nivel superior de la sentenciaOpciones que emparejen diferentes longitudes de cadenas son permitidas sólo a nivel superior de la sentencia de punto actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes it is useful to prevent this, either to change the nature of the match, or to cause it fail earlier than it otherwise might, when the author of the pattern knows there is no point in carrying on.</seg></tuv>
      <tuv xml:lang="es"><seg>Ésta es una extensión comparada con Perl 5.005, la cualÉsta es una extensión comparada con Perl 5.005, la cual requiere que todas las opciones a casar tengan la misma longitud.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once-only subpatterns provide the means for specifying that once a portion of the pattern has matched, it is not to be re-evaluated in this way, so the matcher would give up immediately on failing to match "foo"Once-only subpatterns provide the means for specifying that once a portion of the pattern has matched, it is not to be re-evaluated in this way, so the matcher would give up immediately on failing to match "foo" the first time.</seg></tuv>
      <tuv xml:lang="es"><seg>Una sentencia como (? =ab(c_BAR_de)) no es permitida, ya que sus opciones a nivel superior pueden casar dos longitudes diferentes, pero es aceptable si se rescribe para usar dos opciones a nivel superior: (? =abc_BAR_abde) La implementación de sentencias de punto actual es, para cada alternativa, mover temporalmente la posición actual hacia atrás por la longitud fijadaUna sentencia como (? =ab(c_BAR_de)) no es permitida, ya que sus opciones a nivel superior pueden casar dos longitudes diferentes, pero es aceptable si se rescribe para usar dos opciones a nivel superior: (? =abc_BAR_abde) La implementación de sentencias de punto actual es, para cada alternativa, mover temporalmente la posición actual hacia atrás por la longitud fijada e intentar casar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The notation is another kind of special parenthesis, starting with (? as in this example: (? \d+)bar This kind of parenthesis "locks up "the part of the pattern it contains once it has matched, and a failure further intoThe notation is another kind of special parenthesis, starting with (? as in this example: (? \d+)bar This kind of parenthesis "locks up" the part of the pattern it contains once it has matched, and a failure further into the pattern is prevented from backtracking into it.</seg></tuv>
      <tuv xml:lang="es"><seg>Las sentencias de punto actual en unión con subpatrones de sólo una vez pueden ser particularmente útiles para emparejamientos de finales de cadenas; un ejemplo es dado al final de la sección sobre subpatrones de una sola vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Back - tracking past it to previous items, however, works as normal.</seg></tuv>
      <tuv xml:lang="es"><seg>Varias sentencias (de cualquier tipo) pueden suceder consecutivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An alternative description is that a subpattern of this type matches the string of characters that an identical standalone pattern would match, if anchored at the current point in the subject string.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, (? =\d{3})(? !999)foo empareja "foo "precedido por tres dígitos que no sean "999".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once-only subpatterns are not capturing subpatterns.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, las sentencias puede ser anidadas en cualquier combinación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple cases such as the above example can be thought of as a maximizingSimple cases such as the above example can be thought of as a maximizing repeat that must swallow everything it can.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, (? =(? !foo)bar)baz empareja una ocurrencia de "baz "que es precedida por "bar" la cual no sea precedida por "foo ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, while both \d + and \d+? are prepared to adjust the number of digits they match in order to make the rest of the pattern match, (? \d+) can only match an entire sequence of digits.</seg></tuv>
      <tuv xml:lang="es"><seg>Los subpatrones de sentencias no son subpatrones capturados, y no puedenLos subpatrones de sentencias no son subpatrones capturados, y no pueden ser repetidos, ya que no tiene sentido la misma cosa varias veces.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once-only subpatterns can be used in conjunction with look - behind assertions to specify efficient matching at the endOnce-only subpatterns can be used in conjunction with look - behind assertions to specify efficient matching at the end of the subject string.</seg></tuv>
      <tuv xml:lang="es"><seg>Si una sentencia contiene subpatrones capturados dentro de ella, éstos son siempre contados para el propósito de la numeración de los subpatrones capturadosSi una sentencia contiene subpatrones capturados dentro de ella, éstos son siempre contados para el propósito de la numeración de los subpatrones capturados en todo el patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider a simple pattern such as abcd$Consider a simple pattern such as abcd$ when applied to a long string which does not match.</seg></tuv>
      <tuv xml:lang="es"><seg>Las subcadenas capturadas son tenidas en cuenta para las sentencias afirmativas, pero no para las negativas (no tiene sentido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the pattern is specified as ^.*abcd$ then the initial .* matches the entire string at first, but when this fails (because there is no following "a"), it backtracks to match all but the last character, then all butIf the pattern is specified as ^.*abcd$ then the initial .* matches the entire string at first, but when this fails (because there is no following "a"), it backtracks to match all but the last character, then all but the last two characters, and so on.</seg></tuv>
      <tuv xml:lang="es"><seg>El contador de sentencias llega hasta un máximo de doscientos subpatrones con paréntesis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if the pattern is written as ^(? .*)(? =abcd) then there can be no backtracking for the .* item; it canHowever, if the pattern is written as ^(? .*)(? =abcd) then there can be no backtracking for the .* item; it can match only the entire string.</seg></tuv>
      <tuv xml:lang="es"><seg>SUBPATRONES DE UNA SOLA VEZ Maximizando y minimizando las repeticiones para ver si un número diferente de éstas permite al resto del patrón emparejar, causa múltiples evaluacionesSUBPATRONES DE UNA SOLA VEZ Maximizando y minimizando las repeticiones para ver si un número diferente de éstas permite al resto del patrón emparejar, causa múltiples evaluaciones de la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>IfIf it fails, the match fails immediately.</seg></tuv>
      <tuv xml:lang="es"><seg>A veces es útil prevenir esto, cambiando el patrón o provocando que la repetición falle pronto, cuando el creador del patrón conoce que no hay puntos en común.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a pattern contains an unlimited repeat inside a subpattern that can itself be repeated an unlimited number of times, the use of a once-only subpattern is the only way to avoid some failing matches taking a very long time indeed.</seg></tuv>
      <tuv xml:lang="es"><seg>Considera, por ejemplo, el patrón \d+foo cuando se aplica a esta cadena de entrada 123456bar Después de emparejar los seis dígitos falla al emparejar "foo", la acción normal del casamiento es intentar otra vez con sólo cinco dígitos que emparejen con el elemento \d+, y entonces con cuatro, y así, antes de fallar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When it matches, it runs quickly.</seg></tuv>
      <tuv xml:lang="es"><seg>Subpatrones de una sola vez dan el modo de especificar que una parte del patrón tiene que emparejar, no es re-evaluado de esta manera, así elSubpatrones de una sola vez dan el modo de especificar que una parte del patrón tiene que emparejar, no es re-evaluado de esta manera, así el casamiento fallará al emparejar "foo" la primera vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if it is applied to aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaHowever, if it is applied to aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa it takes a long time before reporting failure.</seg></tuv>
      <tuv xml:lang="es"><seg>La notación es otra clase de paréntesis especial, iniciado con (?gt; como en este ejemplo: (? \d+)bar Esta clase de paréntesis "bloquean "la parte del patrón que tiene que ser emparejada una vez y un fallo impide que la re-evalue.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They remember the last single character that is required for a match, and fail early if it is not present in the string.) If the pattern is changed to ((? \D+) _BAR_ \d + )*[!?] sequences of non-digits cannot be broken, and failure happens quickly.</seg></tuv>
      <tuv xml:lang="es"><seg>Una descripción alternativa es que un subpatrón de este tipo case los caracteres de la cadena que un patrón fijo emparejaría, si estuviera anclado en el punto actual de la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The two possible forms of conditional subpattern are (?(condition)yes-pattern) (?(condition)yes-pattern_BAR_no-pattern) If the condition is satisfied, the yes-pattern is used; otherwiseThe two possible forms of conditional subpattern are (?(condition)yes-pattern) (?(condition)yes-pattern_BAR_no-pattern) If the condition is satisfied, the yes-pattern is used; otherwise the no-pattern (if present) is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Subpatrones de una sola vez no son subpatrones capturados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two kinds of condition.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos casos tal como el ejemplo anterior pueden ser interpretado como de una repetición maximizada que debe tragar todo lo que pueda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the following pattern, which contains non-significant white space to make it more readable (assume the PCRE_EXTENDED option) and to divide it into three parts for ease of discussion: (\ ()? [^()] + (?(1)\)) The first part matches an optional opening parenthesis, and if that character is present, sets it as the first capturedConsider the following pattern, which contains non-significant white space to make it more readable (assume the PCRE_EXTENDED option) and to divide it into three parts for ease of discussion: (\ ()? [^()] + (?(1)\)) The first part matches an optional opening parenthesis, and if that character is present, sets it as the first captured substring.</seg></tuv>
      <tuv xml:lang="es"><seg>Por esto, mientras ambos \d + y \d? están preparados para ajustar el número de dígitos que emparejan para hacer que el resto del patrón case, (? \d+) sólo puede emparejar un secuencia de dígitos entera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second part matches one or more charactersThe second part matches one or more characters that are not parentheses.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta construcción, por supuesto, puede contener subpatrones arbitriamente complicados y pueden estar anidados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third part is a conditional subpattern that tests whether the first set of parenthesesThe third part is a conditional subpattern that tests whether the first set of parentheses matched or not.</seg></tuv>
      <tuv xml:lang="es"><seg>Subpatrones de una sola vez pueden usarse con sentencias de punto actual para especificar eficientes emparejamientos al final de la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, since no-pattern is not present, theOtherwise, since no-pattern is not present, the subpattern matches nothing.</seg></tuv>
      <tuv xml:lang="es"><seg>Consideremos un patrón sencillo como este abcd$Consideremos un patrón sencillo como este abcd$ cuando se aplica a una cadena larga con la cual no empareja.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the condition is not a sequence of digits, it must be anIf the condition is not a sequence of digits, it must be an assertion.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que el casamiento va de izquierda a derecha, PCRE buscará cada "a" en la cadenaYa que el casamiento va de izquierda a derecha, PCRE buscará cada "a "en la cadena y entonces verá si lo que sigue casa con el resto del patrón.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider this pattern, again containing non-significant white space, and with the two alternatives on the second line: (?(?=[^a-z]*[a-z]) \d{2} -[a-z]{3}-\d{2} _BAR_ \d{2}-\d{2}-\d{2}) The condition is a positive lookahead assertion that matchesConsider this pattern, again containing non-significant white space, and with the two alternatives on the second line: (?(?=[^a-z]*[a-z]) \d{2} -[a-z]{3}-\d{2} _BAR_ \d{2}-\d{2}-\d{2}) The condition is a positive lookahead assertion that matches an optional sequence of non-letters followed by a letter.</seg></tuv>
      <tuv xml:lang="es"><seg>Otra vez la búsqueda de "a" cubre laOtra vez la búsqueda de "a "cubre la cadena completa, de derecha a izquierda, de esta manera no se mejora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a letter is found, the subject is matched against the first alternative; otherwise it isIf a letter is found, the subject is matched against the first alternative; otherwise it is matched against the second.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si el patrón fuese este ^(? .*)(? =abcd) entonces no hay vuelta atrás para el elemento .*; sólo puede casar la cadenaSin embargo, si el patrón fuese este ^(? .*)(? =abcd) entonces no hay vuelta atrás para el elemento .*; sólo puede casar la cadena entera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This pattern matches strings in one of the two forms dd-aaa-dd or dd-dd-dd, where aaa are letters and dd are digits.</seg></tuv>
      <tuv xml:lang="es"><seg>La sentencia de punto actual subsiguiente hace un test sencilloLa sentencia de punto actual subsiguiente hace un test sencillo sobre los últimos cuatro caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NestedNested parentheses are not permitted.</seg></tuv>
      <tuv xml:lang="es"><seg>Para cadena largas, este acercamiento da una diferencia significativa en tiempo de ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PCRE_EXTENDED option is set, an unescaped # character outside a character class introduces a comment that contin - ues up to the next newline character in the pattern.</seg></tuv>
      <tuv xml:lang="es"><seg>SUBPATRONES CONDICIONALES Es posible hacer que el casamiento procese un subpatrón condicionalmente o elegir entre dos subpatrones alternativos, dependiendo del resultado de una sentencia o si un subpatrón capturado previamente casó o no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the use of recursion, the best that can be done is to use a patternWithout the use of recursion, the best that can be done is to use a pattern that matches up to some fixed depth of nesting.</seg></tuv>
      <tuv xml:lang="es"><seg>Las dos formas posibles de subpatrones condicionales son (?(condition)yes-pattern) (?(condition)yes-pattern_BAR_no-pattern) Si la condición es satisfecha, el yes-pattern es usado; sino el no-patternLas dos formas posibles de subpatrones condicionales son (?(condition)yes-pattern) (?(condition)yes-pattern_BAR_no-pattern) Si la condición es satisfecha, el yes-pattern es usado; sino el no-pattern es utilizado si existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is notIt is not possible to handle an arbitrary nesting depth.</seg></tuv>
      <tuv xml:lang="es"><seg>Si hay más de dos alternativas en el subpatrón, se produce un error en tiempo de compilación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The special The special item (?R) is provided for the specific case of recursion.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el texto entre los paréntesis consiste de una secuencia de dígitos, entonces la condición es verdadera si elSi el texto entre los paréntesis consiste de una secuencia de dígitos, entonces la condición es verdadera si el subpatrón capturado de ese número ha sido casado previamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then it matches any number of substrings which can either be a sequence of non - parentheses, or a recursive match of the pattern itselfThen it matches any number of substrings which can either be a sequence of non - parentheses, or a recursive match of the pattern itself (i.e. a correctly parenthesized substring).</seg></tuv>
      <tuv xml:lang="es"><seg>Consideremos el siguiente patrón, contiene espacios en blanco para hacerlo más leíble (asumimos la opción PCRE_EXTENDED) y lo dividimos en tres partes para facilitar la discusión: (\ ()? [^()] + (?(1)\)) La primera parte empareja un paréntesis opcional abierto, y si el carácterConsideremos el siguiente patrón, contiene espacios en blanco para hacerlo más leíble (asumimos la opción PCRE_EXTENDED) y lo dividimos en tres partes para facilitar la discusión: (\ ()? [^()] + (?(1)\)) La primera parte empareja un paréntesis opcional abierto, y si el carácter esta presente, lo define como la primera subcadena capturada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This particular example pattern contains nested unlimited repeats, and so the use of a once-only subpattern for matching strings of non-parentheses is important when applyingThis particular example pattern contains nested unlimited repeats, and so the use of a once-only subpattern for matching strings of non-parentheses is important when applying the pattern to strings that do not match.</seg></tuv>
      <tuv xml:lang="es"><seg>La tercera parte es un subpatrón condicional que examina si el primer conjunto deLa tercera parte es un subpatrón condicional que examina si el primer conjunto de paréntesis casa o no.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if a once-only subpattern is not used, the match runs for a very long time indeed because there are so many different ways the + and * repeats can carve up the subject, and all have to be tested before failure can be reported.</seg></tuv>
      <tuv xml:lang="es"><seg>Si fuera así, esto es, si la cadena de entrada empieza por un paréntesis abierto, la condición es cierta, y el yes-patternSi fuera así, esto es, si la cadena de entrada empieza por un paréntesis abierto, la condición es cierta, y el yes-pattern es ejecutado y un paréntesis de cierre es requerido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The values set for any capturing subpatterns are those from the outermost level of the recursion at which the subpatternThe values set for any capturing subpatterns are those from the outermost level of the recursion at which the subpattern value is set.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, este patrón casa una secuencia de datos sin paréntesis opcionalmente limitada por ellos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the pattern above is matched against (ab(cd)ef) the value for the capturing parentheses is "ef", which isIf the pattern above is matched against (ab(cd)ef) the value for the capturing parentheses is "ef ", which is the last value taken on at the top level.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede ser una sentencia de más adelante positiva o negativa o unaEsto puede ser una sentencia de más adelante positiva o negativa o una de punto actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are more than 15 capturing parentheses in a pattern, PCRE has to obtain extra memory to store data during a recursion, which it does by using pcre_malloc, freeing itIf there are more than 15 capturing parentheses in a pattern, PCRE has to obtain extra memory to store data during a recursion, which it does by using pcre_malloc, freeing it via pcre_free afterwards.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, examina la presencia de al menos una letra en la cadenaEn otras palabras, examina la presencia de al menos una letra en la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no memory can be obtained, it saves data for the first 15 capturing parentheses only, as there is no way to give an out-of-memory error from within a recursion.</seg></tuv>
      <tuv xml:lang="es"><seg>Si una letra es encontrada, la cadena es casada con la primeraSi una letra es encontrada, la cadena es casada con la primera alternativa; sino lo es con la segunda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Certain items that may appear in patterns are more efficientCertain items that may appear in patterns are more efficient than others.</seg></tuv>
      <tuv xml:lang="es"><seg>Este patrón casa cadenas de una de estas dos formas dd-aaa-dd o dd-dd-dd, donde aaa son letra y dd son dígitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In general, the simplest construction that provides theIn general, the simplest construction that provides the required behaviour is usually the most efficient.</seg></tuv>
      <tuv xml:lang="es"><seg>COMENTARIOS La secuencia (?# marca el inicio de un comentario el cual continua hastaCOMENTARIOS La secuencia (?# marca el inicio de un comentario el cual continua hasta el primer paréntesis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Jeffrey Friedl 's book contains a lot of discussion about optimizing regular expressions for efficient performance.</seg></tuv>
      <tuv xml:lang="es"><seg>Los paréntesis anidados no son permitidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if PCRE_DOTALL is not set, PCRE cannot make this optimization, because the. metacharacter does not then match a newline, and if the subject string contains newlines, the pattern may match from the character immediately following one of themHowever, if PCRE_DOTALL is not set, PCRE cannot make this optimization, because the. metacharacter does not then match a newline, and if the subject string contains newlines, the pattern may match from the character immediately following one of them instead of from the very start.</seg></tuv>
      <tuv xml:lang="es"><seg>Los caracteres que forman un comentario no forman parte del patrón de emparejamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to do this, PCRE has to retry the match starting after every newline in the subject.</seg></tuv>
      <tuv xml:lang="es"><seg>RENDIMIENTO Ciertos elementos que pueden aparecer en los patrones son más eficientesRENDIMIENTO Ciertos elementos que pueden aparecer en los patrones son más eficientes que otros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using such a pattern with subject strings that do not contain newlines, the best performance is obtained by setting PCRE_DOTALL, or starting the pattern with ^.* toIf you are using such a pattern with subject strings that do not contain newlines, the best performance is obtained by setting PCRE_DOTALL, or starting the pattern with ^.* to indicate explicit anchoring.</seg></tuv>
      <tuv xml:lang="es"><seg>En general, los constructores más sencillos que dan la conducta requerida son, normalmente, más eficientes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That saves PCRE from having to scan along the subject looking for a newline to restart at.</seg></tuv>
      <tuv xml:lang="es"><seg>El libro de Jeffrey Friedl contiene un montón de discusiones sobre la optimización de expresiones regulares para un rendimiento eficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These can take a long time to run when applied to a stringThese can take a long time to run when applied to a string that does not match.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando un patrón empieza con .* y la opción PCRE_DOTALL está definida, el patrón es anclado implícitamente por PCRE, ya que sólo puede casar el inicioCuando un patrón empieza con .* y la opción PCRE_DOTALL está definida, el patrón es anclado implícitamente por PCRE, ya que sólo puede casar el inicio de la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An optimization catches some of the more simple cases such as (a+)*bAn optimization catches some of the more simple cases such as (a+ )*b where a literal character follows.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, si PCRE_DOTALL no es definido, PCRE no puede hacer esta optimización, ya que el meta carácter. no tiene porque casar con una nueva línea y si la cadena de entrada contiene varias nuevas líneas, el patrón puede emparejar desde el carácter inmediatamente siguienteSin embargo, si PCRE_DOTALL no es definido, PCRE no puede hacer esta optimización, ya que el meta carácter. no tiene porque casar con una nueva línea y si la cadena de entrada contiene varias nuevas líneas, el patrón puede emparejar desde el carácter inmediatamente siguiente a uno de ellos en vez del inicio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Before embarking on the standard matching procedure, PCRE checks that there is a "b" later in the subject string, and if there is not, it failsBefore embarking on the standard matching procedure, PCRE checks that there is a "b "later in the subject string, and if there is not, it fails the match immediately.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, PCRE tiene que intentar los casamientos iniciándolos después de cada nueva línea en la cadena de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can see the difference by comparing the behaviour of (a+)*\dYou can see the difference by comparing the behaviour of (a+ )*\d with the pattern above.</seg></tuv>
      <tuv xml:lang="es"><seg>Si estas usando un patrón con cadenas de entrada que no contienen nuevas líneas, el mejor rendimiento se obtiene definiendo PCRE_DOTALL o iniciandoSi estas usando un patrón con cadenas de entrada que no contienen nuevas líneas, el mejor rendimiento se obtiene definiendo PCRE_DOTALL o iniciando el patrón con ^.* para indicar anclamiento explícito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The former gives a failure almost instantly when applied to a whole line of "a" characters, whereas the latter takes an appreciable time with strings longer than about 20 characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto previene a PCRE tener que examinar toda la cadena de entrada buscando nuevas líneas para empezar de nuevo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pattern Modifiers</seg></tuv>
      <tuv xml:lang="es"><seg>Modificadores de Patrones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To report errors from an internal function, you should call the php3_error() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Para informar de errores desde una función interna, deberá llamar la función php3_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error levels are:</seg></tuv>
      <tuv xml:lang="es"><seg>Esta lleva al menos dos parámetros: el primero el es nivel del error, y el segundo es la cadena de formato para el mensaje de error (como en una llamada estándar a printf()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notices are not printed by default, and indicate that the script encountered something that could indicate an error, but could also happen in the normal course of running a script.</seg></tuv>
      <tuv xml:lang="es"><seg>Los niveles de error son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warnings are printed by default, but do not interrupt script execution.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto se visualizan las noticas, e indican que el guión encontró algo que podría indicar un error, pero que también podría ocurrir durante el curso normal de la ejecución del mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, calling ereg() with an invalid regular expression.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, al intentar acceder al valor de una variable que no ha sido fijado, o llamar a stat() sobre un fichero que no existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These indicate errors that can not be recovered from, such as a memory allocation problem.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto se visualizan los avisos, pero no se interrumpe la ejecución del guión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The code is listed here only for the sake of completeness.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos indican un problema que debiera haberse interceptado en el guión antes de la llamada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions should not generate this type of error.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, llamar ereg() con una expresión regular no válida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions should not generate this type of error.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto se visualizan los errores y la ejecución del guión se detiene cuando la función retorna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions should not generate this type of error.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos indican errores irrecuperables, como un problema de asignación de memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions should not generate this type of error.</seg></tuv>
      <tuv xml:lang="es"><seg>Los errores de troceo sólo debe generarlos el troceador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is like an E_ERROR, except it is generated in PHP code by using the PHP function trigger_error().</seg></tuv>
      <tuv xml:lang="es"><seg>El código se lista aquí con objeto de ser exhaustivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is like an E_WARNING, except it is generated by using the PHP function trigger_error().</seg></tuv>
      <tuv xml:lang="es"><seg>Este es similar al E_ERROR, pero generado por el núcleo del PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions should not generate this type of error.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones no deben generar este tipo de error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is like an E_NOTICE, except it is generated by using the PHP function trigger_error().</seg></tuv>
      <tuv xml:lang="es"><seg>Este es similar al E_WARNING, pero generado por el núcleo del PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using this error_reporting level will show all error types.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota: "N.D.:" significa Nota del Documentador y es un texto interno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling User Functions</seg></tuv>
      <tuv xml:lang="es"><seg>Llamando a Funciones del Usuario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of Function Aliases</seg></tuv>
      <tuv xml:lang="es"><seg>Lista de alias de funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All functions look like this:</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las funciones son como esta:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>void php3_foo( INTERNAL_FUNCTION_PARAMETERS) {}</seg></tuv>
      <tuv xml:lang="es"><seg>void php3_algo( INTERNAL_FUNCTION_PARAMETERS) {}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments are always of type pval.</seg></tuv>
      <tuv xml:lang="es"><seg>Los argumentos son siempre de tipo pval.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type contains a union which has the actual type of the argument.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo contiene una unión que es el tipo actual del argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, if your function takes two arguments, you would do something like the following at the top of your function:</seg></tuv>
      <tuv xml:lang="es"><seg>Así, si su función tiene dos argumentos, deberá hacer algo como lo que sigue al principio de la misma:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fetching function arguments</seg></tuv>
      <tuv xml:lang="es"><seg>Extrayendo argumentos de función</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you change any of the passed parameters, whether they are sent by reference or by value, you can either start over with the parameter by calling pval_destructor on it, or if it 's an ARRAY you want to add to, you can use functions similar to the ones in internal_functions.h which manipulate return_value as an ARRAY.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando cambie alguno de los parámetros pasados, tanto si son enviados por referencia o por valor, puede volver a comenzar con éste llamando la función pval_destructor sobre el mismo, o, si es una ARRAY a la que quiere añadir algo, puede utilizar funciones similares a las incluídas en internal_functions.h, que manipulan el valor return_value como si fuera de tipo ARRAY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also if you change a parameter to IS_STRING make sure you first assign the new estrdup() 'ed string and the string length, and only later change the type to IS_STRING.</seg></tuv>
      <tuv xml:lang="es"><seg>Además, si cambia un parámetro a IS_STRING, asegúrese primero de asignar el valor y el tamaño a la cadena creada por estrdup() y sólo entonces cambiar su tipo a IS_STRING.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you change the string of a parameter which already IS_STRING or IS_ARRAY you should run pval_destructor on it first.</seg></tuv>
      <tuv xml:lang="es"><seg>Si modifica la cadena de un parámetro que ya es IS_STRING o IS_ARRAY, deberá primero aplicarle la función pval_destructor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A function can take a variable number of arguments.</seg></tuv>
      <tuv xml:lang="es"><seg>Una función puede tomar un número variable de argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your function can take either 2 or 3 arguments, use the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Si su función puede tomar tanto 2 como 3 argumentos, utilice el siguiente código:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable function arguments</seg></tuv>
      <tuv xml:lang="es"><seg>Argumentos de función variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The type of each argument is stored in the pval type field.</seg></tuv>
      <tuv xml:lang="es"><seg>El tipo de cada argumento se guarda en el campo type del pval.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type can be any of the following:</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo puede ser:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table E-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla E-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Internal Types</seg></tuv>
      <tuv xml:lang="es"><seg>Tipos Internos de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String</seg></tuv>
      <tuv xml:lang="es"><seg>Cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Double-precision floating point</seg></tuv>
      <tuv xml:lang="es"><seg>Coma flotante de doble precisión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Long integer</seg></tuv>
      <tuv xml:lang="es"><seg>Entero largo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array</seg></tuv>
      <tuv xml:lang="es"><seg>Matriz</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>None</seg></tuv>
      <tuv xml:lang="es"><seg>Nada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?? (if some of these cannot be passed to a function - delete)</seg></tuv>
      <tuv xml:lang="es"><seg>?? (N.D.: si alguno de estos no se puede pasar a una función, bórrese)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you get an argument of one type and would like to use it as another, or if you just want to force the argument to be of a certain type, you can use one of the following conversion functions:</seg></tuv>
      <tuv xml:lang="es"><seg>Si obtiene un argumento de un tipo y desea utilizarlo como si fuera de otro, o si quiere forzar a que un argumento sea de un tipo determinado, puede usar una de las siguientes funciones de conversión:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>convert_to_long( arg1); convert_to_double(arg1); convert_to_string(arg1); convert_to_boolean_long(arg1); / * If the string is "" or "0 "it becomes 0, 1 otherwise * / convert_string_to_number(arg1); / * Converts string to either LONG or DOUBLE depending on string * /</seg></tuv>
      <tuv xml:lang="es"><seg>convert_to_long( arg1); convert_to_double(arg1); convert_to_string(arg1); convert_to_boolean_long(arg1); / * Si la cadena es "" o "0 "pasa a ser 0; si no, vale 1 * / convert_string_to_number(arg1); / * Convierte la cadena a LONG o a DOUBLE, dependiendo de su contenido * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These function all do in-place conversion.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones convierten el valor in-situ.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They do not return anything.</seg></tuv>
      <tuv xml:lang="es"><seg>No devuelven nada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The actual argument is stored in a union; the members are:</seg></tuv>
      <tuv xml:lang="es"><seg>El argumento real es almacenado en una unión cuyos miembros son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any memory needed by a function should be allocated with either emalloc() or estrdup().</seg></tuv>
      <tuv xml:lang="es"><seg>La memoria necesitada por una función deberá ser asignada usando emalloc() o estrdup().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are memory handling abstraction functions that look and smell like the normal malloc() and strdup() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas son funciones abstractas de manejo de memoria que son similares a las funciones normales malloc() y strdup().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Memory should be freed with efree().</seg></tuv>
      <tuv xml:lang="es"><seg>La memoria deberá liberarse con efree().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two kinds of memory in this program: memory which is returned to the parser in a variable, and memory which you need for temporary storage in your internal function.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos tipos de memoria en este programa: la memoria que se devuelve al troceador (parser) en una variable, y la memoria que se necesita para almacenamiento temporal de datos en sus funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you assign a string to a variable which is returned to the parser you need to make sure you first allocate the memory with either emalloc() or estrdup().</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando asigne una cadena a una variable que se devolverá al troceador deberá asegurarse previamente de asignar la memoria con emalloc() o con estrdup().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This memory should NEVER be freed by you, unless you later in the same function overwrite your original assignment (this kind of programming practice is not good though).</seg></tuv>
      <tuv xml:lang="es"><seg>Esta memoria NUNCA debe ser liberada por usted, salvo si más adelante, en la misma función, sobreescribe la asignación original (aunque este hábito de programación no es bueno).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For any temporary / permanent memory you need in your functions / library you should use the three emalloc(), estrdup(), and efree() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Para cada trozo de memoria temporal / permanente que precise en sus funciones / librería deberá utilizar las funciones emalloc(), estrdup(), y efree().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They behave EXACTLY like their counterpart functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas se comportan EXACTAMENTE como sus funciones equivalentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Anything you emalloc() or estrdup() you have to efree() at some point or another, unless it's supposed to stick around until the end of the program; otherwise, there will be a memory leak.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier cosa que asigne con emalloc() o estrdup() deberá liberarla con efree() en uno u otro momento, salvo que se suponga que deba permanecer activa hasta el final del programa; de otro modo, se producirá una fuga de memoria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meaning of "the functions behave exactly like their counterparts" is: if you efree() something which was not emalloc()'ed nor estrdup() 'ed you might get a segmentation fault.</seg></tuv>
      <tuv xml:lang="es"><seg>El significado de "estas se comportan exactamente como sus funciones equivalentes" es: si llama a efree() sobre algo que no ha sido asignado previamente con emalloc() o con estrdup(), puede provocar un fallo de segmentación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So please take care and free all of your wasted memory.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ello debe tener cuidado y liberar toda la memoria desperdiciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you compile with "-DDEBUG", PHP will print out a list of all memory that was allocated using emalloc() and estrdup() but never freed with efree() when it is done running the specified script.</seg></tuv>
      <tuv xml:lang="es"><seg>Si compila con "-DDEBUG", el PHP3 mostrará una lista de toda la memoria que fue asignada usando emalloc() y estrdup(), pero que nunca fue liberada con efree(), al terminar de ejecutar el guión especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A number of macros are available which make it easier to set a variable in the symbol table:</seg></tuv>
      <tuv xml:lang="es"><seg>Están disponibles una serie de macros que hacen más fácil el asignar una variale en la tabla de símbolos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SET_VAR_STRING( name,value)</seg></tuv>
      <tuv xml:lang="es"><seg>SET_VAR_STRING( nombre,valor) [1]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SET_VAR_DOUBLE( name,value)</seg></tuv>
      <tuv xml:lang="es"><seg>SET_VAR_DOUBLE( nombre,valor)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>SET_VAR_LONG( nombre,valor)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be careful with SET_VAR_STRING.</seg></tuv>
      <tuv xml:lang="es"><seg>[1]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do not pass statically allocated memory into a SET_VAR_STRING.</seg></tuv>
      <tuv xml:lang="es"><seg>Las tablas de símbolos en PHP 3.0 se implementan como tablas hash (con extracto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At any given time, symbol_table is a pointer to the 'main' symbol table, and active_symbol_table points to the currently active symbol table (these may be identical like in startup, or different, if you're inside a function).</seg></tuv>
      <tuv xml:lang="es"><seg>En todo momento, symbol_table es un puntero a la tabla de símbolos 'principal', mientras que active_symbol_table apunta a la tabla de símbolos activa (pueden ser idénticas, al principio de todo, o diferentes, si se está dentro de una función).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following examples use 'active_symbol_table'.</seg></tuv>
      <tuv xml:lang="es"><seg>Los ejemplos siguientes utilizan 'active_symbol_table'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should replace it with symbol_table if you specifically want to work with the 'main' symbol table.</seg></tuv>
      <tuv xml:lang="es"><seg>Deberá reemplazarla por symbol_table si desea trabajar específicamente con la tabla de símbolos 'principal'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, the same functions may be applied to arrays, as explained below.</seg></tuv>
      <tuv xml:lang="es"><seg>También se pueden aplicar las mismas funciones a matrices, como se explica más abajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checking whether $foo exists in a symbol table</seg></tuv>
      <tuv xml:lang="es"><seg>Comprobando si $algo existe en una tabla de símbolos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (hash_exists(active_symbol_table ,"foo",sizeof("foo"))) {exists...} else {doesn't exist}</seg></tuv>
      <tuv xml:lang="es"><seg>if (hash_exists(active_symbol_table ,"algo",sizeof("algo"))) {existe...} else {no existe}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Finding a variable 's size in a symbol table</seg></tuv>
      <tuv xml:lang="es"><seg>Hallando el tamaño de una variable en una tabla de símbolos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hash_find( active_symbol_table ,"foo",sizeof("foo"), pvalue); check(pvalue.type);</seg></tuv>
      <tuv xml:lang="es"><seg>hash_find( active_symbol_table ,"algo",sizeof("algo"), valptr); check(valptr.type);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to define a new array in a symbol table, you should do the following.</seg></tuv>
      <tuv xml:lang="es"><seg>Si desea definir un nuevo símbolo de matriz en una tabla de símbolos, deberá hacer lo que sigue.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, you may want to check whether it exists and abort appropriately, using hash_exists() or hash_find().</seg></tuv>
      <tuv xml:lang="es"><seg>Primero, deberá comprobar si ya existe usando hash_exists() o hash_find() y abortar la ejecución de forma apropiada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next, initialize the array:</seg></tuv>
      <tuv xml:lang="es"><seg>Luego inicialice la matriz:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-5.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Initializing a new array</seg></tuv>
      <tuv xml:lang="es"><seg>Inicializando una nueva matriz</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval arr; if (array_init (arr) == FAILURE) {failed...}; hash_update(active_symbol_table ,"foo",sizeof("foo"), arr,sizeof(pval),NULL);</seg></tuv>
      <tuv xml:lang="es"><seg>pval matriz; if (array_init (matriz) == FAILURE) {falló...}; hash_update(active_symbol_table ,"algo",sizeof("algo"), matriz,sizeof(pval),NULL);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here 's how to add new entries to it:</seg></tuv>
      <tuv xml:lang="es"><seg>Ahora se muestra cómo añadirle elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-6.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding entries to a new array</seg></tuv>
      <tuv xml:lang="es"><seg>Añadir entradas a una nueva matriz</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval entry; entry.type = IS_LONG; entry.value.lval = 5; / * defines $foo["bar"] = 5 * / hash_update(arr.value.ht ,"bar",sizeof("bar"), entry,sizeof(pval),NULL); / * defines $foo[7] = 5 * / hash_index_update(arr.value.ht,7, entry,sizeof(pval),NULL); / * defines the next free place in $foo[], * $foo[8], to be 5 (works like php2) * / hash_next_index_insert(arr.value.ht, entry,sizeof(pval),NULL);</seg></tuv>
      <tuv xml:lang="es"><seg>pval elemento; elemento.type = IS_LONG; elemento.value.lval = 5; / * define $algo["bar"] = 5 * / hash_update(matriz.value.ht ,"bar",sizeof("bar"), elemento,sizeof(pval),NULL); / * define $algo[7] = 5 * / hash_index_update(matriz.value.ht,7, elemento,sizeof(pval),NULL); / * define el siguiente puesto libre en $algo[], * $algo[8], como 5 (funciona como en php2) * / hash_next_index_insert(matriz.value.ht, elemento,sizeof(pval),NULL);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hash_next_index_insert() uses more or less the same logic as "$foo[] = bar; "in PHP 2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>hash_next_index_insert() usa más o menos la misma lógica que "$algo[] = bar; "en el PHP 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are building an array to return from a function, you can initialize the array just like above by doing:</seg></tuv>
      <tuv xml:lang="es"><seg>Si está preparando una matriz como valor devuelto por una función, puede inicializar la misma como antes, haciendo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (array_init(return_value) == FAILURE) {failed...;}</seg></tuv>
      <tuv xml:lang="es"><seg>if (array_init(return_value) == FAILURE) {falló...;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>...and then adding values with the helper functions:</seg></tuv>
      <tuv xml:lang="es"><seg>... y luego añadiéndole valores con las funciones auxiliares:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_next_index_long( return_value,long_value); add_next_index_double(return_value,double_value); add_next_index_string(return_value,estrdup(string_value));</seg></tuv>
      <tuv xml:lang="es"><seg>add_next_index_long( return_value,val_long); add_next_index_double(return_value,val_double); add_next_index_string(return_value,estrdup(val_cadena));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, if the adding isn' t done right after the array initialization, you'd probably have to look for the array first:</seg></tuv>
      <tuv xml:lang="es"><seg>Por supuesto, si la adición no se realiza justo después de inicializar la matriz, probablemente tenga que buscarla antes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval *arr; if (hash_find(active_symbol_table ,"foo",sizeof("foo") ,(void **) arr)==FAILURE) {can't find...} else {use arr - value.ht...}</seg></tuv>
      <tuv xml:lang="es"><seg>pval *matriz; if (hash_find(active_symbol_table ,"algo",sizeof("algo") ,(void **) matriz)==FAILURE) {no se hayó...} else {usar matriz - value.ht...}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that hash_find receives a pointer to a pval pointer, and not a pval pointer.</seg></tuv>
      <tuv xml:lang="es"><seg>Nótese que hash_find recibe un puntero a un puntero a pval, y no un puntero a pval.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Just about any hash function returns SUCCESS or FAILURE (except for hash_exists(), which returns a boolean truth value).</seg></tuv>
      <tuv xml:lang="es"><seg>Casi cualquier función de matrices asociativas devuelve SUCCESS o FAILURE (excepto por hash_exists(), que devuelve un valor lógico de certeza).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A number of macros are available to make returning values from a function easier.</seg></tuv>
      <tuv xml:lang="es"><seg>Están disponibles varias macros para facilitar la devolución de valores de una función.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The RETURN_* macros all set the return value and return from the function:</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las macros RETURN_* fijan el valor y retornan de la función:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RETURN_STRING( s,dup) If dup is TRUE, duplicates the string</seg></tuv>
      <tuv xml:lang="es"><seg>RETURN_STRING( s,dup) Si dup es TRUE, duplica la cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RETURN_STRINGL( s,l,dup) Return string (s) specifying length (l).</seg></tuv>
      <tuv xml:lang="es"><seg>RETURN_STRINGL( s,l,dup) Devuelve la cadena (s) especificando el largo (l).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The RETVAL_* macros set the return value, but do not return.</seg></tuv>
      <tuv xml:lang="es"><seg>Las macros RETVAL_* fijan el valor, pero no retornan.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RETVAL_STRING( s,dup) If dup is TRUE, duplicates the string</seg></tuv>
      <tuv xml:lang="es"><seg>RETVAL_STRING( s,dup) Si dup es TRUE, duplica la cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RETVAL_STRINGL( s,l,dup) Return string (s) specifying length (l).</seg></tuv>
      <tuv xml:lang="es"><seg>RETVAL_STRINGL( s,l,dup) Devuelve la cadena (s) especificando el largo (l).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The string macros above will all estrdup() the passed's' argument, so you can safely free the argument after calling the macro, or alternatively use statically allocated memory.</seg></tuv>
      <tuv xml:lang="es"><seg>Las macros anteriores harán un estrdup() del argumento 's ', de modo que puede liberar con seguridad el argumento después de llamar a la macro, o, alternativamente, utilizar memoria asignada estáticamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your function returns boolean success / error responses, always use RETURN_TRUE and RETURN_FALSE respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>Si su función devuelve respuestas lógicas de éxito / error, use siempre RETURN_TRUE y RETURN_FALSE respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Your function can also return a complex data type such as an object or an array.</seg></tuv>
      <tuv xml:lang="es"><seg>Su función también puede devolver un tipo de datos complejo, tal como un objeto o una matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returning an object:</seg></tuv>
      <tuv xml:lang="es"><seg>Devolviendo un objeto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Call object_init( return_value).</seg></tuv>
      <tuv xml:lang="es"><seg>Llame a object_init( return_value).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fill it up with values.</seg></tuv>
      <tuv xml:lang="es"><seg>Rellénela con valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions available for this purpose are listed below.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones disponibles para ello son listadas más abajo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possibly, register functions for this object.</seg></tuv>
      <tuv xml:lang="es"><seg>Posilemente registre funciones para este objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to obtain values from the object, the function would have to fetch "this" from the active_symbol_table.</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener valores del objeto, la función deberá de obtener "this" desde la active_symbol_table.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its type should be IS_OBJECT, and it' s basically a regular hash table (i.e., you can use regular hash functions on .value.ht).</seg></tuv>
      <tuv xml:lang="es"><seg>Su tipo deberá ser IS_OBJECT, y básicamente se trata de una matriz asociativa estándar (es decir, que podrá usar funciones de matriz asociativa sobre .value.ht).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The actual registration of the function can be done using:</seg></tuv>
      <tuv xml:lang="es"><seg>El registro en sí de la función se puede hacer utilizando:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_method( return_value, function_name, function_ptr);</seg></tuv>
      <tuv xml:lang="es"><seg>add_method( return_value, nombre_func, puntero_func);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions used to populate an object are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones utilizadas para rellenar un objeto son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_property_long( return_value, property_name, l) - Add a property named'property_name', of type long, equal to'l '</seg></tuv>
      <tuv xml:lang="es"><seg>add_property_long( return_value, nombre_propiedad, l) - Añade una propiedad llamada 'nombre_propiedad', de tipo long, y con valor 'l '</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_property_double( return_value, property_name, d) - Same, only adds a double</seg></tuv>
      <tuv xml:lang="es"><seg>add_property_double( return_value, nombre_propiedad, d) - Igual, pero añadiendo un double</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_property_string( return_value, property_name, str) - Same, only adds a string</seg></tuv>
      <tuv xml:lang="es"><seg>add_property_string( return_value, nombre_propiedad, cad) - Igual, pero añadiendo una cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_property_stringl( return_value, property_name, str, l) - Same, only adds a string of length'l '</seg></tuv>
      <tuv xml:lang="es"><seg>add_property_stringl( return_value, nombre_propiedad, cad, l) - Igual, pero añadiendo una cadena de longitud 'l '</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returning an array:</seg></tuv>
      <tuv xml:lang="es"><seg>Devolviendo una matriz:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Call array_init( return_value).</seg></tuv>
      <tuv xml:lang="es"><seg>Llame a array_init( return_value).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions used to populate an array are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones utilizadas para rellanar una matriz son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_assoc_long( return_value,key,l) - add associative entry with key'key 'and long value'l'</seg></tuv>
      <tuv xml:lang="es"><seg>add_assoc_long( return_value,clave,l) - añade un elemento asociativo con clave 'clave 'y valor long 'l'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_assoc_double( return_value,key,d)</seg></tuv>
      <tuv xml:lang="es"><seg>add_assoc_double( return_value,clave,d)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_assoc_string( return_value,key,str,duplicate)</seg></tuv>
      <tuv xml:lang="es"><seg>add_assoc_string( return_value,clave,cad,duplicar)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_assoc_stringl( return_value,key,str,length,duplicate) specify the string length</seg></tuv>
      <tuv xml:lang="es"><seg>add_assoc_stringl( return_value,clave,cad,largo,duplicar) - especifica el largo de la cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_index_long( return_value,index,l) - add entry in index'index 'with long value'l'</seg></tuv>
      <tuv xml:lang="es"><seg>add_index_long( return_value,indice,l) - añade un elemento en la posición 'indice 'con valor long 'l'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_index_double( return_value,index,d)</seg></tuv>
      <tuv xml:lang="es"><seg>add_index_double( return_value,indice,d)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_index_string( return_value,index,str)</seg></tuv>
      <tuv xml:lang="es"><seg>add_index_string( return_value,indice,cad)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_index_stringl( return_value,index,str,length) - specify the string length</seg></tuv>
      <tuv xml:lang="es"><seg>add_index_stringl( return_value,indice,cad,largo) - especifica el largo de la cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_next_index_long( return_value,l) - add an array entry in the next free offset with long value'l '</seg></tuv>
      <tuv xml:lang="es"><seg>add_next_index_long( return_value,l) - añade un elemento a la matriz en la próxima posición libre con valor long 'l '</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_next_index_string( return_value,str)</seg></tuv>
      <tuv xml:lang="es"><seg>add_next_index_string( return_value,cad)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_next_index_stringl( return_value,str,length) - specify the string length</seg></tuv>
      <tuv xml:lang="es"><seg>add_next_index_stringl( return_value,cad,largo) - especifica el largo de la cadena</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has a standard way of dealing with various types of resources.</seg></tuv>
      <tuv xml:lang="es"><seg>El PHP 3.0 tiene una forma estandarizada de tratar con distintos tipos de recursos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This replaces all of the local linked lists in PHP 2.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto sustituye a las listas enlazadas locales del PHP 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Available functions:</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones disponibles:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php3_list_insert( ptr, type) - returns the'id 'of the newly inserted resource</seg></tuv>
      <tuv xml:lang="es"><seg>php3_list_insert( ptr, tipo) - devuelve el 'id 'del recurso recién insertado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php3_list_delete( id) - delete the resource with the specified id</seg></tuv>
      <tuv xml:lang="es"><seg>php3_list_delete( id) - borra el recurso con el id especificado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php3_list_find( id,*type) - returns the pointer of the resource with the specified id, updates'type 'to the resource's type</seg></tuv>
      <tuv xml:lang="es"><seg>php3_list_find( id,*tipo) - devuelve el puntero al recurso con el id especificado, y actualiza 'tipo 'al tipo del mismo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Typical list code would look like this:</seg></tuv>
      <tuv xml:lang="es"><seg>El código típico de un lista sería como este:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-7.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding a new resource</seg></tuv>
      <tuv xml:lang="es"><seg>Añadiendo un nuevo recurso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RESOURCE *resource; / * ...allocate memory for resource and acquire resource... * / / * add a new resource to the list * / return_value - value.lval = php3_list_insert((void *) resource, LE_RESOURCE_TYPE); return_value - type = IS_LONG;</seg></tuv>
      <tuv xml:lang="es"><seg>RESOURCE *recurso; / * ...asignar memoria para el recurso y adquirirlo... * / / * añadir un recurso a la lista * / return_value - value.lval = php3_list_insert((void *) recurso, LE_RESOURCE_TYPE); return_value - type = IS_LONG;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-8.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using an existing resource</seg></tuv>
      <tuv xml:lang="es"><seg>Utilizando un recurso existente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval *resource_id; RESOURCE *resource; int type; convert_to_long(resource_id); resource = php3_list_find(resource_id - value.lval, type); if (type != LE_RESOURCE_TYPE) {php3_error(E_WARNING ,"resource index %d has the wrong type",resource_id - value.lval); RETURN_FALSE;} / * ...use resource... * /</seg></tuv>
      <tuv xml:lang="es"><seg>pval *id_recurso; RESOURCE *recurso; int tipo; convert_to_long(id_recurso); recurso = php3_list_find(id_recurso - value.lval, tipo); if (tipo != LE_RESOURCE_TYPE) {php3_error(E_WARNING ,"el recurso número %d tiene el tipo equivocado",id_recurso - value.lval); RETURN_FALSE;} / * ...usar recurso... * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-9.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo E-9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deleting an existing resource</seg></tuv>
      <tuv xml:lang="es"><seg>Borrando un recurso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval *resource_id; RESOURCE *resource; int type; convert_to_long(resource_id); php3_list_delete(resource_id - value.lval);</seg></tuv>
      <tuv xml:lang="es"><seg>pval *id_recurso; RESOURCE *recurso; int tipo; convert_to_long(id_recurso); php3_list_delete(id_recurso - value.lval);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has a standard way of storing persistent resources (i.e., resources that are kept in between hits).</seg></tuv>
      <tuv xml:lang="es"><seg>El PHP 3.0 tiene una forma estándar de almacenar recursos persistentes (es decir, recursos que se mantienen entre accesos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first module to use this feature was the MySQL module, and mSQL followed it, so one can get the general impression of how a persistent resource should be used by reading mysql.c.</seg></tuv>
      <tuv xml:lang="es"><seg>El primer módulo que utilizó esta característica fue el MySQL y tras él fue el mSQL, así que uno puede hacerse una buena idea de cómo utilizar un recurso persistente leyendo mysql.c.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions you should look at are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones a revisar son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The general idea of persistence modules is this:</seg></tuv>
      <tuv xml:lang="es"><seg>La idea general de los módulos persistentes es:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Code all of your module to work with the regular resource list mentioned in section (9).</seg></tuv>
      <tuv xml:lang="es"><seg>Codifique todos sus módulos para que funcionen con la lista regulares de recursos mencionadas en la sección (9).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Code extra connect functions that check if the resource already exists in the persistent resource list.</seg></tuv>
      <tuv xml:lang="es"><seg>Codifique funciones extra de conexión que comprueben si el recurso ya está en la lista de recursos persistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it does, register it as in the regular resource list as a pointer to the persistent resource list (because of 1., the rest of the code should work immediately).</seg></tuv>
      <tuv xml:lang="es"><seg>Si ya está, regístrelo en la lista regular como un puntero a la lista de recursos persistentes (debido a 1., el resto del código deberá funcionar de inmediato).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it doesn' t, then create it, add it to the persistent resource list AND add a pointer to it from the regular resource list, so all of the code would work since it's in the regular resource list, but on the next connect, the resource would be found in the persistent resource list and be used without having to recreate it.</seg></tuv>
      <tuv xml:lang="es"><seg>Así todo el código funcionará porque está en la lista regular, pero en la siguiente conexión el recurso ya estará en la lista persistente y podrá ser usado sin re-crearlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LE_MYSQL_LINK for non-persistent link and LE_MYSQL_PLINK for a persistent link).</seg></tuv>
      <tuv xml:lang="es"><seg>Deberá registrar estos recursos con un tipo diferente (por ejemplo, LE_MYSQL_LINK para el enlace no persistente y LE_MYSQL_PLINK para un enlace persistente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you read mysql.c, you 'll notice that except for the more complex connect function, nothing in the rest of the module has to be changed.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se leyera mysql.c, notaría que, salvo por que hay una función de conexión más compleja, no hay que cambiar nada más del resto del módulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The very same interface exists for the regular resource list and the persistent resource list, only 'list' is replaced with'plist ':</seg></tuv>
      <tuv xml:lang="es"><seg>Existe exactamente la misma interfaz para la lista de recursos regular y para la lista de recursos persistente, pero cambiando únicamente 'lista' por 'listap ':</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php3_plist_insert( ptr, type) - returns the'id 'of the newly inserted resource</seg></tuv>
      <tuv xml:lang="es"><seg>php3_plist_insert( ptr, tipo) - devuelve el 'id 'del recurso recién insertado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php3_plist_delete( id) - delete the resource with the specified id</seg></tuv>
      <tuv xml:lang="es"><seg>php3_plist_delete( id) - borra el recurso con el id especificado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php3_plist_find( id,*type) - returns the pointer of the resource with the specified id, updates'type 'to the resource's type</seg></tuv>
      <tuv xml:lang="es"><seg>php3_plist_find( id,*tipo) - devuelve el puntero al recurso con el id especificado, y actualiza 'tipo 'al tipo del mismo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, it 's more than likely that these functions would prove to be useless for you when trying to implement a persistent module.</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo, es más que probable que estas funciones se muestren inútiles cuando intente implementar un módulo persistente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Typically, one would want to use the fact that the persistent resource list is really a hash table.</seg></tuv>
      <tuv xml:lang="es"><seg>Típicamente usted querrá usar el hecho de que la tabla de recursos persistentes es en realidad una matriz asociativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, in the MySQL / mSQL modules, when there' s a pconnect() call (persistent connect), the function builds a string out of the host / user / passwd that were passed to the function, and hashes the SQL link with this string as a key.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo, en los módulos MySQL / mSQL, cuando hay una llamada a pconnect() (conexión persistente), la función combina en una cadena el servidor / usuario / clave que se pasaron a la función y codifica el enlace SQL con esta cadena como clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next time someone calls a pconnect() with the same host / user / passwd, the same key would be generated, and the function would find the SQL link in the persistent list.</seg></tuv>
      <tuv xml:lang="es"><seg>La siguiente vez que alguien llame a pconnect() con el mismo servidor / usuario / clave, se generará la misma clave, y la función hayará el enlace SQL en la lista persistente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Until further documented, you should look at mysql.c or msql.c to see how one should use the plist 's hash table abilities.</seg></tuv>
      <tuv xml:lang="es"><seg>Hasta que se documente mejor, deberá mirar en mysql.c o en msql.c para ver como utilizar las capacidades de matriz asociativa de la listap.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One important thing to note: resources going into the persistent resource list must *NOT* be allocated with PHP' s memory manager, i.e., they should NOT be created with emalloc(), estrdup(), etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Una cosa importante: a los recursos que van a parar a la lista de recursos persistentes *NO* se les debe asignar memoria usando el gestor de memoria del PHP, es decir, que NO deben ser creados utilizando emalloc() o estrdup(), etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rather, one should use the regular malloc(), strdup(), etc.</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso se debe usar las funciones habituales malloc(), strdup(), etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The reason for this is simple - at the end of the request (end of the hit), every memory chunk that was allocated using PHP's memory manager is deleted.</seg></tuv>
      <tuv xml:lang="es"><seg>La razón para esto es simple: al final de la petición (final del acceso), se borran todos los trozos de memoria asignados con el gestor de memoria del PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since the persistent list isn' t supposed to be erased at the end of a request, one mustn't use PHP's memory manager for allocating resources that go to it.</seg></tuv>
      <tuv xml:lang="es"><seg>Como la lista persistente se supone que no se debe borrar al final de una petición, no se debe utilizar el gestor de memoria del PHP para asignar memoria a los recursos de la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you register a resource that 's going to be in the persistent list, you should add destructors to it both in the non-persistent list and in the persistent list.</seg></tuv>
      <tuv xml:lang="es"><seg>El destructor de la lista no persistente no deberá hacer nada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The destructor in the non-persistent list destructor shouldn 't do anything.</seg></tuv>
      <tuv xml:lang="es"><seg>El de la lista persistente deberá liberar adecuadamente los recursos obtenidos por dicho tipo (por ejemplo, memoria, enlaces SQL, etc.).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The one in the persistent list destructor should properly free any resources obtained by that type (e.g. memory, SQL links, etc).</seg></tuv>
      <tuv xml:lang="es"><seg>Tal y como pasa para los recursos no persistentes, DEBERÁ añadir destructores para cada recurso aunque no sean necesarios y estén vacíos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Just like with the non-persistent resources, you *MUST* add destructors for every resource, even it requires no destruction and the destructor would be empty.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchas de las características del PHP3 pueden ser configuradas en tiempo de ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remember, since emalloc() and friends aren't to be used in conjunction with the persistent list, you mustn't use efree() here either.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas directivas de configuración pueden aparecer tanto en el fichero php3.ini o, en el caso de la versión de módulo del Apache, en los archivos .conf del propio Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many of the features of PHP can be configured at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>La ventaja de tenerlos en los archivos .conf del Apache es que se puden configurar directorio por directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These configuration directives can appear in either the designated php3.ini file, or in the case of the Apache module version in the Apache .conf files.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta granularidad en la configuración es especialmente útil cuando un servidor soporta múltiples servidores virtuales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The advantage of having them in the Apache .conf files is that they can be configured on a per-directory basis.</seg></tuv>
      <tuv xml:lang="es"><seg>Añada la directiva a la estructura php3_ini_structure en mod_php3.h.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that one directory may have a certain safemodeexecdir for example, while another directory may have another.</seg></tuv>
      <tuv xml:lang="es"><seg>En main.c, edite la función php3_module_startup y añada la llamada a cfg_get_string() o a cfg_get_long() según se requiera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This configuration granularity is especially handy when a server supports multiple virtual hosts.</seg></tuv>
      <tuv xml:lang="es"><seg>Añada la directiva, las restricciones y un comentario a la estructura php3_commands en mod_php3.c.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The steps required to add a new directive:</seg></tuv>
      <tuv xml:lang="es"><seg>Cuidado con la parte de restricciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add directive to php3_ini_structure struct in mod_php3.h.</seg></tuv>
      <tuv xml:lang="es"><seg>Las de tipo RSRC_CONF sólo puede aparecer en los archivos .conf del Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In main.c, edit the php3_module_startup function and add the appropriate cfg_get_string() or cfg_get_long() call.</seg></tuv>
      <tuv xml:lang="es"><seg>Las directivas de tipo OR_OPTIONS pueden aparecer en cualquier parte, incluso en los habituales archivos .htaccess.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add the directive, restrictions and a comment to the php3_commands structure in mod_php3.c.</seg></tuv>
      <tuv xml:lang="es"><seg>Añada el elemento apropiado para su directiva, bien en php3take1handler(), bien en php3flaghandler().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RSRC_CONF are directives that can only be present in the actual Apache .conf files.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesita añadir su nueva directiva a la sección de configuración de la función _php3_info() en functions / info.c.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any OR_OPTIONS directives can be present anywhere, include normal .htaccess files.</seg></tuv>
      <tuv xml:lang="es"><seg>Y finalmente, por supuesto, deberá utilizar su nueva directiva en algún sitio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In either php3take1handler() or php3flaghandler() add the appropriate entry for your directive.</seg></tuv>
      <tuv xml:lang="es"><seg>[1]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And last, you of course have to use your new directive somewhere.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor a usar se debe asignar dinámicamente y de forma manual, pues el código de manejo de memoria intentará liberar este puntero más adelante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will be addressable as php3_ini.directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Nunca pase memoria asignada de forma estática a SET_VAR_STRING.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger Protocol</seg></tuv>
      <tuv xml:lang="es"><seg>Protocolo del debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP, which stands for "PHP:</seg></tuv>
      <tuv xml:lang="es"><seg>PHP, acrónimo de "PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hypertext Preprocessor "is a widely-used Open Source general-purpose scripting language that is especially suited for Web development and can be embedded into HTML.</seg></tuv>
      <tuv xml:lang="es"><seg>Hypertext Preprocessor", es un lenguaje "Open Source "interpretado de alto nivel, especialmente pensado para desarrollos web y el cual puede ser embebido en páginas HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its syntax draws upon C, Java, and Perl, and is easy to learn.</seg></tuv>
      <tuv xml:lang="es"><seg>La mayoría de su sintaxis es similar a C, Java y Perl y es fácil de aprender.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The main goal of the language is to allow web developers to write dynamically generated webpages quickly, but you can do much more with PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>La meta de este lenguaje es permitir escribir a los creadores de páginas web, páginas dinámicas de una manera rápida y fácil, aunque se pueda hacer mucho más con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual consists primarily of a function reference, but also contains a language reference, explanations of some of PHP 's major features, and other supplemental information.</seg></tuv>
      <tuv xml:lang="es"><seg>Este manual contiene principalmente una referencia de funciones PHP, tambien contiene una referencia del lenguaje, explicaciones de caracteristicas importantes de PHP y alguna información suplementaria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can download this manual in several formats at http: / /www.php.net / docs.php.</seg></tuv>
      <tuv xml:lang="es"><seg>Este manual se puede conseguir en diferentes formatos en http: / /www.php.net / docs.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The downloads are updated as the content changes.</seg></tuv>
      <tuv xml:lang="es"><seg>Estos ficheros son actualizados a medida que el manual vaya cambiando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also PHP History</seg></tuv>
      <tuv xml:lang="es"><seg>Más información sobre como este manual es desarrollado puede encontrarse en el apéndice 'Sobre este manual'</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By putting engine off in the appropriate places in the httpd.conf file, PHP can be enabled or disabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones están disponibles solamente si ejecutamos PHP como módulo de Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function Reference</seg></tuv>
      <tuv xml:lang="es"><seg>Referencia de las Funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays are essential for storing, managing, and operating on sets of variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten trabajar y manipular matrices (arrays) de diferentes maneras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple and multi-dimensional arrays are supported, and may be either user created or created by another function.</seg></tuv>
      <tuv xml:lang="es"><seg>Las matrices se utilizan para guardar, manejar y operar grupos de variables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are specific database handling functions for populating arrays from database queries, and several functions return arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>Matrices simples y multi-dimensionales están soportadas y pueden ser creadas por el usuario u otras funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Existen funciones específicas de manejo de bases de datos que actualizan matrices con el resultado devuelto por la base de datos, numerosas otras funciones devuelven matrices como resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Consultar la sección del manual Matrices si quereis una explicación detallada de como las matrices están implementadas en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are always available as part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones están disponibles como parte del módulo estandar, el cual está siempre disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is also the default case for array_change_key_case().</seg></tuv>
      <tuv xml:lang="es"><seg>No se necesita ninguna instalación para usar estas funciones, son parte del núcleo de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CASE_UPPER is used with array_change_key_case() and is used to convert array keys to upper case.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ninguna directiva de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_ASC is used with array_multisort() to sort in ascending order.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ningún tipo de recurso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting type flags: used by various sort functions</seg></tuv>
      <tuv xml:lang="es"><seg>CASE_UPPER y CASE_LOWER son usadas con la función array_change_key_case().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_NUMERIC is used to compare items numerically.</seg></tuv>
      <tuv xml:lang="es"><seg>Son usadas respectivamente para cambiar una cadena literal de mayúsculas a minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_array(), explode(), implode(), split(), preg_split(), and join().</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien is_array(), explode(), implode(), split(), y join().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The aspell() functions allows you to check the spelling on a word and offer suggestions.</seg></tuv>
      <tuv xml:lang="es"><seg>La función aspell() permite comprobar la ortografía de una palabra y ofrece alternativas a la misma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>aspell works only with very old (up to .27.* or so) versions of aspell library.</seg></tuv>
      <tuv xml:lang="es"><seg>aspell funciona solamente con versiones muy antiguas (hasta la .27.* mas ó menos) de la biblioteca aspell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Neither this module, nor those versions of aspell library are supported any longer.</seg></tuv>
      <tuv xml:lang="es"><seg>Ni este módulo ni las versiones de la biblioteca aspell se soportan actualmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to use spell-checking capabilities in PHP, use pspell If you want to use spell-checking capabilities in PHP, use pspell instead.</seg></tuv>
      <tuv xml:lang="es"><seg>Si quereis utilizar capacidades de comprobación ortográfica en php, usar pspell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses pspell library and works with newer versions of aspell.</seg></tuv>
      <tuv xml:lang="es"><seg>Utiliza la biblioteca pspell y funciona con versiones recientes de aspell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need the aspell library, available from: http: / /aspell.sourceforge.net /.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesitais la biblioteca aspell disponible en: http: / /aspell.sourceforge.net /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pspell.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver tambien pspell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.0.4, libbcmath is bundled with PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Para operaciones matemáticas de precisión arbitraria, PHP tiene disponible la Calculadora Binaria que soporta números de cualquier tamaño y precisión, representados como cadenas de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, these functions are only available if PHP was configured with --enable-bcmath.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde PHP 4.0.4, libbcmath se encuentra incorporada en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, these functions are only available if PHP was NOT configured with --disable-bcmath.</seg></tuv>
      <tuv xml:lang="es"><seg>No se necesitan bibliotecas externas para esta extensión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="es"><seg>En PHP 4, estas funciones están disponibles solamente si PHP ha sido configurado con --enable-bcmath en PHP 3, estas funciones están disponibles solamente si PHP no ha sido configurado con --disable-bcmath.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ninguna directiva de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of decimal digits for all bcmath functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ningún tipo de recurso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ninguna constante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The bzip2 functions are used to transparently read and write bzip2 (.bz2) compressed files.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones bzip2 son usadas para leer y escribir de forma transparente, ficheros comprimidos bzip2 (.bz2)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module requires bzip2 / libbzip2 version = 1.0.x.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo usa las funciones de la biblioteca bzip2 de Julian Seward.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bzip2 support in PHP is not enabled by default.</seg></tuv>
      <tuv xml:lang="es"><seg>El soporte Bzip2 en PHP no está activado por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to use the --with-bz2[ =DIR] configuration option when compiling PHP to enable bzip2 support.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo requiere bzip2 / libbzip2 versión = 1.0.x.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ninguna directiva de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension defines one resource type: a file pointer identifying the bz2-file to work on.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión define un tipo de recurso: un puntero de fichero que identifica el fichero bz2 con el que se va a trabajar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example opens a temporary file and writes a test string to it, then prints out the contents of the file.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo abre un fichero temporal, escribe una cadena literal en el y presenta el contenido de dicho fichero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Small bzip2 Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo simple de bzip2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The intermediary or standard it is based on is the Julian Day Count.</seg></tuv>
      <tuv xml:lang="es"><seg>La extensión calendar pone a disposición una serie de funciones para simplificar la conversión entre los distintos formatos de calendario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Julian Day Count is a count of days starting from January 1st, 4713 B.C.</seg></tuv>
      <tuv xml:lang="es"><seg>El intermediario ó estándar en que se basa es la Cuenta de Días Juliana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To convert between calendar systems, you must first convert to Julian Day Count, then to the calendar system of your choice.</seg></tuv>
      <tuv xml:lang="es"><seg>La Cuenta de Días Juliana es una cuenta que comienza mucho antes que lo que mucha gente podría necesitar contar (como alrededor del 4000 AC).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on Julian Day Count, visit http: / /serendipity.magnet.ch / hermetic / cal_stud / jdn.htm.</seg></tuv>
      <tuv xml:lang="es"><seg>Para convertir entre sistemas de calendario, primero deberá convertir a la Cuenta de Días Juliana y luego al sistema de su elección. ¡La Cuenta de Días es muy diferente del Calendario Juliano!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on calendar systems visit http: / /genealogy.org / ~scottlee / cal-overview.html.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información sobre la Cuenta de Días Juliana visitar http: / /serendipity.magnet.ch / hermetic / cal_stud / jdn.htm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Excerpts from this page are included in these instructions, and are in quotes.</seg></tuv>
      <tuv xml:lang="es"><seg>Para más información sobre sistemas de calendario, visitar http: / /genealogy.org / ~scottlee / cal-overview.html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to compile PHP with --enable-calendar.</seg></tuv>
      <tuv xml:lang="es"><seg>En estas instrucciones se han incluído extractos entrecomillados de dicha página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Para que estas funciones funcionen, hay que compilar PHP con la opción --enable-calendar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ninguna directiva de configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ningún tipo de recurso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas constantes están definidas por esta extensión y estarán disponibles solamente cuando la extensión ha sido o bien compilada dentro de PHP o grabada dinamicamente en tiempo de ejecución.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following constants are available since PHP 4.3.0:</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes constantes se pueden utilizar desde PHP 4.3.0:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CCVS is RedHat' s solution to the "middle-man "in credit card processing.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones interaccionan con el API de CCVS, permitiendo trabajar con CCVS directamente desde un script PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It lets you directly address the credit card clearing houses via your *nix box and a modem.</seg></tuv>
      <tuv xml:lang="es"><seg>CCVS es la solución de RedHat para el intermediario en el procesamiento de tarjetas de crédito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following references will outline the process.</seg></tuv>
      <tuv xml:lang="es"><seg>Permite conectar directamente con las centrales de las tarjetas desde una máquina *nix con un módem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CCVS has been discontinued by Red Hat and there are no plans to issue further keys or support contracts.</seg></tuv>
      <tuv xml:lang="es"><seg>CCVS ha sido discontinuado por Red Hat y no existen planes de ofrecer nuevas funcionalidades ó contratos de ayuda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those looking for a replacement can consider MCVE by Main Street Softworks as a potential replacement.</seg></tuv>
      <tuv xml:lang="es"><seg>Los que necesiten usar esta funcionalidad pueden probar MCVE by Main Street Softworks.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is similar in design and has documented PHP support!</seg></tuv>
      <tuv xml:lang="es"><seg>Es similar en diseño y tiene documentación para su uso con PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable CCVS Support in PHP, first verify your CCVS installation directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Para activar el soporte de CCVS en PHP hay que tener instalado CCVS en vuestro sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will then need to configure PHP with the --with-ccvs option.</seg></tuv>
      <tuv xml:lang="es"><seg>Seguidamente es necesario configurar PHP con la opción --with-ccvs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use this option without specifying the path to your CCVS installation, PHP will attempt to look in the default CCVS Install location (/ usr / local / ccvs).</seg></tuv>
      <tuv xml:lang="es"><seg>Si se usa esta opcion sin especificar el directorio donde CCVS está instalado, PHP intentará encontrar CCVS en la localización por defecto (/ usr / local / ccvs).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If CCVS is in a non-standard location, run configure with: --with-ccvs=$ccvs_path, where $ccvs_path is the path to your CCVS installation.</seg></tuv>
      <tuv xml:lang="es"><seg>Si CCVS está instalado en una localización no estándar, ejecutar configure con: --with-ccvs=$ccvs_path, donde $ccvs_path es el directorio donde CCVS esta instalado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that CCVS support requires that $ccvs_path / lib and $ccvs_path / include exist, and include cv_api.h under the include directory and libccvs.a under the lib directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Tener en cuenta que el soporte de CCVS en PHP necesita que $ccvs_path / lib y $ccvs_path / include existan, que cv_api.h se encuentre en el directorio include y que libccvs.a se encuentre en el directorio lib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, a ccvsd process will need to be running for the configurations you intend to use in your PHP scripts.</seg></tuv>
      <tuv xml:lang="es"><seg>Adicionalmente se necesita un proceso ccvs ejecutandose en el sistema para las configuraciones que se ejecuten desde PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will also need to make sure the PHP Processes are running under the same user as your CCVS was installed as (e.g. if you installed CCVS as user'ccvs', your PHP processes must run as'ccvs' as well.)</seg></tuv>
      <tuv xml:lang="es"><seg>Si ccvs usa el usuario 'ccvs', PHP debe ejecutarse como 'ccvs' tambien).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additional information about CCVS can be found at http: / /www.redhat.com / products / ccvs.</seg></tuv>
      <tuv xml:lang="es"><seg>Información adicional sobre CCVS se puede encontrar en http: / /www.redhat.com / products / ccvs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RedHat maintains slightly outdated but still useful documentation at http: / /www.redhat.com / products / ccvs / support / CCVS3.3docs / ProgPHP.html.</seg></tuv>
      <tuv xml:lang="es"><seg>Red Hat casi no mantiene la documentación de CCVS, pero todavia es de gran ayuda, se puede encontrar en http: / /www.redhat.com / products / ccvs / support / CCVS3.3docs / ProgPHP.html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to obtain information about classes and instance objects.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten obtener informacion sobre clases y objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can obtain the name of the class to which a object belongs, as well as its member properties and methods.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede obtener el nombre de la clase a la que pertenece un objeto, asi como las propiedades de sus miembros y métodos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Usando estas funciones se puede obtener no solo lo comentado en la frase anterior, tambien se puede obtener la familia del objeto (p.ej. que clase está extendiendo la clase a la que pertenece el objeto)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>En este ejemplo, definimos primero una clase base y una extensión de esta clase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>La clase base define un vegetal genérico, si es comestible y su color.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base class describes a general vegetable, whether it is edible or not and what is its color.</seg></tuv>
      <tuv xml:lang="es"><seg>La subclase Spinach añade un metodo para cocinarlo y otro para saber si esta cocinado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The subclass Spinach adds a method to cook it and another to find out if it is cooked.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. classes.inc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We then instantiate 2 objects from these classes and print out information about them, including their class parentage.</seg></tuv>
      <tuv xml:lang="es"><seg>Creamos 2 objetos de estas clases e imprimimos información sobre ellos, incluyendo la jerarquia de clases a la que pertenecen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We also define some utility functions, mainly to have a nice printout of the variables.</seg></tuv>
      <tuv xml:lang="es"><seg>También definimos algunas funciones, especialmente para imprimir las variables de una manera ordenada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. test_script.php</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. test_script.php</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>COM functions are only available on the Windows version of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones solo están disponibles en la versión para Windows de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further information on COM read the COM specification or perhaps take a look at Don Box' s Yet Another COM Library (YACL)</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones han sido añadidas en PHP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ClibPDF lets you create PDF documents with PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>ClibPDF Le permite crear documentos PDF con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ClibPDF functionality and API are similar to PDFlib.</seg></tuv>
      <tuv xml:lang="es"><seg>Está disponible en FastIO pero no es software libre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This documentation should be read alongside the ClibPDF manual since it explains the library in much greater detail.</seg></tuv>
      <tuv xml:lang="es"><seg>Debería leer la licencia antes de comenzar a utilizar ClibPDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many functions in the native ClibPDF and the PHP module, as well as in PDFlib, have the same name.</seg></tuv>
      <tuv xml:lang="es"><seg>Si usted no puede cumplir el acuerdo de la licencia considere el utilizar la pdflib de Thomas Merz, que tambien es muy potente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently this handle is not used internally since ClibPDF does not support the creation of several PDF documents at the same time.</seg></tuv>
      <tuv xml:lang="es"><seg>La funcionalidad y la API de ClibPDF son similares a la pdflib de Thomas Merz pero, de acuerdo con FastIO, ClibPDF es mas rápida y crea documentos mas pequeños.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Actually, you should not even try it, the results are unpredictable.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto puede haber cambiado con la nueva versión 2.0 de pdflib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>According to the author of ClibPDF this will change in one of the next releases (current version when this was written is 1.10).</seg></tuv>
      <tuv xml:lang="es"><seg>Un simple banco de pruebas (el ejemplo pdfclock.c de pdflib 2.0 trasformado en un script php) en realidad no muestra ninguna diferencia en velocidad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need this functionality use the pdflib module.</seg></tuv>
      <tuv xml:lang="es"><seg>Por tanto, pruebe las dos y vea cual hace el mejor trabajo para usted.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A nice feature of ClibPDF (and PDFlib) is the ability to create the pdf document completely in memory without using temporary files.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta documentación debería ser leída junto con el manual de ClibPDF ya que este explica la librería con mucho mas detalle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also provides the ability to pass coordinates in a predefined unit length. (This feature can also be simulated by pdf_translate() when using the PDFlib functions.)</seg></tuv>
      <tuv xml:lang="es"><seg>Muchas funciones en le ClibPDF nativa y el módulo PHP, así como en pdflib, tienen el mismo nombre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another nice feature of ClibPDF is the fact that any page can be modified at any time even if a new page has been already opened.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las funciones excepto cpdf_open() toman el manejador del documento com el primer parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function cpdf_set_current_page() allows to leave the current page and presume modifying an other page.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente este manejador no se usa internamente desde que ClibPDF no soporta la creación de varios documentos PDF al mismo tiempo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most of the functions are fairly easy to use.</seg></tuv>
      <tuv xml:lang="es"><seg>Realmente, ni debería intentarlo, los resultados son impredecibles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most difficult part is probably creating a very simple PDF document at all.</seg></tuv>
      <tuv xml:lang="es"><seg>No puedo supervisar cuales son las consecuencias en un sistema multihilo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It creates a document with one page.</seg></tuv>
      <tuv xml:lang="es"><seg>De acuerdo con el autor de ClibPDF, esto cambiará en alguno de las próximas veriones (la versión actual, cuando eto fue escrito es 1.10).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The page contains the text "Times-Roman" in an outlined 30pt font.</seg></tuv>
      <tuv xml:lang="es"><seg>Si usted necesita esta capacidad, use el módulo pdflib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The text is underlined.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use the ClibPDF functions you need to install the ClibPDF package.</seg></tuv>
      <tuv xml:lang="es"><seg>La función cpdf_set_font() ha cambiado desde que PHP3 soporta fuentes asiáticas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP requires that you use cpdflib = 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Una gran ventaja de ClibPDF sobre pdflib es la posibilidad de crear el documento PDF completamente en memoria sin usar ficheros temporales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to compile PHP with --with-cpdflib[ =DIR].</seg></tuv>
      <tuv xml:lang="es"><seg>Esto también proporciona la capaciad de pasar coordenadas en una unidad de longitud predefinida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the cpdflib install directory, defaults to / usr.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es una cualidad útil pero puede ser simulada con pdf_translate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition you can specify the jpeg library and the tiff library for ClibPDF to use.</seg></tuv>
      <tuv xml:lang="es"><seg>La mayoría de las funciones son fáciles de usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do so add to your configure line the options --with-jpeg-dir[ =DIR] --with-tiff-dir[=DIR].</seg></tuv>
      <tuv xml:lang="es"><seg>La parte mas difícil es, probablemente, crear un documento PDF muy simple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>El siguiente ejemplo debería ayudarle a comenzar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>La página contiene el texto "Times-Roman" con una fuente de 30pt.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>El texto está subrayado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple ClibPDF Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $cpdf = cpdf_open( 0); cpdf_page_init($cpdf, 1, 0, 595, 842, 1.0); cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1"); cpdf_begin_text($cpdf); cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding"); cpdf_set_text_rendering($cpdf, 1); cpdf_text($cpdf, "Times Roman outlined", 50, 750); cpdf_end_text($cpdf); cpdf_moveto($cpdf, 50, 740); cpdf_lineto($cpdf, 330, 740); cpdf_stroke($cpdf); cpdf_finalize($cpdf); Header("Content-type: application / pdf"); cpdf_output_buffer($cpdf); cpdf_close($cpdf);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $cpdf = cpdf_open( 0); cpdf_page_init($cpdf, 1, 0, 595, 842); cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1"); cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding"); cpdf_set_text_rendering($cpdf, 1); cpdf_text($cpdf, "Times Roman outlined", 50, 750); cpdf_moveto($cpdf, 50, 740); cpdf_lineto($cpdf, 330, 740); cpdf_stroke($cpdf); cpdf_finalize($cpdf); Header("Content-type: application / pdf"); cpdf_output_buffer($cpdf); cpdf_close($cpdf);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The pdflib distribution contains a more complex example which creates a series of pages with an analog clock.</seg></tuv>
      <tuv xml:lang="es"><seg>La distribución de pdflib contiene un ejemplo mas comlejo que crea una serie de páginas con un reloj analógico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is that example converted into PHP using the ClibPDF extension:</seg></tuv>
      <tuv xml:lang="es"><seg>Aquí está ese ejemplo convertido en PHP usando la extensión ClibPDF:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. pdfclock example from pdflib 2.0 distribution</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo con pdfclock de la distribución pdflib 2.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the PDFlib extension documentation.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $radius = 200; $margin = 20; $pagecount = 40; $pdf = cpdf_open(0); cpdf_set_creator($pdf, "pdf_clock.php3"); cpdf_set_title($pdf, "Reloj Analógico"); while($pagecount- - 0) {cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0); cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0); / * limpiar * / cpdf_translate($pdf, $radius + $margin, $radius + $margin); cpdf_save($pdf); cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0); / * cambio de minuto * / cpdf_setlinewidth($pdf, 2.0); for ($alpha = 0; $alpha 360; $alpha += 6) {cpdf_rotate($pdf, 6.0); cpdf_moveto($pdf, $radius, 0.0); cpdf_lineto($pdf, $radius-$margin / 3, 0.0); cpdf_stroke($pdf);} cpdf_restore($pdf); cpdf_save($pdf); / * cambios de 5 minutos * / cpdf_setlinewidth($pdf, 3.0); for ($alpha = 0; $alpha 360; $alpha += 30) {cpdf_rotate($pdf, 30.0); cpdf_moveto($pdf, $radius, 0.0); cpdf_lineto($pdf, $radius-$margin, 0.0); cpdf_stroke($pdf);} $ltime = getdate(); / * dibujar la aguja de las horas * / cpdf_save($pdf); cpdf_rotate($pdf, -(($ltime['minutos'] / 60.0) + $ltime['horas'] - 3.0) * 30.0); cpdf_moveto($pdf, -$radius / 10, -$radius / 20); cpdf_lineto($pdf, $radius / 2, 0.0); cpdf_lineto($pdf, -$radius / 10, $radius / 20); cpdf_closepath($pdf); cpdf_fill($pdf); cpdf_restore($pdf); / * dibujar el minutero * / cpdf_save($pdf); cpdf_rotate($pdf, -(($ltime['segundos'] / 60.0) + $ltime['minutos'] - 15.0) * 6.0); cpdf_moveto($pdf, -$radius / 10, -$radius / 20); cpdf_lineto($pdf, $radius * 0.8, 0.0); cpdf_lineto($pdf, -$radius / 10, $radius / 20); cpdf_closepath($pdf); cpdf_fill($pdf); cpdf_restore($pdf); / * dibujar la seguna mano * / cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0); cpdf_setlinewidth($pdf, 2); cpdf_save($pdf); cpdf_rotate($pdf, -(($ltime['segundos'] - 15.0) * 6.0)); cpdf_moveto($pdf, -$radius / 5, 0.0); cpdf_lineto($pdf, $radius, 0.0); cpdf_stroke($pdf); cpdf_restore($pdf); / * dibujar un pequeño círculo en el centro * / cpdf_circle($pdf, 0, 0, $radius / 30); cpdf_fill($pdf); cpdf_restore($pdf); cpdf_finalize_page($pdf, $pagecount+1);} cpdf_finalize($pdf); Header("Content-type: application / pdf"); cpdf_output_buffer($pdf); cpdf_close($pdf);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión no define ningún tipo de recurso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions have been added in PHP 4.0.2.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP supports libcurl, a library, created by Daniel Stenberg, that allows you to connect and communicate to many different types of servers with many different types of protocols. libcurl currently supports the http, https, ftp, gopher, telnet, dict, file, and ldap protocols. libcurl also supports HTTPS certificates, HTTP POST, HTTP PUT, FTP uploading (this can also be done with PHP's ftp extension), HTTP form based upload, proxies, cookies and user+password authentication.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy libeay32.dll and ssleay32.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:</seg></tuv>
      <tuv xml:lang="es"><seg>There should be a file named "libcurl.a" located in the "lib "directory.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Once you 've compiled PHP with CURL support, you can begin using the curl functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The basic idea behind the CURL functions is that you initialize a CURL session using the curl_init(), then you can set all your options for the transfer via the curl_setopt(), then you can execute the session with the curl_exec() and then you finish off your session using the curl_close().</seg></tuv>
      <tuv xml:lang="es"><seg>The basic idea behind the CURL functions is that you initialize a CURL session using the curl_init(), then you can set all your options for the transfer via the curl_exec() and then you finish off your session using the curl_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is an example that uses the CURL functions to fetch the example.com homepage into a file:</seg></tuv>
      <tuv xml:lang="es"><seg>Here is an example that uses the CURL functions to fetch the PHP homepage into a file:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using PHP 's CURL module to fetch the example.com homepage</seg></tuv>
      <tuv xml:lang="es"><seg>Using PHP 's CURL module to fetch the PHP homepage</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $ch = curl_init ("http: / /www.example.com / "); $fp = fopen ("example_homepage.txt", "w"); curl_setopt ($ch, CURLOPT_FILE, $fp); curl_setopt ($ch, CURLOPT_HEADER, 0); curl_exec ($ch); curl_close ($ch); fclose ($fp);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $ch = curl_init ("http: / /www.php.net / "); $fp = fopen ("php_homepage.txt", "w"); curl_setopt ($ch, CURLOPT_INFILE, $fp); curl_setopt ($ch, CURLOPT_HEADER, 0); curl_exec ($ch); curl_close ($ch); fclose ($fp);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has been removed from PHP as of PHP 4.3.0, if you have questions as to why then you will find the following CyberCash Faq helpful.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones solo están disponibles si el intérprete ha sido compilado con --with-cybercash=[ DIR].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the above faq for details.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones han sido añadidas en PHP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to get the date and time from the server where your PHP scripts are running.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to take daylight saving time and leap years into consideration when working with these functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dba_sync</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a general abstraction layer for several file-based databases.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones son la base para el acceso a bases de datos del estilo Berkeley DB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of various aspects depends on the implementation of the underlying database.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es un nivel de abstraccion general para varias bases de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You have to download and install supported dba-Handlers.</seg></tuv>
      <tuv xml:lang="es"><seg>Como tal su funcionalidad esta limitada a un grupo de modernas bases de datos como Sleepycat Software' s DB2. (Esta no debe confundirse con IBM DB2 software, la cual es soportada mediante las funciones ODBC.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should avoid it, if possible.</seg></tuv>
      <tuv xml:lang="es"><seg>El comportamiento de varios aspectos depende de la implementacion de la base de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ndbm</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones como dba_optimize() y dba_sync() cumpliran su funcionalidad con unas bases de datos pero no con otras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It still has most of the arbitrary limits of dbm (therefore it is deprecated).</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes manejadores (handlers) estan soportados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is described as "a programmatic toolkit that provides high-performance built-in database support for both standalone and client / server applications.</seg></tuv>
      <tuv xml:lang="es"><seg>dbm es el mas antiguo (original) tipo de base de datos de la familia de Berkeley DB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is available since PHP 5.0.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Se debe evitar su uso, si es posible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since it is constant, we support only reading operations.</seg></tuv>
      <tuv xml:lang="es"><seg>Nosotros no soportamos las funciones de compatibilidad de DB2 y gdbm, porque ellas solo son compatibles a nivel de codigo fuente, pero no pueden manejar el formato original dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>cdb_make</seg></tuv>
      <tuv xml:lang="es"><seg>ndbm es un tipo mas nuevo y mas flexible que dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flatfile</seg></tuv>
      <tuv xml:lang="es"><seg>Todavia tiene la mayoria de las limitaciones de dbm (Por lo tanto es descartado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However you may use this where files were created in this format.</seg></tuv>
      <tuv xml:lang="es"><seg>gdbm es el gestor de bases de datos de GNU (database manager).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That happens when configure could not find any external library.</seg></tuv>
      <tuv xml:lang="es"><seg>db2 es Sleepycat Software 's DB2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The actually available list of handlers is displayed by invoking phpinfo() or dba_handlers().</seg></tuv>
      <tuv xml:lang="es"><seg>Es descrito como "un conjunto de herramientas de programacion que proveen acceso de alto nivel a bases de datos en aplicaciones standalone o en el modelo cliente / servidor."</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You also have to add support for at least one of the following handlers by specifying the --with-XXXX configure switch to your PHP configure line.</seg></tuv>
      <tuv xml:lang="es"><seg>cdb es "una rapida, de confianza, sencilla herramienta para la creacion y lectura de bases de datos constantes." Fue creada por el autor de qmail y puede encontrarse en here.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not possible to use db versions starting from 4.1 with PHP prior to version 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Como la base es constante solo se soportan las operaciones de lectura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.3.0 you can omit DIR to use the bundeled cdb library that adds the cdb_make handler which allows creation of cdb files and allows to access cdb files on the network using php 's streams.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de DBA</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uee this handler only when you cannot install one of the libraries required by the other handlers and when you cannot use bundeled cdb handler.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $id = dba_open( "/ tmp / test.db", "n", "db2"); if(!$id) {echo "dba_open failed\n"; exit;} dba_replace("key", "This is an example !", $id); if(dba_exists("key", $id)) {echo dba_fetch("key", $id); dba_delete("key", $id);} dba_close($id);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up to PHP 4.3.0 you are able to add both db2 and db3 handler but only one of them can be used internally.</seg></tuv>
      <tuv xml:lang="es"><seg>DBA es "binary safe" y no tiene ningun limite arbitrario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 5.0.0 there is a configuration check avoid such missconfigurations.</seg></tuv>
      <tuv xml:lang="es"><seg>Hereda todas sus limitaciones de la implementacion de base de datos que tenga.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions dba_open() and dba_popen() return a handle to the specified database file to access which is used by all other dba-function calls.</seg></tuv>
      <tuv xml:lang="es"><seg>Todos las bases de datos basadas en ficheros deben proveer un mecanismo para establecer el modo a la hora de crear nuevas bases de datos, si ello es posible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Habitualmente este modo es pasado como el cuarto argumento en dba_open() o en dba_popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DBA is binary safe and does not have any arbitrary limits.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede acceder a todas las entradas de una base de datos de modo secuencial (lineal) usando las funciones dba_firstkey() y dba_nextkey().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All file-based databases must provide a way of setting the file mode of a new created database, if that is possible at all.</seg></tuv>
      <tuv xml:lang="es"><seg>No se puede cambiar la base de datos mientras se recorre (traversing) por ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can access all entries of a database in a linear way by using the dba_firstkey() and dba_nextkey() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Recorriendo una base de datos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / ...open database... $key = dba_firstkey ($id); while ($key != false) {if (...) {/ / remember the key to perform some action later $handle_later[] = $key;} $key = dba_nextkey ($id);} for ($i = 0; $i count($handle_later); $i++) dba_delete ($handle_later[$i], $id);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php # ...open database... $key = dba_firstkey( $id); while($key != false) {if(...) {# remember the key to perform some action later $handle_later[] = $key;} $key = dba_nextkey($id);} for($i = 0; $i count($handle_later); $i++) dba_delete($handle_later[$i], $id);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access records stored in dBase-format (dbf) databases.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten el acceso a datos almacenados en formato dBase (dbf).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no support for indexes or memo fields.</seg></tuv>
      <tuv xml:lang="es"><seg>No hay soporte para índices o campos Memo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Two concurrent webserver processes modifying the same dBase file will very likely ruin your database.</seg></tuv>
      <tuv xml:lang="es"><seg>Tampoco hay soporte para bloqueo: si dos procesos concurrentes en el servidor modifican el mismo fichero dBase, probablemente se destruirán los datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dBase files are simple sequential files of fixed length records.</seg></tuv>
      <tuv xml:lang="es"><seg>A diferencia de las bases de datos SQL, las "bases de datos" dBase no pueden cambiar su definición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Records are appended to the end of the file and delete records are kept until you call dbase_pack().</seg></tuv>
      <tuv xml:lang="es"><seg>Una vez creado el fichero, la definición de la base de datos es fija.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We recommend that you do not use dBase files as your production database.</seg></tuv>
      <tuv xml:lang="es"><seg>No hay índices que aceleren la búsqueda u organicen los datos de distinto modo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Choose any real SQL server instead; MySQL or Postgres are common choices with PHP. dBase support is here to allow you to import and export data to and from your web database, because the file format is commonly understood by Windows spreadsheets and organizers.</seg></tuv>
      <tuv xml:lang="es"><seg>Los nuevos registros se añaden al final del fichero y los registros borrados se conservan hasta que se llama a la función dbase_pack( )().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable the bundled dbase library and to use these functions, you must compile PHP with the --enable-dbase option.</seg></tuv>
      <tuv xml:lang="es"><seg>Se recomienda no utilizar ficheros dBase como bases de datos, sino elegir cualquier servidor SQL; MySQL o Postgres son opciones habituales con PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="es"><seg>El soporte para dBase se proporciona para permitir importar y exportar datos a y desde la base de datos web, ya que este formato de ficheros es aceptado habitualmente por las hojas de datos y los organizadores de Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>La importación y exportación de datos es lo único para lo que sirve el soporte dBase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use this functions you have to compile PHP with support for an underlying database.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funcione le permiten almacenar registros en una base de datos estilo dbm.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition you must ensure support for an underlying database or you can use some sytem libraries.</seg></tuv>
      <tuv xml:lang="es"><seg>Este tipo de base de datos (soportadas por las librerías db y gdbm de Berkeley, así como por algunas librerías del sistema y por una librería incluída para acceso a archivos de texto) guarda pares clave / valor (en oposición a los registros completos soportados por las bases de datos relacionales).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function dbmopen() returns an database identifier which is used by the other dbm-functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo de dbm</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$dbm = dbmopen ("lastseen", "w"); if (dbmexists ($dbm, $userid)) {$last_seen = dbmfetch ($dbm, $userid);} else {dbminsert ($dbm, $userid, time());} do_stuff(); dbmreplace ($dbm, $userid, time()); dbmclose ($dbm);</seg></tuv>
      <tuv xml:lang="es"><seg>$dbm = dbmopen( "vistoya", "w"); if (dbmexists($dbm, $idusuario)) {$visto_ya = dbmfetch($dbm, $idusuario);} else {dbminsert($dbm, $idusuario, time());} do_stuff(); dbmreplace($dbm, $idusuario, time()); dbmclose($dbm);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is EXPERIMENTAL.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo es EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que el comportamineto de estas funciones, nombre de funciones y en definitiva TODO lo documentado aqui, puede cambiar en una futura version de PHP SIN AVISO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this extension at your own risk.</seg></tuv>
      <tuv xml:lang="es"><seg>Quedas avisado, y utilizar este módulo es tu responsabiliad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones están disponibles como parte del módulo estandar, el cual está siempre disponible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related functions such as dirname(), is_dir(), mkdir(), and rmdir(), see the Filesystem section.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dio_write</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, if you want to read an XML file and write a modified version, use DomDocument_create_element(), DomDocument_create_text_node(), set_attribute(), etc. and finally the DomDocument_dump_mem() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Download and install this library.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo es EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Download and install these libraries if you plan to use (enhanced XSLT features.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que el comportamineto de estas funciones, nombre de funciones y en definitiva TODO lo documentado aqui, puede cambiar en una futura version de PHP SIN AVISO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add --with-dom-exslt[ =DIR] to include DOM EXSLT support, where DIR is the libexslt install directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Quedas avisado, y utilizar este módulo es tu responsabiliad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy libxml2.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones son disponibles solamente si PHP fué configurado con --with-dom=[ DIR], usando al libreria de XML de GNOME.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are quite a few functions that do not fit into the DOM standard and should no longer be used.</seg></tuv>
      <tuv xml:lang="es"><seg>Usted va a necesitar como mínimo libxml-2.0.0 (la versión beta no trabajará).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function DomNode_append_child() The function DomNode_append_child() has changed its behaviour.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas functiones fueron añadidas en PHP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this breaks your application, use the non-DOM function DomNode_append_sibling().</seg></tuv>
      <tuv xml:lang="es"><seg>Este module define las siguientes constantes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Old function</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomDocument_dump_mem_file</seg></tuv>
      <tuv xml:lang="es"><seg>Constantes de XML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomDocument_create_element() followed by DomNode_append_child()</seg></tuv>
      <tuv xml:lang="es"><seg>Constante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomDocument_children</seg></tuv>
      <tuv xml:lang="es"><seg>Valor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomDocument_imported_node</seg></tuv>
      <tuv xml:lang="es"><seg>Descripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomDocument_create_element() und add it with DomNode_append_child().</seg></tuv>
      <tuv xml:lang="es"><seg>XML_ELEMENT_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomDocument_create_element() and add it with DomNode_append_child().</seg></tuv>
      <tuv xml:lang="es"><seg>XML_ATTRIBUTE_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomNode_get_content</seg></tuv>
      <tuv xml:lang="es"><seg>XML_TEXT_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>XML_CDATA_SECTION_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML_CDATA_SECTION_NODE (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_ENTITY_REF_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML_COMMENT_NODE (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_ENTITY_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML_DOCUMENT_TYPE_NODE (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_PI_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML_ATTRIBUTE_DECL_NODE (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_COMMENT_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML_ATTRIBUTE_ID (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_DOCUMENT_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML_ATTRIBUTE_NMTOKEN (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_DOCUMENT_TYPE_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XPATH_UNDEFINED (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_DOCUMENT_FRAG_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XPATH_STRING (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_NOTATION_NODE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XPATH_USERS (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>XML_GLOBAL_NAMESPACE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is a good idea to have the DOM standard available when using this module.</seg></tuv>
      <tuv xml:lang="es"><seg>XML_LOCAL_NAMESPACE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Secondly, the function names follow the PHP naming convention.</seg></tuv>
      <tuv xml:lang="es"><seg>Este modulo define un número de clases.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module defines a number of classes, which are listed — including their method — in the following tables.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones de DOM XML devuelven un árbol conteniendo la structura del documento XML, en el cual cada nodo es un objecto perteneciente a una de estas clases.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomNode_remove_child()</seg></tuv>
      <tuv xml:lang="es"><seg>DomDocumentType - entities</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DomComment is derived from DomCData.</seg></tuv>
      <tuv xml:lang="es"><seg>DomNode - append_child</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of repeating this string in every example, it will be put into a file which will be included by each example.</seg></tuv>
      <tuv xml:lang="es"><seg>DomNode - unlink_node</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternatively, you could create an XML document and read it with DomDocument_open_file().</seg></tuv>
      <tuv xml:lang="es"><seg>DomXsltStylesheet - result_dump_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those functions provides means to executes commands on the system itself, and means secure such commands.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, while in Safe Mode you must consider the safe_mode_exec_dir directive.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pcntl_wtermsig</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should read the documentation at http: / /partners.adobe.com / asn / developer / acrosdk / forms.html for more information on what FDF is and how it is used in general.</seg></tuv>
      <tuv xml:lang="es"><seg>El Formato de Datos de Formulario (FDF) está diseñado para el manejo de formularios en archivos PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The difference is basically the format how data is transmitted to the server when the submit button is pressed (this is actually the Form Data Format) and the format of the form itself (which is the Portable Document Format, PDF).</seg></tuv>
      <tuv xml:lang="es"><seg>Se aconseja leer la información disponible en http: / /partners.adobe.com / asn / developer / acrosdk / forms.html para más información sobre lo que es FDF y cómo se usa en general.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Processing the FDF data is one of the features provided by the fdf functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One may as well take an existing PDF form and populated the input fields with data without modifying the form itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente Adobe sólo proporciona una versión compatible con libc5 para Linux.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In such a case one would create a FDF document (fdf_create()) set the values of each input field (fdf_set_value()) and associate it with a PDF form (fdf_set_file()).</seg></tuv>
      <tuv xml:lang="es"><seg>Las pruebas con glibc2 provocaron un fallo de segmentado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Acrobat reader plugin of your browser recognizes the MimeType, reads the associated PDF form and fills in the data from the FDF document.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Such an object may contain a number of entries like Fields, F, Status etc..</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene problemas configurando php con soporte de fdftk, compruebe si el archivo de cabecera FdfTk.h y la librería libFdfTk.so están en su lugar correcto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most commonly used entries are Fields which points to a list of input fields, and F which contains the filename of the PDF-document this data belongs to.</seg></tuv>
      <tuv xml:lang="es"><seg>Deberían encontrarse respectivamente en fdftk-dir / include y en fdftk-dir / lib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those entries are referred to in the FDF documentation as / F-Key or / Status-Key.</seg></tuv>
      <tuv xml:lang="es"><seg>Este problema no se dará si se limita a desempaqueta la distribucón del FtdTk.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Modifying this entries is done by functions like fdf_set_file() and fdf_set_status().</seg></tuv>
      <tuv xml:lang="es"><seg>La idea general del FDF es similar a los formularios HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need the FDF toolkit SDK available from http: / /partners.adobe.com / asn / developer / acrosdk / forms.html.</seg></tuv>
      <tuv xml:lang="es"><seg>La diferencia básicamente está en el formato en que se transmiten los datos al servidor cuando se pulsa el botón de envío (este es realmente el Formato de Datos de Formulario) y el formato del formulario en sí mismo (que es el Formato de Documento Portable, PDF).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The FDF toolkit library is available in binary form only, platforms supported by Adobe are Win32, Linux, Solaris and AIX.</seg></tuv>
      <tuv xml:lang="es"><seg>Procesar lo datos del FDF es una de las características que proporcionan las funciones fdf.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Pero aún hay más.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The configure script supports both the directory structure of the FDF SDK distribution and the usual DIR / include / DIR / lib layout, so you can point it either directly to the unpacked distribution directory or put the header file and the appropriate library for your platform into e.g. / usr / local / include and / usr / local / lib and configure with --with-fdftk= / usr / local.</seg></tuv>
      <tuv xml:lang="es"><seg>Uno también puede tomar un formulario PDF y rellenar los campos de entrada con datos sin modificar el formulario en sí mismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy fdftk.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:</seg></tuv>
      <tuv xml:lang="es"><seg>En dicho caso, lo que se hace es crear un documento FDF (fdf_create()), fijar los valores de cada campo de entrada (fdf_set_value()) y asociarlo con un formulario PDF (fdf_set_file()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Finalmente, debe ser enviado al navegador con el MimeType application / vnd.fdf.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A fdf resource is a handle to an opened fdf file. fdf resources may be obtained using fdf_create(), fdf_open() and fdf_open_string().</seg></tuv>
      <tuv xml:lang="es"><seg>El plug-in de Acrobar reader de su navegador reconoce el MimeType, lee el formulario PDF asociado y rellena los datos a partir del documento FDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes ejemplos muestran cómo se evalúan los datos de los formularios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following examples shows just the evaluation of form data.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Evaluando un documento FDF</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Open fdf from input string provided by the extension / / The pdf form contained several input text fields with the names / / volume, date, comment, publisher, preparer, and two checkboxes / / show_publisher and show_preparer. $fdf = fdf_open_string( $HTTP_FDF_DATA); $volume = fdf_get_value($fdf, "volume"); echo "The volume field has the value 'B $volume / B' BR "; $date = fdf_get_value($fdf, "date"); echo "The date field has the value 'B $date / B' BR"; $comment = fdf_get_value($fdf, "comment"); echo "The comment field has the value 'B $comment / B' BR "; if(fdf_get_value($fdf, "show_publisher") == "On") {$publisher = fdf_get_value($fdf, "publisher"); echo "The publisher field has the value 'B $publisher / B' BR";} else echo "Publisher shall not be shown.</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Guarda los datos FDF en un archivo temporal $fdffp = fopen( "test.fdf", "w"); fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA)); fclose($fdffp); / / Abre archivo temporal y evalúa los datos / / El formulario pdf contenía varios campos de texto con los nombres / / volumen, fecha, comentario, editorial, preparador, y dos casillas de verificación / / muestra_editorial y muestra_preparador. $fdf = fdf_open("test.fdf"); $volume = fdf_get_value($fdf, "volumen"); echo "El campo volumen tiene el valor 'B $volume / B' BR "; $date = fdf_get_value($fdf, "fecha"); echo "El campo fecha tiene el valor 'B $date / B' BR"; $comment = fdf_get_value($fdf, "comentario"); echo "El campo comentario tiene el valor 'B $comment / B' BR "; if(fdf_get_value($fdf, "muestra_editorial") == "On") {$publisher = fdf_get_value($fdf, "editorial"); echo "El campo editorial tiene el valor 'B $publisher / B' BR";} else echo "No se debe mostrar la editorial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BR "; if(fdf_get_value($fdf, "show_preparer") == "On") {$preparer = fdf_get_value($fdf, "preparer"); echo "The preparer field has the value 'B $preparer / B' BR";} else echo "Preparer shall not be shown.</seg></tuv>
      <tuv xml:lang="es"><seg>BR "; if(fdf_get_value($fdf, "muestra_preparador") == "On") {$preparer = fdf_get_value($fdf, "preparador"); echo "El campo preparador tiene el valor 'B $preparer / B' BR";} else echo "No se debe mostrar el preparador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>filePro is a registered trademark of fP Technologies, Inc.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten acceso en modo de solo-lectura a datos guardados en bases de datos filePro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>filePro support in PHP is not enabled by default.</seg></tuv>
      <tuv xml:lang="es"><seg>filePro es una marca registrada de fP Technologies, Inc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable the bundled read-only filePro support you need to use the --enable-filepro configuration option when compiling PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Mas informacion sobre filePro puede encontrarse en http: / /www.fptech.com /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option enables the URL-aware fopen wrappers that enable accessing URL object like files.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For versions up to and including 4.0.3 you can only disable this feature at compile time by using the configuration switch --disable-url-fopen-wrapper.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Define the user agent for PHP to send.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Define the anonymous ftp password (your email address).</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>FTP es el acrónimo de File Transfer Protocol (Protocolo de Transferencia de Ficheros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se utiliza el módulo FTP, se definen las siguientes constantes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Automatically determine resume position and start position for GET and PUT requests (only works if FTP_AUTOSEEK is enabled)</seg></tuv>
      <tuv xml:lang="es"><seg>FTP_ASCII, y FTP_BINARY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see the gettext documentation for your system for a thorough explanation of these functions or view the docs at http: / /www.gnu.org / manual / gettext / index.html.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To include GNU gettext support in your PHP build you must add the option --with-gettext[ =DIR] where DIR is the gettext install directory, defaults to / usr / local.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy gnu_gettext.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.2.3 the name changed to libintl-1.dll</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unregister_tick_function</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions have been added in PHP 4.0.4.</seg></tuv>
      <tuv xml:lang="es"><seg>These functions allow you to work with arbitrary-length integers using GNU MP library.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is not available on Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some functions may require more recent version of the GMP library.</seg></tuv>
      <tuv xml:lang="es"><seg>However, most of these functions will accept also numeric and string arguments, given it 's possible to convert the latter to number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Also, if there 's faster function that can operate on integer arguments, it would be used instead of slower function when supplied arguments are integers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>See also gmp_init() function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More mathmatical functions can be found in the sections BCMath Arbitrary Precision Mathematics Functions and Mathematical Functions.</seg></tuv>
      <tuv xml:lang="es"><seg>This will calculate factiorial of 1000 (pretty big number) very fast.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten manipular la salida que se envía al navegador remoto a nivel de protocolo HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave has been developed at IICM in Graz.</seg></tuv>
      <tuv xml:lang="es"><seg>Hyperwave ha sido desarrollado en el IICM en Graz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It started with the name Hyper-G and changed to Hyperwave when it was commercialised (in 1996).</seg></tuv>
      <tuv xml:lang="es"><seg>Comenzó con el nombre Hyper-G y cambió a Hyperwave cuando fue comercializado (Si lo recuerdo bien, fue en 1996).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave is not free software.</seg></tuv>
      <tuv xml:lang="es"><seg>Hyperwave no es software gratuiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current version, 5.5 is available at http: / /www.hyperwave.com /.</seg></tuv>
      <tuv xml:lang="es"><seg>La versión actual, 4.1, está disponible en www.hyperwave.com.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A time limited version can be ordered for free (30 days).</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede solicitar gratuitamente una versión limitada (30 días).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave is an information system similar to a database (HIS, Hyperwave Information Server).</seg></tuv>
      <tuv xml:lang="es"><seg>Hyperwave es un sistema de información similar a una base de datos (HIS, Hyperwave Information Server - Servidor Hyperwave de Información).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its focus is the storage and management of documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Su objetivo es el almacenamiento y manipulación de documentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A document can be any possible piece of data that may as well be stored in file.</seg></tuv>
      <tuv xml:lang="es"><seg>Un documento puede ser cualquier bloque posible de datos que también puede ser almacenado en un archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each document is accompanied by its object record.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada documento se acompaña por su registro de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object record contains meta data for the document.</seg></tuv>
      <tuv xml:lang="es"><seg>El registro de objeto contiene metadatos para el documento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meta data is a list of attributes which can be extended by the user.</seg></tuv>
      <tuv xml:lang="es"><seg>Los metadatos son una lista de atributos que pueden ser extendidos por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Certain attributes are always set by the Hyperwave server, other may be modified by the user.</seg></tuv>
      <tuv xml:lang="es"><seg>Ciertos atributos siempre son fijados por el servidor Hyperwave, otros pueden ser modificados por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An attribute is a name / value pair of the form name=value.</seg></tuv>
      <tuv xml:lang="es"><seg>Un atributo es un par nombre / valor de la forma nombre=valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The complete object record contains as many of those pairs as the user likes.</seg></tuv>
      <tuv xml:lang="es"><seg>El registro completo del objeto tiene tantos de estos pares como guste el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of an attribute does not have to be unique, e.g. a title may appear several times within an object record.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre de un atributo no tiene porqué ser único, p. ej. un título puede aparecer varias veces en el registro de un objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes sense if you want to specify a title in several languages.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto tiene sentido si se desea especificar un título en diferentes idiomas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In such a case there is a convention, that each title value is preceded by the two letter language abbreviation followed by a colon, e.g. 'en:Title in English' or'ge:Titel in deutsch '.</seg></tuv>
      <tuv xml:lang="es"><seg>En dicho caso existe la convención de que cada valor de título esté precedido por la abreviatura de dos letras del idioma, seguida por dos puntos, como p. ej. 'en:Title in English' o 'es:Título en Español '.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other attributes like a description or keywords are potential candidates.</seg></tuv>
      <tuv xml:lang="es"><seg>Otros atributos tales como descripciones o palabras clave son canditatos potenciales a esta diferenciación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may also replace the language abbreviation by any other string as long as it separated by colon from the rest of the attribute value.</seg></tuv>
      <tuv xml:lang="es"><seg>También se pueden reemplazar las abreviaturas de idioma por cualquier otra cadena siempre y cuando estén separadas por los dos puntos del resto del valor del atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each object record has native a string representation with each name / value pair separated by a newline.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada registro de objeto tiene una representación nativa como cadena con cada par nombre / valor separado por una línea nueva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Hyperwave extension also knows a second representation which is an associated array with the attribute name being the key.</seg></tuv>
      <tuv xml:lang="es"><seg>La extensión Hyperwave también conoce una segunda representación que consiste en un array asociativo donde el nombre del atributo es la clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multilingual attribute values itself form another associated array with the key being the language abbreviation.</seg></tuv>
      <tuv xml:lang="es"><seg>Los valores de atributo multilingües en sí mismos forman otro array asociativo donde la clave es la abreviatura del idioma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Actually any multiple attribute forms an associated array with the string left to the colon in the attribute value being the key. (This is not fully implemented.</seg></tuv>
      <tuv xml:lang="es"><seg>Realmente cualquier atributo múltiple forma una tabla asociativa donde la cadena a la izquierda de los dos puntos en el valor de atributo es la clave. (Esto no se ha implementado por completo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the attributes Title, Description and Keyword are treated properly yet.)</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo los atributos Title, Description y Keyword son tratados adecuadamente.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Besides the documents, all hyper links contained in a document are stored as object records as well.</seg></tuv>
      <tuv xml:lang="es"><seg>Aparte de los documentos, todos los hiper-enlaces contenidos en un documento son almacenados también como registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyper links which are in a document will be removed from it and stored as individual objects, when the document is inserted into the database.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando el documento sea insertado en la base de datos, los hiper-enlaces que haya en un documento serán borrados del mismo y almacenados como objetos individuales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The object record of the link contains information about where it starts and where it ends.</seg></tuv>
      <tuv xml:lang="es"><seg>El registro de objeto del enlace contiene información acerca de dónde comienza y dónde termina.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions hw_pipedocument() and hw_gettext() do this for you.</seg></tuv>
      <tuv xml:lang="es"><seg>Para recuperar el documento original se deberá recuperar el documento sin los enlaces y la lista de los mismos para reinsertarla (Las funciones hw_pipedocument() y hw_gettext() hacen esto para usted).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The advantage of separating links from the document is obvious.</seg></tuv>
      <tuv xml:lang="es"><seg>La ventaja de separar los enlaces del documento es obvia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once a document to which a link is pointing to changes its name, the link can easily be modified accordingly.</seg></tuv>
      <tuv xml:lang="es"><seg>Una vez un documento al que apunta un enlace cambia de nombre, el enlace puede modificarse fácilmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The document containing the link is not affected at all.</seg></tuv>
      <tuv xml:lang="es"><seg>El documento que contiene el enlace no se ve afectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may even add a link to a document without modifying the document itself.</seg></tuv>
      <tuv xml:lang="es"><seg>Incluso se puede añadir un enlace a un documento sin alterarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Saying that hw_pipedocument() and hw_gettext() do the link insertion automatically is not as simple as it sounds.</seg></tuv>
      <tuv xml:lang="es"><seg>Decir que hw_pipedocument() y hw_gettext() hacen automáticamente la inserción de enlaces no es tan simple como suena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inserting links implies a certain hierarchy of the documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Insertar los enlaces implica una cierta jerarquía en los documentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On a web server this is given by the file system, but Hyperwave has its own hierarchy and names do not reflect the position of an object in that hierarchy.</seg></tuv>
      <tuv xml:lang="es"><seg>En un servidor web esto viene dado por el sistema de archivos, pero el Hyperwave tiene su propia jerarquía y los nombres no representan la posición de un objeto en dicha jerarquía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore creation of links first of all requires a mapping from the Hyperwave hierarchy and namespace into a web hierarchy respective web namespace.</seg></tuv>
      <tuv xml:lang="es"><seg>Por tanto, la creación de los enlaces precisa primeramente de realizar un mapeado entre el espacio de nombres y la jerarquía del Hyperwave y el espacio de nombres respectivo de una jerarquía de web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fundamental difference between Hyperwave and the web is the clear distinction between names and hierarchy in Hyperwave.</seg></tuv>
      <tuv xml:lang="es"><seg>La diferencia fundamental entre Hyperwave y la web es la distinción clara entre nombres y jerarquía que se da en el primero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name does not contain any information about the objects position in the hierarchy.</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre no contiene ninguna información sobre la posición del objeto en la jerarquía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the web the name also contains the information on where the object is located in the hierarchy.</seg></tuv>
      <tuv xml:lang="es"><seg>En la web, el nombre también contiene la información sobre la posición en la jerarquía del objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This leads to two possibles ways of mapping.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto nos lleva a dos posibles formas de mapeo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Either the Hyperwave hierarchy and name of the Hyperwave object is reflected in the URL or the name only.</seg></tuv>
      <tuv xml:lang="es"><seg>O bien se reflejan la jerarquía del Hyperwave y el nombre del objeto Hyperwave en el URL o sólo el nombre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To make things simple the second approach is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Para facilitar las cosas, se utiliza el segundo método.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave object with name my_object is mapped to http: / /host / my_object disregarding where it resides in the Hyperwave hierarchy.</seg></tuv>
      <tuv xml:lang="es"><seg>El objeto Hyperwave de nombre 'mi_objeto' es mapeado a 'http: / /host / mi_objeto 'sin importar dónde reside dentro de la jerarquía de Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can only be prevented by selecting reasonable object names.</seg></tuv>
      <tuv xml:lang="es"><seg>Un objeto con el nombre 'padre / mi_objeto' podría ser el hijo de 'mi_objeto 'en la jerarquía Hyperwave, aunque en el espacio de nombres web aparezca justamente lo opuesto y el usuario pueda ser llevado a confusión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How do you involve PHP?</seg></tuv>
      <tuv xml:lang="es"><seg>Esto sólo se puede evitar seleccionando nombres de objetos razonables.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The URL http: / /host / my_object will not call any PHP script unless you tell your web server to rewrite it to e.g. http: / /host / php_script / my_object and the script php_script evaluates the $PATH_INFO variable and retrieves the object with name my_object The URL http: / /host / my_object will not call any PHP script unless you tell your web server to rewrite it to e.g. http: / /host / php_script / my_object and the script php_script evaluates the $PATH_INFO variable and retrieves the object with name my_object from the Hyperwave server.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay sólo un pequeño inconveniente que se puede resolver fácilmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Their is just one little drawback which can be fixed easily.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se reescribe cualquier URL no se permite el acceso a ningún otro documento en el servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rewriting any URL would not allow any access to other document on the web server.</seg></tuv>
      <tuv xml:lang="es"><seg>Un script de PHP para buscar en el servidor Hyperwave sería imposible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore you will need at least a second rewriting rule to exclude certain URLs like all e.g. starting with http: / /host / Hyperwave This is basically sharing of a namespace by the web and Hyperwave server.</seg></tuv>
      <tuv xml:lang="es"><seg>Básicamente esto sería compartir un espacio de nombres entre el servidor web y el servidor Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Based on the above mechanism links are insert into documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Los enlaces se insertan en los documentos basándose en el mecanismo citado más arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It gets more complicated if PHP is not run as a server module or CGI script but as a standalone application e.g. to dump the content of the Hyperwave server on a CD-ROM.</seg></tuv>
      <tuv xml:lang="es"><seg>Se vuelve más complicado si el PHP no se está ejecutando como módulo del servidor o como script CGI, sino que se ejecuta como aplicación, p. ej. para volcar el contenido del servidor de Hyperwave a un CD-ROM.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In such a case it makes sense to retain the Hyperwave hierarchy and map in onto the file system.</seg></tuv>
      <tuv xml:lang="es"><seg>En dicho caso tiene sentido mantener la jerarquía Hyperwave y mapearla en el sistema de archivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This conflicts with the object names if they reflect its own hierarchy (e.g. by choosing names including '/').</seg></tuv>
      <tuv xml:lang="es"><seg>Esto entra conflicto con los nombres de los objetos si estos reflejan su propia jerarquía (p. ej. eligiendo nombres que comienzan por '/').</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore '/' has to be replaced by another character, e.g. '_ '.</seg></tuv>
      <tuv xml:lang="es"><seg>Por tanto, la '/' tendrá que ser reemplazada por otro carácter, p. ej. '_ 'para continuar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The network protocol to communicate with the Hyperwave server is called HG-CSP (Hyper-G Client / Server Protocol).</seg></tuv>
      <tuv xml:lang="es"><seg>El protocolo de red para comunicarse con el servidor Hyperwave se denomina HG-CSP (Hyper-G Client / Server Protocol, Protocolo Hyper-G Cliente / Servidor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is based on messages to initiate certain actions, e.g. get object record.</seg></tuv>
      <tuv xml:lang="es"><seg>Está basado en mensajes que inician ciertas acciones, p. ej. obtener el registro de un objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In early versions of the Hyperwave Server two native clients (Harmony, Amadeus) were provided for communication with the server.</seg></tuv>
      <tuv xml:lang="es"><seg>En versiones anteriores del Servidor Hyperwave se distribuyeron dos clientes nativos (Harmony, Amadeus) para la comunicación con el servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those two disappeared when Hyperwave was commercialised.</seg></tuv>
      <tuv xml:lang="es"><seg>Ambos desaparecieron cuando se comercializó el Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As a replacement a so called wavemaster was provided.</seg></tuv>
      <tuv xml:lang="es"><seg>Para sustituírlo se proporcionó el llamado wavemaster.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The wavemaster is like a protocol converter from HTTP to HG-CSP.</seg></tuv>
      <tuv xml:lang="es"><seg>El wavemaster es como un conversor de protocolo de HTTP a HG-CSP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The idea is to do all the administration of the database and visualisation of documents by a web interface.</seg></tuv>
      <tuv xml:lang="es"><seg>La idea es realizar toda la administración de la base de datos y la visualización de documentos con una interfaz web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The wavemaster implements a set of placeholders for certain actions to customise the interface.</seg></tuv>
      <tuv xml:lang="es"><seg>El wavemaster implementa una serie de posicionadores para acciones que permiten personalizar la interfaz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This set of placeholders is called the PLACE Language.</seg></tuv>
      <tuv xml:lang="es"><seg>Dicho conjunto de posicionadores se denomina el Lenguaje PLACE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PLACE lacks a lot of features of a real programming language and any extension to it only enlarges the list of placeholders.</seg></tuv>
      <tuv xml:lang="es"><seg>El PLACE no posee muchas de las características de un lenguaje de programación real y las extensiones al mismo únicamente alargan la lista de posicionadores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has led to the use of JavaScript which IMO does not make life easier.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto ha obligado al uso de JavaScript que, en mi opinión, no hace la vida más fácil.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding Hyperwave support to PHP should fill in the gap of a missing programming language for interface customisation.</seg></tuv>
      <tuv xml:lang="es"><seg>Añadir soporte de Hyperwave al PHP rellenaría el espacio que deja la falta de un lenguaje de programación que permita personalizar la interfaz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It implements all the messages as defined by the HG-CSP but also provides more powerful commands to e.g. retrieve complete documents.</seg></tuv>
      <tuv xml:lang="es"><seg>El PHP implementa todos los mensajes definidos en el HG-CSP pero además proporciona comandos más poderosos, p. ej. recuperar documentos completos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave has its own terminology to name certain pieces of information.</seg></tuv>
      <tuv xml:lang="es"><seg>El Hyperwave tiene su propia terminología para dar nombre a ciertos tipos de información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has widely been taken over and extended.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta ha sido ampliamente extendida y anulada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Almost all functions operate on one of the following data types.</seg></tuv>
      <tuv xml:lang="es"><seg>Casi todas las funciones operan en uno de los siguientes tipos de datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>object ID:</seg></tuv>
      <tuv xml:lang="es"><seg>ID de objeto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An unique integer value for each object in the Hyperwave server.</seg></tuv>
      <tuv xml:lang="es"><seg>Un valor entero único paara cada objeto del servidor Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is also one of the attributes of the object record (ObjectID).</seg></tuv>
      <tuv xml:lang="es"><seg>También es uno de los atributos del registro de objeto (ObjectID).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Object ids are often used as an input parameter to specify an object.</seg></tuv>
      <tuv xml:lang="es"><seg>Los ID de objeto se usan generalmente como parámetros de entrada que especifican a un objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>object record:</seg></tuv>
      <tuv xml:lang="es"><seg>registro de objeto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A string with attribute-value pairs of the form attribute=value.</seg></tuv>
      <tuv xml:lang="es"><seg>Una cadena con pares atributo-valor con la forma atributo=valos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The pairs are separated by a carriage return from each other.</seg></tuv>
      <tuv xml:lang="es"><seg>Los pares están separados unos de otros por un retorno de carro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An object record can easily be converted into an object array with hw_object2array().</seg></tuv>
      <tuv xml:lang="es"><seg>Un registro de objeto puede convertirse fácilmente en una tabla (array) de objetos usando hw_object2array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Several functions return object records.</seg></tuv>
      <tuv xml:lang="es"><seg>Varias funciones devuelven registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The names of those functions end with obj.</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres de dichas funciones terminan en obj.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>object array:</seg></tuv>
      <tuv xml:lang="es"><seg>tabla de objetos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An associative array with all attributes of an object.</seg></tuv>
      <tuv xml:lang="es"><seg>Una tabla asociativa con todos los atributos de un objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys are the attribute names.</seg></tuv>
      <tuv xml:lang="es"><seg>La clave es el nombre del atributo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an attribute occurs more than once in an object record it will result in another indexed or associative array.</seg></tuv>
      <tuv xml:lang="es"><seg>Si un atributo aparece más de una vez en un registro de objeto será convertido en otra tabla asociativa o indizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attributes which are language depended (like the title, keyword, description) will form an associative array with the keys set to the language abbreviations.</seg></tuv>
      <tuv xml:lang="es"><seg>Los atributos que dependen del idioma (como el título, claves o descripción) se convertirán en una tabla asociativa con la abreviatura del idioma como clave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All other multiple attributes will form an indexed array.</seg></tuv>
      <tuv xml:lang="es"><seg>El resto de los atributos múltiples crearán una tabla indizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP functions never return object arrays.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones de PHP nunca devuelven tablas de objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a complete new data type which holds the actual document, e.g.</seg></tuv>
      <tuv xml:lang="es"><seg>Este es un nuevo tipo de datos que almacena el documento actual, p. ej.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HTML, PDF etc.</seg></tuv>
      <tuv xml:lang="es"><seg>HTML, PDF, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is somewhat optimized for HTML documents but may be used for any format.</seg></tuv>
      <tuv xml:lang="es"><seg>Está algo optimizado para documentos HTML pero puede usarse para cualquier formato.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array is the last element of the object record array.</seg></tuv>
      <tuv xml:lang="es"><seg>Varias funciones que devuelven una tabla de registros de objeto también devuelven una tabla asociativa con información estadística sobre los mismos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The statistical array contains the following entries:</seg></tuv>
      <tuv xml:lang="es"><seg>La tabla es el último elemento del registro de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of object records with attribute PresentationHints set to Hidden.</seg></tuv>
      <tuv xml:lang="es"><seg>La tabla estadística contiene los siguientes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of object records with attribute PresentationHints set to CollectionHead.</seg></tuv>
      <tuv xml:lang="es"><seg>Número de registros de objeto con el atributo PresentationHints puesto a Hidden.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of object records with attribute PresentationHints set to FullCollectionHead.</seg></tuv>
      <tuv xml:lang="es"><seg>Número de registros de objeto con el atributo PresentationHints puesto a CollectionHead.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Index in array of object records with attribute PresentationHints set to CollectionHead.</seg></tuv>
      <tuv xml:lang="es"><seg>Número de registros de objeto con el atributo PresentationHints puesto a FullCollectionHead.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Total:</seg></tuv>
      <tuv xml:lang="es"><seg>Índice a una tabla de regitros de objeto con el atributo PresentationHints puesto a CollectionHead.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension needs a Hyperwave server downloadable from http: / /www.hyperwave.com /.</seg></tuv>
      <tuv xml:lang="es"><seg>Índice a una tabla de regitros de objeto con el atributo PresentationHints puesto a FullCollectionHead.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Hyperwave extension is best used when PHP is compiled as an Apache module.</seg></tuv>
      <tuv xml:lang="es"><seg>Número de registros de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following instructions will explain this.</seg></tuv>
      <tuv xml:lang="es"><seg>La extensión Hyperwave se utiliza mejor cuando el PHP se compila como un módulo de Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP with Hyperwave support built into Apache is intended to replace the native Hyperwave solution based on Wavemaster, we will assume that the Apache server will only serve as a Hyperwave web interface for these examples.</seg></tuv>
      <tuv xml:lang="es"><seg>En tal caso el servidor Hyperwave subyacente puede ser ocultado casi por completo de los usuarios si el Apache utiliza su motor de re-escritura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The concept is quite simple.</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes instrucciones explicarán esto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Let' s call this script'Hyperwave '.</seg></tuv>
      <tuv xml:lang="es"><seg>Como el PHP con soporte Hyperwave incluído en el Apache se ha diseñado para sustituir la solución nativa de Hyperwave basada en Wavemaster, asumiré que el servidor Apache sólo sirve como interfaz web para el Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The URL http: / /your.hostname / Hyperwave / name_of_object would than return the Hyperwave object with the name 'name_of_object'.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto no es necesario, pero simplifica la configuración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Depending on the type of the object the script has to react accordingly.</seg></tuv>
      <tuv xml:lang="es"><seg>El concepto es bastante sencillo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is a document it will return the mime type and the content.</seg></tuv>
      <tuv xml:lang="es"><seg>Primeramente necesita un script PHP que evalúe la variable PATH_INFO y que trate su valor como el nombre de un objeto Hyperwave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A slight improvement can be achieved if the Apache rewriting engine is used.</seg></tuv>
      <tuv xml:lang="es"><seg>Llamemos a este script 'Hyperwave'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The rewriting rule is quite easy:</seg></tuv>
      <tuv xml:lang="es"><seg>El URL http: / /nombre.servidor / Hyperwave / nombre_de_objeto El URL http: / /nombre.servidor / Hyperwave / nombre_de_objeto devolvería entonces el objeto Hyperwave llamado 'nombre_de_objeto'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RewriteRule ^ / (.*) / usr / local / apache / htdocs / HyperWave / $1 [L]</seg></tuv>
      <tuv xml:lang="es"><seg>Dependiendo del tipo del objeto, así reaccionará el script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>RewriteRule ^ / hw / (.*) / usr / local / apache / htdocs / hw / $1 [L]</seg></tuv>
      <tuv xml:lang="es"><seg>Si es una colección, probablemente devolverá un lista de hijos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>to return the object itself</seg></tuv>
      <tuv xml:lang="es"><seg>Si es un documento devolverá el tipo MIME y el contenido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>to identify yourself</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede mejorar ligeramente si se usa el motor de re-escritura del Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>one for each additional function like to show the object attributes, to show information about users, to show the status of the server, etc.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde el punto de vista del usuario será más sencillo si el URL http: / /nombre.servidor / nombre de objeto devuelve el objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As an alternative to the Rewrite Engine, you can also consider using the Apache ErrorDocument directive, but be aware, that ErrorDocument redirected pages cannot receive POST data.</seg></tuv>
      <tuv xml:lang="es"><seg>La regla de reescritura es muy sencilla:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="es"><seg>para devolver el script en sí</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"0"</seg></tuv>
      <tuv xml:lang="es"><seg>para permitir las búsquedas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hyperwave.default_port</seg></tuv>
      <tuv xml:lang="es"><seg>para identificarse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_ALL</seg></tuv>
      <tuv xml:lang="es"><seg>para ajustar su perfil</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>uno para cada función adicional como mostrar los atributos del objeto, mostrar información sobre usuarios, mostrar el estado del servidor, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are still some things to do:</seg></tuv>
      <tuv xml:lang="es"><seg>Aún hay varias cosas pendientes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The hw_InsertDocument has to be split into hw_insertobject() and hw_putdocument().</seg></tuv>
      <tuv xml:lang="es"><seg>hw_InsertDocument debe dividirse en hw_InsertObject() y hw_PutDocument().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The names of several functions are not fixed, yet.</seg></tuv>
      <tuv xml:lang="es"><seg>Los nombres de algunas funciones aún no están fijados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most functions require the current connection as its first parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Muchas funciones precisan la conexión actual como primer parámetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This leads to a lot of typing, which is quite often not necessary if there is just one open connection.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto obliga a escribir mucho, lo cual no es con frecuencia necesario si sólo hay una conexión abierta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A default connection will improve this.</seg></tuv>
      <tuv xml:lang="es"><seg>Una conexión por defecto mejoraría esto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Conversion form object record into object array needs to handle any multiple attribute.</seg></tuv>
      <tuv xml:lang="es"><seg>La conversión de registro de objeto a tabla de objeto necesita manipular cualquier atributo múltiple.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about InterBase is available at http: / /www.interbase.com /.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This database uses a single quote (') character for escaping, a behavior similar to the Sybase database, add to your php.ini the following directive:</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable InterBase support configure PHP --with-interbase[ =DIR], where DIR is the InterBase base install directory, which defaults to / usr / interbase.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy gds32.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case you installed the InterBase database server on the same machine PHP is running on, you will have this DLL already.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"%m / %d / %Y%H:%M:%S"</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. iconv constants</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 2. iconv constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>IDS 7.x support is fairly complete, with full support for BYTE and TEXT columns.</seg></tuv>
      <tuv xml:lang="es"><seg>El conector para Informix Online (ODS) 7.x, SE 7.x y Universal Server (IUS) 9.x se encuentra implementado en "functions / ifx.ec "y "functions / php3_ifx.h".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration notes:</seg></tuv>
      <tuv xml:lang="es"><seg>Para ODS 7.x está completado, con total soporte para columnas de tipo BYTE y TEXT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ESQL / C versions from 7.2x on should be OK.</seg></tuv>
      <tuv xml:lang="es"><seg>Para IUS 9.x está parcialmente finalizado: los tipos de datos nuevos están allí (en el IUS 9.x), pero la funcionalidad para SLOB y CLOB se encuentra bajo construcción todavía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ESQL / C is now part of the Informix Client SDK.</seg></tuv>
      <tuv xml:lang="es"><seg>Notas de configuración:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure that the "INFORMIXDIR" variable has been set, and that $INFORMIXDIR / bin is in your PATH before you run the "configure "script.</seg></tuv>
      <tuv xml:lang="es"><seg>Antes de ejecutar el guión (script) "configure", asegúrate que la variable "INFORMIXDIR "ha sido definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ejecutas "configure --with_informix=yes" entonces el guión de configuración detectará automáticamente las librerías y los directorios include.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure that the Informix environment variables INFORMIXDIR and INFORMIXSERVER are available to the PHP ifx driver, and that the INFORMIX bin directory is in the PATH.</seg></tuv>
      <tuv xml:lang="es"><seg>Puedes obviar esta detección definiendo las variables de entorno "IFX_LIBDIR", "IFX_LIBS" y "IFX_INCDIR ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The phpinfo() output should list these environment variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Definirás la variable de compilación condicional "HAVE_IFX_IUS" si la versión de Informix es 9.00 o superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may have to set these environment variables in your Apache startup script.</seg></tuv>
      <tuv xml:lang="es"><seg>Algunas notas sobre el uso de BLOBs (columnas de tipo TEXT y BYTE):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some notes on the use of BLOBs (TEXT and BYTE columns):</seg></tuv>
      <tuv xml:lang="es"><seg>BLOBs son normalmente manipulados por enteros, los cuales representan identificadores de BLOB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Select queries return a "blob id" for every BYTE and TEXT column.</seg></tuv>
      <tuv xml:lang="es"><seg>Las consultas de selección devuelven un "blob id" para columnas de tipo BYTE y TEXT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you prefer to receive the content of BLOB columns in a file, use "ifx_blobinfile(1) ;", and "ifx_get_blob($blob_id);" will get you the filename.</seg></tuv>
      <tuv xml:lang="es"><seg>Si eliges trabajar con los BLOBs en memoria (con: "ifx_blobinfile(0) ;") entonces puedes obtener el contenido con "string_var = ifx_get_blob($blob_id); ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For insert / update queries you must create these "blob id's" yourself with "ifx_create_blob();".</seg></tuv>
      <tuv xml:lang="es"><seg>Si prefieres manipularlos en ficheros usa "ifx_blobinfile(1);" y "ifx_get_blob($blob_id); "devolverá el nombre del archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For updates / inserts, you are responsible for setting the blob contents with ifx_update_blob().</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso, utiliza las funciones habituales de entrada y salida de ficheros para obtener el contenido de los blob.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>configuration variable: ifx.textasvarchar</seg></tuv>
      <tuv xml:lang="es"><seg>Para consultas de inserción y actualización debes crear estos identificadores de blob con "ifx_create_blob(..);".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>runtime functions:</seg></tuv>
      <tuv xml:lang="es"><seg>Entonces pondrás los identificadores de blob en un array y sustituirás en la cadena de la consulta las columnas de tipo blob por una interrogación (?).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_byteasvarchar( 0): use blob id's for select queries with BYTE columns</seg></tuv>
      <tuv xml:lang="es"><seg>Para inserciones y actualizaciones eres responsable de definir el contenido de los blob con ifx_update_blob(...).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_byteasvarchar( 1): return BYTE columns as if they were VARCHAR columns, so that you don't need to use blob id's for select queries.</seg></tuv>
      <tuv xml:lang="es"><seg>La conducta de columnas BLOB puede ser modificada mediante variables de configuración, las cuales pueden ser definidas en tiempo de ejecución mediante funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>runtime function:</seg></tuv>
      <tuv xml:lang="es"><seg>variable de configuración: ifx.textasvarchar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_blobinfile_mode( 0): return BYTE columns in memory, the blob id lets you get at the contents.</seg></tuv>
      <tuv xml:lang="es"><seg>variable de configuración: ifx.byteasvarchar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx_blobinfile_mode( 1): return BYTE columns in a file, the blob id lets you get at the file name.</seg></tuv>
      <tuv xml:lang="es"><seg>funciones en tiempo de ejecución:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since all strings are "counted" in PHP, this remains "binary safe ".</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_textasvarchar( 0): usa identificadores de blob para columnas de tipo TEXT en las consultas de selección</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned data can contain anything, you are responsible for the contents.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_byteasvarchar( 0): usa identificadores de blob para columnas de tipo BYTE en las consultas de selección</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that in this case YOU ARE RESPONSIBLE FOR DELETING THE TEMPORARY FILES CREATED BY INFORMIX when fetching the row.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_textasvarchar( 1): devuelve columnas de tipo TEXT como si fueran de tipo VARCHAR, sin tener que usar identificadores de blob en las consultas de selección</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The location of the temporary files can be influenced by the environment variable "blobdir", default is". "(the current directory).</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_byteasvarchar( 1): devuelve columnas de tipo BYTE como si fueran de tipo VARCHAR, sin tener que usar identificadores de blob en las consultas de selección.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Something like: putenv( blobdir=tmpblob"); will ease the cleaning up of temp files accidentally left behind (their names all start with "blb").</seg></tuv>
      <tuv xml:lang="es"><seg>función en tiempo de ejecución:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be set with the configuration variable</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_blobinfile_mode( 0): devuelve columnas de tipo BYTE en memoria, el identificador de blob te permite obtener el contenido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL values:</seg></tuv>
      <tuv xml:lang="es"><seg>ifx_blobinfile_mode( 1): devuelve columnas de tipo BYTE en un fichero, el identificador te permite saber el nombre de dicho archivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This allows you to discriminate between NULL columns and empty columns.</seg></tuv>
      <tuv xml:lang="es"><seg>Si defines ifx_text / byteasvarchar a 1 entonces puedes usar columnas de tipo TEXT y BYTE en las consultas de selección como campos de tipo VARCHAR, pero teniendo en cuenta que tendrán un mayor tamaño que el habitual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Informix configuration options</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que en PHP todas las cadenas son posibles, esto permite datos binarios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx.allow_persistent</seg></tuv>
      <tuv xml:lang="es"><seg>De esta forma, se pueden manejar correctamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx.max_persistent</seg></tuv>
      <tuv xml:lang="es"><seg>La información devuelta puede contener cualquier cosa, tú eres responsable del contenido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ifx.default_password</seg></tuv>
      <tuv xml:lang="es"><seg>Si defines ifx_blobinfile a 1, utiliza el nombre del archivo devuelto por ifx_get_blob(..) para acceder a los contenidos del blobs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="es"><seg>En este caso, ERES REPONSABLE DE ELIMINAR EL ARCHIVO TEMPORAL GENERADO POR INFORMIX cuando accedas a los registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of persistent Informix connections per process.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada nueva fila obtenida creará un nuevo archivo temporal para cada columna de tipo BYTE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default host to connect to when no host is specified in ifx_connect() or ifx_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>El directorio donde se guardan los archivos temporales puede ser definido por la variable de entorno blobdir, por defecto es ".", es decir, el directorio actual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default user id to use when none is specified in ifx_connect() or ifx_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Así, putenv( blobdir=tmpblob"); definirá un directorio donde se localizarán todos los ficheros temporales y facilitará su borrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default password to use when none is specified in ifx_connect() or ifx_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>Todos los nombres de los archivos comienzan por "blb".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set to TRUE if you want to return blob columns in a file, FALSE if you want them in memory.</seg></tuv>
      <tuv xml:lang="es"><seg>Recortado (trimming) automático de datos de tipo "char "(SQLCHAR y SQLNCHAR):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set to TRUE if you want to return TEXT columns as normal strings in select statements, FALSE if you want to use blob id parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede ser definido con la variable de configuración</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set to TRUE if you want to return BYTE columns as normal strings in select queries, FALSE if you want to use blob id parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>ifx.charasvarchar: si se define a 1 eliminará automáticamente los espacios en blanco al final de la cadena.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can override the setting at runtime with ifx_textasvarchar().</seg></tuv>
      <tuv xml:lang="es"><seg>Valores NULL:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set to TRUE if you want to return NULL columns as the literal string "NULL", FALSE if you want them returned as the empty string "".</seg></tuv>
      <tuv xml:lang="es"><seg>La variable de configuración ifx.nullformat (y en tiempo de ejecución ifx_nullformat()) cuando sea definida a TRUE devolverá columnas NULL como la cadena "NULL", si es definida a FALSE La variable de configuración ifx.nullformat (y en tiempo de ejecución ifx_nullformat()) cuando sea definida a TRUE devolverá columnas NULL como la cadena "NULL", si es definida a FALSE entonces la cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto permite distinguir entre columnas NULL y vacías.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have the GD library (available at http: / /www.boutell.com / gd /) you will also be able to create and manipulate images.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede usar las funciones para imágenes en PHP para obtener el tamaño de imágenes JPEG, GIF, PNG, SWF, TIFF y JPEG2000, y si tiene instalada la biblioteca GD (disponible en http: / /www.boutell.com / gd /) también podrá crear y manipular imágenes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Versions of GD older than gd-1.6 support GIF format images, and do not support PNG, where versions greater than gd-1.6 support PNG, not GIF.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tiene PHP compilado con --enable-exif puede trabajar con la información guardada en las cabeceras de las imágenes JPEG y TIFF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may wish to enhance GD to handle more image formats.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones no requieren la biblioteca GD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enhance the capabilities of GD to deal with different fonts by specifying the --with-XXXX configure switch to your PHP configure line.</seg></tuv>
      <tuv xml:lang="es"><seg>Los formatos de imágenes que puede manipular dependen de la versión de GD que instale y de cualquier otra biblioteca que GD pueda necesitar para acceder a esos formatos de imagen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting cannot be empty but you can specify a list of encodings supported by mbstring.</seg></tuv>
      <tuv xml:lang="es"><seg>Las versiones de GD anteriores a la GD-1.6 soportan imágenes en formato gif y no soportan png, mientras que las versiones superiores a la GD-1.6 soportan el formato png y no el gif.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting cannot be empty but you can specify a list of encodings supported by mbstring.</seg></tuv>
      <tuv xml:lang="es"><seg>Antes de poder leer y escribir imágenes en formato jpeg, deberá obtener e instalar jpeg-6b (disponible en ftp: / /ftp.uu.net / graphics / jpeg /), y después recompilar GD para poder hacer uso de jpeg-6b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>exif.decode_jis_motorola defines the image internal characterset for JIS encoded user comments if image is in motorola byte order (big-endian).</seg></tuv>
      <tuv xml:lang="es"><seg>También tendrá que compilar PHP con la opción --with-jpeg-dir= / ruta / a/jpeg-6b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting cannot be empty but you can specify a list of encodings supported by mbstring.</seg></tuv>
      <tuv xml:lang="es"><seg>Para añadir el soporte de fuentes Type 1, puede instalar t1lib (disponible en ftp: / /sunsite.unc.edu / pub / Linux / libs / graphics /), y entonces añadir la opción --with-t1lib[=dir] al recompilar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The underlying c-client library also supports NNTP, POP3 and local mailbox access methods.</seg></tuv>
      <tuv xml:lang="es"><seg>Para hacer funcionar estas funciones, debe compilar PHP con --with-imap.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It 's important that you do not copy the IMAP source files directly into the system include directory as there may be conflicts.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto requiere que la libreria c-client esté instalada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally when you compiled IMAP, a file named c-client-a was created.</seg></tuv>
      <tuv xml:lang="es"><seg>Obtenga la última versión de ftp: / /ftp.cac.washington.edu / imap / y compílela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to compile PHP with --with-imap[ =DIR], where DIR is the c-client install prefix.</seg></tuv>
      <tuv xml:lang="es"><seg>Luego copie c-client / c-client.a al directorio / usr / local / lib o a cualquier otro directorio de su LINK path y copie c-client / rfc822.h, mail.h y linkage.h al directorio / usr / local / include o a cualquier otro de su INCLUDE path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Decir que estas funciones no están limitadas al protocolo IMAP, a pesar de sus nombres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>La librería subyacente c-client también soporta NNTP, POP3 y métodos de acceso local a buzones de correo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Further information is provided by the documentation of the c-client library source (docs / internal.txt). and the following RFC documents:</seg></tuv>
      <tuv xml:lang="es"><seg>Vea imap_open() para una mayor información.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You 'll also find functions to set options for your running PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If enabled, no errors are shown (implicit error_reporting(0)) while evaluation.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can turn dynamic loading of PHP extensions with dl() on and off per virtual server or per directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This helps prevent poorly written scripts from tying up the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When magic_quotes are on, all '(single-quote), "(double quote),\ (backslash) and NUL's are escaped with a backslash automatically.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If magic_quotes_sybase is also on, a single-quote is escaped with a single-quote instead of a backslash.</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The result of a query must be treated before sending another query, and a transaction must be commited or rolled back before opening another transaction (which is automaticaly done when sending the first query).</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo es EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To compile PHP with Ingres support, you need the Open API library and header files included with Ingres II.</seg></tuv>
      <tuv xml:lang="es"><seg>Quedas avisado, y utilizar este módulo es tu responsabiliad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using this extension with Apache, if Apache does not start and complains with "PHP Fatal error:</seg></tuv>
      <tuv xml:lang="es"><seg>In order to have these functions available, you must compile php with Ingres support by using the --with-ingres option.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unable to start ingres_ii module in Unknown on line 0 "then make sure the environement variable II_SYSTEM is correctly set.</seg></tuv>
      <tuv xml:lang="es"><seg>You need the Open API library and header files included with Ingres II.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ingres.default_user</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LDAP is the Lightweight Directory Access Protocol, and is a protocol used to access "Directory Servers".</seg></tuv>
      <tuv xml:lang="es"><seg>LDAP es el protocolo de acceso a directorios ligero (Lightweight Directory Access Protocol), un protocolo usado para acceder a "Servidores de Directorio ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Directory is a special kind of database that holds information in a tree structure.</seg></tuv>
      <tuv xml:lang="es"><seg>El directorio es una clase especial de base de datos que contiene información estructurada en forma de árbol.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The concept is similar to your hard disk directory structure, except that in this context, the root directory is "The world" and the first level subdirectories are "countries ".</seg></tuv>
      <tuv xml:lang="es"><seg>El concepto es similar a la estructura de directorios de los discos duros, pero en este caso, el directorio raiz es "El Mundo" y los subdirectorios de primer nivel son los "países ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lower levels of the directory structure contain entries for companies, organisations or places, while yet lower still we find directory entries for people, and perhaps equipment or documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Niveles inferiores de la estructura de directorio contienen entradas para compañías, organizaciones o lugares, y en niveles aún inferiores se encuentran las entradas para la gente, y quizás de equipos informáticos y documentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To refer to a file in a subdirectory on your hard disk, you might use something like:</seg></tuv>
      <tuv xml:lang="es"><seg>Para referirse a un fichero en un subdirectorio del disco duro se usa algo como</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/usr / local / myapp / docs</seg></tuv>
      <tuv xml:lang="es"><seg>/usr / local / misapps / docs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The forwards slash marks each division in the reference, and the sequence is read from left to right.</seg></tuv>
      <tuv xml:lang="es"><seg>Las barras marcan cada división en la referencia al fichero, y la secuencia es leida de izquierda a derecha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example dn might be:</seg></tuv>
      <tuv xml:lang="es"><seg>El equivalente a la referencia a un fichero en LDAP es el "distinguished name" (nombre distinguible), abreviado como "db ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>cn=John Smith,ou=Accounts,o=My Company,c=US</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo de dn podría ser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The comma marks each division in the reference, and the sequence is read from right to left.</seg></tuv>
      <tuv xml:lang="es"><seg>cn=Pedro Pérez,ou=Contabilidad,o=Mi Compañía,c=ES</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>country = US organization = My Company organizationalUnit = Accounts commonName = John Smith</seg></tuv>
      <tuv xml:lang="es"><seg>Las comas marcan cada división en la referencia, y la secuencia se lee de derecha a izquierda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, there are some conventions that are used.</seg></tuv>
      <tuv xml:lang="es"><seg>country = ES organization = Mi Compañía organizationalUnit = Contabilidad commonName = Pedro Pérez</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lots of information about LDAP can be found at</seg></tuv>
      <tuv xml:lang="es"><seg>De la misma manera que no hay reglas estrictas sobre como organizar la estructura de directorios de un disco duro, un administrador de un servidor de directorio puede establecer cualquier estructura que sea útil para sus propósitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OpenLDAP Project</seg></tuv>
      <tuv xml:lang="es"><seg>Sin embargo hay algunos acuerdos tácitos que siempre deben seguirse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to get and compile LDAP client libraries from either the University of Michigan ldap-3.3 package or the Netscape Directory SDK 3.0 to compile PHP with LDAP support.</seg></tuv>
      <tuv xml:lang="es"><seg>El mensaje es que no se puede escribir código para acceder un directorio si no se conoce algo de su estructura, igual que no se puede usar una base de datos sin algún conocimiento sobre lo que está disponible en ella.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to use the --with-ldap[ =DIR] configuration option when compiling PHP to enable LDAP support.</seg></tuv>
      <tuv xml:lang="es"><seg>Recuperar informacion para todas las entradas donde el apellido empiece por "P" de un servidor de directorio, mostrando un extracto con el nombre y dirección de correo electrónico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note to Win32 Users:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. ejemplo de búsqueda LDAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM32)</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / La secuencia básica para trabajar con LDAP es conectar, autentificarse, / / buscar, interpretar el resultado de la búsqueda y cerrar la conexión. echo "h3 Prueba de consulta LDAP / h3"; echo "Conectando.. ."; $ds=ldap_connect("localhost"); / / Debe ser un servidor LDAP válido! echo "El resultado de la conexión es ".$ds. "p"; if ($ds) {echo "Autentificandose.. ."; $r=ldap_bind($ds); / / Autentificación anónima, típicamente con / / acceso de lectura echo "El resultado de la autentificación es ".$r. "p"; echo "Buscando (sn=P*).. ."; / / Busqueda de entradas por apellidos $sr=ldap_search($ds ,"o=Mi Compañia, c=ES", "sn=P*"); echo "El resultado de la búsqueda es ".$sr. "p"; echo "El número de entradas devueltas es ".ldap_count_entries($ds,$sr). "p"; echo "Recuperando entradas... p "; $info = ldap_get_entries($ds, $sr); echo "Devueltos datos de ".$info["count"]." entradas: p "; for ($i=0; $i $info["count"]; $i++) {echo "dn es:". $info[$i]["dn"]. "br"; echo "La primera entrada cn es: ". $info[$i]["cn"][0]." br "; echo "La primera entrada email es:". $info[$i]["mail"][0]. "p";} echo "Cerrando conexión"; ldap_close($ds);} else {echo "h4 Ha sido imposible conectar al servidor LDAP / h4";}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Es necesario conseguir y compilar la librerías cliente de LDAP ya sea del paquete ldap-3.3 de la Universidad de Michigan o del Netscape Directory SDK.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>También es necesario recompilar PHP con soporte LDAP activado para que la funciones LDAP de PHP funcionen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap.max_links</seg></tuv>
      <tuv xml:lang="es"><seg>Antes de usarse las llamadas LDAP se debe saber..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_SYSTEM</seg></tuv>
      <tuv xml:lang="es"><seg>El nombre o dirección del servidor de directorio que se va a usar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>El "dn base" del servidor (la parte del directorio global contenida en ese servidor, que puede ser por ejemplo "o=Mi Compañia,c=ES")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Si es necesaria contraseña para acceder al servidor (muchos servidores ofrecen acceso de lectura para usuarios anónimos pero requieren un password para cualquier otro acceso)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Before you can use the LDAP calls you will need to know..</seg></tuv>
      <tuv xml:lang="es"><seg>La secuencia típica de llamadas LDAP suele implementarse en aplicaciones que siguen el siguiente patrón:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The "base dn" of the server (the part of the world directory that is held on this server, which could be "o=My Company,c=US")</seg></tuv>
      <tuv xml:lang="es"><seg>ldap_connect() / / establecer la conexión con el servidor _BAR_ ldap_bind() / / login anónimo o autentificado _BAR_ Hacer búsquedas o actualizaciones en el directorio y mostrar los resultados _BAR_ ldap_close() / / Cerrar la conexión</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether you need a password to access the server (many servers will provide read access for an "anonymous bind "but require a password for anything else)</seg></tuv>
      <tuv xml:lang="es"><seg>Mucha información acerca de LDAP puede ser consultada en</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The typical sequence of LDAP calls you will make in an application will follow this pattern:</seg></tuv>
      <tuv xml:lang="es"><seg>Proyecto OpenLDAP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_connect() / / establish connection to server _BAR_ ldap_bind() / / anonymous or authenticated "login "_BAR_ do something like search or update the directory and display the results _BAR_ ldap_close() / / "logout"</seg></tuv>
      <tuv xml:lang="es"><seg>El SDK de Netscape contiene una Guía de Programación muy útil en formato html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, Qmail users can normally set it to / var / qmail / bin / sendmail or / var / qmail / bin / qmail-inject.</seg></tuv>
      <tuv xml:lang="es"><seg>The mail() Funciones que permiten enviar correo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Returns an array listing filename information</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mail</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mailparse_determine_best_xfer_encoding</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to handle bigger numbers, take a look at the arbitrary precision math functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones matemáticas solo manejan valores dentro de los rangos de los tipos long y double de su ordenador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Si necesita manejar números mayores, pege un vistazo a funciones matemáticas de precisión arbitraria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Los siguientes valores estan definidos como constantes en PHP por la extensión matemática:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sqrt( pi) [4.0.2]</seg></tuv>
      <tuv xml:lang="es"><seg>Constantes matemáticas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 / sqrt( pi)</seg></tuv>
      <tuv xml:lang="es"><seg>Constante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sqrt( 2)</seg></tuv>
      <tuv xml:lang="es"><seg>Valor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sqrt( 3) [4.0.2]</seg></tuv>
      <tuv xml:lang="es"><seg>Descripción</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Euler constant [4.0.2]</seg></tuv>
      <tuv xml:lang="es"><seg>El valor de ¶ (pi)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. php.ini setting example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. php.ini setting example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. php.ini setting for EUC-JP users</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2. php.ini setting for EUC-JP users</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. php.ini setting for SJIS users</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. php.ini setting for SJIS users</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. php.ini setting example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 5. php.ini setting example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: "Supported character encoding" does not mean that it works as internal character code.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota: "Supported character encoding" does not mean that it works as internal character code.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCAL is the calendar equivalent of the IMAP module for mailboxes.</seg></tuv>
      <tuv xml:lang="es"><seg>It 's written to be very modular, with plugable drivers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most of the functions use an internal event structure that is unique for each stream.</seg></tuv>
      <tuv xml:lang="es"><seg>There is also support for calendar triggers (alarms) and reoccuring events.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are convenience functions for setting, initializing, and retrieving the event structure values.</seg></tuv>
      <tuv xml:lang="es"><seg>With libmcal, central calendar servers can be accessed and used, removing the need for any specific database or local file programming.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP had an ICAP extension previously, but the original library and the PHP extension is not supported anymore.</seg></tuv>
      <tuv xml:lang="es"><seg>To get these functions to work, you have to compile PHP with --with-mcal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The suggested replacement is MCAL.</seg></tuv>
      <tuv xml:lang="es"><seg>That requires the mcal library to be installed.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension requires the mcal library to be installed.</seg></tuv>
      <tuv xml:lang="es"><seg>The following constants are defined when using the MCAL module:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After you installed the mcal library, to get these functions to work, you have to compile PHP -with-mcal[ =DIR].</seg></tuv>
      <tuv xml:lang="es"><seg>MCAL_SUNDAY, MCAL_MONDAY, MCAL_TUESDAY, MCAL_WEDNESDAY, MCAL_THURSDAY, MCAL_FRIDAY, MCAL_SATURDAY, MCAL_RECUR_NONE, MCAL_RECUR_DAILY, MCAL_RECUR_WEEKLY, MCAL_RECUR_MONTHLY_MDAY, MCAL_RECUR_MONTHLY_WDAY, MCAL_RECUR_YEARLY, MCAL_JANUARY, MCAL_FEBRUARY, MCAL_MARCH, MCAL_APRIL, MCAL_MAY, MCAL_JUNE, MCAL_JULY, MCAL_AUGUGT, MCAL_SEPTEMBER, MCAL_OCTOBER, MCAL_NOVEMBER, and MCAL_DECEMBER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, it supports RC6 and IDEA which are considered "non-free".</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es una interfaz a la librería mcrypt, que soporta una gran variedad de algoritmos de bloque como DES, TripleDES, Blowfish (por defecto), 3-WAY, SAFER-SK64, SAFER-SK128, TWOFISH, TEA, RC2 y GOST en los modos de cifrado CBC, OFB, CFB y ECB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use it, download libmcrypt-x.x.tar.gz from here and follow the included installation instructions.</seg></tuv>
      <tuv xml:lang="es"><seg>Adicionalmente, soporta RC6 e IDEA que se consideran "no-libres".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you linked against libmcrypt 2.4.x or higher, the following additional block algorithms are supported:</seg></tuv>
      <tuv xml:lang="es"><seg>Para usarlos, descarga libmcrypt-x.x.tar.gz de aquí y sigue las instrucciones de instalación incluidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ENIGMA (crypt), PANAMA, RC4 and WAKE.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesitas compilar PHP con el parámetro --with-mcrypt para activar esta extensión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need to compile PHP with the --with-mcrypt[ =DIR] parameter to enable this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt puede usarse para encriptar y desencriptar usando los cifrados mencionados arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Los cuatro comandos importantes de mcrypt (mcrypt_cfb(), mcrypt_cbc(), mcrypt_ecb(), y mcrypt_ofb()) pueden operar en ambos modos que se llaman MCRYPT_ENCRYPT y MCRYPT_DECRYPT, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mcrypt configuration options</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt.algorithms_dir</seg></tuv>
      <tuv xml:lang="es"><seg>Encripta un valor de entrada con TripleDES en modo ECB</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $key = "esta es una clave muy secreta"; $input = "Nos vemos a las 9 en punto en el lugar secreto ."; $encrypted_data = mcrypt_ecb(MCRYPT_TripleDES, $key, $input, MCRYPT_ENCRYPT);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If linked against libmcrypt-2.4.x or higher the functions can also operate in the block cipher mode nOFB and in STREAM mode.</seg></tuv>
      <tuv xml:lang="es"><seg>mcrypt puede operar en cuatro modos de cifrado (CBC, OFB, CFB y ECB).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a more complete reference and discussion see Applied Cryptography by Schneier (ISBN 0-471-11709-9).</seg></tuv>
      <tuv xml:lang="es"><seg>Perfilaremos el uso normal de cada uno de estos modos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since data there is short and random, the disadvantages of ECB have a favorable negative effect.</seg></tuv>
      <tuv xml:lang="es"><seg>Para una mejor referencia y una discusión más completa ver Applied Cryptography by Schneier (ISBN 0-471-11709-9).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_MODE_CFB (cipher feedback) is the best mode for encrypting byte streams where single bytes must be encrypted.</seg></tuv>
      <tuv xml:lang="es"><seg>ECB (electronic codebook o libro de códigos electrónico) va bien para datos aleatorios, tales como encriptar otras claves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s insecure (because it operates in 8bit mode) so it is not recommended to use it.</seg></tuv>
      <tuv xml:lang="es"><seg>Puesto que los datos son cortos y aleatorios, las desventajas de ECB tienen un efecto negativo favorable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_MODE_STREAM is an extra mode to include some stream algorithms like WAKE or RC4.</seg></tuv>
      <tuv xml:lang="es"><seg>CBC (cipher block chaining o cifrado en bloque encadenado) es especialmente útil para encriptar ficheros, donde incrementa significativamente la seguridad por encima de ECB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a list of ciphers which are currently supported by the mcrypt extension.</seg></tuv>
      <tuv xml:lang="es"><seg>CFB (cipher feedback o cifrado realimentado) es el mejor modo de encriptar flujos de bytes donde cada byte debe ser encriptado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The general rule with the mcrypt-2.2.x API is that you can access the cipher from PHP with MCRYPT_ciphername.</seg></tuv>
      <tuv xml:lang="es"><seg>OFB (output feedback o salida realimentada) es comparable al CFB, pero puede usarse en aplicaciones donde la propagación de errores no puede tolerarse.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With the libmcrypt-2.4.x and libmcrypt-2.5.x API these constants also work, but it is possible to specify the name of the cipher as a string with a call to mcrypt_module_open().</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente PHP no soporta el encriptado / desencriptado de flujos de bits.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_ARCFOUR_IV (libmcrypt 2.4.x only)</seg></tuv>
      <tuv xml:lang="es"><seg>Por ahora, sólo soporta el manejo de cadenas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_BLOWFISH</seg></tuv>
      <tuv xml:lang="es"><seg>Para una lista completa de los cifrados soportados, ver las definiciones al final de mcrypt.h.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_CAST_256</seg></tuv>
      <tuv xml:lang="es"><seg>La regla general es que se puede acceder al cifrado desde PHP con MCRYPT_nombredelcifrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_DES</seg></tuv>
      <tuv xml:lang="es"><seg>Aquí hay una pequeña lista de los cifrados que estan soportados actualmente por la extensión mcrypt.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_ENIGMA (libmcrypt 2.4.x only, alias for MCRYPT_CRYPT)</seg></tuv>
      <tuv xml:lang="es"><seg>Si un cifrado no está listado aquí, pero está listado por mcrypt como soportado, puedes asumir con seguridad que ésta documentación está caduca.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_RIJNDAEL_128 (libmcrypt 2.4.x only)</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_TripleDES</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_RIJNDAEL_256 (libmcrypt 2.4.x only)</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_ThreeWAY</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_RC6_256 (libmcrypt 2.2.x only)</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_DES_COMPAT</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_SERPENT_192 (libmcrypt 2.2.x only)</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_CAST128</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_SKIPJACK (libmcrypt 2.4.x only)</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_TEAN</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_TWOFISH (for older mcrypt 2.x versions, or mcrypt 2.4.x)</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_TWOFISH (para las antiguas versiones mcrypt 2.x)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCRYPT_TWOFISH192</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_TWOFISH128 (TWOFISHxxx está disponible en las versiones más nuevas 2.x)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The IV must be unique and must be the same when decrypting / encrypting.</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_RC6</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternatively, you can transmit the IV together with the encrypted data (see chapter 9.3 of Applied Cryptography by Schneier (ISBN 0-471-11709-9) for a discussion of this topic).</seg></tuv>
      <tuv xml:lang="es"><seg>MCRYPT_IDEA</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you linked against libmcrypt-2.2.x, the four important mcrypt commands (mcrypt_cfb(), mcrypt_cbc(), mcrypt_ecb(), and mcrypt_ofb()) can operate in both modes which are named MCRYPT_ENCRYPT and MCRYPT_DECRYPT, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>Debes (en los modos CFB y OFB) o puedes (en el modo CBC) suministrar un vector de inicialización (IV) a la correspondiente función de cifrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Encrypt an input value with TripleDES under 2.2.x in ECB mode</seg></tuv>
      <tuv xml:lang="es"><seg>El IV debe ser único y debe ser el mismo cuando desencriptas o encriptas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you linked against libmcrypt 2.4.x or 2.5.x, these functions are still available, but it is recommended that you use the advanced functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Con datos que son guardados encriptados, puedes cojer la salida de una función de índice bajo la cual los datos son almacenados (ej. la clave MD5 de un fichero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $key = "this is a secret key"; $input = "Let us meet at 9 o'clock at the secret place ."; $td = mcrypt_module_open ('tripledes', '', 'ecb', ''); $iv = mcrypt_create_iv (mcrypt_enc_get_iv_size ($td), MCRYPT_RAND); mcrypt_generic_init ($td, $key, $iv); $encrypted_data = mcrypt_generic ($td, $input); mcrypt_generic_deinit ($td); mcrypt_module_close ($td);?</seg></tuv>
      <tuv xml:lang="es"><seg>Alternativamente, puedes transmitir el IV junto con los datos encriptados (ver capítulo 9.3 de Applied Cryptography by Schneier (ISBN 0-471-11709-9) para una discusión de éste asunto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mhash can be used to create checksums, message digests, message authentication codes, and more.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones han sido realizadas para trabajar con mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a complete list of supported hashes, refer to the documentation of mhash.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta es una interfaz con al libreria mhash. mhash soporta una amplia variedad de algoritmos hash como MD5, SHA1, GOST, y muchos otros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, to access TIGER you use the PHP constant MHASH_TIGER.</seg></tuv>
      <tuv xml:lang="es"><seg>Para usarla, hay que descargar la distribucion desde su sitio web y seguir las intrucciones de instalacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use it, download the mhash distribution from its web site and follow the included installation instructions.</seg></tuv>
      <tuv xml:lang="es"><seg>Se necesita compilar PHP con el parametr --with-mhash para activar esta extension.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need to compile PHP with the --with-mhash[ =DIR] parameter to enable this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>mhash puede ser usado para crear checksums, message digests, y mas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the mhash install directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Generar una clave SHA1 e imprimirla en hexadecimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>The hash is d3b85d710d8f6e4e5efd4d5e67d041f9cecedafe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a list of hashes which are currently supported by mhash.</seg></tuv>
      <tuv xml:lang="es"><seg>Aqui hay una lista de hashes que esta actualmente soportada por mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MHASH_MD5</seg></tuv>
      <tuv xml:lang="es"><seg>Si un hash no esta en dicha lista pero aparece como soportado por mhash, entonces se asume con plena seguridad que esta documentacion esta desfasada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MHASH_HAVAL192</seg></tuv>
      <tuv xml:lang="es"><seg>MHASH_HAVAL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MHASH_GOST</seg></tuv>
      <tuv xml:lang="es"><seg>MHASH_RIPEMD128</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MHASH_CRC32</seg></tuv>
      <tuv xml:lang="es"><seg>MHASH_SNEFRU</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. built into php (unix)</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1. built into php (unix)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The classes below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas clases están definidas por esta extensión y estarán disponibles cuando la extensión haya sido compilada dentro de PHP o dinámicamente cargable en tiempo de ejecución</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>SWFDisplayItem - move - - Moves object in relative coordinates.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="es"><seg>SWFDisplayItem - scale - - Scales the object in relative coordinates.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="es"><seg>SWFMovie - remove - - Removes the object instance from the display list.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_select_db</seg></tuv>
      <tuv xml:lang="es"><seg>SWFMovie - setframes - - Sets the total number of frames in the animation.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up</seg></tuv>
      <tuv xml:lang="es"><seg>SWFTextField - setLeftMargin - - Sets the left margin width of the text field.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ming_setcubicthreshold</seg></tuv>
      <tuv xml:lang="es"><seg>SWFTextField - setMargins - - Sets the margins width of the text field.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ignore_user_abort().</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones están colacadas aquí debido a que no parecen ajustarse a ninguna otra categoría.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about mSQL can be found at http: / /www.hughes.com.au /.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the mSQL base install directory, defaults to / usr / local / Hughes.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy msql.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Requirements for WIn32 platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Client Tools can be installed from the MS SQL Server CD or by copying ntwdblib.dll from \winnt\system32 on the server to \winnt\system32 on the PHP box.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration of the client will require installation of all the tools.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use the MSSQL extension on Unix / Linux, you first need to build and install the FreeTDS library.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The MSSQL extension is enabled by adding extension=php_mssql.dll to php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql.min_error_severity</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users who run other applications that use MySQL (for example, running PHP 3 and PHP 4 as concurrent apache modules, or auth-mysql) should always specify the path to MySQL: --with-mysql= / path / to / mysql.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones le permiten acceder a servidores de bases de datos MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no default is specified, the port will be obtained from the MYSQL_TCP_PORT environment variable, the mysql-tcp entry in / etc / services or the compile-time MYSQL_PORT constant, in that order.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede encontrar más información sobre MySQL en http: / /www.mysql.com /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. ncurses color constants</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 2. ncurses color constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3. ncurses key constants</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 3. ncurses key constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4. mouse constants</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 4. mouse constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether or not to define the various syslog variables (e.g. $LOG_PID, $LOG_CRON, etc.).</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At runtime, you can define these variables by calling define_syslog_variables().</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are always available as part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LOG_NDELAY</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3. syslog() Priorities (in descending order)</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information refer to the NIS manpage and The Linux NIS( YP) / NYS / NIS + HOWTO.</seg></tuv>
      <tuv xml:lang="es"><seg>NIS (anteriormente llamado Paginas Amarillas) permite la administracion de red de los archivos de administracion importantes (e.g.El archivo de contraseñas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Para mas informacion dirigirse a las paginas de ayuda de NIS y a la direccion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to configure PHP with --enable-yp.</seg></tuv>
      <tuv xml:lang="es"><seg>Introduccion a YP / NIS Hay tambien un libro llamado gestionando NFS Y NIS por Hal Stern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Para obtener estas funciones de trabajo, usted tiene que configure PHP con - - con - yp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Specify the name of the note.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ncurses_wrefresh</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. storage_classes.inc</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. storage_classes.inc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. test_aggregation.php</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 4. test_aggregation.php</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses the Oracle8 Call-Interface (OCI8)</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten acceder a bases de datos Oracle8 y Oracle7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is more flexible than the standard Oracle extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas usan la Oracle8 Call-Interface (OCI8).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It supports binding of global and local PHP variables to Oracle placeholders, has full LOB, FILE and ROWID support and allows you to use user-supplied define variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Necesitará las librerías clientes de Oracle8 para usar esta extensión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need the Oracle8 client libraries to use this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión es más flexible que las estándar de Oracle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variables you might need to set are as follows:</seg></tuv>
      <tuv xml:lang="es"><seg>Soporta el enlace de variables locales y globales de PHP con placeholders de Oracle, tiene soporte completo para LOB, FILE y ROWID y le permiten usar las variables definidas por el usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ORACLE_SID</seg></tuv>
      <tuv xml:lang="es"><seg>OCIColumnPrecision</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LD_LIBRARY_PATH</seg></tuv>
      <tuv xml:lang="es"><seg>OCIColumnTypeRaw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After setting up the environment variables for your webserver user, be sure to also add the webserver user (nobody, www) to the oracle group.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no ocurre ningún error devuelve falso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your webserver doesn 't start or crashes at startup:</seg></tuv>
      <tuv xml:lang="es"><seg>OCIExecute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Check that Apache is linked with the pthread library:</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFreeCollection</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the libpthread is not listed you have to reinstall Apache:</seg></tuv>
      <tuv xml:lang="es"><seg>OCIFreeDesc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that on some systems like UnixWare it is libthread instead of libpthread.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIInternalDebug - - Habilita o deshabilita la salida del depurador interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP and Apache have to be configured with EXTRA_LIBS=-lthread.</seg></tuv>
      <tuv xml:lang="es"><seg>OCINewDescriptor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una nueva sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>OCINumCols</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / by sergo@bacup.ru / / Use option:</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve una nueva sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can easily access stored procedures in the same way as you would from the commands line.</seg></tuv>
      <tuv xml:lang="es"><seg>OCIResult</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using Stored Procedures</seg></tuv>
      <tuv xml:lang="es"><seg>OCISetPrefetch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIBindByName ($sth, ":address_id", $addr_id, 10); OCIBindByName ($sth, ":error_code", $errorcode, 10); OCIExecute ($sth);?</seg></tuv>
      <tuv xml:lang="es"><seg>OCIWriteLobToFile - - Coming soon</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of maintaining multiple database drivers that were all nearly identical, these drivers have been unified into a single set of ODBC functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Devuelve FALSE en caso de error, en otro caso TRUE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information on iODBC, as well as a HOWTO, is available at www.iodbc.org.</seg></tuv>
      <tuv xml:lang="es"><seg>Returns a result identifier containing the information.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension adds support for Oracle database server access.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the OCI8 extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>openssl_x509_read</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>This can be useful in several different situations, especially if you need to send headers to the browser after your script has began outputing data.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, if you set output_handler to mb_output_handler(), character encoding will be transparently converted to the specified encoding.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is not available on Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Ovrimos SQL Server is available at www.ovrimos.com.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You 'll need to install the sqlcli library available in the Ovrimos SQL Server distribution.</seg></tuv>
      <tuv xml:lang="es"><seg>To enable ovrimos support in PHP just compile php with the '--with-ovrimos' parameter to configure script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the Ovrimos' libsqlcli install directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The expression should be enclosed in the delimiters, a forward slash (/), for example.</seg></tuv>
      <tuv xml:lang="es"><seg>La sintaxis, para los patrones usados en estas funciones, es muy semejante al Perl.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the delimiter character has to be used in the expression itself, it needs to be escaped by backslash.</seg></tuv>
      <tuv xml:lang="es"><seg>Las expresiones estarán encerradas por delimitadores, por ejemplo una barra de dividir (/).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ending delimiter may be followed by various modifiers that affect the matching.</seg></tuv>
      <tuv xml:lang="es"><seg>Cualquier carácter puede ser usado para delimitar incluso los que no son caracteres alfanuméricos o la barra invertida (\).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regular expression support is provided by the PCRE library package, which is open source software, written by Philip Hazel, and copyright by the University of Cambridge, England.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el carácter delimitador ha sido usado en la propia expresión, es necesario que sea precedido por una barra inversa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Beginning with PHP 4.2.0 these functions are enabled by default.</seg></tuv>
      <tuv xml:lang="es"><seg>El delimitador de fin puede ser seguido por varios modificadores que afectarán al resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use --with-pcre-regex=DIR to specify DIR where PCRE 's include and library files are located, if not using bundled library.</seg></tuv>
      <tuv xml:lang="es"><seg>Examina Modificadores de Patrones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos de patrones válidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PREG_SET_ORDER</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag is only used with preg_match_all().</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos de patrones no válidos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag is available since PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>/href=' (.*) '- falta el delimitador de fin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PREG_SPLIT_DELIM_CAPTURE</seg></tuv>
      <tuv xml:lang="es"><seg>/\w+\s*\w+ / J - el modificador 'J' es desconocido</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag is available since PHP 4.0.5.</seg></tuv>
      <tuv xml:lang="es"><seg>1-\d3-\d3-\d4 _BAR_ - falta el delimitador de inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this changes the return value in an array where very element is an array consisting of the matched string at offset 0 and it 's string offset into subject at offset 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1-\d3-\d3-\d4 _BAR_ - missing starting delimiter</seg></tuv>
      <tuv xml:lang="es"><seg>Para las funciones de expresiones compatibles con Perl se necesita PHP 4 o PHP 3.0.9 o superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The documentation in this section is only meant to be an overview of the available functions in the PDFlib library and should not be considered an exhaustive reference.</seg></tuv>
      <tuv xml:lang="es"><seg>You can use the PDF functions in PHP to create PDF files if you have the PDF library by Thomas Merz (available at http: / /www.pdflib.com / pdflib / index.html; you will also need the JPEG library and the TIFF library to compile this.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please consult the documentation included in the source distribution of PDFlib for the full and detailed explanation of each function here.</seg></tuv>
      <tuv xml:lang="es"><seg>These two libs also quite often make problems when configuring php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It provides a very good overview of what PDFlib is capable of doing and contains the most up-to-date documentation of all functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Follow the messages of configure to fix possible problems.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All of the functions in PDFlib and the PHP module have identical function names and parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>If you use pdflib 2.01 check how the lib was installed.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to understand some of the basic concepts of PDF and PostScript to efficiently use this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>There should be file or link libpdf.so.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are generally 72 PostScript points to an inch, but this depends on the output resolution.</seg></tuv>
      <tuv xml:lang="es"><seg>Version 2.01 just creates a lib with the name libpdf2.01.so which cannot be found when linking the test programm in configure.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see the PDFlib documentation included with the source distribution of PDFlib for a more thorough explanation of the coordinate system used.</seg></tuv>
      <tuv xml:lang="es"><seg>You will have to create a symbolic link from libpdf.so to libpdf2.01.so.).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see the examples below for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Version 2.20 of pdflib has introduced more changes to its API and support for chinese and japanese fonts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PDFlib is available for download at http: / /www.pdflib.com / pdflib / index.html, but requires that you purchase a license for commercial use.</seg></tuv>
      <tuv xml:lang="es"><seg>This unfortunately causes some changes of the pdf module of php4 (not php3).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any version of PHP 4 after March 9, 2000 does not support versions of PDFlib older than 3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>If you use pdflib 2.20 handle the in memory generation of PDF documents with care.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PDFlib 3.0 or greater is supported by PHP 3.0.19 and later.</seg></tuv>
      <tuv xml:lang="es"><seg>Until pdflib 3.0 is released it might be unstable.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to compile PHP with --with-pdflib[ =DIR].</seg></tuv>
      <tuv xml:lang="es"><seg>The encoding parameter of pdf_set_font() has changed to a string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the PDFlib base install directory, defaults to / usr / local.</seg></tuv>
      <tuv xml:lang="es"><seg>This means that instead of e.g.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition you can specify the jpeg, tiff, and pnglibrary for PDFlib to use, which is optional for PDFlib 4.x.</seg></tuv>
      <tuv xml:lang="es"><seg>4 you have to use 'winansi'.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do so add to your configure line the options --with-jpeg-dir[ =DIR] --with-png-dir[=DIR] --with-tiff-dir[=DIR].</seg></tuv>
      <tuv xml:lang="es"><seg>If you use pdflib 2.30 the pdf_set_text_matrix() will have gone.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using version 3.x of PDFlib, you should configure PDFlib with the option --enable-shared-pdflib.</seg></tuv>
      <tuv xml:lang="es"><seg>It is not supported any more.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.0.5, the PHP extension for PDFlib is officially supported by PDFlib GmbH.</seg></tuv>
      <tuv xml:lang="es"><seg>In general it is a good advise to consult the release notes of the used version of pdflib for possible changes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that all the functions described in the PDFlib manual (V3.00 or greater) are supported by PHP 4 with exactly the same meaning and the same parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Since version 3.0 of pdflib you should configure pdflib with the option --enable-shared-pdflib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the return values may differ from the PDFlib manual, because the PHP convention of returning FALSE was adopted.</seg></tuv>
      <tuv xml:lang="es"><seg>Any version of PHP4 after March, 9th 2000 do not support versions of pdflib older than 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For compatibility reasons, this binding for PDFlib still supports the old functions, but they should be replaced by their new versions.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP3 on the other hand should not be used with version newer than 2.01.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Please consult the excellent documentation for pdflib shipped with the source distribution of pdflib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Old function</seg></tuv>
      <tuv xml:lang="es"><seg>It provides a very good overview of what pdflib capable of doing.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not needed anymore.</seg></tuv>
      <tuv xml:lang="es"><seg>Most of the functions in pdflib and the PHP module have the same name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not needed anymore.</seg></tuv>
      <tuv xml:lang="es"><seg>The parameters are also identical.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_bookmark() using the same parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>You should also understand some of the concepts of PDF or Postscript to efficiently use this module.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_value() passing "font "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>All lengths and coordinates are measured in Postscript points.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_parameter() passing "fontname "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>There is another PHP module for pdf document creation based on FastIO 's.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info_creator()</seg></tuv>
      <tuv xml:lang="es"><seg>ClibPDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info() passing "Creator "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>It has a slightly different API.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info() passing "Title "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Check the ClibPDF functions section for details.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info() passing "Subject "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Currently all versions of pdflib are supported.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info() passing "Author "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>It is recommended that you use the newest version since it has more features and fixes some problems which required a patch for the old version.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_info() passing "Keywords "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Unfortunately, the changes of the pdflib API in 2.x compared to 0.6 have been so severe that even some PHP functions had to be altered.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_leading()</seg></tuv>
      <tuv xml:lang="es"><seg>Here is a list of changes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "leading "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>The Info structure does not exist anymore.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "textrendering "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Therefore the function pdf_get_info() is obsolete and the functions pdf_set_info_creator(), pdf_set_info_title(), pdf_set_info_author(), pdf_set_info_subject() and pdf_set_info_keywords() do not take the info structure as the first parameter but the pdf document.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "textrise "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>This also means that the pdf document must be opened before these functions can be called.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "horizscaling "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>The above functions can and should also be replaced by pdf_set_info()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not available anymore</seg></tuv>
      <tuv xml:lang="es"><seg>The way a new document is opened has changed.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "charspacing "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>The function pdf_open() takes only one parameter which is the file handle of a file opened with fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "wordspacing "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>There were some more changes with the release 2.01 of pdflib which should be covered by PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_parameter() passing "transition "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Some functions are not required anymore (e.g. pdf_put_image()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_new() plus an subsequent call of pdf_open_file()</seg></tuv>
      <tuv xml:lang="es"><seg>You will get a warning so don 't be shocked.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_findfont() plus an subsequent call of pdf_setfont()</seg></tuv>
      <tuv xml:lang="es"><seg>The pdf module introduces two new types of variables (if pdflib 2.x is used it is only one new type).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_set_value() passing "duration "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>They are called pdfdoc and pdfinfo (pdfinfo is not existent if pdflib 2.x is used. pdfdoc is a pointer to a pdf document and almost all functions need it as its first parameter. pdfinfo contains meta data about the PDF document.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_image_file() passing "gif "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>It has to be set before pdf_open() is called.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_jpeg()</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_image_file() passing "jpeg "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>The following is only TRUE for pdflib 0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_tiff()</seg></tuv>
      <tuv xml:lang="es"><seg>Read the pdflib manual for newer version</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_png()</seg></tuv>
      <tuv xml:lang="es"><seg>In order to output text into a PDF document you will need to provide the afm file for each font.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open_image_file() passing "png "as the second parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>Afm files contain font metrics for a Postscript font.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_value() passing "imagewidth "as the second parameter and the image as the third parameter.</seg></tuv>
      <tuv xml:lang="es"><seg>By default these afm files are searched for in a directory named 'fonts' relative to the directory where the PHP script is located. (Again, this was TRUE for pdflib 0.6, newer versions do not not neccessarily need the afm files.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most of the functions are fairly easy to use.</seg></tuv>
      <tuv xml:lang="es"><seg>The most difficult part is probably to create a very simple pdf document at all.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most difficult part is probably creating your first PDF document.</seg></tuv>
      <tuv xml:lang="es"><seg>The following example should help to get started.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example should help to get you started.</seg></tuv>
      <tuv xml:lang="es"><seg>It uses the PHP functions for pdflib 0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It creates test.pdf It creates test.pdf with one page.</seg></tuv>
      <tuv xml:lang="es"><seg>It creates the file test.pdf with one page.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The page contains the text "Times Roman outlined" in an outlined, 30pt font.</seg></tuv>
      <tuv xml:lang="es"><seg>The page contains the text "Times-Roman" in an outlined 30pt font.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creating a PDF document with PDFlib</seg></tuv>
      <tuv xml:lang="es"><seg>Creating a PDF document with pdflib 0.6</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $pdf = pdf_new(); pdf_open_file($pdf, "test.pdf"); pdf_set_info($pdf, "Author", "Uwe Steinmann"); pdf_set_info($pdf, "Title", "Test for PHP wrapper of PDFlib 2.0"); pdf_set_info($pdf, "Creator", "See Author"); pdf_set_info($pdf, "Subject", "Testing"); pdf_begin_page($pdf, 595, 842); pdf_add_outline($pdf, "Page 1"); $font = pdf_findfont($pdf, "Times New Roman", "winansi", 1); pdf_setfont($pdf, $font, 10); pdf_set_value($pdf, "textrendering", 1); pdf_show_xy($pdf, "Times Roman outlined", 50, 750); pdf_moveto($pdf, 50, 740); pdf_lineto($pdf, 330, 740); pdf_stroke($pdf); pdf_end_page($pdf); pdf_close($pdf); pdf_delete($pdf); echo "A HREF=getpdf.php finished / A";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $fp = fopen( "test.pdf", "w"); $info = PDF_get_info(); pdf_set_info_author($info, "Uwe Steinmann"); PDF_set_info_title($info, "Test for PHP wrapper of PDFlib 0.6"); PDF_set_info_author($info, "Name of Author"); pdf_set_info_creator($info, "See Author"); pdf_set_info_subject($info, "Testing"); $pdf = PDF_open($fp, $info); PDF_begin_page($pdf, 595, 842); PDF_add_outline($pdf, "Page 1"); pdf_set_font($pdf, "Times-Roman", 30, 4); pdf_set_text_rendering($pdf, 1); PDF_show_xy($pdf, "Times Roman outlined", 50, 750); pdf_moveto($pdf, 50, 740); pdf_lineto($pdf, 330, 740); pdf_stroke($pdf); PDF_end_page($pdf); PDF_close($pdf); fclose($fp); echo "A HREF=getpdf.php3 finished / A";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The script getpdf.php just returns the pdf document.</seg></tuv>
      <tuv xml:lang="es"><seg>The PHP script getpdf.php3 just outputs the pdf document.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $len = filesize( $filename); header("Content-type: application / pdf"); header("Content-Length: $len"); header("Content-Disposition: inline; filename=foo.pdf"); readfile($filename);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $fp = fopen( "test.pdf", "r"); header("Content-type: application / pdf"); fpassthru($fp); fclose($fp);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PDFlib distribution contains a more complex example which creates a page with an analog clock.</seg></tuv>
      <tuv xml:lang="es"><seg>Creating a PDF document with pdflib 2.x</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The example was converted to PHP from the PDFlib example. (The same example is available in the CLibPDF documentation.)</seg></tuv>
      <tuv xml:lang="es"><seg>The PHP script getpdf.php3 is the same as above.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. pdfclock example from PDFlib distribution</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3. pdfclock example from pdflib 2.x distribution</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>?php $pdffilename = "clock.pdf"; $radius = 200; $margin = 20; $pagecount = 40; $fp = fopen($pdffilename, "w"); $pdf = pdf_open($fp); pdf_set_info_creator($pdf, "pdf_clock.php3"); pdf_set_info_author($pdf, "Uwe Steinmann"); pdf_set_info_title($pdf, "Analog Clock"); while($pagecount- - 0) {pdf_begin_page($pdf, 2 * ($radius + $margin), 2 * ($radius + $margin)); pdf_set_transition($pdf, 4); / * wipe * / pdf_set_duration($pdf, 0.5); pdf_translate($pdf, $radius + $margin, $radius + $margin); pdf_save($pdf); pdf_setrgbcolor($pdf, 0.0, 0.0, 1.0); / * minute strokes * / pdf_setlinewidth($pdf, 2.0); for ($alpha = 0; $alpha 360; $alpha += 6) {pdf_rotate($pdf, 6.0); pdf_moveto($pdf, $radius, 0.0); pdf_lineto($pdf, $radius-$margin / 3, 0.0); pdf_stroke($pdf);} pdf_restore($pdf); pdf_save($pdf); / * 5 minute strokes * / pdf_setlinewidth($pdf, 3.0); for ($alpha = 0; $alpha 360; $alpha += 30) {pdf_rotate($pdf, 30.0); pdf_moveto($pdf, $radius, 0.0); pdf_lineto($pdf, $radius-$margin, 0.0); pdf_stroke($pdf);} $ltime = getdate(); / * draw hour hand * / pdf_save($pdf); pdf_rotate($pdf, -(($ltime['minutes'] / 60.0)+$ltime['hours']-3.0)*30.0); pdf_moveto($pdf, -$radius / 10, -$radius / 20); pdf_lineto($pdf, $radius / 2, 0.0); pdf_lineto($pdf, -$radius / 10, $radius / 20); pdf_closepath($pdf); pdf_fill($pdf); pdf_restore($pdf); / * draw minute hand * / pdf_save($pdf); pdf_rotate($pdf, -(($ltime['seconds'] / 60.0)+$ltime['minutes']-15.0)*6.0); pdf_moveto($pdf, -$radius / 10, -$radius / 20); pdf_lineto($pdf, $radius * 0.8, 0.0); pdf_lineto($pdf, -$radius / 10, $radius / 20); pdf_closepath($pdf); pdf_fill($pdf); pdf_restore($pdf); / * draw second hand * / pdf_setrgbcolor($pdf, 1.0, 0.0, 0.0); pdf_setlinewidth($pdf, 2); pdf_save($pdf); pdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0)); pdf_moveto($pdf, -$radius / 5, 0.0); pdf_lineto($pdf, $radius, 0.0); pdf_stroke($pdf); pdf_restore($pdf); / * draw little circle at center * / pdf_circle($pdf, 0, 0, $radius / 30); pdf_fill($pdf); pdf_restore($pdf); pdf_end_page($pdf);} $pdf = pdf_close($pdf); fclose($fp); echo" A HREF=getpdf.php3?filename=".$pdffilename. "finished / A";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An alternative PHP module for PDF document creation based on FastIO' s An alternative PHP module for PDF document creation based on FastIO's ClibPDF is available.</seg></tuv>
      <tuv xml:lang="es"><seg>The PHP script getpdf.php3 just outputs the pdf document.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that ClibPDF has a slightly different API than PDFlib.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $fp = fopen( $filename, "r"); header("Content-type: application / pdf"); fpassthru($fp); fclose($fp);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be sure to read the Payflow Pro Developers Guide for full details of the required parameters.</seg></tuv>
      <tuv xml:lang="es"><seg>Once you have downloaded the SDK you should copy the files from the lib directory of the distribution.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>These functions have been added in PHP 4.0.2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"test.signio.com"</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It provides SQL92 / SQL99 language support, transaction integrity and type extensibility.</seg></tuv>
      <tuv xml:lang="es"><seg>Postgres, desarrollado originalmente en el UC Berkeley Computer Science Department, ha sido pionero en muchos de los conceptos relacionales / orientados a objeto que ahora están empezando a estar disponibles en algunas bases de datos comperciales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use PostgreSQL support, you need PostgreSQL 6.5 or later, PostgreSQL 7.0 or later to enable all PostgreSQL module features.</seg></tuv>
      <tuv xml:lang="es"><seg>Tiene soporte de lenguaje SQL92 / SQL3, integridad transaccional, y extensibilidad de tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current version and more information about PostgreSQL is available at http: / /www.postgresql.org /.</seg></tuv>
      <tuv xml:lang="es"><seg>PostgreSQL es un descendiente de dominio público, más concretamente open source, del código original de Berkeley.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the PostgreSQL base install directory, defaults to / usr / local / pgsql.</seg></tuv>
      <tuv xml:lang="es"><seg>PostgreSQL se encuentra disponible sin coste alguno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>La versión actual la tienes a tu disposición en www.PostgreSQL.org.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of Postgres connections per process, including persistent connections.</seg></tuv>
      <tuv xml:lang="es"><seg>Desde la versión 6.3 (02 / 03 / 1998) PostgreSQL usa sockets tipo Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use 4.1.0 or later.</seg></tuv>
      <tuv xml:lang="es"><seg>Abajo se da una tabla con las diferentes posibilidades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most of new names will have additional underscores, e.g. pg_lo_open().</seg></tuv>
      <tuv xml:lang="es"><seg>El socket se encuentra en el ficheero / tmp / .s.PGSQL.5432.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Older names can be used in 4.2.0 and a few releases from 4.2.0, but they may be deleted in the future.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta opción se controla mediante el flag '-i' del postmaster y cuando se incluye significa "escuchar sockets TCP / IP además de los de dominio Unix "ya que si no se le dice nada solo escucha sockets tipo Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function names changed</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_affected_rows()</seg></tuv>
      <tuv xml:lang="es"><seg>Postmaster y PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_size()</seg></tuv>
      <tuv xml:lang="es"><seg>Estado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_is_null()</seg></tuv>
      <tuv xml:lang="es"><seg>pg_connect( "","", "","", "dbname");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please use a connection string for pg_connect() and pg_pconnect().</seg></tuv>
      <tuv xml:lang="es"><seg>pg_connect( "","", "","", "dbname");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since version 6.3 (03 / 02 / 1998) PostgreSQL uses unix domain sockets by default.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_connect( "localhost", "","", "", "dbname");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option can be enabled with the '-i' flag to postmaster and it's meaning is: "listen on TCP / IP sockets as well as Unix domain sockets ".</seg></tuv>
      <tuv xml:lang="es"><seg>Is the postmaster running and accepting TCP / IP (with -i) connection at 'localhost 'on port '5432'? in / path / to / file.php3 on line 20. (Imposible conectar al servidor PostgreSQL, la llamada connectDB() ha fallado: ¿Está funcionando el postmaster aceptando conextiones TCP / IP (con -i) en 'localhost' en el puerto '5432 '? en / path / to / file.php3 en linea 20.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Is the postmaster running and accepting TCP / IP (with -i) connection at'localhost 'on port '5432'? in / path / to / file.php on line 20.</seg></tuv>
      <tuv xml:lang="es"><seg>pg_connect( "localhost", "","", "", "dbname");</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, PostgreSQL module will lookup PGHOST environment variable when the hostname is omitted in the connection string.</seg></tuv>
      <tuv xml:lang="es"><seg>Uno puede establecer una conexión con el siguiente comando:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to PostgreSQL Programmer' s Manual (libpq - Environment Variables) for details.</seg></tuv>
      <tuv xml:lang="es"><seg>Para usar el interface de objetos grandes (large object o lo), es necesario encapsularlo en un bloque de transacción.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use $_ENV or getenv() to check which environment variables are available to the current process.</seg></tuv>
      <tuv xml:lang="es"><seg>Un bloque de transacción empieza con un begin y si la transacción fue valida termina con commit y end.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting default parameters</seg></tuv>
      <tuv xml:lang="es"><seg>Si la transacción falla debe ser cerrada con abort y rollback.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In older versions, this was limited to the block size (default was 8KB, maximum was 32KB, defined at compile time)</seg></tuv>
      <tuv xml:lang="es"><seg>Usando Objetos Grandes (lo)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A transaction block starts with a SQL statement BEGIN and if the transaction was valid ends with COMMIT or END.</seg></tuv>
      <tuv xml:lang="es"><seg>?php $database = pg_Connect ("","", "","", "jacarta"); pg_exec ($database, "begin"); $oid = pg_locreate ($database); echo ("$oid\n"); $handle = pg_loopen ($database, $oid, "w"); echo ("$handle\n"); pg_lowrite ($handle, "gaga"); pg_loclose ($handle); pg_exec ($database, "commit") pg_exec ($database, "end")?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>POSIX.1 for example defined the open(), read(), write() and close() functions, too, which traditionally have been part of PHP 3 for a long time.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo contiene una interfaz a aquellas funciones definidas en el documento estandar IEEE 1003.1 (POSIX.1) que no son accesibles de otra manera.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It' s therefore strongly advised to disable the POSIX extension at all (use --disable-posix in your configure line) if you're operating in such an environment.</seg></tuv>
      <tuv xml:lang="es"><seg>POSIX.1 por ejemplo definió las funciones open( ),read(), write() y close(), las cuales han sido parte de PHP durante mucho tiempo.Algunas funciones específicas del sistema no habian estado disponibles antes, aunque con este módulo se intenta remediar esto ofreciendo un acceso fácil a esas funciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have the libraries needed add the --with-pspell[ =dir] option when compiling PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>The pspell() functions allow you to check the spelling of a word and offer suggestions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>You need the aspell and pspell libraries, available from http: / /aspell.sourceforge.net / and http: / /aspell.net / respectively, and add the --with-pspell[ =dir] option when compiling php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are functions that provide editable command lines.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones readline() implementan una interfaz con la librería GNU Readline.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because of the interactive nature of this library, it will be of little use for writing Web applications, but may be useful when writing scripts meant using PHP from the command line.</seg></tuv>
      <tuv xml:lang="es"><seg>Un ejemplo de la manera de funcionar podría ser la forma en que el Bash permite usar las flechas de dirección para insertar carácteres o desplazarse a través del historial de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find libreadline on the home page of the GNU Readline project, at http: / /cnswww.cns.cwru.edu / ~chet / readline / rltop.html.</seg></tuv>
      <tuv xml:lang="es"><seg>Debido a la naturaleza interactiva de esta libreria, tendrá un uso muy reducido en la escritura de aplicaciones Web, aunque puede ser útil para scripts que han de ser ejecutados desde la consola.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The libedit library is BSD licensend and available for download from http: / /sourceforge.net / projects / libedit /.</seg></tuv>
      <tuv xml:lang="es"><seg>La página principal del proyecto GNU Readline es http: / /cnswww.cns.cwru.edu / ~chet / readline / rltop.html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Está actualizada por Chet Ramey, quien además es el autor de Bash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The GNU Recode library converts files between various coded character sets and surface encodings.</seg></tuv>
      <tuv xml:lang="es"><seg>Este modulo contiene un interfaz para la biblioteca GNU Recode version 3.5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The library recognises or produces nearly 150 different character sets and is able to convert files between almost any pair.</seg></tuv>
      <tuv xml:lang="es"><seg>Para poder usar las funciones definidas en este modulo, debereis de compilar el interprete PHP con la opcion --with-recode.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must have GNU Recode 3.5 or higher installed on your system.</seg></tuv>
      <tuv xml:lang="es"><seg>Para poder hacer esto debereis tener instalado en vuestro sistema GNU Recode 3.5 o superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To be able to use the functions defined in this module you must compile your PHP interpreter using the --with-recode[ =DIR] option.</seg></tuv>
      <tuv xml:lang="es"><seg>La biblioteca GNU Recode convierte entre ficheros con diferentes codigos de caracteres y codificacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Loading the recode before those extension has proven to fix the problem.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando esto no puede realizarse exactamente, puede desahacerse de los caracteres problematicos o crear una aproximacion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>La biblioteca reconoce o produce alrededor de 150 codigos de caracteres y puede convertir ficheros entre casi todos los pares posibles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is due to the fact that they both share the same internal symbol.</seg></tuv>
      <tuv xml:lang="es"><seg>La gran mayoria de de codigos de caracteres RFC 1345 estan soportados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those functions support non-greedy matching, assertions, conditional subpatterns, and a number of other features not supported by the POSIX-extended regular expression syntax.</seg></tuv>
      <tuv xml:lang="es"><seg>Las expresiones regulares se usan en PHP para manipular cadenas complejas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions that support regular expressions are:</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones que soportan expresiones regulares son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regular Expression Examples</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplos de expresiones regulares</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For regular expressions in Perl-compatible syntax have a look at the PCRE functions.</seg></tuv>
      <tuv xml:lang="es"><seg>ereg( "abc",$string); / * Devuelve true si "abc "se encuentra en $string. * / ereg("^abc",$string); / * Devuelve true si "abc" se encuentra al comienzo de $string. * / ereg("abc$",$string); / * Devuelve true si "abc "se encuentra al final de $string. * / eregi("(ozilla .[23]_BAR_MSIE.3)",$HTTP_USER_AGENT); / * Devuelve true si el navegador cliente es Netscape 2, 3 o MSIE 3. * / ereg("([[:alnum :]]+) ([[:alnum :]]+) ([[:alnum :]]+)", $string,$regs); / * Pone tres palabras separadas por espacios en $regs[1], $regs[2] y $regs[3]. * / $string = ereg_replace("^"," BR ",$string); / * Coloca la etiqueta BR al comienzo de $string. * / $string = ereg_replace("$", "BR ",$string); / * Coloca la etiqueta BR al final de $string. * / $string = ereg_replace("\n" ,"",$string); / * Elimina los caracteres fin-de-línea de $string. * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module provides wrappers for the System V IPC family of functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo provee funciones semáforo utilizando los semaforos de System V.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Semaphores may be used to provide exclusive access to resources on the current machine, or to limit the number of processes that may simultaneously use a resource.</seg></tuv>
      <tuv xml:lang="es"><seg>Los semáforos pueden usarse para obtener acceso exclusivo a algun recurso del ordenador en cuestión, o para limitar el número de procesos que pueden usar un recurso simultaneamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shared memory may be used to provide access to global variables.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo provee tambien funciones de memoria compartida, usando el compartimiento de memoria de System V.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Different httpd-daemons and even other programs (such as Perl, C,...) are able to access this data to provide a global data-exchange.</seg></tuv>
      <tuv xml:lang="es"><seg>La memoria compartida puede usarse para proveer acceso a variables globales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use semaphores for synchronization.</seg></tuv>
      <tuv xml:lang="es"><seg>Los diferentes demonios http e incluso otros programas, (como Perl, C,...) son capaces de utilizar estos datos, para intercambiarlos de modo global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Limits of Shared Memory by the Unix OS</seg></tuv>
      <tuv xml:lang="es"><seg>Recuerde que, la memoria compartida NO es segura para los accesos simultáneos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max size of shared memory, normally 131072 bytes</seg></tuv>
      <tuv xml:lang="es"><seg>Use los semáforos para obtener sincronismo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>minimum size of shared memory, normally 1 byte</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max amount of shared memory segments on a system, normally 100</seg></tuv>
      <tuv xml:lang="es"><seg>Limites de la memoria compartida del SO Unix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They provide a simple and effective means of exchanging data between processes, without the need for setting up an alternative using unix domain sockets.</seg></tuv>
      <tuv xml:lang="es"><seg>máximo tamaño de memoria compartida, normalmente 131072 bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for this functions are not enabled by default.</seg></tuv>
      <tuv xml:lang="es"><seg>minimo tamaño de memoria compartida, por lo general 1 byte</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>máxima cantidad de segmentos de memoria compartida, normalmente 100</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>máximo de memoria compartida por proceso, normalmente 6</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the ability to manage tens and even hundreds of thousands of users.</seg></tuv>
      <tuv xml:lang="es"><seg>In numerous productive BS2000 installations, SESAM / SQL-Server has proven...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The BS2000 PLAM library must be set ACCESS=READ,SHARE=YES because it must be readable by the apache server 's user id.</seg></tuv>
      <tuv xml:lang="es"><seg>Now there is a PHP3 SESAM interface available which allows database operations via PHP-scripts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name of SESAM application configuration file.</seg></tuv>
      <tuv xml:lang="es"><seg>Configuration notes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name of SESAM message catalog file.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because the SQL command quoting for single quotes uses duplicated single quotes (as opposed to a single quote preceded by a backslash, used in some other databases), it is advisable to set the PHP configuration directives php3_magic_quotes_gpc and php3_magic_quotes_sybase to On for all PHP scripts using the SESAM interface.</seg></tuv>
      <tuv xml:lang="es"><seg>Runtime considerations:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Restrict access to php scripts which must administer the database by using password control and / or SSL security.</seg></tuv>
      <tuv xml:lang="es"><seg>Migration from other SQL databases:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of int( 4) (intended use: integers up to '9999'), SESAM requires simply int Instead of int(4) (intended use: integers up to '9999'), SESAM requires simply int for an implied size of 31 bits.</seg></tuv>
      <tuv xml:lang="es"><seg>Instead of int( 4) (intended use: integers up to '9999'), SESAM requires simply int for an implied size of 31 bits.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When specifying RESTRICT, an error is returned if there are dependent objects (e.g., VIEWs), while with CASCADE, dependent objects will be deleted along with the specified table.</seg></tuv>
      <tuv xml:lang="es"><seg>Notes on the use of various SQL types:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This enables you to build more customized applications and increase the appeal of your web site.</seg></tuv>
      <tuv xml:lang="es"><seg>El apoyo que PHP proporciona para las sesiones consiste en una forma de conservar ciertos datos a lo largo de los subsiguientes accesos, lo cual le permite construir aplicaciones más personalizadas e incrementar el atractivo de su sitio web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A visitor accessing your web site is assigned an unique id, the so-called session id.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ya está familiarizado con el tratamiento de sesiones de PHPLIB, notará que algunos conceptos son similares al soporte de las sesiones de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session support allows you to register arbitrary numbers of variables to be preserved across requests.</seg></tuv>
      <tuv xml:lang="es"><seg>A cada visitante que accede a su web se le asigna un identificador único, llamado "session id" (identificador de sesión).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All registered variables are serialized after the request finishes.</seg></tuv>
      <tuv xml:lang="es"><seg>Éste se almacena en una cookie por parte del usuario o se propaga en la URL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On subsequent accesses, these are not defined by the session module unless the user defines them later.</seg></tuv>
      <tuv xml:lang="es"><seg>El soporte de las sesiones le permite registrar un número arbitrario de variables que se conservarán en las siguientes peticiones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This holds true regardless of if a session has been started using the session_start() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando un visitante acceda a su web, PHP comprobará automáticamente (si session.auto_start está puesto a 1) o cuando usted lo especifique (de forma explícita mendiante session_start() o implícita a través de session_register()) si se le ha enviado un "session id "específico con su petición, en cuyo caso se recrean las variables que se habían guardado anteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session fixation</seg></tuv>
      <tuv xml:lang="es"><seg>Todas las variables registradas son almacenadas tras finalizar la petición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session module cannot guarantee that the information you store in a session is only viewed by the user who created the session.</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables que están indefinidas se marcan como no definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assess the importance of the data carried by your sessions and deploy addditional protections - - this usually comes at a price, reduced convenience for the user.</seg></tuv>
      <tuv xml:lang="es"><seg>En los subsiguientes accesos, no estarán definidas por el módulo de sesiones a menos que el usuario las defina más tarde.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In that case, cookies must be enabled unconditionally on the user side, or sessions will not work.</seg></tuv>
      <tuv xml:lang="es"><seg>Las opciones de configuración track_vars y register_globals influyen notablemente en la forma en que las variables de la sesión se almacenan y restauran.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are several ways to leak an existing session id to third parties.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A leaked session id enables the third party to access all resources which are associated with a specific id.</seg></tuv>
      <tuv xml:lang="es"><seg>A partir de PHP 4.0.3, track_vars siempre está activado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, URLs carrying session ids.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you link to an external site, the URL including the session id might be stored in the external site 's referrer logs.</seg></tuv>
      <tuv xml:lang="es"><seg>A partir de PHP 4.1.0, $_SESSION está disponible como variable global, al igual que $_POST, $_GET, $_REQUEST y demás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, a more active attacker might listen to your network traffic.</seg></tuv>
      <tuv xml:lang="es"><seg>Al contrario que $HTTP_SESSION_VARS, $_SESSION siempre es global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is not encrypted, session ids will flow in plain text over the network.</seg></tuv>
      <tuv xml:lang="es"><seg>Por tanto, no se debe usar global para $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Si track_vars está activado y register_globals está desactivado, sólo los miembros del vector asociativo global $HTTP_SESSION_VARS pueden ser registrados como variables de la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Optionally you can use shared memory allocation (mm), developed by Ralf S.</seg></tuv>
      <tuv xml:lang="es"><seg>Las variables restauradas de la sesión sólo estarán disponibles en el vector $HTTP_SESSION_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Engelschall, for session storage.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option is not available for Windows platforms.</seg></tuv>
      <tuv xml:lang="es"><seg>Registrar una variable con track_vars activado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It might be more appropiate to use a shared memory based filesystem (such as tmpfs on Solaris / Linux, or / dev / md on BSD) to store sessions in files, because they are properly locked.</seg></tuv>
      <tuv xml:lang="es"><seg>?php session_start(); if (isset($HTTP_SESSION_VARS['count'])) {$HTTP_SESSION_VARS['count']++;} else {$HTTP_SESSION_VARS['count'] = 0;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would not like to build your PHP with session support, you should specify the --disable-session option to configure.</seg></tuv>
      <tuv xml:lang="es"><seg>Se recomienda usar $_SESSION (o $HTTP_SESSION_VARS con PHP 4.0.6 o inferior) por seguridad y para hacer el código más legible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Con $_SESSION o $HTTP_SESSION_VARS, no es necesario usar las funciones session_register() / session_unregister() / session_is_registered().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Los usuarios pueden acceder a una variable de la sesión como si se tratase de una variable normal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session configuration options</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.gc_probability</seg></tuv>
      <tuv xml:lang="es"><seg>Registrar una variable con $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.serialize_handler</seg></tuv>
      <tuv xml:lang="es"><seg>?php session_start(); / / Use $HTTP_SESSION_VARS con PHP 4.0.6 o inferior if (!isset($_SESSION['count'])) {$_SESSION['count'] = 0;} else {$_SESSION['count']++;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_only_cookies</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"a=href,area=href,frame=src,input=src,form=fakeentry"</seg></tuv>
      <tuv xml:lang="es"><seg>Borrar una variable con $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session management system supports a number of configuration options which you can place in your php.ini file.</seg></tuv>
      <tuv xml:lang="es"><seg>?php session_start(); / / Use $HTTP_SESSION_VARS con PHP 4.0.6 o inferior unset($_SESSION['count']);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.save_handler defines the name of the handler which is used for storing and retrieving data associated with a session.</seg></tuv>
      <tuv xml:lang="es"><seg>Si register_globals está activado, todas las variables globales pueden ser registradas como variables de la sesión, y las variables de la sesión serán restauradas a sus correspondientes variables globales.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you choose the default files handler, this is the path where the files are created.</seg></tuv>
      <tuv xml:lang="es"><seg>Como PHP debe saber qué variables globles están registradas como variables de la sesión, los usuarios deben registrar las variables con la función session_register(), mientras que con $HTTP_SESSION_VARS / $_SESSION no es necesario usar session_register().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to / tmp.</seg></tuv>
      <tuv xml:lang="es"><seg>Atención</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_save_path().</seg></tuv>
      <tuv xml:lang="es"><seg>Si está usando $HTTP_SESSION_VARS / $_SESSION y desactiva register_globals, no use session_register(), session_is_registered() ni session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you leave this set to a world-readable directory, such as / tmp (the default), other users on the server may be able to hijack sessions by getting the list of files in that directory.</seg></tuv>
      <tuv xml:lang="es"><seg>Si activa register_globals, session_unregister() debería ser usado a partir de que las variables de la sesión sean registradas como variables globales cuando los datos de la sesión se guardan.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows users have to change this variable in order to use PHP 's session functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Se recomienda desactivar register_globals por motivos de seguridad y rendimiendo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to specify a valid path, e.g.: c: / temp.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It should only contain alphanumeric characters.</seg></tuv>
      <tuv xml:lang="es"><seg>Registrar una variable con register_globals activado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 0 (disabled).</seg></tuv>
      <tuv xml:lang="es"><seg>Si track_vars y register_globals están activados, las variables globales y las entradas de $HTTP_SESSION_VARS / $_SESSION harán referencia al mismo valor para variables ya registradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, a PHP internal format (name php) and WDDX is supported (name wddx).</seg></tuv>
      <tuv xml:lang="es"><seg>Si el usuario utiliza session_register() para registrar una variable, el vector $HTTP_SESSION_VARS / $_SESSION no contendrá esa variable hasta que se cargue de los datos de la sesión. (p.ej. hasta la próxima petición).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>WDDX is only available, if PHP is compiled with WDDX support.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos formas de propagar un "session id":</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 1.</seg></tuv>
      <tuv xml:lang="es"><seg>El módulo de sesiones admite ambas formas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Las Cookies son la mejor opción, pero como no son fiables (los clientes no están obligados a aceptarlas), no podemos confiar en ellas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using the default file-based session handler, your filesystem must keep track of access times (atime).</seg></tuv>
      <tuv xml:lang="es"><seg>El segundo método incrusta el "session id" directamente en las URLs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows FAT does not so you will have to come up with another way to handle garbage collecting your session if you are stuck with a FAT filesystem or any other fs where atime tracking is not available.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP es capaz de hacerlo de forma transparente al usuario cuando se compila con --enable-trans-sid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the Referer was sent by the client and the substring was not found, the embedded session id will be marked as invalid.</seg></tuv>
      <tuv xml:lang="es"><seg>Si activa esta opción, las URIs relativas serán modificadas de forma que contengan el session id automáticamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.entropy_file gives a path to an external resource (file) which will be used as an additional entropy source in the session id creation process.</seg></tuv>
      <tuv xml:lang="es"><seg>Alternativamente, puede usar la constante SID que está definida, si el cliente no envía la cookie adecuada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.entropy_length specifies the number of bytes which will be read from the file specified above.</seg></tuv>
      <tuv xml:lang="es"><seg>El SID puede tener la forma de nombre_de_sesion=session_id o ser una cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_cookies session.use_cookies specifies whether the module will use cookies to store the session id on the client side.</seg></tuv>
      <tuv xml:lang="es"><seg>El ejemplo siguiente demuestra cómo registrar una variable, y cómo colocar correctamente un enlace a otra página usando la constante SID.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 1 (enabled).</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_only_cookies specifies whether the module will only use cookies to store the session id on the client side.</seg></tuv>
      <tuv xml:lang="es"><seg>Contar el número de impresiones de un usuario</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="es"><seg>Hola, visitante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value 0 means "until the browser is closed." Defaults to 0 .See also session_get_cookie_params() and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="es"><seg>Has visto esta p aacute; gina ?php echo $count;? veces. ?php # el ?php echo SID? (Se puede usar ?=SID? si short tag est aacute; activado) # es necesario para conservar el session id # en caso de que el usuario haya desactivado las cookies?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to / .See also session_get_cookie_params() and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="es"><seg>Para continuar, haga click A HREF=" nextpage.php? ?php echo SID? "aqu iacute; / A.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_domain specifies the domain to set in session_cookie.</seg></tuv>
      <tuv xml:lang="es"><seg>El ?=SID? no es necesario si se ha usado --enable-trans-sid al compilar PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default is none at all.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_secure specifies whether cookies should only be sent over secure connections.</seg></tuv>
      <tuv xml:lang="es"><seg>Se asume que las URLs no relativas apuntan a sitios web externos, y por tanto no se añade el SID, ya que pasar el SID a un servidor diferente podría ocasionar un agujero de seguridad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cache_limiter specifies cache control method to use for session pages (none / nocache / private / private_no_expire / public).</seg></tuv>
      <tuv xml:lang="es"><seg>Para implementar el almacenamiento en bases de datos o en otro tipo de almacenamiento, necesitará usar session_set_save_handler( )() para crear una colección de funciones de almacenamiento a nivel de usuario.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cache_expire specifies time-to-live for cached session pages in minutes, this has no effect for nocache limiter.</seg></tuv>
      <tuv xml:lang="es"><seg>El sistema de control de sesiones soporta varias opciones de configuración que puede colocar en su archivo php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 180.</seg></tuv>
      <tuv xml:lang="es"><seg>Les daremos un pequeño repaso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_trans_sid whether transparent sid support is enabled or not.</seg></tuv>
      <tuv xml:lang="es"><seg>session.save_handler session.save_handler define el nombre del controlador que se usa para almacenar y recuperar los datos asociados a la sesión.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Su valor por defecto es files.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From PHP 4.2.0, trans-sid feature is always compiled.</seg></tuv>
      <tuv xml:lang="es"><seg>session.save_path session.save_path define el argumento que se pasa al controlador de almacenamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>URL based session management has additional security risks compared to cookie based session management.</seg></tuv>
      <tuv xml:lang="es"><seg>Si elige el controlador de archivos por defecto, esta es la ruta donde los archivos se crean.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>url_rewriter.tags url_rewriter.tags specifies which html tags are rewritten to include session id if transparent sid support is enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es / tmp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The track_vars and register_globals configuration settings influence how the session variables get stored and restored.</seg></tuv>
      <tuv xml:lang="es"><seg>Si la profundidad de la ruta de session.save_path es mayor que 2, no se llevará a cabo la recolección de basura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.0.3, track_vars is always turned on.</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Si lo deja apuntando a un directorio con permiso de lectura por el resto de usuarios, como / tmp (la opción por defecto), los demás usuarios del servidor pueden conseguir robar las sesiones obteniéndolas de la lista de archivos de ese directorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>session.name especifica el nombre de la sesión que se usa como nombre de la cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike $HTTP_SESSION_VARS, $_SESSION is always global.</seg></tuv>
      <tuv xml:lang="es"><seg>Sólo debería contener caracteres alfanuméricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, you do not need to use the global keyword for $_SESSION.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto vale PHPSESSID.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can substitute $HTTP_SESSION_VARS for $_SESSION, if you prefer the former.</seg></tuv>
      <tuv xml:lang="es"><seg>session.auto_start session.auto_start especifica si el módulo de las sesión inicia una sesión automáticamente al comenzar la petición.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also note that you must start your session using session_start() before use of $_SESSION becomes available.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto está 0 (desactivado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more details see the section on variables in this manual.</seg></tuv>
      <tuv xml:lang="es"><seg>session.cookie_lifetime session.cookie_lifetime especifica la duración de la cookie en segundos que se manda al navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The restored session variables will only be available in the array $_SESSION.</seg></tuv>
      <tuv xml:lang="es"><seg>El valor 0 significa "hasta que se cierra el navegador", y es el que se encuentra por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With $_SESSION, there is no need to use the session_register(), session_unregister(), session_is_registered() functions.</seg></tuv>
      <tuv xml:lang="es"><seg>session.serialize_handler define el nombre del controlador que se utiliza para guardar y restaurar los datos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente se soportan un formato interno de PHP (cuyo nombre es php) y WDDX (cuyo nombre es wddx).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php session_start(); / / Use $HTTP_SESSION_VARS with PHP 4.0.6 or less if (!isset($_SESSION['count'])) {$_SESSION['count'] = 0;} else {$_SESSION['count']++;}?</seg></tuv>
      <tuv xml:lang="es"><seg>WDDX sólo está disponible si PHP está compilado con Soporte para WDDX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php session_start(); / / Use $HTTP_SESSION_VARS with PHP 4.0.6 or less unset($_SESSION['count']);?</seg></tuv>
      <tuv xml:lang="es"><seg>session.gc_probability session.gc_probability especifica la probabilidad de que se inicie la rutina gc (garbage collection - recoleción de basura) en cada petición en porcentaje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php session_start(); / / With PHP 4.3 and later, you can also simply use the prior example. session_unregister('count');?</seg></tuv>
      <tuv xml:lang="es"><seg>session.gc_maxlifetime especifica el número de segundos tras los cuales los datos se considerarán como 'basura' y serán eliminados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon a restart of a session, these variables will be restored to corresponding global variables.</seg></tuv>
      <tuv xml:lang="es"><seg>session.referer_check session.referer_check contiene la subcadena que usted quiera que se compruebe en cada "HTTP Referer" (N.T.:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can avoid this by simply setting entries in $_SESSION.</seg></tuv>
      <tuv xml:lang="es"><seg>Página desde donde proviene el enlace a la página actual).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using $_SESSION and disable register_globals, do not use session_register(), session_is_registered() and session_unregister(), if your scripts shall work in PHP 4.2 and earlier.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el "Referer" fue enviado por el cliente y la subcadena no se ha encontrado, el session id incrustado será marcado como inválido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use these functions in 4.3 and later.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es una cadena vacía.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Disabling register_globals is recommended for both security and performance reasons.</seg></tuv>
      <tuv xml:lang="es"><seg>session.entropy_file session.entropy_file indica la ruta a un recurso externo (un archivo) que se usará como fuente adicional de entropía en el proceso de creación de session id 's.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Registering a variable with register_globals enabled</seg></tuv>
      <tuv xml:lang="es"><seg>Por ejemplo / dev / random o / dev / urandom, que están disponibles en muchos sistemas Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If register_globals is enabled, then the global variables and the $_SESSION entries will automatically reference the same values which were registered in the prior session instance.</seg></tuv>
      <tuv xml:lang="es"><seg>session.entropy_length session.entropy_length especifica el número de bytes que serán leidos del archivo indicado más arriba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is a defect in PHP 4.2.3 and earlier.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es 0 (desactivado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>I.e. a modification to the newly registered global variable will not be reflected by the $_SESSION entry.</seg></tuv>
      <tuv xml:lang="es"><seg>session.use_cookies session.use_cookies indica si el módulo puede usar cookies para guardar el session id en el lado del cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has been corrected in PHP 4.3.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto está a 1 (activado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies</seg></tuv>
      <tuv xml:lang="es"><seg>session.cookie_path session.cookie_path especifica la ruta a colocar en session_cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session module supports both methods.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second method embeds the session id directly into URLs.</seg></tuv>
      <tuv xml:lang="es"><seg>session.cookie_domain especifica el dominio a establecer en session_cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unless you are using PHP 4.2 or later, you need to enable it manually when building PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto no se especifica ninguno en ningún caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this build option and the run-time option session.use_trans_sid are enabled, relative URIs will be changed to contain the session id automatically.</seg></tuv>
      <tuv xml:lang="es"><seg>session.cache_limiter session.cache_limiter especifica el método de control del caché a usar en las páginas de la sesión (none / nocache / private / private_no_expire / public).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg_separator.output php.ini directive allows to customize the argument seperator.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto es nocache (no guardar las páginas en el caché).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternatively, you can use the constant SID which is always defined.</seg></tuv>
      <tuv xml:lang="es"><seg>session.cache_expire session.cache_expire especifica el tiempo-de-vida de las páginas de la sesión que se encuentran en el caché en minutos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the client did not send an appropriate session cookie, it has the form session_name=session_id.</seg></tuv>
      <tuv xml:lang="es"><seg>No tiene efecto para el limitador nocache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, it expands to an empty string.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto vale 180.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example demonstrates how to register a variable, and how to link correctly to another page using SID.</seg></tuv>
      <tuv xml:lang="es"><seg>session.use_trans_sid indica si la inclusión del sid transparente está activada o no, si fue activada compilando con --enable-trans-sid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Counting the number of hits of a single user</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto está a 1 (activado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hello visitor, you have seen this page ?php echo $count;? times. p To continue, A HREF="nextpage.php? ?php echo SID? "click here / A</seg></tuv>
      <tuv xml:lang="es"><seg>url_rewriter.tags url_rewriter.tags especifica qué etiquetas html serán reescritas para incluir el session id si la inclusión del sid transparente está activada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ?=SID? is not necessary, if --enable-trans-sid was used to compile PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Las etiquetas por defecto son a=href,area=href,frame=src,input=src,form=fakeentry</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Non-relative URLs are assumed to point to external sites and hence don 't append the SID, as it would be a security risk to leak the SID to a different server.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To implement database storage, or any other storage method, you will need to use session_set_save_handler() to create a set of user-level storage functions.</seg></tuv>
      <tuv xml:lang="es"><seg>El manejo de sesiones fue añadido en PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions will not typically work on Windows, as it does not support shared memory.</seg></tuv>
      <tuv xml:lang="es"><seg>Shmop is an easy to use set of functions that allows php to read, write, create and delete UNIX shared memory segments.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of Windows 2000 though, enabling the php_shmop.dll in your php.ini will enable this functionality though.</seg></tuv>
      <tuv xml:lang="es"><seg>The functions will not work on windows, as it does not support shared memory.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.0.3, these functions were prefixed by shm rather than shmop.</seg></tuv>
      <tuv xml:lang="es"><seg>To use shmop you will need to compile php with the --enable-shmop parameter in your configure line.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>The functions explained in the chapter begin all with shm_() in PHP 4.0.3, but in PHP 4.0.4 and later versions these names are changed to begin with shmop_().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Create 100 byte shared memory block with system id if 0xff3 $shm_id = shmop_open( 0xff3, "c", 0644, 100); if(!$shm_id) {echo "Couldn't create shared memory segment\n";} / / Get shared memory block's size $shm_size = shmop_size($shm_id); echo "SHM Block Size: ".$shm_size. "has been created.\n"; / / Lets write a test string into shared memory $shm_bytes_written = shmop_write($shm_id, "my shared memory block", 0); if($shm_bytes_written != strlen("my shared memory block")) {echo "Couldn't write the entire length of data\n";} / / Now lets read the string back $my_string = shmop_read($shm_id, 0, $shm_size); if(!$my_string) {echo "Couldn't read from shared memory block\n";} echo "The data inside shared memory was: ".$my_string ."\n"; / /Now lets delete the block and close the shared memory segment if(!shmop_delete($shm_id)) {echo "Couldn't mark shared memory block for deletion .";} shmop_close($shm_id);?</seg></tuv>
      <tuv xml:lang="es"><seg>?php / / Create 100 byte shared memory block with system id if 0xff3 $shm_id = shmop_open( 0xff3, "c", 0644, 100); if(!$shm_id) {echo "Couldn't create shared memory segment\n";} / / Get shared memory block's size $shm_size = shmop_size($shm_id); echo "SHM Block Size: ".$shm_size. "has been created.\n"; / / Lets write a test string into shared memory $shm_bytes_written = shmop_write($shm_id, "my shared memory block", 0); if($shm_bytes_written != strlen("my shared memory block")) {echo "Couldn't write the entire length of data\n";} / / Now lets read the string back $my_string = shmop_read($shm_id, 0, $shm_size); if(!$my_string) {echo "Couldn't read from shared memory block\n";} echo "The data inside shared memory was: ".$my_string ."\n"; / /Now lets delete the block and close the shared memory segment if(!shmop_delete($shm_id)) {echo "Couldn't mark shared memory block for deletion.} shmop_close($shm_id);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use the SNMP functions on Unix you need to install the UCD SNMP package.</seg></tuv>
      <tuv xml:lang="es"><seg>Para usar las funciones SNMP en Unix necesita instalar el paquete UCD SNMP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows these functions are only available on NT and not on Win95 / 98.</seg></tuv>
      <tuv xml:lang="es"><seg>En Windows estas funciones están solamente disponibles en NT y no en Win95 / 98.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Important:</seg></tuv>
      <tuv xml:lang="es"><seg>Importante:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After configuring UCD SNMP, edit config.h and search for NO_ZEROLENGTH_COMMUNITY.</seg></tuv>
      <tuv xml:lang="es"><seg>Para usar el paquete UCD SNMP, necesita definir NO_ZEROLENGTH_COMMUNITY a 1 antes de compilarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It should look like this afterwards:</seg></tuv>
      <tuv xml:lang="es"><seg>Despues de configurar UCD SNMP, edite config.h y busque NO_ZEROLENGTH_COMMUNITY.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>#define NO_ZEROLENGTH_COMMUNITY 1</seg></tuv>
      <tuv xml:lang="es"><seg>Descomente la línea #define.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you see strange segmentation faults in combination with SNMP commands, you did not follow the above instructions.</seg></tuv>
      <tuv xml:lang="es"><seg>Debería de verse como sigue:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directory should be moved to DRIVE:\usr\mibs, where DRIVE must be replaced with the driveletter where PHP is installed on, e.g.: c:\usr\mibs.</seg></tuv>
      <tuv xml:lang="es"><seg>Si ve faltas de segmentación desconocidas en combinación con los comandos SNMP, no siga las siguientes instrucciones.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Si no desea recompilar UCD SNMP, puede compilar PHP con la opción --enable-ucd-snmp-hack la cual trabajará entorno a las mismas características.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a more generic client-side socket interface, see fsockopen() and pfsockopen().</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using these functions, it is important to remember that while many of them have identical names to their C counterparts, they often have different declarations.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo es EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those unfamiliar with socket programming can find a lot of useful material in the appropriate Unix man pages, and there is a great deal of tutorial information on socket programming in C on the web, much of which can be applied, with slight modifications, to socket programming in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que el comportamineto de estas funciones, nombre de funciones y en definitiva TODO lo documentado aqui, puede cambiar en una futura version de PHP SIN AVISO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>Quedas avisado, y utilizar este módulo es tu responsabiliad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>The socket extension implements a low-level interface to the socket communication functions, providing the possibility to act as a socket server as well as a client.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>When using the socket functions described here, it is important to remember that while many of them have identical names to their C counterparts, they often have different declarations.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The socket extension was written to provide a useable interface to the powerful BSD sockets.</seg></tuv>
      <tuv xml:lang="es"><seg>That said, those unfamiliar with socket programming can still find a lot of useful material in the appropriate Unix man pages, and there is a great deal of tutorial information on socket programming in C on the web, much of which can be applied, with slight modifications, to socket programming in PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Care has been taken that the functions work equally well on Win32 and Unix implementations.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See their description for more information.</seg></tuv>
      <tuv xml:lang="es"><seg>Change the address and port variables to suit your setup and execute.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Change the address and port Change the address and port variables to suit your setup and execute.</seg></tuv>
      <tuv xml:lang="es"><seg>?php error_reporting( E_ALL); / * Allow the script to hang around waiting for connections. * / set_time_limit(0); $address = '192.168.1.53'; $port = 10000; if (($sock = socket(AF_INET, SOCK_STREAM, 0)) 0) {echo "socket() failed: reason: ". strerror($sock). "\n";} if (($ret = bind($sock, $address, $port)) 0) {echo "bind() failed: reason:". strerror($ret). "\n";} if (($ret = listen($sock, 5)) 0) {echo "listen() failed: reason: ". strerror($ret). "\n";} do {if (($msgsock = accept_connect($sock)) 0) {echo "accept_connect() failed: reason:". strerror($msgsock). "\n"; break;} do {$buf = ''; $ret = read($msgsock, $buf, 2048); if ($ret 0) {echo "read() failed: reason: ". strerror($ret). "\n"; break 2;} if ($ret == 0) {break 2;} $buf = trim($buf); if ($buf == 'quit') {close($msgsock); break 2;} $talkback = "PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Anything you type will then be output on the server side, and echoed back to you.</seg></tuv>
      <tuv xml:lang="es"><seg>You said '$buf'.\n"; write($msgsock, $talkback, strlen($talkback)); echo "$buf\n";} while (true); close($msgsock);} while (true); close($sock);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To disconnect, enter 'quit'.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php error_reporting (E_ALL); echo "h2 TCP / IP Connection / h2 \n"; / * Get the port for the WWW service. * / $service_port = getservbyname ('www', 'tcp'); / * Get the IP address for the target host. * / $address = gethostbyname ('www.example.com'); / * Create a TCP / IP socket. * / $socket = socket_create (AF_INET, SOCK_STREAM, 0); if ($socket 0) {echo "socket_create() failed: reason:". socket_strerror ($socket). "\n";} else {echo "OK.\n";} echo "Attempting to connect to '$address' on port '$service_port'.. ."; $result = socket_connect ($socket, $address, $service_port); if ($result 0) {echo "socket_connect() failed.\nReason: ($result) ". socket_strerror($result). "\n";} else {echo "OK.\n";} $in = "HEAD / HTTP / 1.0\r\n\r\n"; $out = ''; echo "Sending HTTP HEAD request.. ."; socket_write ($socket, $in, strlen ($in)); echo "OK.\n"; echo "Reading response:\n\n"; while ($out = socket_read ($socket, 2048)) {echo $out;} echo "Closing socket.. ."; socket_close ($socket); echo "OK.\n\n";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php error_reporting( E_ALL); echo "h2 TCP / IP Connection / h2 \n"; / * Get the port for the WWW service. * / $service_port = getservbyname('www', 'tcp'); / * Get the IP address for the target host. * / $address = gethostbyname('www.php.net'); / * Create a TCP / IP socket. * / $socket = socket(AF_INET, SOCK_STREAM, 0); if ($socket 0) {echo "socket() failed: reason:". strerror($socket). "\n";} else {"socket() successful: ". strerror($socket). "\n";} echo "Attempting to connect to '$address 'on port '$service_port'.. ."; $result = connect($socket, $address, $service_port); if ($result 0) {echo "connect() failed.\nReason: ($result)". strerror($result). "\n";} else {echo "OK.\n";} $in = "HEAD / HTTP / 1.0\r\n\r\n"; $out = ''; echo "Sending HTTP HEAD request.. ."; write($socket, $in, strlen($in)); echo "OK.\n"; echo "Reading response:\n\n"; while (read($socket, $out, 2048)) {echo $out;} echo "Closing socket.. ."; close($socket); echo "OK.\n\n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are many wrappers built into PHP by default (See Appendix I), and additional, custom wrappers may be added either within a PHP script using stream_register_wrapper(), or directly from an extension using the API Reference in Chapter 43.</seg></tuv>
      <tuv xml:lang="es"><seg>There are many wrappers built into PHP by default (See Apéndice I), and additional, custom wrappers may be added either within a PHP script using stream_register_wrapper(), or directly from an extension using the API Reference in Capítulo 43.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Custom filters can be defined in a PHP script using stream_register_filter() or in an extension using the API Reference in Chapter 43.</seg></tuv>
      <tuv xml:lang="es"><seg>Custom filters can be defined in a PHP script using stream_register_filter() or in an extension using the API Reference in Capítulo 43.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for a list of PHP builtin wrappers.</seg></tuv>
      <tuv xml:lang="es"><seg>See Apéndice I for a list of PHP builtin wrappers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Again, see Appendix I for a description of targets for builtin streams.</seg></tuv>
      <tuv xml:lang="es"><seg>Again, see Apéndice I for a description of targets for builtin streams.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information on how strings behave, especially with regard to usage of single quotes, double quotes, and escape sequences, see the Strings entry in the Types section of the manual.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas estas funciones manipulan cadenas de varias maneras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For even more powerful string handling and manipulating functions take a look at the POSIX regular expression functions and the Perl compatible regular expression functions.</seg></tuv>
      <tuv xml:lang="es"><seg>En las secciones sobre expresiones regulares y manejo de URL se pueden encontrar secciones más especializadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For up to date SWF support take a look at the MING functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Once you have libswf all you need to do is to configure --with-swf[ =DIR] where DIR is a location containing the directories include and lib.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once you 've successfully installed PHP with Shockwave Flash support you can then go about creating Shockwave files from PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php swf_openfile ("test.swf", 256, 256, 30, 1, 1, 1); swf_ortho2 (-100, 100, -100, 100); swf_defineline (1, -70, 0, 70, 0, .2); swf_definerect (4, 60, -10, 70, 0, 0); swf_definerect (5, -60, 0, -70, 10, 0); swf_addcolor (0, 0, 0, 0); swf_definefont (10, "Mod"); swf_fontsize (5); swf_fontslant (10); swf_definetext (11, "This be Flash wit PHP !", 1); swf_pushmatrix (); swf_translate (-50, 80, 0); swf_placeobject (11, 60); swf_popmatrix (); for ($i = 0; $i 30; $i++) {$p = $i / (30-1); swf_pushmatrix (); swf_scale (1 -($p*.9), 1, 1); swf_rotate (60*$p, 'z'); swf_translate (20+20*$p, $p / 1.5, 0); swf_rotate (270*$p, 'z'); swf_addcolor ($p, 0, $p / 1.2, -$p); swf_placeobject (1, 50); swf_placeobject (4, 50); swf_placeobject (5, 50); swf_popmatrix (); swf_showframe ();} for ($i = 0; $i 30; $i++) {swf_removeobject (50); if (($i%4) == 0) {swf_showframe ();}} swf_startdoaction (); swf_actionstop (); swf_enddoaction (); swf_closefile ();?</seg></tuv>
      <tuv xml:lang="es"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the Sybase home directory, defaults to / home / sybase.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of Sybase connections per process, including persistent connections. -1 means no limit.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If on, this will cause PHP to automatically assign types to results according to their Sybase type, instead of treating them all as strings.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If magic_quotes_sybase is on, a single-quote is escaped with a single-quote instead of a backslash if magic_quotes_gpc or magic_quotes_runtime are enabled.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case even when magic_quotes_gpc is enabled neither double quotes, backslashes or NUL 's will be escaped.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This value can also be set from a script by calling sybase_min_server_severity().</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dealing with URL strings: encoding, decoding and parsing.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>token_name</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Manual de PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables Configuration Options</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="es"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A warning appears if the specified function is not defined, or if the function doesn 't include / implement the missing class.</seg></tuv>
      <tuv xml:lang="es"><seg>Inicio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also unserialize().</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="es"><seg>Subir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>No se necesita ninguna instalación para usar estas funciones, son parte del núcleo de PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are intended for work with WDDX.</seg></tuv>
      <tuv xml:lang="es"><seg>Estas funciones permiten el uso de WDDX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After installing expat compile PHP with --enable-wddx.</seg></tuv>
      <tuv xml:lang="es"><seg>Debe saber que todas las funciones que serializan variables usan el primer elemento de un array para determinar si este ha de serializarse en forma de array o como estructura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el primer elemento esta indexado por una cadena, se serializa como estructura, y en caso contrario, como array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="es"><seg>Serializacion de un valor simple</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All the functions that serialize variables use the first element of an array to determine whether the array is to be serialized into an array or structure.</seg></tuv>
      <tuv xml:lang="es"><seg>?php print wddx_serialize_value( "Ejemplo de PHP a paquete WDDX", "Paquete PHP");?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo producira:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print wddx_serialize_value( "PHP to WDDX packet example", "PHP packet");?</seg></tuv>
      <tuv xml:lang="es"><seg>wddxPacket version=' 0.9 'header comment='Paquete PHP' / data string Ejemplo de PHP a paquete WDDX / string / data / wddxPacket</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Uso de paquetes incrementales</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $pi = 3.1415926; $packet_id = wddx_packet_start("PHP"); wddx_add_vars($packet_id, "pi"); / * Suppose $cities came from database * / $cities = array("Austin", "Novato", "Seattle"); wddx_add_vars($packet_id, "cities"); $packet = wddx_packet_end($packet_id); print $packet;?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $pi = 3.1415926; $packet_id = wddx_packet_start("PHP"); wddx_add_vars($packet_id, "pi"); / * Suponga que $ciudades se ha obtenido de una base de datos * / $ciudades = array("Austin", "Novato", "Seattle"); wddx_add_vars($packet_id, "ciudades"); $packet = wddx_packet_end($packet_id); print $packet;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example will produce:</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo producira:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>wddxPacket version=' 0.9 'header comment='PHP' / data struct var name='pi' number 3.1415926 / number / var var name='ciudades 'array length='3' string Austin / string string Novato / string string Seattle / string / array / var / struct / data / wddxPacket</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is a standard defined by The World Wide Web consortium (W3C).</seg></tuv>
      <tuv xml:lang="es"><seg>XML (eXtensible Markup Language) es un formato de información para el intercambio de documentos estructurado en la "Web "Es un estándar definido por el consorcio de la "World Wide Web" (W3C).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Information about XML and related technologies can be found at http: / /www.w3.org / XML /.</seg></tuv>
      <tuv xml:lang="es"><seg>Se puede encontrar información sobre XML y tecnologís relacionadas en http: / /www.w3.org / XML /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This PHP extension implements support for James Clark 's expat in PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión usa expat, que se puede encontrar en http: / /www.jclark.com / xml /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It supports three source character encodings It supports three source character encodings also provided by PHP:</seg></tuv>
      <tuv xml:lang="es"><seg>El Makefile que viene con expat no crea una biblioteca por defecto, se puede usar esta regla de make para eso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UTF-16 is not supported.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota que si se usa Apache-1.3.7 o posterior, ya tienes la biblioteca requerida expat.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each XML parser also has a few parameters you can adjust.</seg></tuv>
      <tuv xml:lang="es"><seg>Simplemente, configura PHP usando --with-xml (sin ninguna ruta adicional) y usará automáticamente la biblioteca expat incluida en Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension uses expat, which can be found at http: / /www.jclark.com / xml /.</seg></tuv>
      <tuv xml:lang="es"><seg>En UNIX, ejecuta configure con la opción --with-xml.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Makefile that comes with expat does not build a library by default, you can use this make rule for that:</seg></tuv>
      <tuv xml:lang="es"><seg>La biblioteca expat debería ser instalada en algún lugar donde el compilador pueda encontrarlo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are enabled by default, using the bundled expat library.</seg></tuv>
      <tuv xml:lang="es"><seg>Si se compila PHP como un módulo para Apache 1.3.9 o posterior, PHP automáticamente usará la biblioteca integrada expat de Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you compile PHP as a module for Apache 1.3.9 or later, PHP will automatically use the bundled expat library from Apache.</seg></tuv>
      <tuv xml:lang="es"><seg>Compila PHP. ¡Ta-tam!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order you dont 't want to use the bundled expat library configure PHP --with-expat-dir=DIR, where DIR should point to the base installation directory of expat.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta extensión de PHP implementa soporte para expat de James Clarkin en PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="es"><seg>Este conjunto de herramientas permite interpretar, pero no validar, documentos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Soporta tres codificaciones de caracteres fuente, también proporcionados por PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="es"><seg>UTF-16 no está soportado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="es"><seg>Cada intérprete XML tiene también unos cuantos parámetros que se pueden ajustar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The XML event handlers defined are:</seg></tuv>
      <tuv xml:lang="es"><seg>Los gestores de eventos XML definidos son:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Supported XML handlers</seg></tuv>
      <tuv xml:lang="es"><seg>Gestores de XML soportados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP function to set handler</seg></tuv>
      <tuv xml:lang="es"><seg>Función PHP para establecer gestor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Event description</seg></tuv>
      <tuv xml:lang="es"><seg>Descripción del evento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Element events are issued whenever the XML parser encounters start or end tags.</seg></tuv>
      <tuv xml:lang="es"><seg>Los eventos de elemento ("element") se producen cuando el intérprete XML encuentra etiquetas de comienzo o fin.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are separate handlers for start tags and end tags.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay gestores separados para etiquetas de comienzo y etiquetas de fin.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Character data is roughly all the non-markup contents of XML documents, including whitespace between tags.</seg></tuv>
      <tuv xml:lang="es"><seg>La información de caracteres es, por definición, todo el contenido no "marcado" de los documentos XML, incluidos los espacios en blanco entre etiquetas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the XML parser does not add or remove any whitespace, it is up to the application (you) to decide whether whitespace is significant.</seg></tuv>
      <tuv xml:lang="es"><seg>Nota que el intérprete XML no añade o elimina ningún espacio en blanco, depende de la aplicación (de ti) decidir si el espacio en blanco es significativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP programmers should be familiar with processing instructions (PIs) already. ?php? is a processing instruction, where php is called the "PI target ".</seg></tuv>
      <tuv xml:lang="es"><seg>Los programadores de PHP deberían estar ya familiarizados con las instrucciones de procesado (PI). ?php? es una instrucción de procesado, donde php se denomina el "objetivo de procesado ".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The handling of these are application-specific, except that all PI targets starting with "XML" are reserved.</seg></tuv>
      <tuv xml:lang="es"><seg>El manejo de éstos es específico a cada aplicación, salvo que todos los objetivos PI que comienzan con "XML" están reservados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What goes not to another handler goes to the default handler.</seg></tuv>
      <tuv xml:lang="es"><seg>Todo lo que no va a otro gestor, va al gestor por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will get things like the XML and document type declarations in the default handler.</seg></tuv>
      <tuv xml:lang="es"><seg>Se tendrán en el gestor por defecto cosas como las declaraciones de tipos de documento y XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This handler will be called for declaration of an unparsed (NDATA) entity.</seg></tuv>
      <tuv xml:lang="es"><seg>Este gestor se llamará para la declaración de una entidad no analizada (NDATA).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This handler is called for declaration of a notation.</seg></tuv>
      <tuv xml:lang="es"><seg>Este gestor se llama para la declaración de una anotación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This handler is called when the XML parser finds a reference to an external parsed general entity.</seg></tuv>
      <tuv xml:lang="es"><seg>Este gestor se llama cuando el intérprete XML encuentra una referencia a una entidad general interpretada externa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be a reference to a file or URL, for example.</seg></tuv>
      <tuv xml:lang="es"><seg>Puede ser una referencia a un archivo o URL, por ejemplo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the external entity example for a demonstration.</seg></tuv>
      <tuv xml:lang="es"><seg>Ver el ejemplo de entidad externa para demostración.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The element handler functions may get their element names case-folded.</seg></tuv>
      <tuv xml:lang="es"><seg>Las funciones manejadoras de elementos pueden tomar sus nombres de elementos "case-folded".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Case-folding is defined by the XML standard as "a process applied to a sequence of characters, in which those identified as non-uppercase are replaced by their uppercase equivalents".</seg></tuv>
      <tuv xml:lang="es"><seg>Case-folding se define en el estándar XML como "un proceso aplicado a una secuencia de caracteres, en el cual aquellos identificados como sin-mayúsculas son reemplazados por sus equivalentes en mayúsculas".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, when it comes to XML, case-folding simply means uppercasing.</seg></tuv>
      <tuv xml:lang="es"><seg>En otras palabras, cuando se trata de XML, case-folding simplemente significa poner en mayúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, all the element names that are passed to the handler functions are case-folded.</seg></tuv>
      <tuv xml:lang="es"><seg>Por defecto, todos los nombres de elementos que se pasan a las funciones gestoras estan "pasados a mayúsculas".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This behaviour can be queried and controlled per XML parser with the xml_parser_get_option() and xml_parser_set_option() functions, respectively.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta conducta puede ser observada y controlada por el analizador XML con las funciones xml_parser_get_option() y xml_parser_set_option(), respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following constants are defined for XML error codes (as returned by xml_parse()):</seg></tuv>
      <tuv xml:lang="es"><seg>Las siguientes constantes se definen para códigos de error XML (como los devuelve xml_parse()):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 's XML extension supports the Unicode character set through different character encoding s.</seg></tuv>
      <tuv xml:lang="es"><seg>La extension XML de PHP soporta el conjunto de caracteres Unicode a través de diferentes codificaciones de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two types of character encodings, source encoding and target encoding.</seg></tuv>
      <tuv xml:lang="es"><seg>Hay dos tipos de codificaciones de caracteres, coficación de fuente y codificación de destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 's internal representation of the document is always encoded with UTF-8.</seg></tuv>
      <tuv xml:lang="es"><seg>La representación interna de PHP del documento está siempre codificada con UTF-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Source encoding is done when an XML document is parsed.</seg></tuv>
      <tuv xml:lang="es"><seg>La codificación de fuente se hace cuando un documento XML es interpretado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon creating an XML parser, a source encoding can be specified (this encoding can not be changed later in the XML parser's lifetime).</seg></tuv>
      <tuv xml:lang="es"><seg>Al crear un intérprete XML, se puede especificar una codificación de fuente (esta codificación no se puede cambiar má tarde durante el tiempo de vida del intérprete XML).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The supported source encodings are ISO-8859-1, US-ASCII and UTF-8.</seg></tuv>
      <tuv xml:lang="es"><seg>Las codificaciones de fuente soportadas son ISO-8859-1, US-ASCII y UTF-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The former two are single-byte encodings, which means that each character is represented by a single byte.</seg></tuv>
      <tuv xml:lang="es"><seg>Las dos primeras son codificaciones de byte-único, lo que significa que cada carácter se representa por un solo byte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UTF-8 can encode characters composed by a variable number of bits (up to 21) in one to four bytes.</seg></tuv>
      <tuv xml:lang="es"><seg>UTF-8 puede codificar caracteres compuestos por un número variable de bits (hasta 21) en de uno a cuatro bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default source encoding used by PHP is ISO-8859-1.</seg></tuv>
      <tuv xml:lang="es"><seg>La codificación fuente por defecto usada por PHP es ISO-8859-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Target encoding is done when PHP passes data to XML handler functions.</seg></tuv>
      <tuv xml:lang="es"><seg>La codificación de destino se hace cuando PHP pasa datos a las funciones gestoras XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When an XML parser is created, the target encoding is set to the same as the source encoding, but this may be changed at any point.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando se crea un intérprete XML, la codificación de destino se crea igual a la codificación de fuente, pero se puede cambiar en cualquier momento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The target encoding will affect character data as well as tag names and processing instruction targets.</seg></tuv>
      <tuv xml:lang="es"><seg>La codificación de destino afectará a la información de los caracteres así como a los nombres de las etiquetas y a los objetivos de instrucciones de procesado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the XML parser encounters characters outside the range that its source encoding is capable of representing, it will return an error.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el intérprete XML encuentra caracteres fuera del rango que su codificación de fuente es capaz de representar, devolverá un error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP encounters characters in the parsed XML document that can not be represented in the chosen target encoding, the problem characters will be "demoted".</seg></tuv>
      <tuv xml:lang="es"><seg>Si PHP encuentra caracteres en el documento XML interpretado que no pueden ser representados en la codificación de destino elegida, los caracteres problema serán "degradados".</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, this means that such characters are replaced by a question mark.</seg></tuv>
      <tuv xml:lang="es"><seg>Actualmente, esto significa que tales caracteres se reemplazan por un signo de interrogación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here are some example PHP scripts parsing XML documents.</seg></tuv>
      <tuv xml:lang="es"><seg>Aquí hay algunos ejemplos de archivos de comandos PHP que interpretan documentos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This first example displays the stucture of the start elements in a document with indentation.</seg></tuv>
      <tuv xml:lang="es"><seg>Este primer ejemplo muestra la estructura del elemento inicio en un documento con indentación.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Show XML Element Structure</seg></tuv>
      <tuv xml:lang="es"><seg>Muestra la Estructura del Elemento XML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Map XML to HTML</seg></tuv>
      <tuv xml:lang="es"><seg>Traduciendo XML a HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example maps tags in an XML document directly to HTML tags.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo transforma etiquetas de un documento XML directamente a etiquetas HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Elements not found in the "map array" are ignored.</seg></tuv>
      <tuv xml:lang="es"><seg>Los elementos no encontrados en el "array de traducción ("map array") son ignorados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, this example will only work with a specific XML document type.</seg></tuv>
      <tuv xml:lang="es"><seg>Por supuesto, este ejemplo solamente funcionará con un tipo de documentos XML específico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$file = "data.xml"; $map_array = array ("BOLD" = "B", "EMPHASIS "= "I", "LITERAL" = "TT "); function startElement($parser, $name, $attrs) {global $map_array; if ($htmltag = $map_array[$name]) {print" $htmltag ";}} function endElement($parser, $name) {global $map_array; if ($htmltag = $map_array[$name]) {print" / $htmltag ";}} function characterData($parser, $data) {print $data;} $xml_parser = xml_parser_create(); / / use case-folding so we are sure to find the tag in $map_array xml_parser_set_option($xml_parser, XML_OPTION_CASE_FOLDING, true); xml_set_element_handler($xml_parser, "startElement", "endElement"); xml_set_character_data_handler($xml_parser, "characterData"); if (!($fp = fopen($file, "r"))) {die("could not open XML input");} while ($data = fread($fp, 4096)) {if (!xml_parse($xml_parser, $data, feof($fp))) {die(sprintf("XML error: %s at line %d", xml_error_string(xml_get_error_code($xml_parser)), xml_get_current_line_number($xml_parser)));}} xml_parser_free($xml_parser);</seg></tuv>
      <tuv xml:lang="es"><seg>$file = "data.xml"; $map_array = array ("BOLD" = "B", "EMPHASIS "= "I", "LITERAL" = "TT "); function startElement($parser, $name, $attrs) {global $map_array; if ($htmltag = $map_array[$name]) {print" $htmltag ";}} function endElement($parser, $name) {global $map_array; if ($htmltag = $map_array[$name]) {print" / $htmltag ";}} function characterData($parser, $data) {print $data;} $xml_parser = xml_parser_create(); / / usa case-folding para que estemos seguros de encontrar la etiqueta / / en $map_array xml_parser_set_option($xml_parser, XML_OPTION_CASE_FOLDING, true); xml_set_element_handler($xml_parser, "startElement", "endElement"); xml_set_character_data_handler($xml_parser, "characterData"); if (!($fp = fopen($file, "r"))) {die("could not open XML input");} while ($data = fread($fp, 4096)) {if (!xml_parse($xml_parser, $data, feof($fp))) {die(sprintf("XML error: %s at line %d", xml_error_string(xml_get_error_code($xml_parser)), xml_get_current_line_number($xml_parser)));}} xml_parser_free($xml_parser);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example highlights XML code.</seg></tuv>
      <tuv xml:lang="es"><seg>Este ejemplo resalta el código XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It illustrates how to use an external entity reference handler to include and parse other documents, as well as how PIs can be processed, and a way of determining "trust" for PIs containing code.</seg></tuv>
      <tuv xml:lang="es"><seg>Ilustra cómo usar un gestor de referencia de entidades extenas para incluir y analizar otros documentos, así como cuúntos PIs pueden ser procesados, y un modo de determinar "confianza" para PIs que contienen código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML documents that can be used for this example are found below the example (xmltest.xml and xmltest2.xml.)</seg></tuv>
      <tuv xml:lang="es"><seg>Los documentos XML que se pueden usar en este ejemplo se encuentran bajo el ejemplo (xmltest.xml y xmltest2.xml.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>External Entity Example</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de Entidades Externas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not, display the code / / instead. if (trustedFile($parser_file[$parser])) {eval($data);} else {printf("Untrusted PHP code: i %s / i ", htmlspecialchars($data));} break;}} function defaultHandler($parser, $data) {if (substr($data, 0, 1) ==" "substr($data, -1, 1) ==" ;") {printf( 'font color="#aa00aa "%s / font', htmlspecialchars($data));} else {printf( 'font size="-1" %s / font', htmlspecialchars($data));}} function externalEntityRefHandler($parser, $openEntityNames, $base, $systemId, $publicId) {if ($systemId) {if (!list($parser, $fp) = new_xml_parser($systemId)) {printf("Could not open entity %s at %s\n", $openEntityNames, $systemId); return false;} while ($data = fread($fp, 4096)) {if (!xml_parse($parser, $data, feof($fp))) {printf("XML error: %s at line %d while parsing entity %s\n", xml_error_string(xml_get_error_code($parser)), xml_get_current_line_number($parser), $openEntityNames); xml_parser_free($parser); return false;}} xml_parser_free($parser); return true;} return false;} function new_xml_parser($file) {global $parser_file; $xml_parser = xml_parser_create(); xml_parser_set_option($xml_parser, XML_OPTION_CASE_FOLDING, 1); xml_set_element_handler($xml_parser, "startElement", "endElement"); xml_set_character_data_handler($xml_parser, "characterData"); xml_set_processing_instruction_handler($xml_parser, "PIHandler"); xml_set_default_handler($xml_parser, "defaultHandler"); xml_set_external_entity_ref_handler($xml_parser, "externalEntityRefHandler"); if (!($fp = @fopen($file, "r"))) {return false;} if (!is_array($parser_file)) {settype($parser_file, "array");} $parser_file[$xml_parser] = $file; return array($xml_parser, $fp);} if (!(list($xml_parser, $fp) = new_xml_parser($file))) {die("could not open XML input");} print "pre"; while ($data = fread($fp, 4096)) {if (!xml_parse($xml_parser, $data, feof($fp))) {die(sprintf("XML error: %s at line %d\n", xml_error_string(xml_get_error_code($xml_parser)), xml_get_current_line_number($xml_parser)));}} print "/ pre"; print "parse complete\n"; xml_parser_free($xml_parser);?</seg></tuv>
      <tuv xml:lang="es"><seg>$file = "xmltest.xml"; function trustedFile($file) {/ / solamente confía en archivos locales que nos pertenezcan if (!eregi("^([a-z]+): / /", $file) fileowner($file) == getmyuid()) {return true;} return false;} function startElement($parser, $name, $attribs) {print" lt; font color=\"#0000cc\ "$name / font"; if (sizeof($attribs)) {while (list($k, $v) = each($attribs)) {print "font color=\"#009900\" $k / font =\ "font color=\"#990000\" $v / font \"";}} print "gt ;";} function endElement($parser, $name) {print" lt; / font color=\"#0000cc\ "$name / font gt ;";} function characterData($parser, $data) {print" b $data / b ";} function PIHandler($parser, $target, $data) {switch (strtolower($target)) {case "php": global $parser_file; / / Si el documento analizado es "de confianza", diremos / / que es seguro ejecutar código PHP en su interior. / / Si no, en vez de ello mostrará el código. if (trustedFile($parser_file[$parser])) {eval($data);} else {printf("Untrusted PHP code: i %s / i", htmlspecialchars($data));} break;}} function defaultHandler($parser, $data) {if (substr($data, 0, 1) == "" substr($data, -1, 1) == ";") {printf( 'font color="#aa00aa" %s / font', htmlspecialchars($data));} else {printf( 'font size="-1 "%s / font', htmlspecialchars($data));}} function externalEntityRefHandler($parser, $openEntityNames, $base, $systemId, $publicId) {if ($systemId) {if (!list($parser, $fp) = new_xml_parser($systemId)) {printf("Could not open entity %s at %s\n", $openEntityNames, $systemId); return false;} while ($data = fread($fp, 4096)) {if (!xml_parse($parser, $data, feof($fp))) {printf("XML error: %s at line %d while parsing entity %s\n", xml_error_string(xml_get_error_code($parser)), xml_get_current_line_number($parser), $openEntityNames); xml_parser_free($parser); return false;}} xml_parser_free($parser); return true;} return false;} function new_xml_parser($file) {global $parser_file; $xml_parser = xml_parser_create(); xml_parser_set_option($xml_parser, XML_OPTION_CASE_FOLDING, 1); xml_set_element_handler($xml_parser, "startElement", "endElement"); xml_set_character_data_handler($xml_parser, "characterData"); xml_set_processing_instruction_handler($xml_parser, "PIHandler"); xml_set_default_handler($xml_parser, "defaultHandler"); xml_set_external_entity_ref_handler($xml_parser, "externalEntityRefHandler"); if (!($fp = @fopen($file, "r"))) {return false;} if (!is_array($parser_file)) {settype($parser_file, "array");} $parser_file[$xml_parser] = $file; return array($xml_parser, $fp);} if (!(list($xml_parser, $fp) = new_xml_parser($file))) {die("could not open XML input");} print" pre "; while ($data = fread($fp, 4096)) {if (!xml_parse($xml_parser, $data, feof($fp))) {die(sprintf("XML error: %s at line %d\n", xml_error_string(xml_get_error_code($xml_parser)), xml_get_current_line_number($xml_parser)));}} print" / pre "; print "parse complete\n"; xml_parser_free($xml_parser);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. xmltest.xml</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 4. xmltest.xml</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?xml version=' 1.0'? !DOCTYPE chapter SYSTEM "/ just / a/test.dtd" [!ENTITY plainEntity "FOO entity "!ENTITY systemEntity SYSTEM "xmltest2.xml"] chapter TITLE Title plainEntity; / TITLE para informaltable tgroup cols="3 "tbody row entry a1 / entry entry morerows="1" b1 / entry entry c1 / entry / row row entry a2 / entry entry c2 / entry / row row entry a3 / entry entry b3 / entry entry c3 / entry / row / tbody / tgroup / informaltable / para systemEntity; section id="about "title About this Document / title para !- - this is a comment - - ?php print'Hi!</seg></tuv>
      <tuv xml:lang="es"><seg>?xml version=' 1.0'? !DOCTYPE chapter SYSTEM "/ just / a/test.dtd" [!ENTITY plainEntity "FOO entity "!ENTITY systemEntity SYSTEM "xmltest2.xml"] chapter TITLE Title plainEntity; / TITLE para informaltable tgroup cols="3 "tbody row entry a1 / entry entry morerows="1" b1 / entry entry c1 / entry / row row entry a2 / entry entry c2 / entry / row row entry a3 / entry entry b3 / entry entry c3 / entry / row / tbody / tgroup / informaltable / para systemEntity; sect1 id="about "title About this Document / title para !- - this is a comment - - ?php print 'Hi!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is PHP version '.phpversion();? / para / section / chapter</seg></tuv>
      <tuv xml:lang="es"><seg>This is PHP version '.phpversion();? / para / sect1 / chapter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This file is included from xmltest.xml:</seg></tuv>
      <tuv xml:lang="es"><seg>Este archivo se incluye desde xmltest.xml:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. xmltest2.xml</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 5. xmltest2.xml</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This PHP extension provides a processor independent API to XSLT transformations.</seg></tuv>
      <tuv xml:lang="es"><seg>Aviso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support is planned for other libraries, such as the Xalan library or the libxslt library.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo es EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is a standard defined by The World Wide Web Consortium (W3C).</seg></tuv>
      <tuv xml:lang="es"><seg>Esto significa que el comportamineto de estas funciones, nombre de funciones y en definitiva TODO lo documentado aqui, puede cambiar en una futura version de PHP SIN AVISO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="es"><seg>Quedas avisado, y utilizar este módulo es tu responsabiliad.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Binaries are provided as well as source.</seg></tuv>
      <tuv xml:lang="es"><seg>It is a standard defined by The World Wide Web consortium (W3C).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The configuration options: --with-expat-dir=DIR --with-iconv-dir=DIR are there to help you specify them.</seg></tuv>
      <tuv xml:lang="es"><seg>This extension uses Sabloton and expat, which can both be found at http: / /www.gingerall.com /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you compiled Sablotron with JavaScript support, you must specify the option: --with-sablot-js=DIR.</seg></tuv>
      <tuv xml:lang="es"><seg>On UNIX, run configure with the --with-sablot and --enable-sablot-errors-descriptive options.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="es"><seg>This PHP extension implements support Sablotron from Ginger Alliance in PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Drop all logging and error reporting.</seg></tuv>
      <tuv xml:lang="es"><seg>This toolkit lets you transform XML documents into other documents, including new XML documents, but also into HTML or other target formats.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider unresolved documents (the document() function) non-lethal.</seg></tuv>
      <tuv xml:lang="es"><seg>It basically provides a standardized and portable template mechanism, separating content and design of a website.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension offers a PHP interface to the YAZ toolkit that implements the Z39.50 Protocol for Information Retrieval.</seg></tuv>
      <tuv xml:lang="es"><seg>The yaz() functions wrap the YAZ API.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With this extension you can easily implement a Z39.50 origin (client) that searches or scans Z39.50 targets (servers) in parallel.</seg></tuv>
      <tuv xml:lang="es"><seg>The home page of the project is http: / /www.indexdata.dk / yaz /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It supports persistent stateless connections very similar to those offered by the various RDB APIs that are available for PHP.</seg></tuv>
      <tuv xml:lang="es"><seg>Information about the phpyaz module can be found at http: / /www.indexdata.dk / phpyaz /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>YAZ is available at http: / /www.indexdata.dk / yaz /.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP / YAZ is much simpler to use than the C API for YAZ but less flexible.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Compile YAZ (ANSI / NISO Z39.50 support) and install it.</seg></tuv>
      <tuv xml:lang="es"><seg>The intent is to make it easy to build basic client functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Your task is roughly the following:</seg></tuv>
      <tuv xml:lang="es"><seg>It supports persistent stateless connections very similar to those offered by the various SQL APIs that are available for PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="es"><seg>This means that sessions are stateless but shared amongst users, thus saving the connect and INIT steps in many cases.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is due to the fact that they both share the same internal symbol.</seg></tuv>
      <tuv xml:lang="es"><seg>Before compiling PHP with the PHP / YAZ module you 'll need the YAZ toolkit.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="es"><seg>Build YAZ and install it.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="es"><seg>Build PHP with your favourite modules and add option --with-yaz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"100"</seg></tuv>
      <tuv xml:lang="es"><seg>gunzip -c yaz-1.6.tar.gz_BAR_ tar xf - gunzip -c php-4.0.X.tar.gz _BAR_tar xf - cd yaz-1.6. / configure --prefix= / usr make make install cd.. / php-4.0.X. / configure --with-yaz= / usr / bin make make install</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_ALL</seg></tuv>
      <tuv xml:lang="es"><seg>A positive integer represents the ID of a particular association.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A resource represents a connection to a target.</seg></tuv>
      <tuv xml:lang="es"><seg>When invoked it either prints a query form (if no arguments are supplied) or if there are arguments (term and one or more hosts) it searches the targets in array host.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parallel searching using YAZ()</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The script below demonstrates the parallel searching feature of the API.</seg></tuv>
      <tuv xml:lang="es"><seg>YAZ()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$num_hosts = count ($host); if (empty($term) _BAR_ _BAR_ count($host) == 0) {echo 'form method="get "input type="checkbox" name="host[] "value="bagel.indexdata.dk / gils" GILS test input type="checkbox "name="host[]" value="localhost:9999 / Default "local test input type="checkbox" checked="1 "name="host[]" value="z3950.loc.gov:7090 / voyager "Library of Congress br RPN Query: input type="text" size="30 "name="term" input type="submit "name="action" value="Search "';} else {echo'You searced for '. htmlspecialchars($term).' br '; for ($i = 0; $i $num_hosts; $i++) {$id[] = yaz_connect($host[$i]); yaz_range($id[$i], 1, 10); yaz_search($id[$i] ,"rpn",$term);} yaz_wait(); for ($i = 0; $i $num_hosts; $i++) {echo' hr '. $host[$i]." :"; $error = yaz_error($id[$i]); if (!empty($error)) {echo "Error: $error";} else {$hits = yaz_hits($id[$i]); echo "Result Count $hits";} echo' dl '; for ($p = 1; $p = 10; $p++) {$rec = yaz_record($id[$i],$p ,"string"); if (empty($rec)) continue; echo "dt b $p / b / dt dd"; echo ereg_replace("\n", "br \n",$rec); echo" / dd ";} echo' / dl ';}}</seg></tuv>
      <tuv xml:lang="es"><seg>$num_hosts = count ($host); if (empty($term) _BAR_ _BAR_ count($host) == 0) {echo 'form method="get "input type="checkbox" name="host[] "value="bagel.indexdata.dk / gils" GILS test input type="checkbox "name="host[]" value="localhost:9999 / Default "local test input type="checkbox" checked="1 "name="host[]" value="z3950.bell-labs.com / books "BELL Labs Library br RPN Query: input type="text" size="30 "name="term" input type="submit "name="action" value="Search "';} else {echo 'You searced for '. htmlspecialchars($term).' br '; for ($i = 0; $i $num_hosts; $i++) {$id[] = yaz_connect($host[$i]); yaz_syntax($id[$i] ,"sutrs"); yaz_search($id[$i] ,"rpn",$term);} yaz_wait(); for ($i = 0; $i $num_hosts; $i++) {echo' hr '. $host[$i]." :"; $error = yaz_error($id[$i]); if (!empty($error)) {echo "Error: $error";} else {$hits = yaz_hits($id[$i]); echo "Result Count $hits";} echo' dl '; for ($p = 1; $p = 10; $p++) {$rec = yaz_record($id[$i],$p ,"string"); if (empty($rec)) continue; echo "dt b $p / b / dt dd"; echo ereg_replace("\n", "br \n",$rec); echo" / dd ";} echo' / dl ';}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This feature requires a C runtime library that provides the fopencookie() This feature requires a C runtime library that provides the fopencookie() function.</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo usa la función de zlib de Jean-loup Gailly y Mark Adler para leer y grabar archivos comprimidos .gz, de un modo transparente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The zlib extension offers the option to transparently compress your pages on-the-fly, if the requesting browser supports this.</seg></tuv>
      <tuv xml:lang="es"><seg>Con este módulo, es requisito usar una versión de zlib igual o posterior a 1.0.9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you output a "Content-Type: image /" header the compression is disabled, too (in order to circumvent a Netscape bug).</seg></tuv>
      <tuv xml:lang="es"><seg>Este módulo contiene versiones de la mayoría de las funciones de Sistema de archivos que funcionan con los archivos comprimidos con gzip (y con los no-comprimidos tambien, pero no con conectores (sockets)).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option also accepts integer values instead of boolean "On" / "Off", using this you can set the output buffer size (default is 4KB).</seg></tuv>
      <tuv xml:lang="es"><seg>Abre un archivo temporal y escribe en él, una cadena de prueba, y luego presenta el cotenido del archivo dos veces</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting does the same as output_handler but in a different order.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example opens a temporary file and writes a test string to it, then it prints out the content of this file twice.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo de Zlib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = tempnam ('/ tmp', 'zlibtest') .'.gz'; print "html \n head / head \n body \n pre \n"; $s = "Only a test, test, test, test, test, test, test, test!\n"; / / open file for writing with maximum compression $zp = gzopen($filename, "w9"); / / write string to file gzwrite($zp, $s); / / close file gzclose($zp); / / open file for reading $zp = gzopen($filename, "r"); / / read 3 char print gzread($zp, 3); / / output until end of the file and close it. gzpassthru($zp); print "\n"; / / open file and print content (the 2nd time). if (readgzfile($filename) != strlen($s)) {echo "Error with zlib functions !";} unlink($filename); print" / pre \n / h1 / body \n / html \n";?</seg></tuv>
      <tuv xml:lang="es"><seg>?php $filename = tempnam( '/ tmp', 'zlibtest') .'.gz'; print "html \n head / head \n body \n pre \n"; $s = "Sólo es una prueba, prueba, prueba,prueba, prueba, prueba!\n"; / / Abre el archivo para escribirlo con máximo de compresión $zp = gzopen($filename, "w9"); / / Escribe la cadena en él gzwrite($zp, $s); / / Cierra el fichero gzclose($zp); / / Abre el fichero para lectura $zp = gzopen($filename, "r"); / / Lee 3 caracteres print gzread($zp, 3); / / Salida hasta el final del fichero, para cerrarlo luego. gzpassthru($zp); print "\n"; / / Abre el fichero y muestra su contenido (por segunda vez). if (readgzfile($filename) != strlen($s)) {echo "Error con las funciones zlib !";} unlink($filename); print" pre \n / h1 / body \n / html \n";?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix G.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice G.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined Constants</seg></tuv>
      <tuv xml:lang="es"><seg>Constantes predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These constants are defined by the PHP core.</seg></tuv>
      <tuv xml:lang="es"><seg>Core Predefined Constants - - Constants defined in the PHP core, Zend, and SAPI modules</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table G-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla G-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table H-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla H-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 5.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Security</seg></tuv>
      <tuv xml:lang="es"><seg>Seguridad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can protect against this with Apache authorization, or you can design your own access model using LDAP, .htaccess files, etc. and include that code as part of your PHP scripts.</seg></tuv>
      <tuv xml:lang="es"><seg>Cuando PHP es usado como modulo Apache, hereda los permisos de usuario de Apache (normalmente "nobody")</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Installed as CGI binary</seg></tuv>
      <tuv xml:lang="es"><seg>Seguridad</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Filesystem Security</seg></tuv>
      <tuv xml:lang="es"><seg>Referencia del Lenguaje</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is a powerful language and the interpreter, whether included in a web server as a module or executed as a separate CGI binary, is able to access files, execute commands and open network connections on the server.</seg></tuv>
      <tuv xml:lang="es"><seg>Todas estas caracteristicas hacen que lo que se ejecute en el servidor web sea inseguro por defecto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These properties make anything run on a web server insecure by default.</seg></tuv>
      <tuv xml:lang="es"><seg>Ya que existen diferentes modos de utilizar PHP, existen multitud de opciones de configuración que permiten controlar su funcionamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is designed specifically to be a more secure language for writing CGI programs than Perl or C, and with correct selection of compile-time and runtime configuration options, and proper coding practices, it can give you exactly the combination of freedom and security you need.</seg></tuv>
      <tuv xml:lang="es"><seg>Este capitulo explica las diferentes combinaciones de opciones de configuración y las situaciones donde pueden ser usadas de manera segura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As there are many different ways of utilizing PHP, there are many configuration options controlling its behaviour.</seg></tuv>
      <tuv xml:lang="es"><seg>Apache), o usaran PHP con diferentes clases de CGI wrappers para crear entornos chroot y setuid seguros para los scripts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A large selection of options guarantees you can use PHP for a lot of purposes, but it also means there are combinations of these options and server configurations that result in an insecure setup.</seg></tuv>
      <tuv xml:lang="es"><seg>El documento del CERT CA-96.11 recomienda no instalar interpretes en cgi-bin.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The configuration flexibility of PHP is equally rivalled by the code flexibility.</seg></tuv>
      <tuv xml:lang="es"><seg>Accediendo a ficheros del sistema: http: / /my.host / cgi-bin / php? / etc / passwd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP can be used to build complete server applications, with all the power of a shell user, or it can be used for simple server-side includes with little risk in a tightly controlled environment.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente los interpretes abren y ejecutan el fichero especificado como el primer argumento en la línea de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How you build that environment, and how secure it is, is largely up to the PHP developer.</seg></tuv>
      <tuv xml:lang="es"><seg>Accediendo cualquier documento web en el servidor: http: / /my.host / cgi-bin / php / secret / doc.html</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This chapter starts with some general security advice, explains the different configuration option combinations and the situations they can be safely used, and describes different considerations in coding for different levels of security.</seg></tuv>
      <tuv xml:lang="es"><seg>Con esta configuración, el servidor web comprueba primero los permisos de acceso al directorio / secret, y despues crea la petición redireccionada http: / /my.host / cgi-bin / php / secret / script.php3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A completely secure system is a virtual impossibility, so an approach often used in the security profession is one of balancing risk and usability.</seg></tuv>
      <tuv xml:lang="es"><seg>De esta manera cualquier usuario que pueda acceder / cgi-bin / php tambien puede acceder a cualquier documento protegido en el servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If every variable submitted by a user required two forms of biometric validation (such as a retinal scan and a fingerprint), you would have an extremely high level of accountability.</seg></tuv>
      <tuv xml:lang="es"><seg>Si tu servidor no contiene informacion que este protegida con clave o acceso de control de IPs, no se necesitan estas opciones de configuracion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It would also take half an hour to fill out a fairly complex form, which would tend to encourage users to find ways of bypassing the security.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta opcion a la hora de compilar previene que alguien llame PHP directamente con una url como la siguiente http: / /my.host / cgi-bin / php / secretdir / script.php3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The best security is often inobtrusive enough to suit the requirements without the user being prevented from accomplishing their work, or over-burdening the code author with excessive complexity.</seg></tuv>
      <tuv xml:lang="es"><seg>Normalmente la redireccion en la configuracion de Apache es hecha con la siguientes directivas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indeed, some security attacks are merely exploits of this kind of overly built security, which tends to erode over time.</seg></tuv>
      <tuv xml:lang="es"><seg>Esta opcion ha sido solo comprobada con el servidor web Apache, y depende de Apache para fijar la variable de entorno CGI no estandar REDIRECT_STATUS en las peticiones de redireccionamiento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A phrase worth remembering:</seg></tuv>
      <tuv xml:lang="es"><seg>Incluir contenidos activos, como script y ejecutables, en el directorio de documentos del servidor web, es algunas veces considerada una practica insegura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A system is only as good as the weakest link in a chain.</seg></tuv>
      <tuv xml:lang="es"><seg>Por ello, muchos administradores prefieren utilizar otra estructura de directorios que contenga solamente los scripts, los cuales seran solamente accesibles via PHP CGI, y por ello siempre seran interpretados y no mostrados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If all transactions are heavily logged based on time, location, transaction type, etc. but the user is only verified based on a single cookie, the validity of tying the users to the transaction log is severely weakened.</seg></tuv>
      <tuv xml:lang="es"><seg>Podeis definir el script PHP "document root" con la directiva de configuracion doc_root en el fichero de configuracion, o definir la variable de entorno PHP_DOCUMENT_ROOT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When testing, keep in mind that you will not be able to test all possibilities for even the simplest of pages.</seg></tuv>
      <tuv xml:lang="es"><seg>Otra opcion que se puede usar aqui es user_dir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The input you may expect will be completely unrelated to the input given by a disgruntled employee, a cracker with months of time on their hands, or a housecat walking across the keyboard.</seg></tuv>
      <tuv xml:lang="es"><seg>Si intentamos abrir una url tal como esta http: / /my.host / ~user / doc.php3 no se abrira un fichero en el directorio de usuarios, en su lugar se abrira un fichero llamado ~user / doc.php3 en el directorio doc_root. (si, un directorio que empieza por tilde [~]).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is why it 's best to look at the code from a logical perspective, to discern where unexpected data can be introduced, and then follow how it is modified, reduced, or amplified.</seg></tuv>
      <tuv xml:lang="es"><seg>Si el directorio del usuario es / home / user, el fichero ejecutado sera / home / user / public_php / doc.php3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Internet is filled with people trying to make a name for themselves by breaking your code, crashing your site, posting inappropriate content, and otherwise making your day interesting.</seg></tuv>
      <tuv xml:lang="es"><seg>Una opcion muy segura es poner el analizador binario PHP, en algun lugar fuera del arbol de ficheros web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It doesn 't matter if you have a small or large site, you are a target by simply being online, by having a server that can be connected to.</seg></tuv>
      <tuv xml:lang="es"><seg>La unica pega real de esta opcion es que habra que poner una linea similar a:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Try not to become one.</seg></tuv>
      <tuv xml:lang="es"><seg>Para conseguir que PHP maneje correctamente con esta configuracion, la informacion de PATH_INFO y PATH_TRANSLATED, el analizador PHP deberia ser compilado con la opcion de configuracion --enable-discard-path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration directives</seg></tuv>
      <tuv xml:lang="es"><seg>Configuración</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Installed as CGI binary</seg></tuv>
      <tuv xml:lang="es"><seg>Modulo Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 43.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 43.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 43-1. simple stream example that displays the PHP home page</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 43-1. simple stream example that displays the PHP home page</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 43-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 43-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One or more of these values can be combined using the OR operator.</seg></tuv>
      <tuv xml:lang="es"><seg>Stream open options - - Affects the operation of stream factory functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Frequently Asked Questions</seg></tuv>
      <tuv xml:lang="es"><seg>Preguntas frecuentes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 43-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 43-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 43-1. php_stream_make_seekable() return values</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 43-1. php_stream_make_seekable() return values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 43-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 43-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 43-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 43-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php_stream_dirent char d_name[ MAXPATHLEN]</seg></tuv>
      <tuv xml:lang="es"><seg>struct php_stream_dirent - - Holds information about a single file during dir scanning</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php_stream_statbuf struct stat sb</seg></tuv>
      <tuv xml:lang="es"><seg>struct php_stream_statbuf - - Holds information about a file or URL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Various parts of the PHP language are represented internally by types like T_SR.</seg></tuv>
      <tuv xml:lang="es"><seg>Varias partes del lenguaje PHP están representadas internamente por cosas tales como T_SR.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP outputs identifiers like this one in parse errors, like "Parse error: unexpected T_SR, expecting ',' or ';' in script.php on line 10."</seg></tuv>
      <tuv xml:lang="es"><seg>T_SR inesperado, se esperaba ',' o ';' en la línea 10 de script.php .").</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You 're supposed to know what T_SR means.</seg></tuv>
      <tuv xml:lang="es"><seg>Supongamos que tú sabes que T_SR significa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For everybody who doesn 't know that, here is a table with those identifiers, PHP-syntax and references to the appropriate places in the manual.</seg></tuv>
      <tuv xml:lang="es"><seg>Para quienes no lo conocen, aquí hay una tabla con esos identificadores, la sintaxis de PHP, y referencias a lugares apropiados del manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table J-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla J-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tokens</seg></tuv>
      <tuv xml:lang="es"><seg>Identificadores (Tokens)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Token</seg></tuv>
      <tuv xml:lang="es"><seg>Identificador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Sintaxis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reference</seg></tuv>
      <tuv xml:lang="es"><seg>Referencia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>assignment operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Asignación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array(), array syntax</seg></tuv>
      <tuv xml:lang="es"><seg>array(), Sintaxis de array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type-casting</seg></tuv>
      <tuv xml:lang="es"><seg>Forzado de Tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>anything below ASCII 32 except \t (0x09), \n (0x0a) and \r (0x0d)</seg></tuv>
      <tuv xml:lang="es"><seg>cualquier caracter debajo del ASCII 32, excepto \t (0x09), \n (0x0a) y \r (0x0d)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>logical operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores Lógicos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(bool) or (boolean)</seg></tuv>
      <tuv xml:lang="es"><seg>(bool) o (boolean)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>break</seg></tuv>
      <tuv xml:lang="es"><seg>break;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>classes and objects</seg></tuv>
      <tuv xml:lang="es"><seg>Clases y Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>? or%</seg></tuv>
      <tuv xml:lang="es"><seg>? o%</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / or #</seg></tuv>
      <tuv xml:lang="es"><seg>/ / o #</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>comments</seg></tuv>
      <tuv xml:lang="es"><seg>Comentarios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>"foo" or'bar '</seg></tuv>
      <tuv xml:lang="es"><seg>"foo" o 'bar '</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>string syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Sintasis de Cadenas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>incrementing / decrementing operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Incremento / decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0.12, etc</seg></tuv>
      <tuv xml:lang="es"><seg>0.12, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>floating point numbers</seg></tuv>
      <tuv xml:lang="es"><seg>Números en Punto Flotante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>complex variable parsed syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Sintaxis de Variables Complejas Analizadas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array syntax</seg></tuv>
      <tuv xml:lang="es"><seg>Sintaxis de Arreglos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>declare, alternative syntax</seg></tuv>
      <tuv xml:lang="es"><seg>declare, Sintaxis Alternativa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for, alternative syntax</seg></tuv>
      <tuv xml:lang="es"><seg>for, Sintaxis Alternativa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>foreach, alternative syntax</seg></tuv>
      <tuv xml:lang="es"><seg>foreach, Sintaxis Alternativa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if, alternative syntax</seg></tuv>
      <tuv xml:lang="es"><seg>if, Sintaxis Alternativa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch, alternative syntax</seg></tuv>
      <tuv xml:lang="es"><seg>switch, Sintaxis Alternativa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while, alternative syntax</seg></tuv>
      <tuv xml:lang="es"><seg>while, Sintaxis Alternativa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>heredoc syntax</seg></tuv>
      <tuv xml:lang="es"><seg>heredoc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>exit or die</seg></tuv>
      <tuv xml:lang="es"><seg>exit o die</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>extends, classes and objects</seg></tuv>
      <tuv xml:lang="es"><seg>extends, Clases y Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>constants</seg></tuv>
      <tuv xml:lang="es"><seg>Constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function or cfunction</seg></tuv>
      <tuv xml:lang="es"><seg>function o cfunction</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>functions</seg></tuv>
      <tuv xml:lang="es"><seg>Funciones</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>variable scope</seg></tuv>
      <tuv xml:lang="es"><seg>Ambito de Variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(int) or (integer)</seg></tuv>
      <tuv xml:lang="es"><seg>(int) o (integer)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>comparison operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores de Comparación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>!= or</seg></tuv>
      <tuv xml:lang="es"><seg>!= o</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>123, 012, 0x1ac, etc</seg></tuv>
      <tuv xml:lang="es"><seg>123, 012, 0x1ac, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>integers</seg></tuv>
      <tuv xml:lang="es"><seg>Enteros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* and * /</seg></tuv>
      <tuv xml:lang="es"><seg>/* y * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php,? or%</seg></tuv>
      <tuv xml:lang="es"><seg>?php,? o%</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>escaping from HTML</seg></tuv>
      <tuv xml:lang="es"><seg>Saliendo de HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?= or %=</seg></tuv>
      <tuv xml:lang="es"><seg>?= o %=</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>returning values</seg></tuv>
      <tuv xml:lang="es"><seg>Retorno de Valores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bitwise operators</seg></tuv>
      <tuv xml:lang="es"><seg>Operadores a Nivel de Bits</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>variable scope</seg></tuv>
      <tuv xml:lang="es"><seg>Ambito de las Variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type-casting</seg></tuv>
      <tuv xml:lang="es"><seg>Forzado de Variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(not documented; casts to NULL)</seg></tuv>
      <tuv xml:lang="es"><seg>(no documentado; arroja a NULL)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(not implemented)</seg></tuv>
      <tuv xml:lang="es"><seg>(no implementado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>variables</seg></tuv>
      <tuv xml:lang="es"><seg>Variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>constants, since PHP 4.3.0</seg></tuv>
      <tuv xml:lang="es"><seg>constants, desde PHP 4.3.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 2.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-6.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-7.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-5.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 2-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Installation</seg></tuv>
      <tuv xml:lang="es"><seg>Instalación</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix I.</seg></tuv>
      <tuv xml:lang="es"><seg>Apéndice I.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of Parser Tokens</seg></tuv>
      <tuv xml:lang="es"><seg>Lista de Identificadores (tokens) del Analizador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A set of macros was introduced into Zend' s API that simplify access to zval containers (see Table 42-1).</seg></tuv>
      <tuv xml:lang="es"><seg>A set of macros was introduced into Zend' s API that simplify access to zval containers (see Tabla 42-1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 42-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 42-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 32.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 32.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To work around this, you have to use a set of API functions to force a type conversion on every argument that' s being passed (see Table 32-1).</seg></tuv>
      <tuv xml:lang="es"><seg>To work around this, you have to use a set of API functions to force a type conversion on every argument that' s being passed (see Tabla 32-1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 32-2 shows the output.</seg></tuv>
      <tuv xml:lang="es"><seg>Figura 32-2 shows the output.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 32-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Figura 32-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 32-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 32-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a description of both structures, see Table 32-2, Table 32-3 and Table 32-4.</seg></tuv>
      <tuv xml:lang="es"><seg>For a description of both structures, see Tabla 32-2, Tabla 32-3 and Tabla 32-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 32-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Table 32-3 for a description.</seg></tuv>
      <tuv xml:lang="es"><seg>See Tabla 32-3 for a description.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a list of available types, see Table 32-4.</seg></tuv>
      <tuv xml:lang="es"><seg>For a list of available types, see Tabla 32-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 32-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 32-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples are given in in Example 32-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Examples are given in in Ejemplo 32-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 32-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 32-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 32-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Figura 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A very clever implementation of this can be found in the code handling PHP' s fsockopen() located in ext / standard / fsock.c, as shown in Example 32-1.</seg></tuv>
      <tuv xml:lang="es"><seg>A very clever implementation of this can be found in the code handling PHP' s fsockopen() located in ext / standard / fsock.c, as shown in Ejemplo 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 32-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default config.m4 shown in Example 27-1 is a bit more complex:</seg></tuv>
      <tuv xml:lang="es"><seg>The default config.m4 shown in Ejemplo 27-1 is a bit more complex:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 27-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 27-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 38-1 shows a small demonstration of calling a user function.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 38-1 shows a small demonstration of calling a user function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 38-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 38-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP defines a set of macros that can be used in this process, the most useful of which are described in Table 41-1.</seg></tuv>
      <tuv xml:lang="es"><seg>PHP defines a set of macros that can be used in this process, the most useful of which are described in Tabla 41-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 41-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 41-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 28-1 shows the source.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 28-1 shows the source.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 28-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 28-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The module shown earlier in Example 28-1 can be enabled with --enable-first_module or --enable-first_module=yes.</seg></tuv>
      <tuv xml:lang="es"><seg>The module shown earlier in Ejemplo 28-1 can be enabled with --enable-first_module or --enable-first_module=yes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="es"><seg>Duplicating Variable Contents:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="es"><seg>API Macros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>readgzfile</seg></tuv>
      <tuv xml:lang="es"><seg>Siguiente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Access to initialization entries can also be handled with the macros shown in Table 39-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Access to initialization entries can also be handled with the macros shown in Tabla 39-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 39-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 39-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 26.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 26.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This might sound a bit confusing at first, but it' s not that complicated (see Figure 24-1).</seg></tuv>
      <tuv xml:lang="es"><seg>This might sound a bit confusing at first, but it' s not that complicated (see Figura 24-1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 24-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Figura 24-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 25.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 25.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As shown in Figure 24-1 As shown in Figure 24-1 above, PHP can be extended primarily at three points: external modules, built-in modules, and the Zend engine.</seg></tuv>
      <tuv xml:lang="es"><seg>As shown in Figura 24-1 As shown in Figura 24-1 above, PHP can be extended primarily at three points: external modules, built-in modules, and the Zend engine.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 36.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 36.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For examples of these functions, see Example 36-2.</seg></tuv>
      <tuv xml:lang="es"><seg>For examples of these functions, see Ejemplo 36-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 36-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 36-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 36-1 Example 36-1 shows a source example and its output.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 36-1 Ejemplo 36-1 shows a source example and its output.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 36-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 36-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 36-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 36-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 36-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Figura 36-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These macros automatically set the correspondent type and value, as described in Table 35-1 and Table 35-2.</seg></tuv>
      <tuv xml:lang="es"><seg>These macros automatically set the correspondent type and value, as described in Tabla 35-1 and Tabla 35-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The macros in Table 35-1 automatically return from your function, those in Table 35-2 only set the return value; they don't return from your function.</seg></tuv>
      <tuv xml:lang="es"><seg>The macros in Tabla 35-1 automatically return from your function, those in Tabla 35-2 only set the return value; they don 't return from your function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 35-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 35-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 35-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 35-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 31.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 31.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parameter list of this declaration is very important; you should keep these parameters in mind (see Table 31-1 for descriptions).</seg></tuv>
      <tuv xml:lang="es"><seg>The parameter list of this declaration is very important; you should keep these parameters in mind (see Tabla 31-1 for descriptions).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 31-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Internally, zend_function_entry is defined as shown in Example 31-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Internally, zend_function_entry is defined as shown in Ejemplo 31-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 31-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 31-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-2 shows a list of all the macros that you can use to define functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 31-2 shows a list of all the macros that you can use to define functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 31-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can see the internal definition of this module in Example 31-2.</seg></tuv>
      <tuv xml:lang="es"><seg>You can see the internal definition of this module in Ejemplo 31-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 31-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 31-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For reference purposes, you can find a list of the macros involved in declared startup and shutdown functions in Table 31-3.</seg></tuv>
      <tuv xml:lang="es"><seg>For reference purposes, you can find a list of the macros involved in declared startup and shutdown functions in Tabla 31-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 31-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a simple test procedure, you can copy it to your htdocs directory and try it with the source in Example 29-1.</seg></tuv>
      <tuv xml:lang="es"><seg>For a simple test procedure, you can copy it to your htdocs directory and try it with the source in Ejemplo 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 29-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling this PHP file in your Web browser should give you the output shown in Figure 29-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Calling this PHP file in your Web browser should give you the output shown in Figura 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 29-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Figura 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 33.</seg></tuv>
      <tuv xml:lang="es"><seg>Capítulo 33.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-1, Table 33-2 and Table 33-3 describe these functions.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-1, Tabla 33-2 and Tabla 33-3 describe these functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done using zend_hash_update( )() for associative arrays (see Example 33-3) and zend_hash_index_update() for indexed arrays (see Example 33-4):</seg></tuv>
      <tuv xml:lang="es"><seg>This is done using zend_hash_update( )() for associative arrays (see Ejemplo 33-3) and zend_hash_index_update() for indexed arrays (see Ejemplo 33-4):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-3.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 33-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 33-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To create your own constants, you can use the macros in Table 33-6.</seg></tuv>
      <tuv xml:lang="es"><seg>To create your own constants, you can use the macros in Tabla 33-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-6.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is somewhat bad practice, but Table Table 33-5 describes macros that do exactly this task.</seg></tuv>
      <tuv xml:lang="es"><seg>This is somewhat bad practice, but Table Tabla 33-5 describes macros that do exactly this task.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-5.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-1.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 33-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The corresponding type value for longs is IS_LONG (see Example 33-2).</seg></tuv>
      <tuv xml:lang="es"><seg>The corresponding type value for longs is IS_LONG (see Ejemplo 33-2).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-2.</seg></tuv>
      <tuv xml:lang="es"><seg>Ejemplo 33-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-4.</seg></tuv>
      <tuv xml:lang="es"><seg>Tabla 33-4.</seg></tuv>
    </tu>
  </body>
</tmx>
